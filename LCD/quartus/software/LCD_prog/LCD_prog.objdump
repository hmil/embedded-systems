
LCD_prog.elf:     file format elf32-littlenios2
LCD_prog.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000001bc

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00015418 memsz 0x00015418 flags r-x
    LOAD off    0x00016438 vaddr 0x00015438 paddr 0x00016fc0 align 2**12
         filesz 0x00001b88 memsz 0x00001b88 flags rw-
    LOAD off    0x00018b48 vaddr 0x00018b48 paddr 0x00018b48 align 2**12
         filesz 0x00000000 memsz 0x0000025c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000019c  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00014c54  000001bc  000001bc  000011bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000628  00014e10  00014e10  00015e10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b88  00015438  00016fc0  00016438  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000025c  00018b48  00018b48  00018b48  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_controller_0 00000000  00018da4  00018da4  00017fc0  2**0
                  CONTENTS
  7 .comment      00000039  00000000  00000000  00017fc0  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000fc0  00000000  00000000  00018000  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002cba8  00000000  00000000  00018fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000b0d5  00000000  00000000  00045b68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000dfee  00000000  00000000  00050c3d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002854  00000000  00000000  0005ec2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003b51  00000000  00000000  00061480  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001d19e  00000000  00000000  00064fd1  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000050  00000000  00000000  00082170  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001620  00000000  00000000  000821c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000870c4  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  000870c7  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000870d3  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000870d4  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  000870d5  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  000870e0  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  000870eb  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000008  00000000  00000000  000870f6  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000011  00000000  00000000  000870fe  2**0
                  CONTENTS, READONLY
 26 .jdi          00005422  00000000  00000000  0008710f  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     00040786  00000000  00000000  0008c531  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
000001bc l    d  .text	00000000 .text
00014e10 l    d  .rodata	00000000 .rodata
00015438 l    d  .rwdata	00000000 .rwdata
00018b48 l    d  .bss	00000000 .bss
00018da4 l    d  .sdram_controller_0	00000000 .sdram_controller_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../LCD_prog_bsp//obj/HAL/src/crt0.o
000001f4 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00000094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 fscanf.c
00000000 l    df *ABS*	00000000 impure.c
00015438 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfscanf.c
00014e3a l     O .rodata	00000022 basefix.4072
00000000 l    df *ABS*	00000000 ctype_.c
00014f5d l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 findfp.c
00002bb0 l     F .text	00000008 __fp_lock
00002bb8 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
0001587c l     O .rwdata	00000020 lc_ctype_charset
0001585c l     O .rwdata	00000020 lc_message_charset
0001589c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
00005084 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
00015cf0 l     O .rwdata	00000014 fpi.2612
000150fc l     O .rodata	00000028 tinytens
00015cdc l     O .rwdata	00000014 fpinan.2648
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 vfprintf.c
00015166 l     O .rodata	00000010 zeroes.4140
00015176 l     O .rodata	00000010 blanks.4139
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 dtoa.c
00009be8 l     F .text	00000204 quorem
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0000b7d8 l     F .text	000000fc rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mprec.c
000151b4 l     O .rodata	0000000c p05.2652
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
000152d8 l     O .rodata	00000010 zeroes.4084
000152e8 l     O .rodata	00000010 blanks.4083
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0000f6ac l     F .text	00000070 udivmodsi4
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0001211c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00012234 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00012260 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0001235c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0001244c l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00012530 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00012708 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00016f68 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
00012988 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00012ac4 l     F .text	00000038 alt_dev_reg
00015eac l     O .rwdata	00001060 jtag_uart_0
00016f0c l     O .rwdata	00000028 altera_hostfs
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00012da4 l     F .text	000001fc altera_avalon_jtag_uart_irq
00012fa0 l     F .text	000000a4 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_hostfs.c
00016f6c l     O .rwdata	00000004 hcinfo.2310
00016f78 l     O .rwdata	00000004 hcinfo.2323
00016f84 l     O .rwdata	00000004 hcinfo.2332
00016f90 l     O .rwdata	00000004 hcinfo.2345
00016f9c l     O .rwdata	00000004 hcinfo.2358
00016fa8 l     O .rwdata	00000004 hcinfo.2384
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00013ce8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_fs_reg.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0001420c l     F .text	000000c0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00014344 l     F .text	00000050 alt_get_errno
00014394 l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0000d468 g     F .text	00000074 _mprec_log10
0000d554 g     F .text	00000088 __any_on
0000ea08 g     F .text	00000064 _isatty_r
000151c0 g     O .rodata	00000028 __mprec_tinytens
000004f4 g     F .text	00000070 LCD_DrawPoint
00012650 g     F .text	00000078 alt_main
00001198 g     F .text	000000b8 _puts_r
00018ca4 g     O .bss	00000100 alt_irq
0000c444 g     F .text	0000006c _lseek_r
00016fc0 g       *ABS*	00000000 __flash_rwdata_start
00010b08 g     F .text	00000084 .hidden __eqdf2
00018da4 g       *ABS*	00000000 __alt_heap_start
00000564 g     F .text	00000104 LCD_Pattern_Horizon
000055ac g     F .text	0000005c __sseek
00002c48 g     F .text	0000019c __sinit
00003c08 g     F .text	00000070 _setlocale_r
00002bcc g     F .text	00000064 __sfmoreglue
000099c4 g     F .text	0000001c ungetc
000126e8 g     F .text	00000020 __malloc_unlock
000135b8 g     F .text	00000118 alt_hostfs_open
000056b4 g     F .text	00001538 _strtod_r
000048d0 g     F .text	0000013c memmove
00002c30 g     F .text	00000018 _cleanup
0000c664 g     F .text	000000a8 _Balloc
00010b8c g     F .text	000000d8 .hidden __gtdf2
00000000  w      *UND*	00000000 __errno
00000000 g     F .entry	0000001c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
00000470 g     F .text	00000084 LCD_Clear
0000e9a0 g     F .text	00000068 _fstat_r
00018b60 g     O .bss	00000004 errno
00002b40 g     F .text	00000024 __svfscanf
00005528 g     F .text	00000008 __seofread
0000d910 g     F .text	00000fcc ___svfiprintf_internal_r
00018b68 g     O .bss	00000004 alt_argv
0001ef34 g       *ABS*	00000000 _gp
00012958 g     F .text	00000030 usleep
0000113c g     F .text	0000003c fscanf
00015d2c g     O .rwdata	00000180 alt_fd_list
0000074c g     F .text	000000d8 LCD_Frouze
000137ec g     F .text	00000068 alt_hostfs_seek
00014770 g     F .text	00000090 alt_find_dev
000047c4 g     F .text	0000010c memcpy
0000c17c g     F .text	000002c8 __hexnan
00002bc0 g     F .text	0000000c _cleanup_r
00011d44 g     F .text	000000d0 .hidden __floatsidf
00013e90 g     F .text	00000084 alt_fs_reg
000142cc g     F .text	00000078 alt_io_redirect
00010c64 g     F .text	000000ec .hidden __ltdf2
00014e10 g       *ABS*	00000000 __DTOR_END__
00001250 g     F .text	00000014 puts
0000454c g     F .text	000000f0 mbrtowc
00005278 g     F .text	00000068 __fpclassifyd
00002b64 g     F .text	0000004c _vfscanf_r
0000d3c8 g     F .text	000000a0 __ratio
00013198 g     F .text	00000208 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
0000f7b0 g     F .text	00000008 .hidden __udivsi3
000123ac g     F .text	000000a0 isatty
00003bd8 g     F .text	00000030 iswspace
00015210 g     O .rodata	000000c8 __mprec_tens
00003c78 g     F .text	0000000c __locale_charset
0000f8e8 g     F .text	000000d0 .hidden __lesf2
0000eacc g     F .text	00000084 .hidden __fixunsdfsi
000149c8 g     F .text	0000008c alt_icache_flush
00018b5c g     O .bss	00000004 __malloc_top_pad
000074f8 g     F .text	00000024 strtoul
00016f40 g     O .rwdata	00000004 __mb_cur_max
00003ca8 g     F .text	0000000c _localeconv_r
0000751c g     F .text	00000334 _strtoull_r
0000ca64 g     F .text	0000003c __i2b
000035cc g     F .text	000004ac __sfvwrite_r
000052e0 g     F .text	00000064 _sbrk_r
00013714 g     F .text	0000006c alt_hostfs_read
0000d5dc g     F .text	0000006c _read_r
00016f60 g     O .rwdata	00000004 alt_max_fd
0000b428 g     F .text	00000128 _fclose_r
0000b7a8 g     F .text	00000030 fflush
00018b58 g     O .bss	00000004 __malloc_max_sbrked_mem
0000f9b8 g     F .text	0000087c .hidden __adddf3
0000f7c0 g     F .text	00000074 .hidden __nesf2
0000d194 g     F .text	000000f0 __b2d
0000f114 g     F .text	00000598 .hidden __umoddi3
00012580 g     F .text	000000d0 lseek
00000000 g       *ABS*	00000000 __alt_mem_sdram_controller_0
00016f34 g     O .rwdata	00000004 _global_impure_ptr
00004b20 g     F .text	00000564 _realloc_r
00018da4 g       *ABS*	00000000 __bss_end
0001411c g     F .text	000000f0 alt_iic_isr_register
0001464c g     F .text	00000104 alt_tick
00018ba4 g     O .bss	00000100 __hexdig
0000eb50 g     F .text	000005c4 .hidden __udivdi3
000151e8 g     O .rodata	00000028 __mprec_bigtens
0000c848 g     F .text	00000104 __s2b
00011e14 g     F .text	000000a0 .hidden __floatunsidf
0000cf24 g     F .text	00000060 __mcmp
00002f10 g     F .text	00000018 __fp_lock_all
000140d0 g     F .text	0000004c alt_ic_irq_enabled
000145b4 g     F .text	00000098 alt_alarm_stop
00006f64 g     F .text	00000024 strtol
00018b70 g     O .bss	00000004 alt_irq_active
000136d0 g     F .text	00000044 alt_hostfs_close
00000668 g     F .text	000000e4 LCD_Pattern_Vertical
000000ec g     F .exceptions	000000d0 alt_irq_handler
00015d04 g     O .rwdata	00000028 alt_dev_null
00013ccc g     F .text	0000001c alt_dcache_flush_all
0000c94c g     F .text	00000068 __hi0bits
00011cc4 g     F .text	00000080 .hidden __fixdfsi
00006bec g     F .text	0000001c strtod
00016fc0 g       *ABS*	00000000 __ram_rwdata_end
00016f58 g     O .rwdata	00000008 alt_dev_list
000129d8 g     F .text	000000ec write
0000f834 g     F .text	000000b4 .hidden __gtsf2
00015438 g       *ABS*	00000000 __ram_rodata_end
000122b0 g     F .text	000000ac fstat
00010c64 g     F .text	000000ec .hidden __ledf2
0000cc8c g     F .text	00000148 __pow5mult
00018b50 g     O .bss	00000004 __nlocale_changed
0000f7b8 g     F .text	00000008 .hidden __umodsi3
00018da4 g       *ABS*	00000000 end
00012ce4 g     F .text	000000c0 altera_avalon_jtag_uart_init
00014e10 g       *ABS*	00000000 __CTOR_LIST__
02000000 g       *ABS*	00000000 __alt_stack_pointer
00012070 g     F .text	000000ac .hidden __clzsi2
000133a0 g     F .text	00000218 altera_avalon_jtag_uart_write
00002f00 g     F .text	00000004 __sfp_lock_acquire
000046dc g     F .text	000000e8 memchr
00005410 g     F .text	00000058 _sprintf_r
000032fc g     F .text	000002d0 _free_r
00003c84 g     F .text	00000010 __locale_mb_cur_max
000003ac g     F .text	000000c4 LCD_SetCursor
00014c38 g     F .text	000001a4 __call_exitprocs
00018b4c g     O .bss	00000004 __mlocale_changed
00016f44 g     O .rwdata	00000004 __malloc_sbrk_base
000001bc g     F .text	0000003c _start
00018b74 g     O .bss	00000004 _alt_tick_rate
00006f88 g     F .text	00000330 _strtoll_r
0000cdd4 g     F .text	00000150 __lshift
00018b78 g     O .bss	00000004 _alt_nticks
00012758 g     F .text	000000f0 read
00012b30 g     F .text	00000050 alt_sys_init
0000d744 g     F .text	000001cc __ssprint_r
00014b1c g     F .text	0000011c __register_exitproc
0000d648 g     F .text	000000fc strncmp
0000caa0 g     F .text	000001ec __multiply
00013044 g     F .text	00000068 altera_avalon_jtag_uart_close
00015438 g       *ABS*	00000000 __ram_rwdata_start
00014e10 g       *ABS*	00000000 __ram_rodata_start
00018b7c g     O .bss	00000028 __malloc_current_mallinfo
0000f7c0 g     F .text	00000074 .hidden __eqsf2
0000d284 g     F .text	00000144 __d2b
00012b80 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
000072b8 g     F .text	00000240 _strtoul_r
00014914 g     F .text	000000b4 alt_get_fd
00013b78 g     F .text	00000154 alt_busy_sleep
00009b84 g     F .text	00000064 _close_r
00014aa0 g     F .text	0000007c memcmp
00012c40 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00018da4 g       *ABS*	00000000 __alt_stack_base
00012c90 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00009a4c g     F .text	00000138 __swsetup_r
00010234 g     F .text	000008d4 .hidden __divdf3
00002de4 g     F .text	0000011c __sfp
0000d4dc g     F .text	00000078 __copybits
000158d4 g     O .rwdata	00000408 __malloc_av_
00002f0c g     F .text	00000004 __sinit_lock_release
00010d50 g     F .text	000006ec .hidden __muldf3
000054d4 g     F .text	00000054 __sread
00003180 g     F .text	00000040 fread
00014800 g     F .text	00000114 alt_find_file
00013d38 g     F .text	000000a0 alt_dev_llist_insert
000126c8 g     F .text	00000020 __malloc_lock
000128a8 g     F .text	000000b0 sbrk
00007850 g     F .text	00001ef0 ___svfprintf_internal_r
0000b564 g     F .text	00000244 _fflush_r
0000e8dc g     F .text	000000c4 _calloc_r
00018b48 g       *ABS*	00000000 __bss_start
00001178 g     F .text	00000020 _fscanf_r
00000824 g     F .text	00000764 LCD_Init
00004a0c g     F .text	00000114 memset
000001f8 g     F .text	00000168 main
00018b6c g     O .bss	00000004 alt_envp
00018b54 g     O .bss	00000004 __malloc_max_total_mem
00012be0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0000f8e8 g     F .text	000000d0 .hidden __ltsf2
00002f40 g     F .text	00000240 _fread_r
00005608 g     F .text	00000008 __sclose
02000000 g       *ABS*	00000000 __alt_heap_limit
0000b550 g     F .text	00000014 fclose
00006d28 g     F .text	0000023c _strtol_r
00011eb4 g     F .text	000001bc .hidden __truncdfsf2
00009dec g     F .text	0000163c _dtoa_r
00003cdc g     F .text	000007c4 _malloc_r
00016f64 g     O .rwdata	00000004 alt_errno
00009740 g     F .text	000000f0 __submore
00003a78 g     F .text	000000a8 _fwalk
00004680 g     F .text	0000005c _mbtowc_r
0000f71c g     F .text	00000048 .hidden __divsi3
00000360 g     F .text	0000004c Delay_Ms
000031c0 g     F .text	0000013c _malloc_trim_r
00014e10 g       *ABS*	00000000 __CTOR_END__
00005610 g     F .text	000000a4 strcmp
00014e10 g       *ABS*	00000000 __flash_rodata_start
00014e10 g       *ABS*	00000000 __DTOR_LIST__
00010b08 g     F .text	00000084 .hidden __nedf2
00012afc g     F .text	00000034 alt_irq_init
00012848 g     F .text	00000060 alt_release_fd
00005468 g     F .text	0000006c sprintf
000152f8 g     O .rodata	00000100 .hidden __clz_tab
00018b48 g     O .bss	00000004 _PathLocale
00006c08 g     F .text	00000120 strtof
00014a54 g     F .text	00000014 atexit
0000f834 g     F .text	000000b4 .hidden __gesf2
000099e0 g     F .text	0000006c _write_r
00003cb4 g     F .text	0000001c setlocale
00005408 g     F .text	00000008 nanf
00016f38 g     O .rwdata	00000004 _impure_ptr
00018b64 g     O .bss	00000004 alt_argc
000044a0 g     F .text	000000ac _mbrtowc_r
00013e34 g     F .text	0000005c _do_dtors
00003ca0 g     F .text	00000008 __locale_cjk_lang
000050a0 g     F .text	000001d8 __srefill_r
00000020 g       .exceptions	00000000 alt_irq_entry
0000463c g     F .text	00000044 __ascii_mbtowc
0000d134 g     F .text	00000060 __ulp
00002f28 g     F .text	00000018 __fp_unlock_all
00016f50 g     O .rwdata	00000008 alt_fs_list
00013780 g     F .text	0000006c alt_hostfs_write
00000020 g       *ABS*	00000000 __ram_exceptions_start
00003cd0 g     F .text	0000000c localeconv
00013f44 g     F .text	00000050 alt_ic_isr_register
0000b8d4 g     F .text	00000090 __hexdig_init
00016fc0 g       *ABS*	00000000 _edata
00018da4 g       *ABS*	00000000 _end
000001bc g       *ABS*	00000000 __ram_exceptions_end
00002ab0 g     F .text	00000090 vfscanf
000130ac g     F .text	000000ec altera_avalon_jtag_uart_ioctl
00014030 g     F .text	000000a0 alt_ic_irq_disable
00005530 g     F .text	0000007c __swrite
00016f48 g     O .rwdata	00000004 __malloc_trim_threshold
00014750 g     F .text	00000020 altera_nios2_qsys_irq_init
00003c94 g     F .text	0000000c __locale_msgcharset
00014a68 g     F .text	00000038 exit
00003b20 g     F .text	000000b8 _fwalk_reent
0000cf84 g     F .text	000001b0 __mdiff
0000f764 g     F .text	0000004c .hidden __modsi3
00016f3c g     O .rwdata	00000004 __ctype_ptr__
02000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00002f04 g     F .text	00000004 __sfp_lock_release
00005344 g     F .text	000000c4 __sccl
00014e5c g     O .rodata	00000101 _ctype_
00016f4c g     O .rwdata	00000004 __mbtowc
00014ddc g     F .text	00000034 _exit
00013a38 g     F .text	00000140 alt_alarm_start
0000ea6c g     F .text	00000060 .hidden __muldi3
0000c4b0 g     F .text	000001b4 __smakebuf_r
00001264 g     F .text	0000008c strlen
00014460 g     F .text	00000154 open
00010b8c g     F .text	000000d8 .hidden __gedf2
00000f88 g     F .text	000001b4 load
0000b964 g     F .text	00000818 __gethex
00013f14 g     F .text	00000030 alt_icache_flush_all
00016fb4 g     O .rwdata	00000004 alt_priority_mask
00013f94 g     F .text	0000009c alt_ic_irq_enable
0001143c g     F .text	00000888 .hidden __subdf3
0000c9b4 g     F .text	000000b0 __lo0bits
000012f0 g     F .text	000017c0 __svfscanf_r
00016fb8 g     O .rwdata	00000008 alt_alarm_list
00009830 g     F .text	00000194 _ungetc_r
00013dd8 g     F .text	0000005c _do_ctors
0001216c g     F .text	000000c8 close
000124b0 g     F .text	00000080 alt_load
00000000  w      *UND*	00000000 free
00002f08 g     F .text	00000004 __sinit_lock_acquire
0000c734 g     F .text	00000114 __multadd
0000c70c g     F .text	00000028 _Bfree
00013854 g     F .text	000001e4 alt_hostfs_fstat



Disassembly of section .entry:

00000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   0:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   4:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   8:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   c:	00bffd16 	blt	zero,r2,4 <__alt_data_end+0xfe000004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  10:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
  14:	08406f14 	ori	at,at,444
    jmp r1
  18:	0800683a 	jmp	at
  1c:	00000000 	call	0 <__reset>

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000ec0 	call	ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000306 	br	98 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  8c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)

00000094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  94:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  98:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  9c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  e8:	ef80083a 	eret

000000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  ec:	defff904 	addi	sp,sp,-28
  f0:	dfc00615 	stw	ra,24(sp)
  f4:	df000515 	stw	fp,20(sp)
  f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 100:	0005313a 	rdctl	r2,ipending
 104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 10c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 114:	00800044 	movi	r2,1
 118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 11c:	e0fffb17 	ldw	r3,-20(fp)
 120:	e0bffc17 	ldw	r2,-16(fp)
 124:	1884703a 	and	r2,r3,r2
 128:	10001726 	beq	r2,zero,188 <alt_irq_handler+0x9c>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 12c:	00c000b4 	movhi	r3,2
 130:	18e32904 	addi	r3,r3,-29532
 134:	e0bffd17 	ldw	r2,-12(fp)
 138:	100490fa 	slli	r2,r2,3
 13c:	1885883a 	add	r2,r3,r2
 140:	10800017 	ldw	r2,0(r2)
 144:	010000b4 	movhi	r4,2
 148:	21232904 	addi	r4,r4,-29532
 14c:	e0fffd17 	ldw	r3,-12(fp)
 150:	180690fa 	slli	r3,r3,3
 154:	20c7883a 	add	r3,r4,r3
 158:	18c00104 	addi	r3,r3,4
 15c:	18c00017 	ldw	r3,0(r3)
 160:	1809883a 	mov	r4,r3
 164:	103ee83a 	callr	r2
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 16c:	0005313a 	rdctl	r2,ipending
 170:	e0bfff15 	stw	r2,-4(fp)

  return active;
 174:	e0bfff17 	ldw	r2,-4(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
 178:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 17c:	e0bffb17 	ldw	r2,-20(fp)
 180:	103fe31e 	bne	r2,zero,110 <__alt_data_end+0xfe000110>
 184:	00000706 	br	1a4 <alt_irq_handler+0xb8>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
 188:	e0bffc17 	ldw	r2,-16(fp)
 18c:	1085883a 	add	r2,r2,r2
 190:	e0bffc15 	stw	r2,-16(fp)
      i++;
 194:	e0bffd17 	ldw	r2,-12(fp)
 198:	10800044 	addi	r2,r2,1
 19c:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a0:	003fde06 	br	11c <__alt_data_end+0xfe00011c>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1a4:	0001883a 	nop
}
 1a8:	e037883a 	mov	sp,fp
 1ac:	dfc00117 	ldw	ra,4(sp)
 1b0:	df000017 	ldw	fp,0(sp)
 1b4:	dec00204 	addi	sp,sp,8
 1b8:	f800283a 	ret

Disassembly of section .text:

000001bc <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     1bc:	06c08034 	movhi	sp,512
    ori sp, sp, %lo(__alt_stack_pointer)
     1c0:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     1c4:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     1c8:	d6bbcd14 	ori	gp,gp,61236
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     1cc:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     1d0:	10a2d214 	ori	r2,r2,35656

    movhi r3, %hi(__bss_end)
     1d4:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     1d8:	18e36914 	ori	r3,r3,36260

    beq r2, r3, 1f
     1dc:	10c00326 	beq	r2,r3,1ec <_start+0x30>

0:
    stw zero, (r2)
     1e0:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     1e4:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     1e8:	10fffd36 	bltu	r2,r3,1e0 <__alt_data_end+0xfe0001e0>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     1ec:	00124b00 	call	124b0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     1f0:	00126500 	call	12650 <alt_main>

000001f4 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     1f4:	003fff06 	br	1f4 <__alt_data_end+0xfe0001f4>

000001f8 <main>:
#define W 240

void load(FILE* f, uint16_t iframe[H][W]);

int main()
{ 
     1f8:	defffe04 	addi	sp,sp,-8
     1fc:	dfc00115 	stw	ra,4(sp)
     200:	df000015 	stw	fp,0(sp)
     204:	d839883a 	mov	fp,sp
     208:	023ffe74 	movhi	r8,65529
     20c:	423dff04 	addi	r8,r8,-2052
     210:	da37883a 	add	sp,sp,r8
  printf("Hello from Nios II!\n");
     214:	01000074 	movhi	r4,1
     218:	21138404 	addi	r4,r4,19984
     21c:	00012500 	call	1250 <puts>
  LCD_Init();
     220:	00008240 	call	824 <LCD_Init>
  int i = 0;
     224:	00bffe74 	movhi	r2,65529
     228:	10bdff04 	addi	r2,r2,-2052
     22c:	1705883a 	add	r2,r2,fp
     230:	10000015 	stw	zero,0(r2)
  printf("Hello from Nios II!\n");
     234:	01000074 	movhi	r4,1
     238:	21138404 	addi	r4,r4,19984
     23c:	00012500 	call	1250 <puts>
//  }
//LCD_SetCursor(0,0);
  	  //LCD_Frouze();
  /* Event loop never exits. */

  	  for(i = 0; i < 320*240 ; i ++)
     240:	00fffe74 	movhi	r3,65529
     244:	18fdff04 	addi	r3,r3,-2052
     248:	1f07883a 	add	r3,r3,fp
     24c:	18000015 	stw	zero,0(r3)
     250:	00003106 	br	318 <main+0x120>
  	  {
  		 data1[i] = RED;// colors[(i/10)%3];
     254:	013ffe74 	movhi	r4,65529
     258:	213dff04 	addi	r4,r4,-2052
     25c:	2709883a 	add	r4,r4,fp
     260:	20800017 	ldw	r2,0(r4)
     264:	1085883a 	add	r2,r2,r2
     268:	00fffe74 	movhi	r3,65529
     26c:	18fdff04 	addi	r3,r3,-2052
     270:	1f07883a 	add	r3,r3,fp
     274:	1885883a 	add	r2,r3,r2
     278:	10800104 	addi	r2,r2,4
     27c:	00fe0004 	movi	r3,-2048
     280:	10c0000d 	sth	r3,0(r2)
  		 data2[i] = WHITE;
     284:	008000b4 	movhi	r2,2
     288:	10960104 	addi	r2,r2,22532
     28c:	013ffe74 	movhi	r4,65529
     290:	213dff04 	addi	r4,r4,-2052
     294:	2709883a 	add	r4,r4,fp
     298:	2087883a 	add	r3,r4,r2
     29c:	013ffe74 	movhi	r4,65529
     2a0:	213dff04 	addi	r4,r4,-2052
     2a4:	2709883a 	add	r4,r4,fp
     2a8:	20800017 	ldw	r2,0(r4)
     2ac:	1085883a 	add	r2,r2,r2
     2b0:	1885883a 	add	r2,r3,r2
     2b4:	00ffffc4 	movi	r3,-1
     2b8:	10c0000d 	sth	r3,0(r2)
  		 data3[i] = BLUE;
     2bc:	00800174 	movhi	r2,5
     2c0:	10ac0104 	addi	r2,r2,-20476
     2c4:	013ffe74 	movhi	r4,65529
     2c8:	213dff04 	addi	r4,r4,-2052
     2cc:	2709883a 	add	r4,r4,fp
     2d0:	2087883a 	add	r3,r4,r2
     2d4:	013ffe74 	movhi	r4,65529
     2d8:	213dff04 	addi	r4,r4,-2052
     2dc:	2709883a 	add	r4,r4,fp
     2e0:	20800017 	ldw	r2,0(r4)
     2e4:	1085883a 	add	r2,r2,r2
     2e8:	1885883a 	add	r2,r3,r2
     2ec:	00c007c4 	movi	r3,31
     2f0:	10c0000d 	sth	r3,0(r2)
//  }
//LCD_SetCursor(0,0);
  	  //LCD_Frouze();
  /* Event loop never exits. */

  	  for(i = 0; i < 320*240 ; i ++)
     2f4:	00fffe74 	movhi	r3,65529
     2f8:	18fdff04 	addi	r3,r3,-2052
     2fc:	1f07883a 	add	r3,r3,fp
     300:	18800017 	ldw	r2,0(r3)
     304:	10800044 	addi	r2,r2,1
     308:	013ffe74 	movhi	r4,65529
     30c:	213dff04 	addi	r4,r4,-2052
     310:	2709883a 	add	r4,r4,fp
     314:	20800015 	stw	r2,0(r4)
     318:	00fffe74 	movhi	r3,65529
     31c:	18fdff04 	addi	r3,r3,-2052
     320:	1f07883a 	add	r3,r3,fp
     324:	18800017 	ldw	r2,0(r3)
     328:	00c00074 	movhi	r3,1
     32c:	18caffc4 	addi	r3,r3,11263
     330:	18bfc80e 	bge	r3,r2,254 <__alt_data_end+0xfe000254>
  		 data1[i] = RED;// colors[(i/10)%3];
  		 data2[i] = WHITE;
  		 data3[i] = BLUE;
  	  }

  	  LCD_WR(buff_0 << 2, data1);
     334:	013ffe74 	movhi	r4,65529
     338:	213e0004 	addi	r4,r4,-2048
     33c:	e107883a 	add	r3,fp,r4
     340:	00808034 	movhi	r2,512
     344:	10840104 	addi	r2,r2,4100
     348:	10c00035 	stwio	r3,0(r2)
   	  //LCD_WR(buff_1 << 2, data2);
  	  //LCD_WR(buff_2 << 2, data3);
  	  LCD_WR(start_master << 2, 1);
     34c:	00c00044 	movi	r3,1
     350:	00808034 	movhi	r2,512
     354:	10840704 	addi	r2,r2,4124
     358:	10c00035 	stwio	r3,0(r2)


  while (1);
     35c:	003fff06 	br	35c <__alt_data_end+0xfe00035c>

00000360 <Delay_Ms>:




void Delay_Ms(alt_u16 count_ms)
{
     360:	defffd04 	addi	sp,sp,-12
     364:	dfc00215 	stw	ra,8(sp)
     368:	df000115 	stw	fp,4(sp)
     36c:	df000104 	addi	fp,sp,4
     370:	2005883a 	mov	r2,r4
     374:	e0bfff0d 	sth	r2,-4(fp)
    while(count_ms--)
     378:	00000206 	br	384 <Delay_Ms+0x24>
    {
        usleep(1000);
     37c:	0100fa04 	movi	r4,1000
     380:	00129580 	call	12958 <usleep>



void Delay_Ms(alt_u16 count_ms)
{
    while(count_ms--)
     384:	e0bfff0b 	ldhu	r2,-4(fp)
     388:	10ffffc4 	addi	r3,r2,-1
     38c:	e0ffff0d 	sth	r3,-4(fp)
     390:	10bfffcc 	andi	r2,r2,65535
     394:	103ff91e 	bne	r2,zero,37c <__alt_data_end+0xfe00037c>
    {
        usleep(1000);
    }
}
     398:	e037883a 	mov	sp,fp
     39c:	dfc00117 	ldw	ra,4(sp)
     3a0:	df000017 	ldw	fp,0(sp)
     3a4:	dec00204 	addi	sp,sp,8
     3a8:	f800283a 	ret

000003ac <LCD_SetCursor>:


void LCD_SetCursor(alt_u16 Xpos, alt_u16 Ypos)
 {
     3ac:	defffd04 	addi	sp,sp,-12
     3b0:	df000215 	stw	fp,8(sp)
     3b4:	df000204 	addi	fp,sp,8
     3b8:	2007883a 	mov	r3,r4
     3bc:	2805883a 	mov	r2,r5
     3c0:	e0fffe0d 	sth	r3,-8(fp)
     3c4:	e0bfff0d 	sth	r2,-4(fp)
		LCD_WR_REG(0x002A);
     3c8:	00c00a84 	movi	r3,42
     3cc:	00808034 	movhi	r2,512
     3d0:	10840004 	addi	r2,r2,4096
     3d4:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(Xpos >> 8);
     3d8:	e0bffe0b 	ldhu	r2,-8(fp)
     3dc:	1004d23a 	srli	r2,r2,8
     3e0:	10bfffcc 	andi	r2,r2,65535
     3e4:	10c00074 	orhi	r3,r2,1
     3e8:	00808034 	movhi	r2,512
     3ec:	10840004 	addi	r2,r2,4096
     3f0:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA((Xpos & 0XFF));
     3f4:	e0bffe0b 	ldhu	r2,-8(fp)
     3f8:	10803fcc 	andi	r2,r2,255
     3fc:	10c00074 	orhi	r3,r2,1
     400:	00808034 	movhi	r2,512
     404:	10840004 	addi	r2,r2,4096
     408:	10c00035 	stwio	r3,0(r2)
		LCD_WR_REG(0x002B);
     40c:	00c00ac4 	movi	r3,43
     410:	00808034 	movhi	r2,512
     414:	10840004 	addi	r2,r2,4096
     418:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(Ypos >> 8);
     41c:	e0bfff0b 	ldhu	r2,-4(fp)
     420:	1004d23a 	srli	r2,r2,8
     424:	10bfffcc 	andi	r2,r2,65535
     428:	10c00074 	orhi	r3,r2,1
     42c:	00808034 	movhi	r2,512
     430:	10840004 	addi	r2,r2,4096
     434:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA((Ypos & 0XFF));
     438:	e0bfff0b 	ldhu	r2,-4(fp)
     43c:	10803fcc 	andi	r2,r2,255
     440:	10c00074 	orhi	r3,r2,1
     444:	00808034 	movhi	r2,512
     448:	10840004 	addi	r2,r2,4096
     44c:	10c00035 	stwio	r3,0(r2)
		LCD_WR_REG(0x002C);
     450:	00c00b04 	movi	r3,44
     454:	00808034 	movhi	r2,512
     458:	10840004 	addi	r2,r2,4096
     45c:	10c00035 	stwio	r3,0(r2)
}
     460:	e037883a 	mov	sp,fp
     464:	df000017 	ldw	fp,0(sp)
     468:	dec00104 	addi	sp,sp,4
     46c:	f800283a 	ret

00000470 <LCD_Clear>:

void LCD_Clear(alt_u16 Color)
{
     470:	defffc04 	addi	sp,sp,-16
     474:	dfc00315 	stw	ra,12(sp)
     478:	df000215 	stw	fp,8(sp)
     47c:	df000204 	addi	fp,sp,8
     480:	2005883a 	mov	r2,r4
     484:	e0bfff0d 	sth	r2,-4(fp)
        alt_u32 index=0;
     488:	e03ffe15 	stw	zero,-8(fp)
        LCD_SetCursor(0x00,0x0000);
     48c:	0009883a 	mov	r4,zero
     490:	000b883a 	mov	r5,zero
     494:	00003ac0 	call	3ac <LCD_SetCursor>
        LCD_WR_REG(0x002C);
     498:	00c00b04 	movi	r3,44
     49c:	00808034 	movhi	r2,512
     4a0:	10840004 	addi	r2,r2,4096
     4a4:	10c00035 	stwio	r3,0(r2)
        for(index=0;index<76800;index++)
     4a8:	e03ffe15 	stw	zero,-8(fp)
     4ac:	00000806 	br	4d0 <LCD_Clear+0x60>
        {
        	LCD_WR_DATA(Color);
     4b0:	e0bfff0b 	ldhu	r2,-4(fp)
     4b4:	10c00074 	orhi	r3,r2,1
     4b8:	00808034 	movhi	r2,512
     4bc:	10840004 	addi	r2,r2,4096
     4c0:	10c00035 	stwio	r3,0(r2)
void LCD_Clear(alt_u16 Color)
{
        alt_u32 index=0;
        LCD_SetCursor(0x00,0x0000);
        LCD_WR_REG(0x002C);
        for(index=0;index<76800;index++)
     4c4:	e0bffe17 	ldw	r2,-8(fp)
     4c8:	10800044 	addi	r2,r2,1
     4cc:	e0bffe15 	stw	r2,-8(fp)
     4d0:	e0bffe17 	ldw	r2,-8(fp)
     4d4:	00c00074 	movhi	r3,1
     4d8:	18caffc4 	addi	r3,r3,11263
     4dc:	18bff42e 	bgeu	r3,r2,4b0 <__alt_data_end+0xfe0004b0>
        {
        	LCD_WR_DATA(Color);
        }
}
     4e0:	e037883a 	mov	sp,fp
     4e4:	dfc00117 	ldw	ra,4(sp)
     4e8:	df000017 	ldw	fp,0(sp)
     4ec:	dec00204 	addi	sp,sp,8
     4f0:	f800283a 	ret

000004f4 <LCD_DrawPoint>:

void LCD_DrawPoint(alt_u16 x,alt_u16 y,alt_u16 color )
{
     4f4:	defffb04 	addi	sp,sp,-20
     4f8:	dfc00415 	stw	ra,16(sp)
     4fc:	df000315 	stw	fp,12(sp)
     500:	df000304 	addi	fp,sp,12
     504:	2807883a 	mov	r3,r5
     508:	3005883a 	mov	r2,r6
     50c:	e13ffd0d 	sth	r4,-12(fp)
     510:	e0fffe0d 	sth	r3,-8(fp)
     514:	e0bfff0d 	sth	r2,-4(fp)
        LCD_SetCursor(x,y);
     518:	e0fffd0b 	ldhu	r3,-12(fp)
     51c:	e0bffe0b 	ldhu	r2,-8(fp)
     520:	1809883a 	mov	r4,r3
     524:	100b883a 	mov	r5,r2
     528:	00003ac0 	call	3ac <LCD_SetCursor>
        LCD_WR_REG(0x002);
     52c:	00c00084 	movi	r3,2
     530:	00808034 	movhi	r2,512
     534:	10840004 	addi	r2,r2,4096
     538:	10c00035 	stwio	r3,0(r2)
        LCD_WR_DATA(color);
     53c:	e0bfff0b 	ldhu	r2,-4(fp)
     540:	10c00074 	orhi	r3,r2,1
     544:	00808034 	movhi	r2,512
     548:	10840004 	addi	r2,r2,4096
     54c:	10c00035 	stwio	r3,0(r2)
}
     550:	e037883a 	mov	sp,fp
     554:	dfc00117 	ldw	ra,4(sp)
     558:	df000017 	ldw	fp,0(sp)
     55c:	dec00204 	addi	sp,sp,8
     560:	f800283a 	ret

00000564 <LCD_Pattern_Horizon>:

void LCD_Pattern_Horizon(void)
{
     564:	defffc04 	addi	sp,sp,-16
     568:	dfc00315 	stw	ra,12(sp)
     56c:	df000215 	stw	fp,8(sp)
     570:	df000204 	addi	fp,sp,8
        alt_u32 index=0;
     574:	e03ffe15 	stw	zero,-8(fp)
        alt_u16  data=0;
     578:	e03fff0d 	sth	zero,-4(fp)
        LCD_SetCursor(0x00,0x0000);
     57c:	0009883a 	mov	r4,zero
     580:	000b883a 	mov	r5,zero
     584:	00003ac0 	call	3ac <LCD_SetCursor>
        data=RED;
     588:	00be0004 	movi	r2,-2048
     58c:	e0bfff0d 	sth	r2,-4(fp)
        for(index=0;index<240*107;index++)
     590:	e03ffe15 	stw	zero,-8(fp)
     594:	00000806 	br	5b8 <LCD_Pattern_Horizon+0x54>
        {
        	LCD_WR_DATA(data);
     598:	e0bfff0b 	ldhu	r2,-4(fp)
     59c:	10c00074 	orhi	r3,r2,1
     5a0:	00808034 	movhi	r2,512
     5a4:	10840004 	addi	r2,r2,4096
     5a8:	10c00035 	stwio	r3,0(r2)
{
        alt_u32 index=0;
        alt_u16  data=0;
        LCD_SetCursor(0x00,0x0000);
        data=RED;
        for(index=0;index<240*107;index++)
     5ac:	e0bffe17 	ldw	r2,-8(fp)
     5b0:	10800044 	addi	r2,r2,1
     5b4:	e0bffe15 	stw	r2,-8(fp)
     5b8:	e0bffe17 	ldw	r2,-8(fp)
     5bc:	10991430 	cmpltui	r2,r2,25680
     5c0:	103ff51e 	bne	r2,zero,598 <__alt_data_end+0xfe000598>
        {
        	LCD_WR_DATA(data);
        }
        LCD_SetCursor(0x00,107);
     5c4:	0009883a 	mov	r4,zero
     5c8:	01401ac4 	movi	r5,107
     5cc:	00003ac0 	call	3ac <LCD_SetCursor>
        data=WHITE;
     5d0:	00bfffc4 	movi	r2,-1
     5d4:	e0bfff0d 	sth	r2,-4(fp)
		for(index=0;index<240*107;index++)
     5d8:	e03ffe15 	stw	zero,-8(fp)
     5dc:	00000806 	br	600 <LCD_Pattern_Horizon+0x9c>
		{
			LCD_WR_DATA(data);
     5e0:	e0bfff0b 	ldhu	r2,-4(fp)
     5e4:	10c00074 	orhi	r3,r2,1
     5e8:	00808034 	movhi	r2,512
     5ec:	10840004 	addi	r2,r2,4096
     5f0:	10c00035 	stwio	r3,0(r2)
        {
        	LCD_WR_DATA(data);
        }
        LCD_SetCursor(0x00,107);
        data=WHITE;
		for(index=0;index<240*107;index++)
     5f4:	e0bffe17 	ldw	r2,-8(fp)
     5f8:	10800044 	addi	r2,r2,1
     5fc:	e0bffe15 	stw	r2,-8(fp)
     600:	e0bffe17 	ldw	r2,-8(fp)
     604:	10991430 	cmpltui	r2,r2,25680
     608:	103ff51e 	bne	r2,zero,5e0 <__alt_data_end+0xfe0005e0>
		{
			LCD_WR_DATA(data);
		}
	    LCD_SetCursor(0x00,214);
     60c:	0009883a 	mov	r4,zero
     610:	01403584 	movi	r5,214
     614:	00003ac0 	call	3ac <LCD_SetCursor>
		data=BLUE;
     618:	008007c4 	movi	r2,31
     61c:	e0bfff0d 	sth	r2,-4(fp)
		for(index=0;index<240*106;index++)
     620:	e03ffe15 	stw	zero,-8(fp)
     624:	00000806 	br	648 <LCD_Pattern_Horizon+0xe4>
		{
			LCD_WR_DATA(data);
     628:	e0bfff0b 	ldhu	r2,-4(fp)
     62c:	10c00074 	orhi	r3,r2,1
     630:	00808034 	movhi	r2,512
     634:	10840004 	addi	r2,r2,4096
     638:	10c00035 	stwio	r3,0(r2)
		{
			LCD_WR_DATA(data);
		}
	    LCD_SetCursor(0x00,214);
		data=BLUE;
		for(index=0;index<240*106;index++)
     63c:	e0bffe17 	ldw	r2,-8(fp)
     640:	10800044 	addi	r2,r2,1
     644:	e0bffe15 	stw	r2,-8(fp)
     648:	e0bffe17 	ldw	r2,-8(fp)
     64c:	1098d830 	cmpltui	r2,r2,25440
     650:	103ff51e 	bne	r2,zero,628 <__alt_data_end+0xfe000628>
		{
			LCD_WR_DATA(data);
		}
}
     654:	e037883a 	mov	sp,fp
     658:	dfc00117 	ldw	ra,4(sp)
     65c:	df000017 	ldw	fp,0(sp)
     660:	dec00204 	addi	sp,sp,8
     664:	f800283a 	ret

00000668 <LCD_Pattern_Vertical>:

void LCD_Pattern_Vertical(void)
{
     668:	defff804 	addi	sp,sp,-32
     66c:	dfc00715 	stw	ra,28(sp)
     670:	df000615 	stw	fp,24(sp)
     674:	df000604 	addi	fp,sp,24
        int i,j,m;
        alt_u16  data=0;
     678:	e03ffd0d 	sth	zero,-12(fp)
        alt_u16  color[4]={WHITE,BLUE,GREEN,RED};
     67c:	00bfffc4 	movi	r2,-1
     680:	e0bffd8d 	sth	r2,-10(fp)
     684:	008007c4 	movi	r2,31
     688:	e0bffe0d 	sth	r2,-8(fp)
     68c:	0081f804 	movi	r2,2016
     690:	e0bffe8d 	sth	r2,-6(fp)
     694:	00be0004 	movi	r2,-2048
     698:	e0bfff0d 	sth	r2,-4(fp)
        LCD_SetCursor(0x00,0x0000);
     69c:	0009883a 	mov	r4,zero
     6a0:	000b883a 	mov	r5,zero
     6a4:	00003ac0 	call	3ac <LCD_SetCursor>
        for(m=0;m<320;m++)
     6a8:	e03ffc15 	stw	zero,-16(fp)
     6ac:	00001f06 	br	72c <LCD_Pattern_Vertical+0xc4>
        {
			for(i=0;i<4;i++)
     6b0:	e03ffa15 	stw	zero,-24(fp)
     6b4:	00001706 	br	714 <LCD_Pattern_Vertical+0xac>
			{
				data=color[i];
     6b8:	e0bffa17 	ldw	r2,-24(fp)
     6bc:	1085883a 	add	r2,r2,r2
     6c0:	e0fffa04 	addi	r3,fp,-24
     6c4:	1885883a 	add	r2,r3,r2
     6c8:	10800384 	addi	r2,r2,14
     6cc:	1080000b 	ldhu	r2,0(r2)
     6d0:	e0bffd0d 	sth	r2,-12(fp)
				for(j=0;j<60;j++)
     6d4:	e03ffb15 	stw	zero,-20(fp)
     6d8:	00000806 	br	6fc <LCD_Pattern_Vertical+0x94>
				{
					LCD_WR_DATA(data);
     6dc:	e0bffd0b 	ldhu	r2,-12(fp)
     6e0:	10c00074 	orhi	r3,r2,1
     6e4:	00808034 	movhi	r2,512
     6e8:	10840004 	addi	r2,r2,4096
     6ec:	10c00035 	stwio	r3,0(r2)
        for(m=0;m<320;m++)
        {
			for(i=0;i<4;i++)
			{
				data=color[i];
				for(j=0;j<60;j++)
     6f0:	e0bffb17 	ldw	r2,-20(fp)
     6f4:	10800044 	addi	r2,r2,1
     6f8:	e0bffb15 	stw	r2,-20(fp)
     6fc:	e0bffb17 	ldw	r2,-20(fp)
     700:	10800f10 	cmplti	r2,r2,60
     704:	103ff51e 	bne	r2,zero,6dc <__alt_data_end+0xfe0006dc>
        alt_u16  data=0;
        alt_u16  color[4]={WHITE,BLUE,GREEN,RED};
        LCD_SetCursor(0x00,0x0000);
        for(m=0;m<320;m++)
        {
			for(i=0;i<4;i++)
     708:	e0bffa17 	ldw	r2,-24(fp)
     70c:	10800044 	addi	r2,r2,1
     710:	e0bffa15 	stw	r2,-24(fp)
     714:	e0bffa17 	ldw	r2,-24(fp)
     718:	10800110 	cmplti	r2,r2,4
     71c:	103fe61e 	bne	r2,zero,6b8 <__alt_data_end+0xfe0006b8>
{
        int i,j,m;
        alt_u16  data=0;
        alt_u16  color[4]={WHITE,BLUE,GREEN,RED};
        LCD_SetCursor(0x00,0x0000);
        for(m=0;m<320;m++)
     720:	e0bffc17 	ldw	r2,-16(fp)
     724:	10800044 	addi	r2,r2,1
     728:	e0bffc15 	stw	r2,-16(fp)
     72c:	e0bffc17 	ldw	r2,-16(fp)
     730:	10805010 	cmplti	r2,r2,320
     734:	103fde1e 	bne	r2,zero,6b0 <__alt_data_end+0xfe0006b0>
				{
					LCD_WR_DATA(data);
				}
			}
        }
}
     738:	e037883a 	mov	sp,fp
     73c:	dfc00117 	ldw	ra,4(sp)
     740:	df000017 	ldw	fp,0(sp)
     744:	dec00204 	addi	sp,sp,8
     748:	f800283a 	ret

0000074c <LCD_Frouze>:


void LCD_Frouze()
 {
     74c:	defffd04 	addi	sp,sp,-12
     750:	df000215 	stw	fp,8(sp)
     754:	df000204 	addi	fp,sp,8
	alt_u32 index = 0;
     758:	e03ffe15 	stw	zero,-8(fp)
	alt_u16 data = 0;
     75c:	e03fff0d 	sth	zero,-4(fp)

	data = RED;
     760:	00be0004 	movi	r2,-2048
     764:	e0bfff0d 	sth	r2,-4(fp)
	for (index = 0; index < 240 * 107; index++) {
     768:	e03ffe15 	stw	zero,-8(fp)
     76c:	00000806 	br	790 <LCD_Frouze+0x44>
		LCD_WR_DATA(data);
     770:	e0bfff0b 	ldhu	r2,-4(fp)
     774:	10c00074 	orhi	r3,r2,1
     778:	00808034 	movhi	r2,512
     77c:	10840004 	addi	r2,r2,4096
     780:	10c00035 	stwio	r3,0(r2)
 {
	alt_u32 index = 0;
	alt_u16 data = 0;

	data = RED;
	for (index = 0; index < 240 * 107; index++) {
     784:	e0bffe17 	ldw	r2,-8(fp)
     788:	10800044 	addi	r2,r2,1
     78c:	e0bffe15 	stw	r2,-8(fp)
     790:	e0bffe17 	ldw	r2,-8(fp)
     794:	10991430 	cmpltui	r2,r2,25680
     798:	103ff51e 	bne	r2,zero,770 <__alt_data_end+0xfe000770>
		LCD_WR_DATA(data);
	}
	data = WHITE;
     79c:	00bfffc4 	movi	r2,-1
     7a0:	e0bfff0d 	sth	r2,-4(fp)
	for (index = 0; index < 240 * 107; index++) {
     7a4:	e03ffe15 	stw	zero,-8(fp)
     7a8:	00000806 	br	7cc <LCD_Frouze+0x80>
		LCD_WR_DATA(data);
     7ac:	e0bfff0b 	ldhu	r2,-4(fp)
     7b0:	10c00074 	orhi	r3,r2,1
     7b4:	00808034 	movhi	r2,512
     7b8:	10840004 	addi	r2,r2,4096
     7bc:	10c00035 	stwio	r3,0(r2)
	data = RED;
	for (index = 0; index < 240 * 107; index++) {
		LCD_WR_DATA(data);
	}
	data = WHITE;
	for (index = 0; index < 240 * 107; index++) {
     7c0:	e0bffe17 	ldw	r2,-8(fp)
     7c4:	10800044 	addi	r2,r2,1
     7c8:	e0bffe15 	stw	r2,-8(fp)
     7cc:	e0bffe17 	ldw	r2,-8(fp)
     7d0:	10991430 	cmpltui	r2,r2,25680
     7d4:	103ff51e 	bne	r2,zero,7ac <__alt_data_end+0xfe0007ac>
		LCD_WR_DATA(data);
	}
	data = BLUE;
     7d8:	008007c4 	movi	r2,31
     7dc:	e0bfff0d 	sth	r2,-4(fp)
	for (index = 0; index < 240 * 106; index++) {
     7e0:	e03ffe15 	stw	zero,-8(fp)
     7e4:	00000806 	br	808 <LCD_Frouze+0xbc>
		LCD_WR_DATA(data);
     7e8:	e0bfff0b 	ldhu	r2,-4(fp)
     7ec:	10c00074 	orhi	r3,r2,1
     7f0:	00808034 	movhi	r2,512
     7f4:	10840004 	addi	r2,r2,4096
     7f8:	10c00035 	stwio	r3,0(r2)
	data = WHITE;
	for (index = 0; index < 240 * 107; index++) {
		LCD_WR_DATA(data);
	}
	data = BLUE;
	for (index = 0; index < 240 * 106; index++) {
     7fc:	e0bffe17 	ldw	r2,-8(fp)
     800:	10800044 	addi	r2,r2,1
     804:	e0bffe15 	stw	r2,-8(fp)
     808:	e0bffe17 	ldw	r2,-8(fp)
     80c:	1098d830 	cmpltui	r2,r2,25440
     810:	103ff51e 	bne	r2,zero,7e8 <__alt_data_end+0xfe0007e8>
		LCD_WR_DATA(data);
	}
}
     814:	e037883a 	mov	sp,fp
     818:	df000017 	ldw	fp,0(sp)
     81c:	dec00104 	addi	sp,sp,4
     820:	f800283a 	ret

00000824 <LCD_Init>:

void LCD_Init()
{
     824:	defffe04 	addi	sp,sp,-8
     828:	dfc00115 	stw	ra,4(sp)
     82c:	df000015 	stw	fp,0(sp)
     830:	d839883a 	mov	fp,sp
	//alt_u16 data1,data2;
	//alt_u16 data3,data4;
	Set_LCD_RST;
     834:	0007883a 	mov	r3,zero
     838:	00808034 	movhi	r2,512
     83c:	10840184 	addi	r2,r2,4102
     840:	10c00035 	stwio	r3,0(r2)
	Delay_Ms(1);
     844:	01000044 	movi	r4,1
     848:	00003600 	call	360 <Delay_Ms>
	Clr_LCD_RST;
     84c:	00c00044 	movi	r3,1
     850:	00808034 	movhi	r2,512
     854:	10840184 	addi	r2,r2,4102
     858:	10c00035 	stwio	r3,0(r2)
	Delay_Ms(10);       // Delay 10ms // This delay time is necessary
     85c:	01000284 	movi	r4,10
     860:	00003600 	call	360 <Delay_Ms>
	Set_LCD_RST;
     864:	0007883a 	mov	r3,zero
     868:	00808034 	movhi	r2,512
     86c:	10840184 	addi	r2,r2,4102
     870:	10c00035 	stwio	r3,0(r2)
	Delay_Ms(120);       // Delay 120 ms
     874:	01001e04 	movi	r4,120
     878:	00003600 	call	360 <Delay_Ms>
	Clr_LCD_RST;
     87c:	00c00044 	movi	r3,1
     880:	00808034 	movhi	r2,512
     884:	10840184 	addi	r2,r2,4102
     888:	10c00035 	stwio	r3,0(r2)



	LCD_WR_REG(0x0011); //Exit Sleep
     88c:	00c00444 	movi	r3,17
     890:	00808034 	movhi	r2,512
     894:	10840004 	addi	r2,r2,4096
     898:	10c00035 	stwio	r3,0(r2)
	LCD_WR_REG(0x00CF);
     89c:	00c033c4 	movi	r3,207
     8a0:	00808034 	movhi	r2,512
     8a4:	10840004 	addi	r2,r2,4096
     8a8:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     8ac:	00c00074 	movhi	r3,1
     8b0:	00808034 	movhi	r2,512
     8b4:	10840004 	addi	r2,r2,4096
     8b8:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0081);
     8bc:	00c00074 	movhi	r3,1
     8c0:	18c02044 	addi	r3,r3,129
     8c4:	00808034 	movhi	r2,512
     8c8:	10840004 	addi	r2,r2,4096
     8cc:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0X00c0);
     8d0:	00c00074 	movhi	r3,1
     8d4:	18c03004 	addi	r3,r3,192
     8d8:	00808034 	movhi	r2,512
     8dc:	10840004 	addi	r2,r2,4096
     8e0:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x00ED);
     8e4:	00c03b44 	movi	r3,237
     8e8:	00808034 	movhi	r2,512
     8ec:	10840004 	addi	r2,r2,4096
     8f0:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0064);
     8f4:	00c00074 	movhi	r3,1
     8f8:	18c01904 	addi	r3,r3,100
     8fc:	00808034 	movhi	r2,512
     900:	10840004 	addi	r2,r2,4096
     904:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0003);
     908:	00c00074 	movhi	r3,1
     90c:	18c000c4 	addi	r3,r3,3
     910:	00808034 	movhi	r2,512
     914:	10840004 	addi	r2,r2,4096
     918:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0X0012);
     91c:	00c00074 	movhi	r3,1
     920:	18c00484 	addi	r3,r3,18
     924:	00808034 	movhi	r2,512
     928:	10840004 	addi	r2,r2,4096
     92c:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0X0081);
     930:	00c00074 	movhi	r3,1
     934:	18c02044 	addi	r3,r3,129
     938:	00808034 	movhi	r2,512
     93c:	10840004 	addi	r2,r2,4096
     940:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x00E8);
     944:	00c03a04 	movi	r3,232
     948:	00808034 	movhi	r2,512
     94c:	10840004 	addi	r2,r2,4096
     950:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0085);
     954:	00c00074 	movhi	r3,1
     958:	18c02144 	addi	r3,r3,133
     95c:	00808034 	movhi	r2,512
     960:	10840004 	addi	r2,r2,4096
     964:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0001);
     968:	00c00074 	movhi	r3,1
     96c:	18c00044 	addi	r3,r3,1
     970:	00808034 	movhi	r2,512
     974:	10840004 	addi	r2,r2,4096
     978:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x00798);
     97c:	00c00074 	movhi	r3,1
     980:	18c1e604 	addi	r3,r3,1944
     984:	00808034 	movhi	r2,512
     988:	10840004 	addi	r2,r2,4096
     98c:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x00CB);
     990:	00c032c4 	movi	r3,203
     994:	00808034 	movhi	r2,512
     998:	10840004 	addi	r2,r2,4096
     99c:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0039);
     9a0:	00c00074 	movhi	r3,1
     9a4:	18c00e44 	addi	r3,r3,57
     9a8:	00808034 	movhi	r2,512
     9ac:	10840004 	addi	r2,r2,4096
     9b0:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x002C);
     9b4:	00c00074 	movhi	r3,1
     9b8:	18c00b04 	addi	r3,r3,44
     9bc:	00808034 	movhi	r2,512
     9c0:	10840004 	addi	r2,r2,4096
     9c4:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     9c8:	00c00074 	movhi	r3,1
     9cc:	00808034 	movhi	r2,512
     9d0:	10840004 	addi	r2,r2,4096
     9d4:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0034);
     9d8:	00c00074 	movhi	r3,1
     9dc:	18c00d04 	addi	r3,r3,52
     9e0:	00808034 	movhi	r2,512
     9e4:	10840004 	addi	r2,r2,4096
     9e8:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0002);
     9ec:	00c00074 	movhi	r3,1
     9f0:	18c00084 	addi	r3,r3,2
     9f4:	00808034 	movhi	r2,512
     9f8:	10840004 	addi	r2,r2,4096
     9fc:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x00F7);
     a00:	00c03dc4 	movi	r3,247
     a04:	00808034 	movhi	r2,512
     a08:	10840004 	addi	r2,r2,4096
     a0c:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0020);
     a10:	00c00074 	movhi	r3,1
     a14:	18c00804 	addi	r3,r3,32
     a18:	00808034 	movhi	r2,512
     a1c:	10840004 	addi	r2,r2,4096
     a20:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x00EA);
     a24:	00c03a84 	movi	r3,234
     a28:	00808034 	movhi	r2,512
     a2c:	10840004 	addi	r2,r2,4096
     a30:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     a34:	00c00074 	movhi	r3,1
     a38:	00808034 	movhi	r2,512
     a3c:	10840004 	addi	r2,r2,4096
     a40:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     a44:	00c00074 	movhi	r3,1
     a48:	00808034 	movhi	r2,512
     a4c:	10840004 	addi	r2,r2,4096
     a50:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x00B1);
     a54:	00c02c44 	movi	r3,177
     a58:	00808034 	movhi	r2,512
     a5c:	10840004 	addi	r2,r2,4096
     a60:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     a64:	00c00074 	movhi	r3,1
     a68:	00808034 	movhi	r2,512
     a6c:	10840004 	addi	r2,r2,4096
     a70:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x001b);
     a74:	00c00074 	movhi	r3,1
     a78:	18c006c4 	addi	r3,r3,27
     a7c:	00808034 	movhi	r2,512
     a80:	10840004 	addi	r2,r2,4096
     a84:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x00B6);
     a88:	00c02d84 	movi	r3,182
     a8c:	00808034 	movhi	r2,512
     a90:	10840004 	addi	r2,r2,4096
     a94:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x000A);
     a98:	00c00074 	movhi	r3,1
     a9c:	18c00284 	addi	r3,r3,10
     aa0:	00808034 	movhi	r2,512
     aa4:	10840004 	addi	r2,r2,4096
     aa8:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x00A2);
     aac:	00c00074 	movhi	r3,1
     ab0:	18c02884 	addi	r3,r3,162
     ab4:	00808034 	movhi	r2,512
     ab8:	10840004 	addi	r2,r2,4096
     abc:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x00C0);    //Power control
     ac0:	00c03004 	movi	r3,192
     ac4:	00808034 	movhi	r2,512
     ac8:	10840004 	addi	r2,r2,4096
     acc:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0005);   //VRH[5:0]
     ad0:	00c00074 	movhi	r3,1
     ad4:	18c00144 	addi	r3,r3,5
     ad8:	00808034 	movhi	r2,512
     adc:	10840004 	addi	r2,r2,4096
     ae0:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x00C1);    //Power control
     ae4:	00c03044 	movi	r3,193
     ae8:	00808034 	movhi	r2,512
     aec:	10840004 	addi	r2,r2,4096
     af0:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0011);   //SAP[2:0];BT[3:0]
     af4:	00c00074 	movhi	r3,1
     af8:	18c00444 	addi	r3,r3,17
     afc:	00808034 	movhi	r2,512
     b00:	10840004 	addi	r2,r2,4096
     b04:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x00C5);    //VCM control
     b08:	00c03144 	movi	r3,197
     b0c:	00808034 	movhi	r2,512
     b10:	10840004 	addi	r2,r2,4096
     b14:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0045);       //3F
     b18:	00c00074 	movhi	r3,1
     b1c:	18c01144 	addi	r3,r3,69
     b20:	00808034 	movhi	r2,512
     b24:	10840004 	addi	r2,r2,4096
     b28:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0045);       //3C
     b2c:	00c00074 	movhi	r3,1
     b30:	18c01144 	addi	r3,r3,69
     b34:	00808034 	movhi	r2,512
     b38:	10840004 	addi	r2,r2,4096
     b3c:	10c00035 	stwio	r3,0(r2)

	 LCD_WR_REG(0x00C7);    //VCM control2
     b40:	00c031c4 	movi	r3,199
     b44:	00808034 	movhi	r2,512
     b48:	10840004 	addi	r2,r2,4096
     b4c:	10c00035 	stwio	r3,0(r2)
		 LCD_WR_DATA(0X00a2);
     b50:	00c00074 	movhi	r3,1
     b54:	18c02884 	addi	r3,r3,162
     b58:	00808034 	movhi	r2,512
     b5c:	10840004 	addi	r2,r2,4096
     b60:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x0036);    // Memory Access Control
     b64:	00c00d84 	movi	r3,54
     b68:	00808034 	movhi	r2,512
     b6c:	10840004 	addi	r2,r2,4096
     b70:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0008);//48
     b74:	00c00074 	movhi	r3,1
     b78:	18c00204 	addi	r3,r3,8
     b7c:	00808034 	movhi	r2,512
     b80:	10840004 	addi	r2,r2,4096
     b84:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x00F2);    // 3Gamma Function Disable
     b88:	00c03c84 	movi	r3,242
     b8c:	00808034 	movhi	r2,512
     b90:	10840004 	addi	r2,r2,4096
     b94:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     b98:	00c00074 	movhi	r3,1
     b9c:	00808034 	movhi	r2,512
     ba0:	10840004 	addi	r2,r2,4096
     ba4:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x0026);    //Gamma curve selected
     ba8:	00c00984 	movi	r3,38
     bac:	00808034 	movhi	r2,512
     bb0:	10840004 	addi	r2,r2,4096
     bb4:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0001);
     bb8:	00c00074 	movhi	r3,1
     bbc:	18c00044 	addi	r3,r3,1
     bc0:	00808034 	movhi	r2,512
     bc4:	10840004 	addi	r2,r2,4096
     bc8:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x00E0);    //Set Gamma
     bcc:	00c03804 	movi	r3,224
     bd0:	00808034 	movhi	r2,512
     bd4:	10840004 	addi	r2,r2,4096
     bd8:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x000F);
     bdc:	00c00074 	movhi	r3,1
     be0:	18c003c4 	addi	r3,r3,15
     be4:	00808034 	movhi	r2,512
     be8:	10840004 	addi	r2,r2,4096
     bec:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0026);
     bf0:	00c00074 	movhi	r3,1
     bf4:	18c00984 	addi	r3,r3,38
     bf8:	00808034 	movhi	r2,512
     bfc:	10840004 	addi	r2,r2,4096
     c00:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0024);
     c04:	00c00074 	movhi	r3,1
     c08:	18c00904 	addi	r3,r3,36
     c0c:	00808034 	movhi	r2,512
     c10:	10840004 	addi	r2,r2,4096
     c14:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x000b);
     c18:	00c00074 	movhi	r3,1
     c1c:	18c002c4 	addi	r3,r3,11
     c20:	00808034 	movhi	r2,512
     c24:	10840004 	addi	r2,r2,4096
     c28:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x000E);
     c2c:	00c00074 	movhi	r3,1
     c30:	18c00384 	addi	r3,r3,14
     c34:	00808034 	movhi	r2,512
     c38:	10840004 	addi	r2,r2,4096
     c3c:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0008);
     c40:	00c00074 	movhi	r3,1
     c44:	18c00204 	addi	r3,r3,8
     c48:	00808034 	movhi	r2,512
     c4c:	10840004 	addi	r2,r2,4096
     c50:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x004b);
     c54:	00c00074 	movhi	r3,1
     c58:	18c012c4 	addi	r3,r3,75
     c5c:	00808034 	movhi	r2,512
     c60:	10840004 	addi	r2,r2,4096
     c64:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0X00a8);
     c68:	00c00074 	movhi	r3,1
     c6c:	18c02a04 	addi	r3,r3,168
     c70:	00808034 	movhi	r2,512
     c74:	10840004 	addi	r2,r2,4096
     c78:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x003b);
     c7c:	00c00074 	movhi	r3,1
     c80:	18c00ec4 	addi	r3,r3,59
     c84:	00808034 	movhi	r2,512
     c88:	10840004 	addi	r2,r2,4096
     c8c:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x000a);
     c90:	00c00074 	movhi	r3,1
     c94:	18c00284 	addi	r3,r3,10
     c98:	00808034 	movhi	r2,512
     c9c:	10840004 	addi	r2,r2,4096
     ca0:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0014);
     ca4:	00c00074 	movhi	r3,1
     ca8:	18c00504 	addi	r3,r3,20
     cac:	00808034 	movhi	r2,512
     cb0:	10840004 	addi	r2,r2,4096
     cb4:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0006);
     cb8:	00c00074 	movhi	r3,1
     cbc:	18c00184 	addi	r3,r3,6
     cc0:	00808034 	movhi	r2,512
     cc4:	10840004 	addi	r2,r2,4096
     cc8:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0010);
     ccc:	00c00074 	movhi	r3,1
     cd0:	18c00404 	addi	r3,r3,16
     cd4:	00808034 	movhi	r2,512
     cd8:	10840004 	addi	r2,r2,4096
     cdc:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0009);
     ce0:	00c00074 	movhi	r3,1
     ce4:	18c00244 	addi	r3,r3,9
     ce8:	00808034 	movhi	r2,512
     cec:	10840004 	addi	r2,r2,4096
     cf0:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     cf4:	00c00074 	movhi	r3,1
     cf8:	00808034 	movhi	r2,512
     cfc:	10840004 	addi	r2,r2,4096
     d00:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0X00E1);    //Set Gamma
     d04:	00c03844 	movi	r3,225
     d08:	00808034 	movhi	r2,512
     d0c:	10840004 	addi	r2,r2,4096
     d10:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     d14:	00c00074 	movhi	r3,1
     d18:	00808034 	movhi	r2,512
     d1c:	10840004 	addi	r2,r2,4096
     d20:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x001c);
     d24:	00c00074 	movhi	r3,1
     d28:	18c00704 	addi	r3,r3,28
     d2c:	00808034 	movhi	r2,512
     d30:	10840004 	addi	r2,r2,4096
     d34:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0020);
     d38:	00c00074 	movhi	r3,1
     d3c:	18c00804 	addi	r3,r3,32
     d40:	00808034 	movhi	r2,512
     d44:	10840004 	addi	r2,r2,4096
     d48:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0004);
     d4c:	00c00074 	movhi	r3,1
     d50:	18c00104 	addi	r3,r3,4
     d54:	00808034 	movhi	r2,512
     d58:	10840004 	addi	r2,r2,4096
     d5c:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0010);
     d60:	00c00074 	movhi	r3,1
     d64:	18c00404 	addi	r3,r3,16
     d68:	00808034 	movhi	r2,512
     d6c:	10840004 	addi	r2,r2,4096
     d70:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0008);
     d74:	00c00074 	movhi	r3,1
     d78:	18c00204 	addi	r3,r3,8
     d7c:	00808034 	movhi	r2,512
     d80:	10840004 	addi	r2,r2,4096
     d84:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0034);
     d88:	00c00074 	movhi	r3,1
     d8c:	18c00d04 	addi	r3,r3,52
     d90:	00808034 	movhi	r2,512
     d94:	10840004 	addi	r2,r2,4096
     d98:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0047);
     d9c:	00c00074 	movhi	r3,1
     da0:	18c011c4 	addi	r3,r3,71
     da4:	00808034 	movhi	r2,512
     da8:	10840004 	addi	r2,r2,4096
     dac:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0044);
     db0:	00c00074 	movhi	r3,1
     db4:	18c01104 	addi	r3,r3,68
     db8:	00808034 	movhi	r2,512
     dbc:	10840004 	addi	r2,r2,4096
     dc0:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0005);
     dc4:	00c00074 	movhi	r3,1
     dc8:	18c00144 	addi	r3,r3,5
     dcc:	00808034 	movhi	r2,512
     dd0:	10840004 	addi	r2,r2,4096
     dd4:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x000b);
     dd8:	00c00074 	movhi	r3,1
     ddc:	18c002c4 	addi	r3,r3,11
     de0:	00808034 	movhi	r2,512
     de4:	10840004 	addi	r2,r2,4096
     de8:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0009);
     dec:	00c00074 	movhi	r3,1
     df0:	18c00244 	addi	r3,r3,9
     df4:	00808034 	movhi	r2,512
     df8:	10840004 	addi	r2,r2,4096
     dfc:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x002f);
     e00:	00c00074 	movhi	r3,1
     e04:	18c00bc4 	addi	r3,r3,47
     e08:	00808034 	movhi	r2,512
     e0c:	10840004 	addi	r2,r2,4096
     e10:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0036);
     e14:	00c00074 	movhi	r3,1
     e18:	18c00d84 	addi	r3,r3,54
     e1c:	00808034 	movhi	r2,512
     e20:	10840004 	addi	r2,r2,4096
     e24:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x000f);
     e28:	00c00074 	movhi	r3,1
     e2c:	18c003c4 	addi	r3,r3,15
     e30:	00808034 	movhi	r2,512
     e34:	10840004 	addi	r2,r2,4096
     e38:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x002A);
     e3c:	00c00a84 	movi	r3,42
     e40:	00808034 	movhi	r2,512
     e44:	10840004 	addi	r2,r2,4096
     e48:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     e4c:	00c00074 	movhi	r3,1
     e50:	00808034 	movhi	r2,512
     e54:	10840004 	addi	r2,r2,4096
     e58:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     e5c:	00c00074 	movhi	r3,1
     e60:	00808034 	movhi	r2,512
     e64:	10840004 	addi	r2,r2,4096
     e68:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     e6c:	00c00074 	movhi	r3,1
     e70:	00808034 	movhi	r2,512
     e74:	10840004 	addi	r2,r2,4096
     e78:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x00ef);
     e7c:	00c00074 	movhi	r3,1
     e80:	18c03bc4 	addi	r3,r3,239
     e84:	00808034 	movhi	r2,512
     e88:	10840004 	addi	r2,r2,4096
     e8c:	10c00035 	stwio	r3,0(r2)

	 LCD_WR_REG(0x002B);
     e90:	00c00ac4 	movi	r3,43
     e94:	00808034 	movhi	r2,512
     e98:	10840004 	addi	r2,r2,4096
     e9c:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     ea0:	00c00074 	movhi	r3,1
     ea4:	00808034 	movhi	r2,512
     ea8:	10840004 	addi	r2,r2,4096
     eac:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     eb0:	00c00074 	movhi	r3,1
     eb4:	00808034 	movhi	r2,512
     eb8:	10840004 	addi	r2,r2,4096
     ebc:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0001);
     ec0:	00c00074 	movhi	r3,1
     ec4:	18c00044 	addi	r3,r3,1
     ec8:	00808034 	movhi	r2,512
     ecc:	10840004 	addi	r2,r2,4096
     ed0:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x003f);
     ed4:	00c00074 	movhi	r3,1
     ed8:	18c00fc4 	addi	r3,r3,63
     edc:	00808034 	movhi	r2,512
     ee0:	10840004 	addi	r2,r2,4096
     ee4:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x003A);
     ee8:	00c00e84 	movi	r3,58
     eec:	00808034 	movhi	r2,512
     ef0:	10840004 	addi	r2,r2,4096
     ef4:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0055);
     ef8:	00c00074 	movhi	r3,1
     efc:	18c01544 	addi	r3,r3,85
     f00:	00808034 	movhi	r2,512
     f04:	10840004 	addi	r2,r2,4096
     f08:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x00f6);
     f0c:	00c03d84 	movi	r3,246
     f10:	00808034 	movhi	r2,512
     f14:	10840004 	addi	r2,r2,4096
     f18:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0001);
     f1c:	00c00074 	movhi	r3,1
     f20:	18c00044 	addi	r3,r3,1
     f24:	00808034 	movhi	r2,512
     f28:	10840004 	addi	r2,r2,4096
     f2c:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0030);
     f30:	00c00074 	movhi	r3,1
     f34:	18c00c04 	addi	r3,r3,48
     f38:	00808034 	movhi	r2,512
     f3c:	10840004 	addi	r2,r2,4096
     f40:	10c00035 	stwio	r3,0(r2)
		LCD_WR_DATA(0x0000);
     f44:	00c00074 	movhi	r3,1
     f48:	00808034 	movhi	r2,512
     f4c:	10840004 	addi	r2,r2,4096
     f50:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x0029); //display on
     f54:	00c00a44 	movi	r3,41
     f58:	00808034 	movhi	r2,512
     f5c:	10840004 	addi	r2,r2,4096
     f60:	10c00035 	stwio	r3,0(r2)

	LCD_WR_REG(0x002c);    // 0x2C
     f64:	00c00b04 	movi	r3,44
     f68:	00808034 	movhi	r2,512
     f6c:	10840004 	addi	r2,r2,4096
     f70:	10c00035 	stwio	r3,0(r2)

}
     f74:	e037883a 	mov	sp,fp
     f78:	dfc00117 	ldw	ra,4(sp)
     f7c:	df000017 	ldw	fp,0(sp)
     f80:	dec00204 	addi	sp,sp,8
     f84:	f800283a 	ret

00000f88 <load>:

void load(FILE* f, uint16_t iframe[H][W]) {
     f88:	defff704 	addi	sp,sp,-36
     f8c:	dfc00815 	stw	ra,32(sp)
     f90:	df000715 	stw	fp,28(sp)
     f94:	df000704 	addi	fp,sp,28
     f98:	e13ffe15 	stw	r4,-8(fp)
     f9c:	e17fff15 	stw	r5,-4(fp)
    int h, w;
    int i,j;
    fscanf(f, "%d", &h);
     fa0:	e0bffb04 	addi	r2,fp,-20
     fa4:	e13ffe17 	ldw	r4,-8(fp)
     fa8:	01400074 	movhi	r5,1
     fac:	29538904 	addi	r5,r5,20004
     fb0:	100d883a 	mov	r6,r2
     fb4:	000113c0 	call	113c <fscanf>
    fscanf(f, "%d", &w);
     fb8:	e0bffc04 	addi	r2,fp,-16
     fbc:	e13ffe17 	ldw	r4,-8(fp)
     fc0:	01400074 	movhi	r5,1
     fc4:	29538904 	addi	r5,r5,20004
     fc8:	100d883a 	mov	r6,r2
     fcc:	000113c0 	call	113c <fscanf>
    h = h > H?H:h;
     fd0:	e0bffb17 	ldw	r2,-20(fp)
     fd4:	10c05050 	cmplti	r3,r2,321
     fd8:	1800011e 	bne	r3,zero,fe0 <load+0x58>
     fdc:	00805004 	movi	r2,320
     fe0:	e0bffb15 	stw	r2,-20(fp)
    w = w > W?W:w;
     fe4:	e0bffc17 	ldw	r2,-16(fp)
     fe8:	10c03c50 	cmplti	r3,r2,241
     fec:	1800011e 	bne	r3,zero,ff4 <load+0x6c>
     ff0:	00803c04 	movi	r2,240
     ff4:	e0bffc15 	stw	r2,-16(fp)
    for(i = 0; i < h; i++) {
     ff8:	e03ff915 	stw	zero,-28(fp)
     ffc:	00002d06 	br	10b4 <load+0x12c>
        for(j = 0; j < w; j++) {
    1000:	e03ffa15 	stw	zero,-24(fp)
    1004:	00001306 	br	1054 <load+0xcc>
            int p;
            fscanf(f, "%u", &p);
    1008:	e0bffd04 	addi	r2,fp,-12
    100c:	e13ffe17 	ldw	r4,-8(fp)
    1010:	01400074 	movhi	r5,1
    1014:	29538a04 	addi	r5,r5,20008
    1018:	100d883a 	mov	r6,r2
    101c:	000113c0 	call	113c <fscanf>
            iframe[i][j] = p;
    1020:	e0bff917 	ldw	r2,-28(fp)
    1024:	10807824 	muli	r2,r2,480
    1028:	e0ffff17 	ldw	r3,-4(fp)
    102c:	1889883a 	add	r4,r3,r2
    1030:	e0bffd17 	ldw	r2,-12(fp)
    1034:	1007883a 	mov	r3,r2
    1038:	e0bffa17 	ldw	r2,-24(fp)
    103c:	1085883a 	add	r2,r2,r2
    1040:	2085883a 	add	r2,r4,r2
    1044:	10c0000d 	sth	r3,0(r2)
    fscanf(f, "%d", &h);
    fscanf(f, "%d", &w);
    h = h > H?H:h;
    w = w > W?W:w;
    for(i = 0; i < h; i++) {
        for(j = 0; j < w; j++) {
    1048:	e0bffa17 	ldw	r2,-24(fp)
    104c:	10800044 	addi	r2,r2,1
    1050:	e0bffa15 	stw	r2,-24(fp)
    1054:	e0bffc17 	ldw	r2,-16(fp)
    1058:	e0fffa17 	ldw	r3,-24(fp)
    105c:	18bfea16 	blt	r3,r2,1008 <__alt_data_end+0xfe001008>
            int p;
            fscanf(f, "%u", &p);
            iframe[i][j] = p;
        }
        for(j = w; j<W; j++) {
    1060:	e0bffc17 	ldw	r2,-16(fp)
    1064:	e0bffa15 	stw	r2,-24(fp)
    1068:	00000c06 	br	109c <load+0x114>
            iframe[i][j] = 65535;
    106c:	e0bff917 	ldw	r2,-28(fp)
    1070:	10807824 	muli	r2,r2,480
    1074:	e0ffff17 	ldw	r3,-4(fp)
    1078:	1887883a 	add	r3,r3,r2
    107c:	e0bffa17 	ldw	r2,-24(fp)
    1080:	1085883a 	add	r2,r2,r2
    1084:	1885883a 	add	r2,r3,r2
    1088:	00ffffc4 	movi	r3,-1
    108c:	10c0000d 	sth	r3,0(r2)
        for(j = 0; j < w; j++) {
            int p;
            fscanf(f, "%u", &p);
            iframe[i][j] = p;
        }
        for(j = w; j<W; j++) {
    1090:	e0bffa17 	ldw	r2,-24(fp)
    1094:	10800044 	addi	r2,r2,1
    1098:	e0bffa15 	stw	r2,-24(fp)
    109c:	e0bffa17 	ldw	r2,-24(fp)
    10a0:	10803c10 	cmplti	r2,r2,240
    10a4:	103ff11e 	bne	r2,zero,106c <__alt_data_end+0xfe00106c>
    int i,j;
    fscanf(f, "%d", &h);
    fscanf(f, "%d", &w);
    h = h > H?H:h;
    w = w > W?W:w;
    for(i = 0; i < h; i++) {
    10a8:	e0bff917 	ldw	r2,-28(fp)
    10ac:	10800044 	addi	r2,r2,1
    10b0:	e0bff915 	stw	r2,-28(fp)
    10b4:	e0bffb17 	ldw	r2,-20(fp)
    10b8:	e0fff917 	ldw	r3,-28(fp)
    10bc:	18bfd016 	blt	r3,r2,1000 <__alt_data_end+0xfe001000>
        }
        for(j = w; j<W; j++) {
            iframe[i][j] = 65535;
        }
    }
    for(i = h; i<H; i++) {
    10c0:	e0bffb17 	ldw	r2,-20(fp)
    10c4:	e0bff915 	stw	r2,-28(fp)
    10c8:	00001406 	br	111c <load+0x194>
        for(j = 0; j < W; j++) {
    10cc:	e03ffa15 	stw	zero,-24(fp)
    10d0:	00000c06 	br	1104 <load+0x17c>
            iframe[i][j] = 65535;
    10d4:	e0bff917 	ldw	r2,-28(fp)
    10d8:	10807824 	muli	r2,r2,480
    10dc:	e0ffff17 	ldw	r3,-4(fp)
    10e0:	1887883a 	add	r3,r3,r2
    10e4:	e0bffa17 	ldw	r2,-24(fp)
    10e8:	1085883a 	add	r2,r2,r2
    10ec:	1885883a 	add	r2,r3,r2
    10f0:	00ffffc4 	movi	r3,-1
    10f4:	10c0000d 	sth	r3,0(r2)
        for(j = w; j<W; j++) {
            iframe[i][j] = 65535;
        }
    }
    for(i = h; i<H; i++) {
        for(j = 0; j < W; j++) {
    10f8:	e0bffa17 	ldw	r2,-24(fp)
    10fc:	10800044 	addi	r2,r2,1
    1100:	e0bffa15 	stw	r2,-24(fp)
    1104:	e0bffa17 	ldw	r2,-24(fp)
    1108:	10803c10 	cmplti	r2,r2,240
    110c:	103ff11e 	bne	r2,zero,10d4 <__alt_data_end+0xfe0010d4>
        }
        for(j = w; j<W; j++) {
            iframe[i][j] = 65535;
        }
    }
    for(i = h; i<H; i++) {
    1110:	e0bff917 	ldw	r2,-28(fp)
    1114:	10800044 	addi	r2,r2,1
    1118:	e0bff915 	stw	r2,-28(fp)
    111c:	e0bff917 	ldw	r2,-28(fp)
    1120:	10805010 	cmplti	r2,r2,320
    1124:	103fe91e 	bne	r2,zero,10cc <__alt_data_end+0xfe0010cc>
        for(j = 0; j < W; j++) {
            iframe[i][j] = 65535;
        }
    }
}
    1128:	e037883a 	mov	sp,fp
    112c:	dfc00117 	ldw	ra,4(sp)
    1130:	df000017 	ldw	fp,0(sp)
    1134:	dec00204 	addi	sp,sp,8
    1138:	f800283a 	ret

0000113c <fscanf>:
    113c:	defffd04 	addi	sp,sp,-12
    1140:	2005883a 	mov	r2,r4
    1144:	dfc00015 	stw	ra,0(sp)
    1148:	d9800115 	stw	r6,4(sp)
    114c:	d9c00215 	stw	r7,8(sp)
    1150:	00c00074 	movhi	r3,1
    1154:	18dbce04 	addi	r3,r3,28472
    1158:	19000017 	ldw	r4,0(r3)
    115c:	280d883a 	mov	r6,r5
    1160:	d9c00104 	addi	r7,sp,4
    1164:	100b883a 	mov	r5,r2
    1168:	00012f00 	call	12f0 <__svfscanf_r>
    116c:	dfc00017 	ldw	ra,0(sp)
    1170:	dec00304 	addi	sp,sp,12
    1174:	f800283a 	ret

00001178 <_fscanf_r>:
    1178:	defffe04 	addi	sp,sp,-8
    117c:	dfc00015 	stw	ra,0(sp)
    1180:	d9c00115 	stw	r7,4(sp)
    1184:	d9c00104 	addi	r7,sp,4
    1188:	00012f00 	call	12f0 <__svfscanf_r>
    118c:	dfc00017 	ldw	ra,0(sp)
    1190:	dec00204 	addi	sp,sp,8
    1194:	f800283a 	ret

00001198 <_puts_r>:
    1198:	defff604 	addi	sp,sp,-40
    119c:	dc400815 	stw	r17,32(sp)
    11a0:	2023883a 	mov	r17,r4
    11a4:	2809883a 	mov	r4,r5
    11a8:	dc000715 	stw	r16,28(sp)
    11ac:	dfc00915 	stw	ra,36(sp)
    11b0:	2821883a 	mov	r16,r5
    11b4:	00012640 	call	1264 <strlen>
    11b8:	00c00074 	movhi	r3,1
    11bc:	18dbce04 	addi	r3,r3,28472
    11c0:	18c00017 	ldw	r3,0(r3)
    11c4:	11000044 	addi	r4,r2,1
    11c8:	d8800115 	stw	r2,4(sp)
    11cc:	18c00217 	ldw	r3,8(r3)
    11d0:	00800074 	movhi	r2,1
    11d4:	10938c04 	addi	r2,r2,20016
    11d8:	d8800215 	stw	r2,8(sp)
    11dc:	1940030b 	ldhu	r5,12(r3)
    11e0:	00800044 	movi	r2,1
    11e4:	d8800315 	stw	r2,12(sp)
    11e8:	00800084 	movi	r2,2
    11ec:	d8800515 	stw	r2,20(sp)
    11f0:	dc000015 	stw	r16,0(sp)
    11f4:	d9000615 	stw	r4,24(sp)
    11f8:	dec00415 	stw	sp,16(sp)
    11fc:	2888000c 	andi	r2,r5,8192
    1200:	1000061e 	bne	r2,zero,121c <_puts_r+0x84>
    1204:	19001917 	ldw	r4,100(r3)
    1208:	00b7ffc4 	movi	r2,-8193
    120c:	29480014 	ori	r5,r5,8192
    1210:	2084703a 	and	r2,r4,r2
    1214:	1940030d 	sth	r5,12(r3)
    1218:	18801915 	stw	r2,100(r3)
    121c:	89400217 	ldw	r5,8(r17)
    1220:	8809883a 	mov	r4,r17
    1224:	d9800404 	addi	r6,sp,16
    1228:	00035cc0 	call	35cc <__sfvwrite_r>
    122c:	1000061e 	bne	r2,zero,1248 <_puts_r+0xb0>
    1230:	00800284 	movi	r2,10
    1234:	dfc00917 	ldw	ra,36(sp)
    1238:	dc400817 	ldw	r17,32(sp)
    123c:	dc000717 	ldw	r16,28(sp)
    1240:	dec00a04 	addi	sp,sp,40
    1244:	f800283a 	ret
    1248:	00bfffc4 	movi	r2,-1
    124c:	003ff906 	br	1234 <__alt_data_end+0xfe001234>

00001250 <puts>:
    1250:	00800074 	movhi	r2,1
    1254:	109bce04 	addi	r2,r2,28472
    1258:	200b883a 	mov	r5,r4
    125c:	11000017 	ldw	r4,0(r2)
    1260:	00011981 	jmpi	1198 <_puts_r>

00001264 <strlen>:
    1264:	208000cc 	andi	r2,r4,3
    1268:	10001d26 	beq	r2,zero,12e0 <strlen+0x7c>
    126c:	20800007 	ldb	r2,0(r4)
    1270:	10001d26 	beq	r2,zero,12e8 <strlen+0x84>
    1274:	2005883a 	mov	r2,r4
    1278:	00000206 	br	1284 <strlen+0x20>
    127c:	10c00007 	ldb	r3,0(r2)
    1280:	18001526 	beq	r3,zero,12d8 <strlen+0x74>
    1284:	10800044 	addi	r2,r2,1
    1288:	10c000cc 	andi	r3,r2,3
    128c:	183ffb1e 	bne	r3,zero,127c <__alt_data_end+0xfe00127c>
    1290:	10c00017 	ldw	r3,0(r2)
    1294:	01ffbff4 	movhi	r7,65279
    1298:	39ffbfc4 	addi	r7,r7,-257
    129c:	01a02074 	movhi	r6,32897
    12a0:	31a02004 	addi	r6,r6,-32640
    12a4:	00000206 	br	12b0 <strlen+0x4c>
    12a8:	10800104 	addi	r2,r2,4
    12ac:	10c00017 	ldw	r3,0(r2)
    12b0:	19cb883a 	add	r5,r3,r7
    12b4:	00c6303a 	nor	r3,zero,r3
    12b8:	28c6703a 	and	r3,r5,r3
    12bc:	1986703a 	and	r3,r3,r6
    12c0:	183ff926 	beq	r3,zero,12a8 <__alt_data_end+0xfe0012a8>
    12c4:	10c00007 	ldb	r3,0(r2)
    12c8:	18000326 	beq	r3,zero,12d8 <strlen+0x74>
    12cc:	10800044 	addi	r2,r2,1
    12d0:	10c00007 	ldb	r3,0(r2)
    12d4:	183ffd1e 	bne	r3,zero,12cc <__alt_data_end+0xfe0012cc>
    12d8:	1105c83a 	sub	r2,r2,r4
    12dc:	f800283a 	ret
    12e0:	2005883a 	mov	r2,r4
    12e4:	003fea06 	br	1290 <__alt_data_end+0xfe001290>
    12e8:	0005883a 	mov	r2,zero
    12ec:	f800283a 	ret

000012f0 <__svfscanf_r>:
    12f0:	deff4b04 	addi	sp,sp,-724
    12f4:	df00b315 	stw	fp,716(sp)
    12f8:	dd40b015 	stw	r21,704(sp)
    12fc:	dc00ab15 	stw	r16,684(sp)
    1300:	2839883a 	mov	fp,r5
    1304:	dfc0b415 	stw	ra,720(sp)
    1308:	ddc0b215 	stw	r23,712(sp)
    130c:	dd80b115 	stw	r22,708(sp)
    1310:	dd00af15 	stw	r20,700(sp)
    1314:	dcc0ae15 	stw	r19,696(sp)
    1318:	dc80ad15 	stw	r18,692(sp)
    131c:	dc40ac15 	stw	r17,688(sp)
    1320:	202b883a 	mov	r21,r4
    1324:	3021883a 	mov	r16,r6
    1328:	d9c09c15 	stw	r7,624(sp)
    132c:	0002f000 	call	2f00 <__sfp_lock_acquire>
    1330:	e080030b 	ldhu	r2,12(fp)
    1334:	10c8000c 	andi	r3,r2,8192
    1338:	1800061e 	bne	r3,zero,1354 <__svfscanf_r+0x64>
    133c:	e1001917 	ldw	r4,100(fp)
    1340:	00f7ffc4 	movi	r3,-8193
    1344:	10880014 	ori	r2,r2,8192
    1348:	20c6703a 	and	r3,r4,r3
    134c:	e080030d 	sth	r2,12(fp)
    1350:	e0c01915 	stw	r3,100(fp)
    1354:	80800007 	ldb	r2,0(r16)
    1358:	0029883a 	mov	r20,zero
    135c:	d800a015 	stw	zero,640(sp)
    1360:	d8009e15 	stw	zero,632(sp)
    1364:	d8009f15 	stw	zero,636(sp)
    1368:	d8809b15 	stw	r2,620(sp)
    136c:	a023883a 	mov	r17,r20
    1370:	05800074 	movhi	r22,1
    1374:	b59bcf04 	addi	r22,r22,28476
    1378:	85000044 	addi	r20,r16,1
    137c:	10001e26 	beq	r2,zero,13f8 <__svfscanf_r+0x108>
    1380:	b0c00017 	ldw	r3,0(r22)
    1384:	1889883a 	add	r4,r3,r2
    1388:	21000043 	ldbu	r4,1(r4)
    138c:	2100020c 	andi	r4,r4,8
    1390:	20001c26 	beq	r4,zero,1404 <__svfscanf_r+0x114>
    1394:	e0800117 	ldw	r2,4(fp)
    1398:	00800e0e 	bge	zero,r2,13d4 <__svfscanf_r+0xe4>
    139c:	e0c00017 	ldw	r3,0(fp)
    13a0:	b1000017 	ldw	r4,0(r22)
    13a4:	18800003 	ldbu	r2,0(r3)
    13a8:	2085883a 	add	r2,r4,r2
    13ac:	10800043 	ldbu	r2,1(r2)
    13b0:	1080020c 	andi	r2,r2,8
    13b4:	10000b26 	beq	r2,zero,13e4 <__svfscanf_r+0xf4>
    13b8:	e0800117 	ldw	r2,4(fp)
    13bc:	18c00044 	addi	r3,r3,1
    13c0:	e0c00015 	stw	r3,0(fp)
    13c4:	10bfffc4 	addi	r2,r2,-1
    13c8:	e0800115 	stw	r2,4(fp)
    13cc:	8c400044 	addi	r17,r17,1
    13d0:	00bff216 	blt	zero,r2,139c <__alt_data_end+0xfe00139c>
    13d4:	a809883a 	mov	r4,r21
    13d8:	e00b883a 	mov	r5,fp
    13dc:	00050a00 	call	50a0 <__srefill_r>
    13e0:	103fee26 	beq	r2,zero,139c <__alt_data_end+0xfe00139c>
    13e4:	a021883a 	mov	r16,r20
    13e8:	80800007 	ldb	r2,0(r16)
    13ec:	85000044 	addi	r20,r16,1
    13f0:	d8809b15 	stw	r2,620(sp)
    13f4:	103fe21e 	bne	r2,zero,1380 <__alt_data_end+0xfe001380>
    13f8:	0002f040 	call	2f04 <__sfp_lock_release>
    13fc:	d8809f17 	ldw	r2,636(sp)
    1400:	00022206 	br	1c8c <__svfscanf_r+0x99c>
    1404:	01000944 	movi	r4,37
    1408:	1100891e 	bne	r2,r4,1630 <__svfscanf_r+0x340>
    140c:	81000043 	ldbu	r4,1(r16)
    1410:	0027883a 	mov	r19,zero
    1414:	002f883a 	mov	r23,zero
    1418:	01401e04 	movi	r5,120
    141c:	01801b04 	movi	r6,108
    1420:	20803fcc 	andi	r2,r4,255
    1424:	a4000044 	addi	r16,r20,1
    1428:	2881fa36 	bltu	r5,r2,1c14 <__svfscanf_r+0x924>
    142c:	1085883a 	add	r2,r2,r2
    1430:	1085883a 	add	r2,r2,r2
    1434:	01c00034 	movhi	r7,0
    1438:	39c51204 	addi	r7,r7,5192
    143c:	11c5883a 	add	r2,r2,r7
    1440:	10800017 	ldw	r2,0(r2)
    1444:	1000683a 	jmp	r2
    1448:	00001c84 	movi	zero,114
    144c:	00001c14 	movui	zero,112
    1450:	00001c14 	movui	zero,112
    1454:	00001c14 	movui	zero,112
    1458:	00001c14 	movui	zero,112
    145c:	00001c14 	movui	zero,112
    1460:	00001c14 	movui	zero,112
    1464:	00001c14 	movui	zero,112
    1468:	00001c14 	movui	zero,112
    146c:	00001c14 	movui	zero,112
    1470:	00001c14 	movui	zero,112
    1474:	00001c14 	movui	zero,112
    1478:	00001c14 	movui	zero,112
    147c:	00001c14 	movui	zero,112
    1480:	00001c14 	movui	zero,112
    1484:	00001c14 	movui	zero,112
    1488:	00001c14 	movui	zero,112
    148c:	00001c14 	movui	zero,112
    1490:	00001c14 	movui	zero,112
    1494:	00001c14 	movui	zero,112
    1498:	00001c14 	movui	zero,112
    149c:	00001c14 	movui	zero,112
    14a0:	00001c14 	movui	zero,112
    14a4:	00001c14 	movui	zero,112
    14a8:	00001c14 	movui	zero,112
    14ac:	00001c14 	movui	zero,112
    14b0:	00001c14 	movui	zero,112
    14b4:	00001c14 	movui	zero,112
    14b8:	00001c14 	movui	zero,112
    14bc:	00001c14 	movui	zero,112
    14c0:	00001c14 	movui	zero,112
    14c4:	00001c14 	movui	zero,112
    14c8:	00001c14 	movui	zero,112
    14cc:	00001c14 	movui	zero,112
    14d0:	00001c14 	movui	zero,112
    14d4:	00001c14 	movui	zero,112
    14d8:	00001c14 	movui	zero,112
    14dc:	0000162c 	andhi	zero,zero,88
    14e0:	00001c14 	movui	zero,112
    14e4:	00001c14 	movui	zero,112
    14e8:	00001c14 	movui	zero,112
    14ec:	00001c14 	movui	zero,112
    14f0:	00001bfc 	xorhi	zero,zero,111
    14f4:	00001c14 	movui	zero,112
    14f8:	00001c14 	movui	zero,112
    14fc:	00001c14 	movui	zero,112
    1500:	00001c14 	movui	zero,112
    1504:	00001c14 	movui	zero,112
    1508:	00001cf4 	movhi	zero,115
    150c:	00001cf4 	movhi	zero,115
    1510:	00001cf4 	movhi	zero,115
    1514:	00001cf4 	movhi	zero,115
    1518:	00001cf4 	movhi	zero,115
    151c:	00001cf4 	movhi	zero,115
    1520:	00001cf4 	movhi	zero,115
    1524:	00001cf4 	movhi	zero,115
    1528:	00001cf4 	movhi	zero,115
    152c:	00001cf4 	movhi	zero,115
    1530:	00001c14 	movui	zero,112
    1534:	00001c14 	movui	zero,112
    1538:	00001c14 	movui	zero,112
    153c:	00001c14 	movui	zero,112
    1540:	00001c14 	movui	zero,112
    1544:	00001c14 	movui	zero,112
    1548:	00001c14 	movui	zero,112
    154c:	00001c14 	movui	zero,112
    1550:	00001c14 	movui	zero,112
    1554:	00001c14 	movui	zero,112
    1558:	00001cd4 	movui	zero,115
    155c:	00001ccc 	andi	zero,zero,115
    1560:	00001c14 	movui	zero,112
    1564:	00001ccc 	andi	zero,zero,115
    1568:	00001c14 	movui	zero,112
    156c:	00001c14 	movui	zero,112
    1570:	00001c14 	movui	zero,112
    1574:	00001c14 	movui	zero,112
    1578:	00001cbc 	xorhi	zero,zero,114
    157c:	00001c14 	movui	zero,112
    1580:	00001c14 	movui	zero,112
    1584:	00001e3c 	xorhi	zero,zero,120
    1588:	00001c14 	movui	zero,112
    158c:	00001c14 	movui	zero,112
    1590:	00001c14 	movui	zero,112
    1594:	00001c14 	movui	zero,112
    1598:	00001c14 	movui	zero,112
    159c:	00001c14 	movui	zero,112
    15a0:	00001c14 	movui	zero,112
    15a4:	00001c14 	movui	zero,112
    15a8:	00001e1c 	xori	zero,zero,120
    15ac:	00001c14 	movui	zero,112
    15b0:	00001c14 	movui	zero,112
    15b4:	00001e00 	call	1e0 <_start+0x24>
    15b8:	00001c14 	movui	zero,112
    15bc:	00001c14 	movui	zero,112
    15c0:	00001c14 	movui	zero,112
    15c4:	00001c14 	movui	zero,112
    15c8:	00001c14 	movui	zero,112
    15cc:	00001c14 	movui	zero,112
    15d0:	00001c14 	movui	zero,112
    15d4:	00001df4 	movhi	zero,119
    15d8:	00001dd8 	cmpnei	zero,zero,119
    15dc:	00001ccc 	andi	zero,zero,115
    15e0:	00001ccc 	andi	zero,zero,115
    15e4:	00001ccc 	andi	zero,zero,115
    15e8:	00001dc8 	cmpgei	zero,zero,119
    15ec:	00001668 	cmpgeui	zero,zero,89
    15f0:	00001c14 	movui	zero,112
    15f4:	00001c14 	movui	zero,112
    15f8:	00001da8 	cmpgeui	zero,zero,118
    15fc:	00001c14 	movui	zero,112
    1600:	00001d78 	rdprs	zero,zero,117
    1604:	00001d5c 	xori	zero,zero,117
    1608:	00001d3c 	xorhi	zero,zero,116
    160c:	00001c14 	movui	zero,112
    1610:	00001c14 	movui	zero,112
    1614:	00001d34 	movhi	zero,116
    1618:	00001c14 	movui	zero,112
    161c:	00001d18 	cmpnei	zero,zero,116
    1620:	00001c14 	movui	zero,112
    1624:	00001c14 	movui	zero,112
    1628:	00001e1c 	xori	zero,zero,120
    162c:	8029883a 	mov	r20,r16
    1630:	e0800117 	ldw	r2,4(fp)
    1634:	00845e0e 	bge	zero,r2,27b0 <__svfscanf_r+0x14c0>
    1638:	e0800017 	ldw	r2,0(fp)
    163c:	a0ffffc3 	ldbu	r3,-1(r20)
    1640:	11000003 	ldbu	r4,0(r2)
    1644:	20ff6c1e 	bne	r4,r3,13f8 <__alt_data_end+0xfe0013f8>
    1648:	e0c00117 	ldw	r3,4(fp)
    164c:	10800044 	addi	r2,r2,1
    1650:	e0800015 	stw	r2,0(fp)
    1654:	18bfffc4 	addi	r2,r3,-1
    1658:	e0800115 	stw	r2,4(fp)
    165c:	8c400044 	addi	r17,r17,1
    1660:	a021883a 	mov	r16,r20
    1664:	003f6006 	br	13e8 <__alt_data_end+0xfe0013e8>
    1668:	00c00034 	movhi	r3,0
    166c:	18db4a04 	addi	r3,r3,27944
    1670:	d8c0a015 	stw	r3,640(sp)
    1674:	d8009e15 	stw	zero,632(sp)
    1678:	048000c4 	movi	r18,3
    167c:	e0800117 	ldw	r2,4(fp)
    1680:	0081740e 	bge	zero,r2,1c54 <__svfscanf_r+0x964>
    1684:	9880100c 	andi	r2,r19,64
    1688:	10007626 	beq	r2,zero,1864 <__svfscanf_r+0x574>
    168c:	00800084 	movi	r2,2
    1690:	90825326 	beq	r18,r2,1fe0 <__svfscanf_r+0xcf0>
    1694:	14822f0e 	bge	r2,r18,1f54 <__svfscanf_r+0xc64>
    1698:	008000c4 	movi	r2,3
    169c:	90828826 	beq	r18,r2,20c0 <__svfscanf_r+0xdd0>
    16a0:	00800104 	movi	r2,4
    16a4:	90826b1e 	bne	r18,r2,2054 <__svfscanf_r+0xd64>
    16a8:	b8bfffc4 	addi	r2,r23,-1
    16ac:	00c05704 	movi	r3,348
    16b0:	1883492e 	bgeu	r3,r2,23d8 <__svfscanf_r+0x10e8>
    16b4:	bdffa8c4 	addi	r23,r23,-349
    16b8:	ddc0a315 	stw	r23,652(sp)
    16bc:	05c05744 	movi	r23,349
    16c0:	9c81e014 	ori	r18,r19,1920
    16c4:	0029883a 	mov	r20,zero
    16c8:	d800a415 	stw	zero,656(sp)
    16cc:	d800a215 	stw	zero,648(sp)
    16d0:	d8009d15 	stw	zero,628(sp)
    16d4:	d800a115 	stw	zero,644(sp)
    16d8:	dcc00104 	addi	r19,sp,4
    16dc:	0007883a 	mov	r3,zero
    16e0:	01c01384 	movi	r7,78
    16e4:	037e1fc4 	movi	r13,-1921
    16e8:	e1800017 	ldw	r6,0(fp)
    16ec:	31400003 	ldbu	r5,0(r6)
    16f0:	28bff544 	addi	r2,r5,-43
    16f4:	10803fcc 	andi	r2,r2,255
    16f8:	38807c36 	bltu	r7,r2,18ec <__svfscanf_r+0x5fc>
    16fc:	1085883a 	add	r2,r2,r2
    1700:	1085883a 	add	r2,r2,r2
    1704:	01000034 	movhi	r4,0
    1708:	2105c604 	addi	r4,r4,5912
    170c:	1105883a 	add	r2,r2,r4
    1710:	10800017 	ldw	r2,0(r2)
    1714:	1000683a 	jmp	r2
    1718:	00001a74 	movhi	zero,105
    171c:	000018ec 	andhi	zero,zero,99
    1720:	00001a74 	movhi	zero,105
    1724:	00001a58 	cmpnei	zero,zero,105
    1728:	000018ec 	andhi	zero,zero,99
    172c:	00001b78 	rdprs	zero,zero,109
    1730:	000018a4 	muli	zero,zero,98
    1734:	000018a4 	muli	zero,zero,98
    1738:	000018a4 	muli	zero,zero,98
    173c:	000018a4 	muli	zero,zero,98
    1740:	000018a4 	muli	zero,zero,98
    1744:	000018a4 	muli	zero,zero,98
    1748:	000018a4 	muli	zero,zero,98
    174c:	000018a4 	muli	zero,zero,98
    1750:	000018a4 	muli	zero,zero,98
    1754:	000018ec 	andhi	zero,zero,99
    1758:	000018ec 	andhi	zero,zero,99
    175c:	000018ec 	andhi	zero,zero,99
    1760:	000018ec 	andhi	zero,zero,99
    1764:	000018ec 	andhi	zero,zero,99
    1768:	000018ec 	andhi	zero,zero,99
    176c:	000018ec 	andhi	zero,zero,99
    1770:	00001b68 	cmpgeui	zero,zero,109
    1774:	000018ec 	andhi	zero,zero,99
    1778:	000018ec 	andhi	zero,zero,99
    177c:	000018ec 	andhi	zero,zero,99
    1780:	00001b20 	cmpeqi	zero,zero,108
    1784:	00001b04 	movi	zero,108
    1788:	000018ec 	andhi	zero,zero,99
    178c:	000018ec 	andhi	zero,zero,99
    1790:	00001ad4 	movui	zero,107
    1794:	000018ec 	andhi	zero,zero,99
    1798:	000018ec 	andhi	zero,zero,99
    179c:	000018ec 	andhi	zero,zero,99
    17a0:	000018ec 	andhi	zero,zero,99
    17a4:	00001aa4 	muli	zero,zero,106
    17a8:	000018ec 	andhi	zero,zero,99
    17ac:	000018ec 	andhi	zero,zero,99
    17b0:	000018ec 	andhi	zero,zero,99
    17b4:	000018ec 	andhi	zero,zero,99
    17b8:	000018ec 	andhi	zero,zero,99
    17bc:	00001a88 	cmpgei	zero,zero,106
    17c0:	000018ec 	andhi	zero,zero,99
    17c4:	000018ec 	andhi	zero,zero,99
    17c8:	000018ec 	andhi	zero,zero,99
    17cc:	000018ec 	andhi	zero,zero,99
    17d0:	00001a3c 	xorhi	zero,zero,104
    17d4:	000018ec 	andhi	zero,zero,99
    17d8:	000018ec 	andhi	zero,zero,99
    17dc:	000018ec 	andhi	zero,zero,99
    17e0:	000018ec 	andhi	zero,zero,99
    17e4:	000018ec 	andhi	zero,zero,99
    17e8:	000018ec 	andhi	zero,zero,99
    17ec:	000018ec 	andhi	zero,zero,99
    17f0:	00001b68 	cmpgeui	zero,zero,109
    17f4:	000018ec 	andhi	zero,zero,99
    17f8:	000018ec 	andhi	zero,zero,99
    17fc:	000018ec 	andhi	zero,zero,99
    1800:	00001b20 	cmpeqi	zero,zero,108
    1804:	00001b04 	movi	zero,108
    1808:	000018ec 	andhi	zero,zero,99
    180c:	000018ec 	andhi	zero,zero,99
    1810:	00001ad4 	movui	zero,107
    1814:	000018ec 	andhi	zero,zero,99
    1818:	000018ec 	andhi	zero,zero,99
    181c:	000018ec 	andhi	zero,zero,99
    1820:	000018ec 	andhi	zero,zero,99
    1824:	00001aa4 	muli	zero,zero,106
    1828:	000018ec 	andhi	zero,zero,99
    182c:	000018ec 	andhi	zero,zero,99
    1830:	000018ec 	andhi	zero,zero,99
    1834:	000018ec 	andhi	zero,zero,99
    1838:	000018ec 	andhi	zero,zero,99
    183c:	00001a88 	cmpgei	zero,zero,106
    1840:	000018ec 	andhi	zero,zero,99
    1844:	000018ec 	andhi	zero,zero,99
    1848:	000018ec 	andhi	zero,zero,99
    184c:	000018ec 	andhi	zero,zero,99
    1850:	00001a3c 	xorhi	zero,zero,104
    1854:	a809883a 	mov	r4,r21
    1858:	e00b883a 	mov	r5,fp
    185c:	00050a00 	call	50a0 <__srefill_r>
    1860:	1001001e 	bne	r2,zero,1c64 <__svfscanf_r+0x974>
    1864:	b1000017 	ldw	r4,0(r22)
    1868:	e0800017 	ldw	r2,0(fp)
    186c:	00000206 	br	1878 <__svfscanf_r+0x588>
    1870:	10800044 	addi	r2,r2,1
    1874:	e0800015 	stw	r2,0(fp)
    1878:	10c00003 	ldbu	r3,0(r2)
    187c:	20c7883a 	add	r3,r4,r3
    1880:	18c00043 	ldbu	r3,1(r3)
    1884:	18c0020c 	andi	r3,r3,8
    1888:	183f8026 	beq	r3,zero,168c <__alt_data_end+0xfe00168c>
    188c:	e0c00117 	ldw	r3,4(fp)
    1890:	8c400044 	addi	r17,r17,1
    1894:	18ffffc4 	addi	r3,r3,-1
    1898:	e0c00115 	stw	r3,4(fp)
    189c:	00fff416 	blt	zero,r3,1870 <__alt_data_end+0xfe001870>
    18a0:	003fec06 	br	1854 <__alt_data_end+0xfe001854>
    18a4:	a0803fcc 	andi	r2,r20,255
    18a8:	1080201c 	xori	r2,r2,128
    18ac:	10bfe004 	addi	r2,r2,-128
    18b0:	1885883a 	add	r2,r3,r2
    18b4:	10000d1e 	bne	r2,zero,18ec <__svfscanf_r+0x5fc>
    18b8:	00bf9fc4 	movi	r2,-385
    18bc:	90a4703a 	and	r18,r18,r2
    18c0:	99400005 	stb	r5,0(r19)
    18c4:	9cc00044 	addi	r19,r19,1
    18c8:	e0800117 	ldw	r2,4(fp)
    18cc:	bdffffc4 	addi	r23,r23,-1
    18d0:	8c400044 	addi	r17,r17,1
    18d4:	10bfffc4 	addi	r2,r2,-1
    18d8:	e0800115 	stw	r2,4(fp)
    18dc:	0080b80e 	bge	zero,r2,1bc0 <__svfscanf_r+0x8d0>
    18e0:	31800044 	addi	r6,r6,1
    18e4:	e1800015 	stw	r6,0(fp)
    18e8:	b83f7f1e 	bne	r23,zero,16e8 <__alt_data_end+0xfe0016e8>
    18ec:	d9c09d17 	ldw	r7,628(sp)
    18f0:	3800bf1e 	bne	r7,zero,1bf0 <__svfscanf_r+0x900>
    18f4:	1b3fffc4 	addi	r12,r3,-1
    18f8:	00800044 	movi	r2,1
    18fc:	13045f2e 	bgeu	r2,r12,2a7c <__svfscanf_r+0x178c>
    1900:	a0803fcc 	andi	r2,r20,255
    1904:	1080201c 	xori	r2,r2,128
    1908:	10bfe004 	addi	r2,r2,-128
    190c:	113fffc4 	addi	r4,r2,-1
    1910:	01400184 	movi	r5,6
    1914:	29001636 	bltu	r5,r4,1970 <__svfscanf_r+0x680>
    1918:	01000084 	movi	r4,2
    191c:	2084410e 	bge	r4,r2,2a24 <__svfscanf_r+0x1734>
    1920:	00c000c4 	movi	r3,3
    1924:	10c01226 	beq	r2,r3,1970 <__svfscanf_r+0x680>
    1928:	a02f883a 	mov	r23,r20
    192c:	9829883a 	mov	r20,r19
    1930:	a53fffc4 	addi	r20,r20,-1
    1934:	a1400007 	ldb	r5,0(r20)
    1938:	a809883a 	mov	r4,r21
    193c:	e00d883a 	mov	r6,fp
    1940:	00098300 	call	9830 <_ungetc_r>
    1944:	b8bfffc4 	addi	r2,r23,-1
    1948:	10c03fcc 	andi	r3,r2,255
    194c:	18c0201c 	xori	r3,r3,128
    1950:	a449883a 	add	r4,r20,r17
    1954:	18ffe004 	addi	r3,r3,-128
    1958:	014000c4 	movi	r5,3
    195c:	24c9c83a 	sub	r4,r4,r19
    1960:	102f883a 	mov	r23,r2
    1964:	28fff216 	blt	r5,r3,1930 <__alt_data_end+0xfe001930>
    1968:	2023883a 	mov	r17,r4
    196c:	a027883a 	mov	r19,r20
    1970:	9080400c 	andi	r2,r18,256
    1974:	10001426 	beq	r2,zero,19c8 <__svfscanf_r+0x6d8>
    1978:	9081000c 	andi	r2,r18,1024
    197c:	1004341e 	bne	r2,zero,2a50 <__svfscanf_r+0x1760>
    1980:	997fffc7 	ldb	r5,-1(r19)
    1984:	00801944 	movi	r2,101
    1988:	9d3fffc4 	addi	r20,r19,-1
    198c:	8dffffc4 	addi	r23,r17,-1
    1990:	28800826 	beq	r5,r2,19b4 <__svfscanf_r+0x6c4>
    1994:	00801144 	movi	r2,69
    1998:	28800626 	beq	r5,r2,19b4 <__svfscanf_r+0x6c4>
    199c:	a809883a 	mov	r4,r21
    19a0:	e00d883a 	mov	r6,fp
    19a4:	00098300 	call	9830 <_ungetc_r>
    19a8:	997fff87 	ldb	r5,-2(r19)
    19ac:	9d3fff84 	addi	r20,r19,-2
    19b0:	8dffff84 	addi	r23,r17,-2
    19b4:	a809883a 	mov	r4,r21
    19b8:	e00d883a 	mov	r6,fp
    19bc:	00098300 	call	9830 <_ungetc_r>
    19c0:	b823883a 	mov	r17,r23
    19c4:	a027883a 	mov	r19,r20
    19c8:	9080040c 	andi	r2,r18,16
    19cc:	10015c1e 	bne	r2,zero,1f40 <__svfscanf_r+0xc50>
    19d0:	98000005 	stb	zero,0(r19)
    19d4:	9101800c 	andi	r4,r18,1536
    19d8:	00810004 	movi	r2,1024
    19dc:	20837f26 	beq	r4,r2,27dc <__svfscanf_r+0x14ec>
    19e0:	d8c0a217 	ldw	r3,648(sp)
    19e4:	1803381e 	bne	r3,zero,26c8 <__svfscanf_r+0x13d8>
    19e8:	a809883a 	mov	r4,r21
    19ec:	d9400104 	addi	r5,sp,4
    19f0:	000d883a 	mov	r6,zero
    19f4:	00056b40 	call	56b4 <_strtod_r>
    19f8:	1029883a 	mov	r20,r2
    19fc:	9080004c 	andi	r2,r18,1
    1a00:	1003111e 	bne	r2,zero,2648 <__svfscanf_r+0x1358>
    1a04:	92c0008c 	andi	r11,r18,2
    1a08:	58038426 	beq	r11,zero,281c <__svfscanf_r+0x152c>
    1a0c:	d9409c17 	ldw	r5,624(sp)
    1a10:	28800017 	ldw	r2,0(r5)
    1a14:	29400104 	addi	r5,r5,4
    1a18:	d9409c15 	stw	r5,624(sp)
    1a1c:	15000015 	stw	r20,0(r2)
    1a20:	10c00115 	stw	r3,4(r2)
    1a24:	d8809f17 	ldw	r2,636(sp)
    1a28:	8029883a 	mov	r20,r16
    1a2c:	a021883a 	mov	r16,r20
    1a30:	10800044 	addi	r2,r2,1
    1a34:	d8809f15 	stw	r2,636(sp)
    1a38:	003e6b06 	br	13e8 <__alt_data_end+0xfe0013e8>
    1a3c:	a0803fcc 	andi	r2,r20,255
    1a40:	1080201c 	xori	r2,r2,128
    1a44:	10bfe004 	addi	r2,r2,-128
    1a48:	010001c4 	movi	r4,7
    1a4c:	113fa71e 	bne	r2,r4,18ec <__alt_data_end+0xfe0018ec>
    1a50:	05000204 	movi	r20,8
    1a54:	003f9a06 	br	18c0 <__alt_data_end+0xfe0018c0>
    1a58:	9080800c 	andi	r2,r18,512
    1a5c:	103fa326 	beq	r2,zero,18ec <__alt_data_end+0xfe0018ec>
    1a60:	d9009d17 	ldw	r4,628(sp)
    1a64:	00bf5fc4 	movi	r2,-641
    1a68:	90a4703a 	and	r18,r18,r2
    1a6c:	d900a115 	stw	r4,644(sp)
    1a70:	003f9306 	br	18c0 <__alt_data_end+0xfe0018c0>
    1a74:	9080200c 	andi	r2,r18,128
    1a78:	103f9c26 	beq	r2,zero,18ec <__alt_data_end+0xfe0018ec>
    1a7c:	00bfdfc4 	movi	r2,-129
    1a80:	90a4703a 	and	r18,r18,r2
    1a84:	003f8e06 	br	18c0 <__alt_data_end+0xfe0018c0>
    1a88:	a1003fcc 	andi	r4,r20,255
    1a8c:	2100201c 	xori	r4,r4,128
    1a90:	213fe004 	addi	r4,r4,-128
    1a94:	00800184 	movi	r2,6
    1a98:	20bf941e 	bne	r4,r2,18ec <__alt_data_end+0xfe0018ec>
    1a9c:	050001c4 	movi	r20,7
    1aa0:	003f8706 	br	18c0 <__alt_data_end+0xfe0018c0>
    1aa4:	1802b41e 	bne	r3,zero,2578 <__svfscanf_r+0x1288>
    1aa8:	d9009d17 	ldw	r4,628(sp)
    1aac:	2002f026 	beq	r4,zero,2670 <__svfscanf_r+0x1380>
    1ab0:	a0803fcc 	andi	r2,r20,255
    1ab4:	1080201c 	xori	r2,r2,128
    1ab8:	10bfe004 	addi	r2,r2,-128
    1abc:	01000044 	movi	r4,1
    1ac0:	11000226 	beq	r2,r4,1acc <__svfscanf_r+0x7dc>
    1ac4:	01000104 	movi	r4,4
    1ac8:	113f881e 	bne	r2,r4,18ec <__alt_data_end+0xfe0018ec>
    1acc:	a5000044 	addi	r20,r20,1
    1ad0:	003f7b06 	br	18c0 <__alt_data_end+0xfe0018c0>
    1ad4:	a0803fcc 	andi	r2,r20,255
    1ad8:	1080201c 	xori	r2,r2,128
    1adc:	10bfe004 	addi	r2,r2,-128
    1ae0:	10029f1e 	bne	r2,zero,2560 <__svfscanf_r+0x1270>
    1ae4:	d8809d17 	ldw	r2,628(sp)
    1ae8:	1000411e 	bne	r2,zero,1bf0 <__svfscanf_r+0x900>
    1aec:	9101c00c 	andi	r4,r18,1792
    1af0:	0081c004 	movi	r2,1792
    1af4:	20bf7f1e 	bne	r4,r2,18f4 <__alt_data_end+0xfe0018f4>
    1af8:	9364703a 	and	r18,r18,r13
    1afc:	05000044 	movi	r20,1
    1b00:	003f6f06 	br	18c0 <__alt_data_end+0xfe0018c0>
    1b04:	a1003fcc 	andi	r4,r20,255
    1b08:	2100201c 	xori	r4,r4,128
    1b0c:	213fe004 	addi	r4,r4,-128
    1b10:	00800084 	movi	r2,2
    1b14:	20bf751e 	bne	r4,r2,18ec <__alt_data_end+0xfe0018ec>
    1b18:	050000c4 	movi	r20,3
    1b1c:	003f6806 	br	18c0 <__alt_data_end+0xfe0018c0>
    1b20:	9081400c 	andi	r2,r18,1280
    1b24:	01010004 	movi	r4,1024
    1b28:	11000426 	beq	r2,r4,1b3c <__svfscanf_r+0x84c>
    1b2c:	9104703a 	and	r2,r18,r4
    1b30:	103f6e26 	beq	r2,zero,18ec <__alt_data_end+0xfe0018ec>
    1b34:	d8809d17 	ldw	r2,628(sp)
    1b38:	103f6e26 	beq	r2,zero,18f4 <__alt_data_end+0xfe0018f4>
    1b3c:	9080800c 	andi	r2,r18,512
    1b40:	1000051e 	bne	r2,zero,1b58 <__svfscanf_r+0x868>
    1b44:	d9009d17 	ldw	r4,628(sp)
    1b48:	d880a117 	ldw	r2,644(sp)
    1b4c:	dcc0a415 	stw	r19,656(sp)
    1b50:	2089c83a 	sub	r4,r4,r2
    1b54:	d900a215 	stw	r4,648(sp)
    1b58:	9364703a 	and	r18,r18,r13
    1b5c:	94806014 	ori	r18,r18,384
    1b60:	d8009d15 	stw	zero,628(sp)
    1b64:	003f5606 	br	18c0 <__alt_data_end+0xfe0018c0>
    1b68:	00800044 	movi	r2,1
    1b6c:	18bf5f1e 	bne	r3,r2,18ec <__alt_data_end+0xfe0018ec>
    1b70:	00c00084 	movi	r3,2
    1b74:	003f5206 	br	18c0 <__alt_data_end+0xfe0018c0>
    1b78:	9080400c 	andi	r2,r18,256
    1b7c:	103f4926 	beq	r2,zero,18a4 <__alt_data_end+0xfe0018a4>
    1b80:	d9409d17 	ldw	r5,628(sp)
    1b84:	00bfdfc4 	movi	r2,-129
    1b88:	90a4703a 	and	r18,r18,r2
    1b8c:	d880a317 	ldw	r2,652(sp)
    1b90:	29400044 	addi	r5,r5,1
    1b94:	d9409d15 	stw	r5,628(sp)
    1b98:	103f4b26 	beq	r2,zero,18c8 <__alt_data_end+0xfe0018c8>
    1b9c:	10bfffc4 	addi	r2,r2,-1
    1ba0:	d880a315 	stw	r2,652(sp)
    1ba4:	e0800117 	ldw	r2,4(fp)
    1ba8:	bdc00044 	addi	r23,r23,1
    1bac:	bdffffc4 	addi	r23,r23,-1
    1bb0:	10bfffc4 	addi	r2,r2,-1
    1bb4:	e0800115 	stw	r2,4(fp)
    1bb8:	8c400044 	addi	r17,r17,1
    1bbc:	00bf4816 	blt	zero,r2,18e0 <__alt_data_end+0xfe0018e0>
    1bc0:	a809883a 	mov	r4,r21
    1bc4:	e00b883a 	mov	r5,fp
    1bc8:	d8c0a615 	stw	r3,664(sp)
    1bcc:	d9c0aa15 	stw	r7,680(sp)
    1bd0:	db40a515 	stw	r13,660(sp)
    1bd4:	00050a00 	call	50a0 <__srefill_r>
    1bd8:	d8c0a617 	ldw	r3,664(sp)
    1bdc:	d9c0aa17 	ldw	r7,680(sp)
    1be0:	db40a517 	ldw	r13,660(sp)
    1be4:	103f411e 	bne	r2,zero,18ec <__alt_data_end+0xfe0018ec>
    1be8:	b83ebf1e 	bne	r23,zero,16e8 <__alt_data_end+0xfe0016e8>
    1bec:	003f3f06 	br	18ec <__alt_data_end+0xfe0018ec>
    1bf0:	00bfbfc4 	movi	r2,-257
    1bf4:	90a4703a 	and	r18,r18,r2
    1bf8:	003f3e06 	br	18f4 <__alt_data_end+0xfe0018f4>
    1bfc:	a1000043 	ldbu	r4,1(r20)
    1c00:	8029883a 	mov	r20,r16
    1c04:	9cc00414 	ori	r19,r19,16
    1c08:	20803fcc 	andi	r2,r4,255
    1c0c:	a4000044 	addi	r16,r20,1
    1c10:	28be062e 	bgeu	r5,r2,142c <__alt_data_end+0xfe00142c>
    1c14:	21003fcc 	andi	r4,r4,255
    1c18:	2100201c 	xori	r4,r4,128
    1c1c:	213fe004 	addi	r4,r4,-128
    1c20:	1907883a 	add	r3,r3,r4
    1c24:	18c00043 	ldbu	r3,1(r3)
    1c28:	00800044 	movi	r2,1
    1c2c:	18c000cc 	andi	r3,r3,3
    1c30:	1882e426 	beq	r3,r2,27c4 <__svfscanf_r+0x14d4>
    1c34:	e0800117 	ldw	r2,4(fp)
    1c38:	01000034 	movhi	r4,0
    1c3c:	211b4a04 	addi	r4,r4,27944
    1c40:	01400284 	movi	r5,10
    1c44:	d900a015 	stw	r4,640(sp)
    1c48:	d9409e15 	stw	r5,632(sp)
    1c4c:	048000c4 	movi	r18,3
    1c50:	00be8c16 	blt	zero,r2,1684 <__alt_data_end+0xfe001684>
    1c54:	a809883a 	mov	r4,r21
    1c58:	e00b883a 	mov	r5,fp
    1c5c:	00050a00 	call	50a0 <__srefill_r>
    1c60:	103e8826 	beq	r2,zero,1684 <__alt_data_end+0xfe001684>
    1c64:	0002f040 	call	2f04 <__sfp_lock_release>
    1c68:	d8c09f17 	ldw	r3,636(sp)
    1c6c:	1800b726 	beq	r3,zero,1f4c <__svfscanf_r+0xc5c>
    1c70:	e080030b 	ldhu	r2,12(fp)
    1c74:	1080100c 	andi	r2,r2,64
    1c78:	1000b41e 	bne	r2,zero,1f4c <__svfscanf_r+0xc5c>
    1c7c:	d8809f17 	ldw	r2,636(sp)
    1c80:	00000206 	br	1c8c <__svfscanf_r+0x99c>
    1c84:	0002f040 	call	2f04 <__sfp_lock_release>
    1c88:	00bfffc4 	movi	r2,-1
    1c8c:	dfc0b417 	ldw	ra,720(sp)
    1c90:	df00b317 	ldw	fp,716(sp)
    1c94:	ddc0b217 	ldw	r23,712(sp)
    1c98:	dd80b117 	ldw	r22,708(sp)
    1c9c:	dd40b017 	ldw	r21,704(sp)
    1ca0:	dd00af17 	ldw	r20,700(sp)
    1ca4:	dcc0ae17 	ldw	r19,696(sp)
    1ca8:	dc80ad17 	ldw	r18,692(sp)
    1cac:	dc40ac17 	ldw	r17,688(sp)
    1cb0:	dc00ab17 	ldw	r16,684(sp)
    1cb4:	dec0b504 	addi	sp,sp,724
    1cb8:	f800283a 	ret
    1cbc:	a1000043 	ldbu	r4,1(r20)
    1cc0:	9cc00094 	ori	r19,r19,2
    1cc4:	8029883a 	mov	r20,r16
    1cc8:	003dd506 	br	1420 <__alt_data_end+0xfe001420>
    1ccc:	04800104 	movi	r18,4
    1cd0:	003e6a06 	br	167c <__alt_data_end+0xfe00167c>
    1cd4:	9cc00054 	ori	r19,r19,1
    1cd8:	01c00034 	movhi	r7,0
    1cdc:	39db4a04 	addi	r7,r7,27944
    1ce0:	00800284 	movi	r2,10
    1ce4:	d9c0a015 	stw	r7,640(sp)
    1ce8:	d8809e15 	stw	r2,632(sp)
    1cec:	048000c4 	movi	r18,3
    1cf0:	003e6206 	br	167c <__alt_data_end+0xfe00167c>
    1cf4:	20803fcc 	andi	r2,r4,255
    1cf8:	bdc002a4 	muli	r23,r23,10
    1cfc:	1080201c 	xori	r2,r2,128
    1d00:	10bfe004 	addi	r2,r2,-128
    1d04:	b8af883a 	add	r23,r23,r2
    1d08:	a1000043 	ldbu	r4,1(r20)
    1d0c:	bdfff404 	addi	r23,r23,-48
    1d10:	8029883a 	mov	r20,r16
    1d14:	003dc206 	br	1420 <__alt_data_end+0xfe001420>
    1d18:	01400034 	movhi	r5,0
    1d1c:	295cae04 	addi	r5,r5,29368
    1d20:	01c00284 	movi	r7,10
    1d24:	d940a015 	stw	r5,640(sp)
    1d28:	d9c09e15 	stw	r7,632(sp)
    1d2c:	048000c4 	movi	r18,3
    1d30:	003e5206 	br	167c <__alt_data_end+0xfe00167c>
    1d34:	04800084 	movi	r18,2
    1d38:	003e5006 	br	167c <__alt_data_end+0xfe00167c>
    1d3c:	01000034 	movhi	r4,0
    1d40:	211cae04 	addi	r4,r4,29368
    1d44:	01400404 	movi	r5,16
    1d48:	9cc08814 	ori	r19,r19,544
    1d4c:	d900a015 	stw	r4,640(sp)
    1d50:	d9409e15 	stw	r5,632(sp)
    1d54:	048000c4 	movi	r18,3
    1d58:	003e4806 	br	167c <__alt_data_end+0xfe00167c>
    1d5c:	01000034 	movhi	r4,0
    1d60:	211cae04 	addi	r4,r4,29368
    1d64:	01400204 	movi	r5,8
    1d68:	d900a015 	stw	r4,640(sp)
    1d6c:	d9409e15 	stw	r5,632(sp)
    1d70:	048000c4 	movi	r18,3
    1d74:	003e4106 	br	167c <__alt_data_end+0xfe00167c>
    1d78:	9880040c 	andi	r2,r19,16
    1d7c:	1000701e 	bne	r2,zero,1f40 <__svfscanf_r+0xc50>
    1d80:	9880010c 	andi	r2,r19,4
    1d84:	10029b26 	beq	r2,zero,27f4 <__svfscanf_r+0x1504>
    1d88:	d9c09c17 	ldw	r7,624(sp)
    1d8c:	8029883a 	mov	r20,r16
    1d90:	a021883a 	mov	r16,r20
    1d94:	38800017 	ldw	r2,0(r7)
    1d98:	39c00104 	addi	r7,r7,4
    1d9c:	d9c09c15 	stw	r7,624(sp)
    1da0:	1440000d 	sth	r17,0(r2)
    1da4:	003d9006 	br	13e8 <__alt_data_end+0xfe0013e8>
    1da8:	a1000043 	ldbu	r4,1(r20)
    1dac:	20803fcc 	andi	r2,r4,255
    1db0:	1080201c 	xori	r2,r2,128
    1db4:	10bfe004 	addi	r2,r2,-128
    1db8:	11828426 	beq	r2,r6,27cc <__svfscanf_r+0x14dc>
    1dbc:	9cc00054 	ori	r19,r19,1
    1dc0:	8029883a 	mov	r20,r16
    1dc4:	003d9606 	br	1420 <__alt_data_end+0xfe001420>
    1dc8:	a1000043 	ldbu	r4,1(r20)
    1dcc:	9cc00114 	ori	r19,r19,4
    1dd0:	8029883a 	mov	r20,r16
    1dd4:	003d9206 	br	1420 <__alt_data_end+0xfe001420>
    1dd8:	00800034 	movhi	r2,0
    1ddc:	109b4a04 	addi	r2,r2,27944
    1de0:	00c00284 	movi	r3,10
    1de4:	d880a015 	stw	r2,640(sp)
    1de8:	d8c09e15 	stw	r3,632(sp)
    1dec:	048000c4 	movi	r18,3
    1df0:	003e2206 	br	167c <__alt_data_end+0xfe00167c>
    1df4:	9cc01014 	ori	r19,r19,64
    1df8:	0025883a 	mov	r18,zero
    1dfc:	003e1f06 	br	167c <__alt_data_end+0xfe00167c>
    1e00:	800b883a 	mov	r5,r16
    1e04:	d9005884 	addi	r4,sp,354
    1e08:	00053440 	call	5344 <__sccl>
    1e0c:	1021883a 	mov	r16,r2
    1e10:	9cc01014 	ori	r19,r19,64
    1e14:	04800044 	movi	r18,1
    1e18:	003e1806 	br	167c <__alt_data_end+0xfe00167c>
    1e1c:	00800034 	movhi	r2,0
    1e20:	109cae04 	addi	r2,r2,29368
    1e24:	00c00404 	movi	r3,16
    1e28:	9cc08014 	ori	r19,r19,512
    1e2c:	d880a015 	stw	r2,640(sp)
    1e30:	d8c09e15 	stw	r3,632(sp)
    1e34:	048000c4 	movi	r18,3
    1e38:	003e1006 	br	167c <__alt_data_end+0xfe00167c>
    1e3c:	00c00034 	movhi	r3,0
    1e40:	18dcae04 	addi	r3,r3,29368
    1e44:	01000204 	movi	r4,8
    1e48:	9cc00054 	ori	r19,r19,1
    1e4c:	d8c0a015 	stw	r3,640(sp)
    1e50:	d9009e15 	stw	r4,632(sp)
    1e54:	048000c4 	movi	r18,3
    1e58:	003e0806 	br	167c <__alt_data_end+0xfe00167c>
    1e5c:	d8c09904 	addi	r3,sp,612
    1e60:	9cc0040c 	andi	r19,r19,16
    1e64:	1809883a 	mov	r4,r3
    1e68:	000b883a 	mov	r5,zero
    1e6c:	01800204 	movi	r6,8
    1e70:	dcc0a115 	stw	r19,644(sp)
    1e74:	d8c09d15 	stw	r3,628(sp)
    1e78:	0004a0c0 	call	4a0c <memset>
    1e7c:	dcc0a117 	ldw	r19,644(sp)
    1e80:	98020626 	beq	r19,zero,269c <__svfscanf_r+0x13ac>
    1e84:	0025883a 	mov	r18,zero
    1e88:	dcc0a117 	ldw	r19,644(sp)
    1e8c:	0029883a 	mov	r20,zero
    1e90:	dc00a215 	stw	r16,648(sp)
    1e94:	0003c840 	call	3c84 <__locale_mb_cur_max>
    1e98:	153f7226 	beq	r2,r20,1c64 <__alt_data_end+0xfe001c64>
    1e9c:	e0800017 	ldw	r2,0(fp)
    1ea0:	e1000117 	ldw	r4,4(fp)
    1ea4:	d9c09d17 	ldw	r7,628(sp)
    1ea8:	12400003 	ldbu	r9,0(r2)
    1eac:	213fffc4 	addi	r4,r4,-1
    1eb0:	10800044 	addi	r2,r2,1
    1eb4:	e1000115 	stw	r4,4(fp)
    1eb8:	d9400104 	addi	r5,sp,4
    1ebc:	e0800015 	stw	r2,0(fp)
    1ec0:	2d07883a 	add	r3,r5,r20
    1ec4:	d9c00015 	stw	r7,0(sp)
    1ec8:	a4000044 	addi	r16,r20,1
    1ecc:	1a400005 	stb	r9,0(r3)
    1ed0:	a809883a 	mov	r4,r21
    1ed4:	900b883a 	mov	r5,r18
    1ed8:	d9800104 	addi	r6,sp,4
    1edc:	800f883a 	mov	r7,r16
    1ee0:	00044a00 	call	44a0 <_mbrtowc_r>
    1ee4:	00ffffc4 	movi	r3,-1
    1ee8:	10ff5e26 	beq	r2,r3,1c64 <__alt_data_end+0xfe001c64>
    1eec:	10020e1e 	bne	r2,zero,2728 <__svfscanf_r+0x1438>
    1ef0:	9800011e 	bne	r19,zero,1ef8 <__svfscanf_r+0xc08>
    1ef4:	90000015 	stw	zero,0(r18)
    1ef8:	8c23883a 	add	r17,r17,r16
    1efc:	bdffffc4 	addi	r23,r23,-1
    1f00:	98020d1e 	bne	r19,zero,2738 <__svfscanf_r+0x1448>
    1f04:	94800104 	addi	r18,r18,4
    1f08:	0029883a 	mov	r20,zero
    1f0c:	e0800117 	ldw	r2,4(fp)
    1f10:	00800416 	blt	zero,r2,1f24 <__svfscanf_r+0xc34>
    1f14:	a809883a 	mov	r4,r21
    1f18:	e00b883a 	mov	r5,fp
    1f1c:	00050a00 	call	50a0 <__srefill_r>
    1f20:	1002a11e 	bne	r2,zero,29a8 <__svfscanf_r+0x16b8>
    1f24:	b83fdb1e 	bne	r23,zero,1e94 <__alt_data_end+0xfe001e94>
    1f28:	dc00a217 	ldw	r16,648(sp)
    1f2c:	d8c0a117 	ldw	r3,644(sp)
    1f30:	1800031e 	bne	r3,zero,1f40 <__svfscanf_r+0xc50>
    1f34:	d9009f17 	ldw	r4,636(sp)
    1f38:	21000044 	addi	r4,r4,1
    1f3c:	d9009f15 	stw	r4,636(sp)
    1f40:	8029883a 	mov	r20,r16
    1f44:	a021883a 	mov	r16,r20
    1f48:	003d2706 	br	13e8 <__alt_data_end+0xfe0013e8>
    1f4c:	00bfffc4 	movi	r2,-1
    1f50:	003f4e06 	br	1c8c <__alt_data_end+0xfe001c8c>
    1f54:	00800044 	movi	r2,1
    1f58:	90803e1e 	bne	r18,r2,2054 <__svfscanf_r+0xd64>
    1f5c:	b800011e 	bne	r23,zero,1f64 <__svfscanf_r+0xc74>
    1f60:	05ffffc4 	movi	r23,-1
    1f64:	9cc0040c 	andi	r19,r19,16
    1f68:	98011d26 	beq	r19,zero,23e0 <__svfscanf_r+0x10f0>
    1f6c:	e0800017 	ldw	r2,0(fp)
    1f70:	0025883a 	mov	r18,zero
    1f74:	dd005884 	addi	r20,sp,354
    1f78:	10c00003 	ldbu	r3,0(r2)
    1f7c:	a0c7883a 	add	r3,r20,r3
    1f80:	18c00007 	ldb	r3,0(r3)
    1f84:	18001126 	beq	r3,zero,1fcc <__svfscanf_r+0xcdc>
    1f88:	e0c00117 	ldw	r3,4(fp)
    1f8c:	10800044 	addi	r2,r2,1
    1f90:	94800044 	addi	r18,r18,1
    1f94:	18ffffc4 	addi	r3,r3,-1
    1f98:	e0c00115 	stw	r3,4(fp)
    1f9c:	e0800015 	stw	r2,0(fp)
    1fa0:	bc800b26 	beq	r23,r18,1fd0 <__svfscanf_r+0xce0>
    1fa4:	00fff416 	blt	zero,r3,1f78 <__alt_data_end+0xfe001f78>
    1fa8:	a809883a 	mov	r4,r21
    1fac:	e00b883a 	mov	r5,fp
    1fb0:	00050a00 	call	50a0 <__srefill_r>
    1fb4:	1000061e 	bne	r2,zero,1fd0 <__svfscanf_r+0xce0>
    1fb8:	e0800017 	ldw	r2,0(fp)
    1fbc:	10c00003 	ldbu	r3,0(r2)
    1fc0:	a0c7883a 	add	r3,r20,r3
    1fc4:	18c00007 	ldb	r3,0(r3)
    1fc8:	183fef1e 	bne	r3,zero,1f88 <__alt_data_end+0xfe001f88>
    1fcc:	903d0a26 	beq	r18,zero,13f8 <__alt_data_end+0xfe0013f8>
    1fd0:	8ca3883a 	add	r17,r17,r18
    1fd4:	8029883a 	mov	r20,r16
    1fd8:	a021883a 	mov	r16,r20
    1fdc:	003d0206 	br	13e8 <__alt_data_end+0xfe0013e8>
    1fe0:	b800011e 	bne	r23,zero,1fe8 <__svfscanf_r+0xcf8>
    1fe4:	05ffffc4 	movi	r23,-1
    1fe8:	9880004c 	andi	r2,r19,1
    1fec:	10017a1e 	bne	r2,zero,25d8 <__svfscanf_r+0x12e8>
    1ff0:	9cc0040c 	andi	r19,r19,16
    1ff4:	98012826 	beq	r19,zero,2498 <__svfscanf_r+0x11a8>
    1ff8:	b1000017 	ldw	r4,0(r22)
    1ffc:	e0800017 	ldw	r2,0(fp)
    2000:	0025883a 	mov	r18,zero
    2004:	10c00003 	ldbu	r3,0(r2)
    2008:	20c7883a 	add	r3,r4,r3
    200c:	18c00043 	ldbu	r3,1(r3)
    2010:	18c0020c 	andi	r3,r3,8
    2014:	183fee1e 	bne	r3,zero,1fd0 <__alt_data_end+0xfe001fd0>
    2018:	e0c00117 	ldw	r3,4(fp)
    201c:	10800044 	addi	r2,r2,1
    2020:	94800044 	addi	r18,r18,1
    2024:	18ffffc4 	addi	r3,r3,-1
    2028:	e0c00115 	stw	r3,4(fp)
    202c:	e0800015 	stw	r2,0(fp)
    2030:	bcbfe726 	beq	r23,r18,1fd0 <__alt_data_end+0xfe001fd0>
    2034:	00fff316 	blt	zero,r3,2004 <__alt_data_end+0xfe002004>
    2038:	a809883a 	mov	r4,r21
    203c:	e00b883a 	mov	r5,fp
    2040:	00050a00 	call	50a0 <__srefill_r>
    2044:	103fe21e 	bne	r2,zero,1fd0 <__alt_data_end+0xfe001fd0>
    2048:	b1000017 	ldw	r4,0(r22)
    204c:	e0800017 	ldw	r2,0(fp)
    2050:	003fec06 	br	2004 <__alt_data_end+0xfe002004>
    2054:	b800011e 	bne	r23,zero,205c <__svfscanf_r+0xd6c>
    2058:	05c00044 	movi	r23,1
    205c:	9880004c 	andi	r2,r19,1
    2060:	103f7e1e 	bne	r2,zero,1e5c <__alt_data_end+0xfe001e5c>
    2064:	9cc0040c 	andi	r19,r19,16
    2068:	9801b926 	beq	r19,zero,2750 <__svfscanf_r+0x1460>
    206c:	0025883a 	mov	r18,zero
    2070:	00000806 	br	2094 <__svfscanf_r+0xda4>
    2074:	1887883a 	add	r3,r3,r2
    2078:	a809883a 	mov	r4,r21
    207c:	e00b883a 	mov	r5,fp
    2080:	e0c00015 	stw	r3,0(fp)
    2084:	90a5883a 	add	r18,r18,r2
    2088:	b8afc83a 	sub	r23,r23,r2
    208c:	00050a00 	call	50a0 <__srefill_r>
    2090:	1001ab1e 	bne	r2,zero,2740 <__svfscanf_r+0x1450>
    2094:	e0800117 	ldw	r2,4(fp)
    2098:	e0c00017 	ldw	r3,0(fp)
    209c:	15fff516 	blt	r2,r23,2074 <__alt_data_end+0xfe002074>
    20a0:	15c5c83a 	sub	r2,r2,r23
    20a4:	95e5883a 	add	r18,r18,r23
    20a8:	1dd5883a 	add	r10,r3,r23
    20ac:	e0800115 	stw	r2,4(fp)
    20b0:	e2800015 	stw	r10,0(fp)
    20b4:	8ca3883a 	add	r17,r17,r18
    20b8:	8029883a 	mov	r20,r16
    20bc:	003fc606 	br	1fd8 <__alt_data_end+0xfe001fd8>
    20c0:	b8bfffc4 	addi	r2,r23,-1
    20c4:	00c05704 	movi	r3,348
    20c8:	1880c12e 	bgeu	r3,r2,23d0 <__svfscanf_r+0x10e0>
    20cc:	b9ffa8c4 	addi	r7,r23,-349
    20d0:	05c05744 	movi	r23,349
    20d4:	8815883a 	mov	r10,r17
    20d8:	8023883a 	mov	r17,r16
    20dc:	dc009e17 	ldw	r16,632(sp)
    20e0:	9cc36014 	ori	r19,r19,3456
    20e4:	0025883a 	mov	r18,zero
    20e8:	dd000104 	addi	r20,sp,4
    20ec:	02401344 	movi	r9,77
    20f0:	02c08004 	movi	r11,512
    20f4:	01bf7fc4 	movi	r6,-513
    20f8:	023fdfc4 	movi	r8,-129
    20fc:	e1400017 	ldw	r5,0(fp)
    2100:	28c00003 	ldbu	r3,0(r5)
    2104:	18bff544 	addi	r2,r3,-43
    2108:	10803fcc 	andi	r2,r2,255
    210c:	48806436 	bltu	r9,r2,22a0 <__svfscanf_r+0xfb0>
    2110:	1085883a 	add	r2,r2,r2
    2114:	1085883a 	add	r2,r2,r2
    2118:	01000034 	movhi	r4,0
    211c:	21084b04 	addi	r4,r4,8492
    2120:	1105883a 	add	r2,r2,r4
    2124:	10800017 	ldw	r2,0(r2)
    2128:	1000683a 	jmp	r2
    212c:	000023c0 	call	23c <main+0x44>
    2130:	000022a0 	cmpeqi	zero,zero,138
    2134:	000023c0 	call	23c <main+0x44>
    2138:	000022a0 	cmpeqi	zero,zero,138
    213c:	000022a0 	cmpeqi	zero,zero,138
    2140:	00002338 	rdprs	zero,zero,140
    2144:	00002318 	cmpnei	zero,zero,140
    2148:	00002318 	cmpnei	zero,zero,140
    214c:	00002318 	cmpnei	zero,zero,140
    2150:	00002318 	cmpnei	zero,zero,140
    2154:	00002318 	cmpnei	zero,zero,140
    2158:	00002318 	cmpnei	zero,zero,140
    215c:	00002318 	cmpnei	zero,zero,140
    2160:	000022f8 	rdprs	zero,zero,139
    2164:	000022f8 	rdprs	zero,zero,139
    2168:	000022a0 	cmpeqi	zero,zero,138
    216c:	000022a0 	cmpeqi	zero,zero,138
    2170:	000022a0 	cmpeqi	zero,zero,138
    2174:	000022a0 	cmpeqi	zero,zero,138
    2178:	000022a0 	cmpeqi	zero,zero,138
    217c:	000022a0 	cmpeqi	zero,zero,138
    2180:	000022a0 	cmpeqi	zero,zero,138
    2184:	000022e4 	muli	zero,zero,139
    2188:	000022e4 	muli	zero,zero,139
    218c:	000022e4 	muli	zero,zero,139
    2190:	000022e4 	muli	zero,zero,139
    2194:	000022e4 	muli	zero,zero,139
    2198:	000022e4 	muli	zero,zero,139
    219c:	000022a0 	cmpeqi	zero,zero,138
    21a0:	000022a0 	cmpeqi	zero,zero,138
    21a4:	000022a0 	cmpeqi	zero,zero,138
    21a8:	000022a0 	cmpeqi	zero,zero,138
    21ac:	000022a0 	cmpeqi	zero,zero,138
    21b0:	000022a0 	cmpeqi	zero,zero,138
    21b4:	000022a0 	cmpeqi	zero,zero,138
    21b8:	000022a0 	cmpeqi	zero,zero,138
    21bc:	000022a0 	cmpeqi	zero,zero,138
    21c0:	000022a0 	cmpeqi	zero,zero,138
    21c4:	000022a0 	cmpeqi	zero,zero,138
    21c8:	000022a0 	cmpeqi	zero,zero,138
    21cc:	000022a0 	cmpeqi	zero,zero,138
    21d0:	000022a0 	cmpeqi	zero,zero,138
    21d4:	000022a0 	cmpeqi	zero,zero,138
    21d8:	000022a0 	cmpeqi	zero,zero,138
    21dc:	000022a0 	cmpeqi	zero,zero,138
    21e0:	00002264 	muli	zero,zero,137
    21e4:	000022a0 	cmpeqi	zero,zero,138
    21e8:	000022a0 	cmpeqi	zero,zero,138
    21ec:	000022a0 	cmpeqi	zero,zero,138
    21f0:	000022a0 	cmpeqi	zero,zero,138
    21f4:	000022a0 	cmpeqi	zero,zero,138
    21f8:	000022a0 	cmpeqi	zero,zero,138
    21fc:	000022a0 	cmpeqi	zero,zero,138
    2200:	000022a0 	cmpeqi	zero,zero,138
    2204:	000022e4 	muli	zero,zero,139
    2208:	000022e4 	muli	zero,zero,139
    220c:	000022e4 	muli	zero,zero,139
    2210:	000022e4 	muli	zero,zero,139
    2214:	000022e4 	muli	zero,zero,139
    2218:	000022e4 	muli	zero,zero,139
    221c:	000022a0 	cmpeqi	zero,zero,138
    2220:	000022a0 	cmpeqi	zero,zero,138
    2224:	000022a0 	cmpeqi	zero,zero,138
    2228:	000022a0 	cmpeqi	zero,zero,138
    222c:	000022a0 	cmpeqi	zero,zero,138
    2230:	000022a0 	cmpeqi	zero,zero,138
    2234:	000022a0 	cmpeqi	zero,zero,138
    2238:	000022a0 	cmpeqi	zero,zero,138
    223c:	000022a0 	cmpeqi	zero,zero,138
    2240:	000022a0 	cmpeqi	zero,zero,138
    2244:	000022a0 	cmpeqi	zero,zero,138
    2248:	000022a0 	cmpeqi	zero,zero,138
    224c:	000022a0 	cmpeqi	zero,zero,138
    2250:	000022a0 	cmpeqi	zero,zero,138
    2254:	000022a0 	cmpeqi	zero,zero,138
    2258:	000022a0 	cmpeqi	zero,zero,138
    225c:	000022a0 	cmpeqi	zero,zero,138
    2260:	00002264 	muli	zero,zero,137
    2264:	9881800c 	andi	r2,r19,1536
    2268:	12c00d1e 	bne	r2,r11,22a0 <__svfscanf_r+0xfb0>
    226c:	99a6703a 	and	r19,r19,r6
    2270:	9cc14014 	ori	r19,r19,1280
    2274:	04000404 	movi	r16,16
    2278:	e0800117 	ldw	r2,4(fp)
    227c:	a0c00005 	stb	r3,0(r20)
    2280:	a5000044 	addi	r20,r20,1
    2284:	10bfffc4 	addi	r2,r2,-1
    2288:	e0800115 	stw	r2,4(fp)
    228c:	00803b0e 	bge	zero,r2,237c <__svfscanf_r+0x108c>
    2290:	29400044 	addi	r5,r5,1
    2294:	e1400015 	stw	r5,0(fp)
    2298:	bdffffc4 	addi	r23,r23,-1
    229c:	b83f971e 	bne	r23,zero,20fc <__alt_data_end+0xfe0020fc>
    22a0:	dc009e15 	stw	r16,632(sp)
    22a4:	9880400c 	andi	r2,r19,256
    22a8:	8821883a 	mov	r16,r17
    22ac:	5023883a 	mov	r17,r10
    22b0:	10000426 	beq	r2,zero,22c4 <__svfscanf_r+0xfd4>
    22b4:	d9400104 	addi	r5,sp,4
    22b8:	2d013736 	bltu	r5,r20,2798 <__svfscanf_r+0x14a8>
    22bc:	d9c00104 	addi	r7,sp,4
    22c0:	3d3c4d26 	beq	r7,r20,13f8 <__alt_data_end+0xfe0013f8>
    22c4:	9880040c 	andi	r2,r19,16
    22c8:	1000af26 	beq	r2,zero,2588 <__svfscanf_r+0x1298>
    22cc:	d8c00104 	addi	r3,sp,4
    22d0:	a0e9c83a 	sub	r20,r20,r3
    22d4:	a4a5883a 	add	r18,r20,r18
    22d8:	8ca3883a 	add	r17,r17,r18
    22dc:	8029883a 	mov	r20,r16
    22e0:	003f3d06 	br	1fd8 <__alt_data_end+0xfe001fd8>
    22e4:	00800284 	movi	r2,10
    22e8:	143fed0e 	bge	r2,r16,22a0 <__alt_data_end+0xfe0022a0>
    22ec:	00bd1fc4 	movi	r2,-2945
    22f0:	98a6703a 	and	r19,r19,r2
    22f4:	003fe006 	br	2278 <__alt_data_end+0xfe002278>
    22f8:	8421883a 	add	r16,r16,r16
    22fc:	01000074 	movhi	r4,1
    2300:	21138e84 	addi	r4,r4,20026
    2304:	2405883a 	add	r2,r4,r16
    2308:	1400000f 	ldh	r16,0(r2)
    230c:	00800204 	movi	r2,8
    2310:	143ff616 	blt	r2,r16,22ec <__alt_data_end+0xfe0022ec>
    2314:	003fe206 	br	22a0 <__alt_data_end+0xfe0022a0>
    2318:	8421883a 	add	r16,r16,r16
    231c:	01000074 	movhi	r4,1
    2320:	21138e84 	addi	r4,r4,20026
    2324:	2405883a 	add	r2,r4,r16
    2328:	1400000f 	ldh	r16,0(r2)
    232c:	00bd1fc4 	movi	r2,-2945
    2330:	98a6703a 	and	r19,r19,r2
    2334:	003fd006 	br	2278 <__alt_data_end+0xfe002278>
    2338:	9882000c 	andi	r2,r19,2048
    233c:	103fce26 	beq	r2,zero,2278 <__alt_data_end+0xfe002278>
    2340:	8000021e 	bne	r16,zero,234c <__svfscanf_r+0x105c>
    2344:	9cc08014 	ori	r19,r19,512
    2348:	04000204 	movi	r16,8
    234c:	9881000c 	andi	r2,r19,1024
    2350:	1000c41e 	bne	r2,zero,2664 <__svfscanf_r+0x1374>
    2354:	00bf1fc4 	movi	r2,-897
    2358:	98a6703a 	and	r19,r19,r2
    235c:	38000226 	beq	r7,zero,2368 <__svfscanf_r+0x1078>
    2360:	39ffffc4 	addi	r7,r7,-1
    2364:	bdc00044 	addi	r23,r23,1
    2368:	e0800117 	ldw	r2,4(fp)
    236c:	94800044 	addi	r18,r18,1
    2370:	10bfffc4 	addi	r2,r2,-1
    2374:	e0800115 	stw	r2,4(fp)
    2378:	00bfc516 	blt	zero,r2,2290 <__alt_data_end+0xfe002290>
    237c:	a809883a 	mov	r4,r21
    2380:	e00b883a 	mov	r5,fp
    2384:	d980a715 	stw	r6,668(sp)
    2388:	d9c0aa15 	stw	r7,680(sp)
    238c:	da00a815 	stw	r8,672(sp)
    2390:	da40a515 	stw	r9,660(sp)
    2394:	da80a915 	stw	r10,676(sp)
    2398:	dac0a615 	stw	r11,664(sp)
    239c:	00050a00 	call	50a0 <__srefill_r>
    23a0:	d980a717 	ldw	r6,668(sp)
    23a4:	d9c0aa17 	ldw	r7,680(sp)
    23a8:	da00a817 	ldw	r8,672(sp)
    23ac:	da40a517 	ldw	r9,660(sp)
    23b0:	da80a917 	ldw	r10,676(sp)
    23b4:	dac0a617 	ldw	r11,664(sp)
    23b8:	103fb726 	beq	r2,zero,2298 <__alt_data_end+0xfe002298>
    23bc:	003fb806 	br	22a0 <__alt_data_end+0xfe0022a0>
    23c0:	9880200c 	andi	r2,r19,128
    23c4:	103fb626 	beq	r2,zero,22a0 <__alt_data_end+0xfe0022a0>
    23c8:	9a26703a 	and	r19,r19,r8
    23cc:	003faa06 	br	2278 <__alt_data_end+0xfe002278>
    23d0:	000f883a 	mov	r7,zero
    23d4:	003f3f06 	br	20d4 <__alt_data_end+0xfe0020d4>
    23d8:	d800a315 	stw	zero,652(sp)
    23dc:	003cb806 	br	16c0 <__alt_data_end+0xfe0016c0>
    23e0:	d9c09c17 	ldw	r7,624(sp)
    23e4:	dd005884 	addi	r20,sp,354
    23e8:	3c800017 	ldw	r18,0(r7)
    23ec:	38c00104 	addi	r3,r7,4
    23f0:	d8c09c15 	stw	r3,624(sp)
    23f4:	90bfffc4 	addi	r2,r18,-1
    23f8:	15e7883a 	add	r19,r2,r23
    23fc:	e0800017 	ldw	r2,0(fp)
    2400:	9007883a 	mov	r3,r18
    2404:	11400003 	ldbu	r5,0(r2)
    2408:	a14b883a 	add	r5,r20,r5
    240c:	29400007 	ldb	r5,0(r5)
    2410:	28001126 	beq	r5,zero,2458 <__svfscanf_r+0x1168>
    2414:	e1400117 	ldw	r5,4(fp)
    2418:	11800044 	addi	r6,r2,1
    241c:	e1800015 	stw	r6,0(fp)
    2420:	297fffc4 	addi	r5,r5,-1
    2424:	e1400115 	stw	r5,4(fp)
    2428:	10800003 	ldbu	r2,0(r2)
    242c:	1dc00044 	addi	r23,r3,1
    2430:	18800005 	stb	r2,0(r3)
    2434:	1cc00926 	beq	r3,r19,245c <__svfscanf_r+0x116c>
    2438:	e0800117 	ldw	r2,4(fp)
    243c:	0080100e 	bge	zero,r2,2480 <__svfscanf_r+0x1190>
    2440:	e0800017 	ldw	r2,0(fp)
    2444:	b807883a 	mov	r3,r23
    2448:	11400003 	ldbu	r5,0(r2)
    244c:	a14b883a 	add	r5,r20,r5
    2450:	29400007 	ldb	r5,0(r5)
    2454:	283fef1e 	bne	r5,zero,2414 <__alt_data_end+0xfe002414>
    2458:	182f883a 	mov	r23,r3
    245c:	bca5c83a 	sub	r18,r23,r18
    2460:	903be526 	beq	r18,zero,13f8 <__alt_data_end+0xfe0013f8>
    2464:	d9009f17 	ldw	r4,636(sp)
    2468:	b8000005 	stb	zero,0(r23)
    246c:	8ca3883a 	add	r17,r17,r18
    2470:	21000044 	addi	r4,r4,1
    2474:	d9009f15 	stw	r4,636(sp)
    2478:	8029883a 	mov	r20,r16
    247c:	003ed606 	br	1fd8 <__alt_data_end+0xfe001fd8>
    2480:	a809883a 	mov	r4,r21
    2484:	e00b883a 	mov	r5,fp
    2488:	00050a00 	call	50a0 <__srefill_r>
    248c:	103fec26 	beq	r2,zero,2440 <__alt_data_end+0xfe002440>
    2490:	95fff21e 	bne	r18,r23,245c <__alt_data_end+0xfe00245c>
    2494:	003df306 	br	1c64 <__alt_data_end+0xfe001c64>
    2498:	d8c09c17 	ldw	r3,624(sp)
    249c:	b1800017 	ldw	r6,0(r22)
    24a0:	1d000017 	ldw	r20,0(r3)
    24a4:	19c00104 	addi	r7,r3,4
    24a8:	d9c09c15 	stw	r7,624(sp)
    24ac:	a0ffffc4 	addi	r3,r20,-1
    24b0:	1def883a 	add	r23,r3,r23
    24b4:	e0c00017 	ldw	r3,0(fp)
    24b8:	a005883a 	mov	r2,r20
    24bc:	19400003 	ldbu	r5,0(r3)
    24c0:	314b883a 	add	r5,r6,r5
    24c4:	29400043 	ldbu	r5,1(r5)
    24c8:	2940020c 	andi	r5,r5,8
    24cc:	2800141e 	bne	r5,zero,2520 <__svfscanf_r+0x1230>
    24d0:	e1400117 	ldw	r5,4(fp)
    24d4:	19800044 	addi	r6,r3,1
    24d8:	e1800015 	stw	r6,0(fp)
    24dc:	297fffc4 	addi	r5,r5,-1
    24e0:	e1400115 	stw	r5,4(fp)
    24e4:	18c00003 	ldbu	r3,0(r3)
    24e8:	14c00044 	addi	r19,r2,1
    24ec:	9825883a 	mov	r18,r19
    24f0:	10c00005 	stb	r3,0(r2)
    24f4:	15c00b26 	beq	r2,r23,2524 <__svfscanf_r+0x1234>
    24f8:	e0800117 	ldw	r2,4(fp)
    24fc:	0080120e 	bge	zero,r2,2548 <__svfscanf_r+0x1258>
    2500:	9805883a 	mov	r2,r19
    2504:	e0c00017 	ldw	r3,0(fp)
    2508:	b1800017 	ldw	r6,0(r22)
    250c:	19400003 	ldbu	r5,0(r3)
    2510:	314b883a 	add	r5,r6,r5
    2514:	29400043 	ldbu	r5,1(r5)
    2518:	2940020c 	andi	r5,r5,8
    251c:	283fec26 	beq	r5,zero,24d0 <__alt_data_end+0xfe0024d0>
    2520:	1025883a 	mov	r18,r2
    2524:	d8809f17 	ldw	r2,636(sp)
    2528:	9529c83a 	sub	r20,r18,r20
    252c:	8d23883a 	add	r17,r17,r20
    2530:	10800044 	addi	r2,r2,1
    2534:	8029883a 	mov	r20,r16
    2538:	90000005 	stb	zero,0(r18)
    253c:	d8809f15 	stw	r2,636(sp)
    2540:	a021883a 	mov	r16,r20
    2544:	003ba806 	br	13e8 <__alt_data_end+0xfe0013e8>
    2548:	a809883a 	mov	r4,r21
    254c:	e00b883a 	mov	r5,fp
    2550:	00050a00 	call	50a0 <__srefill_r>
    2554:	103ff31e 	bne	r2,zero,2524 <__alt_data_end+0xfe002524>
    2558:	9805883a 	mov	r2,r19
    255c:	003fe906 	br	2504 <__alt_data_end+0xfe002504>
    2560:	010000c4 	movi	r4,3
    2564:	113d5926 	beq	r2,r4,1acc <__alt_data_end+0xfe001acc>
    2568:	01000144 	movi	r4,5
    256c:	113cdf1e 	bne	r2,r4,18ec <__alt_data_end+0xfe0018ec>
    2570:	a5000044 	addi	r20,r20,1
    2574:	003cd206 	br	18c0 <__alt_data_end+0xfe0018c0>
    2578:	00800084 	movi	r2,2
    257c:	18bd4c1e 	bne	r3,r2,1ab0 <__alt_data_end+0xfe001ab0>
    2580:	00c000c4 	movi	r3,3
    2584:	003cce06 	br	18c0 <__alt_data_end+0xfe0018c0>
    2588:	d8c0a017 	ldw	r3,640(sp)
    258c:	d9c09e17 	ldw	r7,632(sp)
    2590:	a809883a 	mov	r4,r21
    2594:	d9400104 	addi	r5,sp,4
    2598:	000d883a 	mov	r6,zero
    259c:	a0000005 	stb	zero,0(r20)
    25a0:	183ee83a 	callr	r3
    25a4:	98c0080c 	andi	r3,r19,32
    25a8:	1800411e 	bne	r3,zero,26b0 <__svfscanf_r+0x13c0>
    25ac:	98c0010c 	andi	r3,r19,4
    25b0:	1800b526 	beq	r3,zero,2888 <__svfscanf_r+0x1598>
    25b4:	d9409c17 	ldw	r5,624(sp)
    25b8:	28c00017 	ldw	r3,0(r5)
    25bc:	29400104 	addi	r5,r5,4
    25c0:	d9409c15 	stw	r5,624(sp)
    25c4:	1880000d 	sth	r2,0(r3)
    25c8:	d8809f17 	ldw	r2,636(sp)
    25cc:	10800044 	addi	r2,r2,1
    25d0:	d8809f15 	stw	r2,636(sp)
    25d4:	003f3d06 	br	22cc <__alt_data_end+0xfe0022cc>
    25d8:	d8c09904 	addi	r3,sp,612
    25dc:	9cc0040c 	andi	r19,r19,16
    25e0:	1809883a 	mov	r4,r3
    25e4:	000b883a 	mov	r5,zero
    25e8:	01800204 	movi	r6,8
    25ec:	d8c09d15 	stw	r3,628(sp)
    25f0:	0004a0c0 	call	4a0c <memset>
    25f4:	98002426 	beq	r19,zero,2688 <__svfscanf_r+0x1398>
    25f8:	dc809b04 	addi	r18,sp,620
    25fc:	000d883a 	mov	r6,zero
    2600:	dc00a115 	stw	r16,644(sp)
    2604:	3021883a 	mov	r16,r6
    2608:	e0800017 	ldw	r2,0(fp)
    260c:	b0c00017 	ldw	r3,0(r22)
    2610:	10800003 	ldbu	r2,0(r2)
    2614:	1885883a 	add	r2,r3,r2
    2618:	10800043 	ldbu	r2,1(r2)
    261c:	1080020c 	andi	r2,r2,8
    2620:	1000011e 	bne	r2,zero,2628 <__svfscanf_r+0x1338>
    2624:	b800ac1e 	bne	r23,zero,28d8 <__svfscanf_r+0x15e8>
    2628:	dc00a117 	ldw	r16,644(sp)
    262c:	983e441e 	bne	r19,zero,1f40 <__alt_data_end+0xfe001f40>
    2630:	d8809f17 	ldw	r2,636(sp)
    2634:	90000015 	stw	zero,0(r18)
    2638:	8029883a 	mov	r20,r16
    263c:	10800044 	addi	r2,r2,1
    2640:	d8809f15 	stw	r2,636(sp)
    2644:	003e3f06 	br	1f44 <__alt_data_end+0xfe001f44>
    2648:	d9009c17 	ldw	r4,624(sp)
    264c:	20800017 	ldw	r2,0(r4)
    2650:	21000104 	addi	r4,r4,4
    2654:	d9009c15 	stw	r4,624(sp)
    2658:	15000015 	stw	r20,0(r2)
    265c:	10c00115 	stw	r3,4(r2)
    2660:	003cf006 	br	1a24 <__alt_data_end+0xfe001a24>
    2664:	00be9fc4 	movi	r2,-1409
    2668:	98a6703a 	and	r19,r19,r2
    266c:	003f0206 	br	2278 <__alt_data_end+0xfe002278>
    2670:	9101c00c 	andi	r4,r18,1792
    2674:	0081c004 	movi	r2,1792
    2678:	20bd0d1e 	bne	r4,r2,1ab0 <__alt_data_end+0xfe001ab0>
    267c:	9364703a 	and	r18,r18,r13
    2680:	00c00044 	movi	r3,1
    2684:	003c8e06 	br	18c0 <__alt_data_end+0xfe0018c0>
    2688:	d9009c17 	ldw	r4,624(sp)
    268c:	24800017 	ldw	r18,0(r4)
    2690:	21000104 	addi	r4,r4,4
    2694:	d9009c15 	stw	r4,624(sp)
    2698:	003fd806 	br	25fc <__alt_data_end+0xfe0025fc>
    269c:	d9009c17 	ldw	r4,624(sp)
    26a0:	24800017 	ldw	r18,0(r4)
    26a4:	21000104 	addi	r4,r4,4
    26a8:	d9009c15 	stw	r4,624(sp)
    26ac:	003df606 	br	1e88 <__alt_data_end+0xfe001e88>
    26b0:	d9009c17 	ldw	r4,624(sp)
    26b4:	20c00017 	ldw	r3,0(r4)
    26b8:	21000104 	addi	r4,r4,4
    26bc:	d9009c15 	stw	r4,624(sp)
    26c0:	18800015 	stw	r2,0(r3)
    26c4:	003fc006 	br	25c8 <__alt_data_end+0xfe0025c8>
    26c8:	d8c0a417 	ldw	r3,656(sp)
    26cc:	000d883a 	mov	r6,zero
    26d0:	a809883a 	mov	r4,r21
    26d4:	19400044 	addi	r5,r3,1
    26d8:	01c00284 	movi	r7,10
    26dc:	0006d280 	call	6d28 <_strtol_r>
    26e0:	d8c0a217 	ldw	r3,648(sp)
    26e4:	dcc0a417 	ldw	r19,656(sp)
    26e8:	10cdc83a 	sub	r6,r2,r3
    26ec:	d88055c4 	addi	r2,sp,343
    26f0:	98800136 	bltu	r19,r2,26f8 <__svfscanf_r+0x1408>
    26f4:	dcc05584 	addi	r19,sp,342
    26f8:	9809883a 	mov	r4,r19
    26fc:	01400074 	movhi	r5,1
    2700:	29538d04 	addi	r5,r5,20020
    2704:	00054680 	call	5468 <sprintf>
    2708:	a809883a 	mov	r4,r21
    270c:	d9400104 	addi	r5,sp,4
    2710:	000d883a 	mov	r6,zero
    2714:	00056b40 	call	56b4 <_strtod_r>
    2718:	1029883a 	mov	r20,r2
    271c:	9080004c 	andi	r2,r18,1
    2720:	103cb826 	beq	r2,zero,1a04 <__alt_data_end+0xfe001a04>
    2724:	003fc806 	br	2648 <__alt_data_end+0xfe002648>
    2728:	013fff84 	movi	r4,-2
    272c:	113df21e 	bne	r2,r4,1ef8 <__alt_data_end+0xfe001ef8>
    2730:	8029883a 	mov	r20,r16
    2734:	003df506 	br	1f0c <__alt_data_end+0xfe001f0c>
    2738:	0029883a 	mov	r20,zero
    273c:	003df306 	br	1f0c <__alt_data_end+0xfe001f0c>
    2740:	903d4826 	beq	r18,zero,1c64 <__alt_data_end+0xfe001c64>
    2744:	8ca3883a 	add	r17,r17,r18
    2748:	8029883a 	mov	r20,r16
    274c:	003e2206 	br	1fd8 <__alt_data_end+0xfe001fd8>
    2750:	d9c09c17 	ldw	r7,624(sp)
    2754:	df000015 	stw	fp,0(sp)
    2758:	a809883a 	mov	r4,r21
    275c:	39400017 	ldw	r5,0(r7)
    2760:	01800044 	movi	r6,1
    2764:	b80f883a 	mov	r7,r23
    2768:	0002f400 	call	2f40 <_fread_r>
    276c:	d9009c17 	ldw	r4,624(sp)
    2770:	20c00104 	addi	r3,r4,4
    2774:	103d3b26 	beq	r2,zero,1c64 <__alt_data_end+0xfe001c64>
    2778:	d9409f17 	ldw	r5,636(sp)
    277c:	8029883a 	mov	r20,r16
    2780:	1463883a 	add	r17,r2,r17
    2784:	29400044 	addi	r5,r5,1
    2788:	d9409f15 	stw	r5,636(sp)
    278c:	d8c09c15 	stw	r3,624(sp)
    2790:	a021883a 	mov	r16,r20
    2794:	003b1406 	br	13e8 <__alt_data_end+0xfe0013e8>
    2798:	a17fffc7 	ldb	r5,-1(r20)
    279c:	a809883a 	mov	r4,r21
    27a0:	e00d883a 	mov	r6,fp
    27a4:	a53fffc4 	addi	r20,r20,-1
    27a8:	00098300 	call	9830 <_ungetc_r>
    27ac:	003ec306 	br	22bc <__alt_data_end+0xfe0022bc>
    27b0:	a809883a 	mov	r4,r21
    27b4:	e00b883a 	mov	r5,fp
    27b8:	00050a00 	call	50a0 <__srefill_r>
    27bc:	103b9e26 	beq	r2,zero,1638 <__alt_data_end+0xfe001638>
    27c0:	003d2806 	br	1c64 <__alt_data_end+0xfe001c64>
    27c4:	98a6b03a 	or	r19,r19,r2
    27c8:	003d4306 	br	1cd8 <__alt_data_end+0xfe001cd8>
    27cc:	a1000083 	ldbu	r4,2(r20)
    27d0:	9cc00094 	ori	r19,r19,2
    27d4:	a5000084 	addi	r20,r20,2
    27d8:	003b1106 	br	1420 <__alt_data_end+0xfe001420>
    27dc:	d8c09d17 	ldw	r3,628(sp)
    27e0:	d9c0a117 	ldw	r7,644(sp)
    27e4:	19c5c83a 	sub	r2,r3,r7
    27e8:	008dc83a 	sub	r6,zero,r2
    27ec:	103fbf1e 	bne	r2,zero,26ec <__alt_data_end+0xfe0026ec>
    27f0:	003c7d06 	br	19e8 <__alt_data_end+0xfe0019e8>
    27f4:	9880004c 	andi	r2,r19,1
    27f8:	10001726 	beq	r2,zero,2858 <__svfscanf_r+0x1568>
    27fc:	d8c09c17 	ldw	r3,624(sp)
    2800:	8029883a 	mov	r20,r16
    2804:	a021883a 	mov	r16,r20
    2808:	18800017 	ldw	r2,0(r3)
    280c:	18c00104 	addi	r3,r3,4
    2810:	d8c09c15 	stw	r3,624(sp)
    2814:	14400015 	stw	r17,0(r2)
    2818:	003af306 	br	13e8 <__alt_data_end+0xfe0013e8>
    281c:	d9c09c17 	ldw	r7,624(sp)
    2820:	180b883a 	mov	r5,r3
    2824:	a009883a 	mov	r4,r20
    2828:	3cc00017 	ldw	r19,0(r7)
    282c:	3c800104 	addi	r18,r7,4
    2830:	d8c0a615 	stw	r3,664(sp)
    2834:	00052780 	call	5278 <__fpclassifyd>
    2838:	d8c0a617 	ldw	r3,664(sp)
    283c:	10005d26 	beq	r2,zero,29b4 <__svfscanf_r+0x16c4>
    2840:	a009883a 	mov	r4,r20
    2844:	180b883a 	mov	r5,r3
    2848:	0011eb40 	call	11eb4 <__truncdfsf2>
    284c:	98800015 	stw	r2,0(r19)
    2850:	dc809c15 	stw	r18,624(sp)
    2854:	003c7306 	br	1a24 <__alt_data_end+0xfe001a24>
    2858:	9cc0008c 	andi	r19,r19,2
    285c:	98004a26 	beq	r19,zero,2988 <__svfscanf_r+0x1698>
    2860:	d9009c17 	ldw	r4,624(sp)
    2864:	8807d7fa 	srai	r3,r17,31
    2868:	8029883a 	mov	r20,r16
    286c:	20800017 	ldw	r2,0(r4)
    2870:	21000104 	addi	r4,r4,4
    2874:	d9009c15 	stw	r4,624(sp)
    2878:	14400015 	stw	r17,0(r2)
    287c:	10c00115 	stw	r3,4(r2)
    2880:	a021883a 	mov	r16,r20
    2884:	003ad806 	br	13e8 <__alt_data_end+0xfe0013e8>
    2888:	98c0004c 	andi	r3,r19,1
    288c:	1800381e 	bne	r3,zero,2970 <__svfscanf_r+0x1680>
    2890:	9cc0008c 	andi	r19,r19,2
    2894:	98003626 	beq	r19,zero,2970 <__svfscanf_r+0x1680>
    2898:	d880a017 	ldw	r2,640(sp)
    289c:	00c00034 	movhi	r3,0
    28a0:	18dcae04 	addi	r3,r3,29368
    28a4:	a809883a 	mov	r4,r21
    28a8:	d9400104 	addi	r5,sp,4
    28ac:	000d883a 	mov	r6,zero
    28b0:	d9c09e17 	ldw	r7,632(sp)
    28b4:	10c07c26 	beq	r2,r3,2aa8 <__svfscanf_r+0x17b8>
    28b8:	0006f880 	call	6f88 <_strtoll_r>
    28bc:	d9409c17 	ldw	r5,624(sp)
    28c0:	29000017 	ldw	r4,0(r5)
    28c4:	29400104 	addi	r5,r5,4
    28c8:	d9409c15 	stw	r5,624(sp)
    28cc:	20800015 	stw	r2,0(r4)
    28d0:	20c00115 	stw	r3,4(r4)
    28d4:	003f3c06 	br	25c8 <__alt_data_end+0xfe0025c8>
    28d8:	0003c840 	call	3c84 <__locale_mb_cur_max>
    28dc:	143ce126 	beq	r2,r16,1c64 <__alt_data_end+0xfe001c64>
    28e0:	e0800017 	ldw	r2,0(fp)
    28e4:	e1000117 	ldw	r4,4(fp)
    28e8:	d8c09d17 	ldw	r3,628(sp)
    28ec:	12000003 	ldbu	r8,0(r2)
    28f0:	213fffc4 	addi	r4,r4,-1
    28f4:	10800044 	addi	r2,r2,1
    28f8:	e1000115 	stw	r4,4(fp)
    28fc:	d9400104 	addi	r5,sp,4
    2900:	e0800015 	stw	r2,0(fp)
    2904:	85000044 	addi	r20,r16,1
    2908:	d8c00015 	stw	r3,0(sp)
    290c:	2c21883a 	add	r16,r5,r16
    2910:	a809883a 	mov	r4,r21
    2914:	900b883a 	mov	r5,r18
    2918:	d9800104 	addi	r6,sp,4
    291c:	a00f883a 	mov	r7,r20
    2920:	82000005 	stb	r8,0(r16)
    2924:	00044a00 	call	44a0 <_mbrtowc_r>
    2928:	013fffc4 	movi	r4,-1
    292c:	113ccd26 	beq	r2,r4,1c64 <__alt_data_end+0xfe001c64>
    2930:	1000251e 	bne	r2,zero,29c8 <__svfscanf_r+0x16d8>
    2934:	90000015 	stw	zero,0(r18)
    2938:	0009883a 	mov	r4,zero
    293c:	0003bd80 	call	3bd8 <iswspace>
    2940:	10002e26 	beq	r2,zero,29fc <__svfscanf_r+0x170c>
    2944:	dc00a117 	ldw	r16,644(sp)
    2948:	a03f3826 	beq	r20,zero,262c <__alt_data_end+0xfe00262c>
    294c:	a53fffc4 	addi	r20,r20,-1
    2950:	d9c00104 	addi	r7,sp,4
    2954:	3d05883a 	add	r2,r7,r20
    2958:	11400003 	ldbu	r5,0(r2)
    295c:	a809883a 	mov	r4,r21
    2960:	e00d883a 	mov	r6,fp
    2964:	00098300 	call	9830 <_ungetc_r>
    2968:	a03ff81e 	bne	r20,zero,294c <__alt_data_end+0xfe00294c>
    296c:	003f2f06 	br	262c <__alt_data_end+0xfe00262c>
    2970:	d9c09c17 	ldw	r7,624(sp)
    2974:	38c00017 	ldw	r3,0(r7)
    2978:	39c00104 	addi	r7,r7,4
    297c:	d9c09c15 	stw	r7,624(sp)
    2980:	18800015 	stw	r2,0(r3)
    2984:	003f1006 	br	25c8 <__alt_data_end+0xfe0025c8>
    2988:	d9409c17 	ldw	r5,624(sp)
    298c:	8029883a 	mov	r20,r16
    2990:	a021883a 	mov	r16,r20
    2994:	28800017 	ldw	r2,0(r5)
    2998:	29400104 	addi	r5,r5,4
    299c:	d9409c15 	stw	r5,624(sp)
    29a0:	14400015 	stw	r17,0(r2)
    29a4:	003a9006 	br	13e8 <__alt_data_end+0xfe0013e8>
    29a8:	dc00a217 	ldw	r16,648(sp)
    29ac:	a03d5f26 	beq	r20,zero,1f2c <__alt_data_end+0xfe001f2c>
    29b0:	003cac06 	br	1c64 <__alt_data_end+0xfe001c64>
    29b4:	0009883a 	mov	r4,zero
    29b8:	00054080 	call	5408 <nanf>
    29bc:	98800015 	stw	r2,0(r19)
    29c0:	dc809c15 	stw	r18,624(sp)
    29c4:	003c1706 	br	1a24 <__alt_data_end+0xfe001a24>
    29c8:	017fff84 	movi	r5,-2
    29cc:	1140111e 	bne	r2,r5,2a14 <__svfscanf_r+0x1724>
    29d0:	a021883a 	mov	r16,r20
    29d4:	e0800117 	ldw	r2,4(fp)
    29d8:	00bf0b16 	blt	zero,r2,2608 <__alt_data_end+0xfe002608>
    29dc:	a809883a 	mov	r4,r21
    29e0:	e00b883a 	mov	r5,fp
    29e4:	00050a00 	call	50a0 <__srefill_r>
    29e8:	103f0726 	beq	r2,zero,2608 <__alt_data_end+0xfe002608>
    29ec:	800d883a 	mov	r6,r16
    29f0:	dc00a117 	ldw	r16,644(sp)
    29f4:	303c9b1e 	bne	r6,zero,1c64 <__alt_data_end+0xfe001c64>
    29f8:	003f0c06 	br	262c <__alt_data_end+0xfe00262c>
    29fc:	8d23883a 	add	r17,r17,r20
    2a00:	bdffffc4 	addi	r23,r23,-1
    2a04:	9800051e 	bne	r19,zero,2a1c <__svfscanf_r+0x172c>
    2a08:	94800104 	addi	r18,r18,4
    2a0c:	0021883a 	mov	r16,zero
    2a10:	003ff006 	br	29d4 <__alt_data_end+0xfe0029d4>
    2a14:	91000017 	ldw	r4,0(r18)
    2a18:	003fc806 	br	293c <__alt_data_end+0xfe00293c>
    2a1c:	0021883a 	mov	r16,zero
    2a20:	003fec06 	br	29d4 <__alt_data_end+0xfe0029d4>
    2a24:	d8c00104 	addi	r3,sp,4
    2a28:	1cfa732e 	bgeu	r3,r19,13f8 <__alt_data_end+0xfe0013f8>
    2a2c:	9c3fffc4 	addi	r16,r19,-1
    2a30:	dc4000c4 	addi	r17,sp,3
    2a34:	81400007 	ldb	r5,0(r16)
    2a38:	a809883a 	mov	r4,r21
    2a3c:	843fffc4 	addi	r16,r16,-1
    2a40:	e00d883a 	mov	r6,fp
    2a44:	00098300 	call	9830 <_ungetc_r>
    2a48:	847ffa1e 	bne	r16,r17,2a34 <__alt_data_end+0xfe002a34>
    2a4c:	003a6a06 	br	13f8 <__alt_data_end+0xfe0013f8>
    2a50:	d9c00104 	addi	r7,sp,4
    2a54:	3cfa682e 	bgeu	r7,r19,13f8 <__alt_data_end+0xfe0013f8>
    2a58:	9c3fffc4 	addi	r16,r19,-1
    2a5c:	dc4000c4 	addi	r17,sp,3
    2a60:	81400007 	ldb	r5,0(r16)
    2a64:	a809883a 	mov	r4,r21
    2a68:	843fffc4 	addi	r16,r16,-1
    2a6c:	e00d883a 	mov	r6,fp
    2a70:	00098300 	call	9830 <_ungetc_r>
    2a74:	847ffa1e 	bne	r16,r17,2a60 <__alt_data_end+0xfe002a60>
    2a78:	003a5f06 	br	13f8 <__alt_data_end+0xfe0013f8>
    2a7c:	d8800104 	addi	r2,sp,4
    2a80:	14fa5d2e 	bgeu	r2,r19,13f8 <__alt_data_end+0xfe0013f8>
    2a84:	9c3fffc4 	addi	r16,r19,-1
    2a88:	dc4000c4 	addi	r17,sp,3
    2a8c:	81400007 	ldb	r5,0(r16)
    2a90:	a809883a 	mov	r4,r21
    2a94:	843fffc4 	addi	r16,r16,-1
    2a98:	e00d883a 	mov	r6,fp
    2a9c:	00098300 	call	9830 <_ungetc_r>
    2aa0:	847ffa1e 	bne	r16,r17,2a8c <__alt_data_end+0xfe002a8c>
    2aa4:	003a5406 	br	13f8 <__alt_data_end+0xfe0013f8>
    2aa8:	000751c0 	call	751c <_strtoull_r>
    2aac:	003f8306 	br	28bc <__alt_data_end+0xfe0028bc>

00002ab0 <vfscanf>:
    2ab0:	defffb04 	addi	sp,sp,-20
    2ab4:	dc000115 	stw	r16,4(sp)
    2ab8:	04000074 	movhi	r16,1
    2abc:	841bce04 	addi	r16,r16,28472
    2ac0:	80800017 	ldw	r2,0(r16)
    2ac4:	dc800315 	stw	r18,12(sp)
    2ac8:	dc400215 	stw	r17,8(sp)
    2acc:	dfc00415 	stw	ra,16(sp)
    2ad0:	2025883a 	mov	r18,r4
    2ad4:	2823883a 	mov	r17,r5
    2ad8:	300f883a 	mov	r7,r6
    2adc:	10000f26 	beq	r2,zero,2b1c <vfscanf+0x6c>
    2ae0:	10c00e17 	ldw	r3,56(r2)
    2ae4:	1009883a 	mov	r4,r2
    2ae8:	1800041e 	bne	r3,zero,2afc <vfscanf+0x4c>
    2aec:	d9800015 	stw	r6,0(sp)
    2af0:	0002c480 	call	2c48 <__sinit>
    2af4:	81000017 	ldw	r4,0(r16)
    2af8:	d9c00017 	ldw	r7,0(sp)
    2afc:	900b883a 	mov	r5,r18
    2b00:	880d883a 	mov	r6,r17
    2b04:	dfc00417 	ldw	ra,16(sp)
    2b08:	dc800317 	ldw	r18,12(sp)
    2b0c:	dc400217 	ldw	r17,8(sp)
    2b10:	dc000117 	ldw	r16,4(sp)
    2b14:	dec00504 	addi	sp,sp,20
    2b18:	00012f01 	jmpi	12f0 <__svfscanf_r>
    2b1c:	0009883a 	mov	r4,zero
    2b20:	900b883a 	mov	r5,r18
    2b24:	880d883a 	mov	r6,r17
    2b28:	dfc00417 	ldw	ra,16(sp)
    2b2c:	dc800317 	ldw	r18,12(sp)
    2b30:	dc400217 	ldw	r17,8(sp)
    2b34:	dc000117 	ldw	r16,4(sp)
    2b38:	dec00504 	addi	sp,sp,20
    2b3c:	00012f01 	jmpi	12f0 <__svfscanf_r>

00002b40 <__svfscanf>:
    2b40:	00800074 	movhi	r2,1
    2b44:	109bce04 	addi	r2,r2,28472
    2b48:	2007883a 	mov	r3,r4
    2b4c:	11000017 	ldw	r4,0(r2)
    2b50:	2805883a 	mov	r2,r5
    2b54:	300f883a 	mov	r7,r6
    2b58:	180b883a 	mov	r5,r3
    2b5c:	100d883a 	mov	r6,r2
    2b60:	00012f01 	jmpi	12f0 <__svfscanf_r>

00002b64 <_vfscanf_r>:
    2b64:	defffb04 	addi	sp,sp,-20
    2b68:	dc000315 	stw	r16,12(sp)
    2b6c:	dfc00415 	stw	ra,16(sp)
    2b70:	2021883a 	mov	r16,r4
    2b74:	20000926 	beq	r4,zero,2b9c <_vfscanf_r+0x38>
    2b78:	20800e17 	ldw	r2,56(r4)
    2b7c:	1000071e 	bne	r2,zero,2b9c <_vfscanf_r+0x38>
    2b80:	d9400015 	stw	r5,0(sp)
    2b84:	d9800115 	stw	r6,4(sp)
    2b88:	d9c00215 	stw	r7,8(sp)
    2b8c:	0002c480 	call	2c48 <__sinit>
    2b90:	d9c00217 	ldw	r7,8(sp)
    2b94:	d9800117 	ldw	r6,4(sp)
    2b98:	d9400017 	ldw	r5,0(sp)
    2b9c:	8009883a 	mov	r4,r16
    2ba0:	dfc00417 	ldw	ra,16(sp)
    2ba4:	dc000317 	ldw	r16,12(sp)
    2ba8:	dec00504 	addi	sp,sp,20
    2bac:	00012f01 	jmpi	12f0 <__svfscanf_r>

00002bb0 <__fp_lock>:
    2bb0:	0005883a 	mov	r2,zero
    2bb4:	f800283a 	ret

00002bb8 <__fp_unlock>:
    2bb8:	0005883a 	mov	r2,zero
    2bbc:	f800283a 	ret

00002bc0 <_cleanup_r>:
    2bc0:	01400074 	movhi	r5,1
    2bc4:	296d5404 	addi	r5,r5,-19120
    2bc8:	0003a781 	jmpi	3a78 <_fwalk>

00002bcc <__sfmoreglue>:
    2bcc:	defffc04 	addi	sp,sp,-16
    2bd0:	dc400115 	stw	r17,4(sp)
    2bd4:	2c401a24 	muli	r17,r5,104
    2bd8:	dc800215 	stw	r18,8(sp)
    2bdc:	2825883a 	mov	r18,r5
    2be0:	89400304 	addi	r5,r17,12
    2be4:	dc000015 	stw	r16,0(sp)
    2be8:	dfc00315 	stw	ra,12(sp)
    2bec:	0003cdc0 	call	3cdc <_malloc_r>
    2bf0:	1021883a 	mov	r16,r2
    2bf4:	10000726 	beq	r2,zero,2c14 <__sfmoreglue+0x48>
    2bf8:	11000304 	addi	r4,r2,12
    2bfc:	10000015 	stw	zero,0(r2)
    2c00:	14800115 	stw	r18,4(r2)
    2c04:	11000215 	stw	r4,8(r2)
    2c08:	000b883a 	mov	r5,zero
    2c0c:	880d883a 	mov	r6,r17
    2c10:	0004a0c0 	call	4a0c <memset>
    2c14:	8005883a 	mov	r2,r16
    2c18:	dfc00317 	ldw	ra,12(sp)
    2c1c:	dc800217 	ldw	r18,8(sp)
    2c20:	dc400117 	ldw	r17,4(sp)
    2c24:	dc000017 	ldw	r16,0(sp)
    2c28:	dec00404 	addi	sp,sp,16
    2c2c:	f800283a 	ret

00002c30 <_cleanup>:
    2c30:	00800074 	movhi	r2,1
    2c34:	109bcd04 	addi	r2,r2,28468
    2c38:	11000017 	ldw	r4,0(r2)
    2c3c:	01400074 	movhi	r5,1
    2c40:	296d5404 	addi	r5,r5,-19120
    2c44:	0003a781 	jmpi	3a78 <_fwalk>

00002c48 <__sinit>:
    2c48:	20800e17 	ldw	r2,56(r4)
    2c4c:	defff704 	addi	sp,sp,-36
    2c50:	dc800215 	stw	r18,8(sp)
    2c54:	dfc00815 	stw	ra,32(sp)
    2c58:	ddc00715 	stw	r23,28(sp)
    2c5c:	dd800615 	stw	r22,24(sp)
    2c60:	dd400515 	stw	r21,20(sp)
    2c64:	dd000415 	stw	r20,16(sp)
    2c68:	dcc00315 	stw	r19,12(sp)
    2c6c:	dc400115 	stw	r17,4(sp)
    2c70:	dc000015 	stw	r16,0(sp)
    2c74:	2025883a 	mov	r18,r4
    2c78:	10004f1e 	bne	r2,zero,2db8 <__sinit+0x170>
    2c7c:	24000117 	ldw	r16,4(r4)
    2c80:	00c00034 	movhi	r3,0
    2c84:	18caf004 	addi	r3,r3,11200
    2c88:	20c00f15 	stw	r3,60(r4)
    2c8c:	2080bb04 	addi	r2,r4,748
    2c90:	00c000c4 	movi	r3,3
    2c94:	05c00044 	movi	r23,1
    2c98:	20c0b915 	stw	r3,740(r4)
    2c9c:	2080ba15 	stw	r2,744(r4)
    2ca0:	25c00e15 	stw	r23,56(r4)
    2ca4:	2000b815 	stw	zero,736(r4)
    2ca8:	00800104 	movi	r2,4
    2cac:	81001704 	addi	r4,r16,92
    2cb0:	000b883a 	mov	r5,zero
    2cb4:	01800204 	movi	r6,8
    2cb8:	80000015 	stw	zero,0(r16)
    2cbc:	80000115 	stw	zero,4(r16)
    2cc0:	80000215 	stw	zero,8(r16)
    2cc4:	8080030d 	sth	r2,12(r16)
    2cc8:	80001915 	stw	zero,100(r16)
    2ccc:	8000038d 	sth	zero,14(r16)
    2cd0:	80000415 	stw	zero,16(r16)
    2cd4:	80000515 	stw	zero,20(r16)
    2cd8:	80000615 	stw	zero,24(r16)
    2cdc:	0004a0c0 	call	4a0c <memset>
    2ce0:	94400217 	ldw	r17,8(r18)
    2ce4:	05800034 	movhi	r22,0
    2ce8:	b5953504 	addi	r22,r22,21716
    2cec:	05400034 	movhi	r21,0
    2cf0:	ad554c04 	addi	r21,r21,21808
    2cf4:	05000034 	movhi	r20,0
    2cf8:	a5156b04 	addi	r20,r20,21932
    2cfc:	04c00034 	movhi	r19,0
    2d00:	9cd58204 	addi	r19,r19,22024
    2d04:	84000715 	stw	r16,28(r16)
    2d08:	85800815 	stw	r22,32(r16)
    2d0c:	85400915 	stw	r21,36(r16)
    2d10:	85000a15 	stw	r20,40(r16)
    2d14:	84c00b15 	stw	r19,44(r16)
    2d18:	00800284 	movi	r2,10
    2d1c:	89001704 	addi	r4,r17,92
    2d20:	000b883a 	mov	r5,zero
    2d24:	01800204 	movi	r6,8
    2d28:	88000015 	stw	zero,0(r17)
    2d2c:	88000115 	stw	zero,4(r17)
    2d30:	88000215 	stw	zero,8(r17)
    2d34:	8880030d 	sth	r2,12(r17)
    2d38:	88001915 	stw	zero,100(r17)
    2d3c:	8dc0038d 	sth	r23,14(r17)
    2d40:	88000415 	stw	zero,16(r17)
    2d44:	88000515 	stw	zero,20(r17)
    2d48:	88000615 	stw	zero,24(r17)
    2d4c:	0004a0c0 	call	4a0c <memset>
    2d50:	94000317 	ldw	r16,12(r18)
    2d54:	00800484 	movi	r2,18
    2d58:	8c400715 	stw	r17,28(r17)
    2d5c:	8d800815 	stw	r22,32(r17)
    2d60:	8d400915 	stw	r21,36(r17)
    2d64:	8d000a15 	stw	r20,40(r17)
    2d68:	8cc00b15 	stw	r19,44(r17)
    2d6c:	8080030d 	sth	r2,12(r16)
    2d70:	00800084 	movi	r2,2
    2d74:	80000015 	stw	zero,0(r16)
    2d78:	80000115 	stw	zero,4(r16)
    2d7c:	80000215 	stw	zero,8(r16)
    2d80:	80001915 	stw	zero,100(r16)
    2d84:	8080038d 	sth	r2,14(r16)
    2d88:	80000415 	stw	zero,16(r16)
    2d8c:	80000515 	stw	zero,20(r16)
    2d90:	80000615 	stw	zero,24(r16)
    2d94:	81001704 	addi	r4,r16,92
    2d98:	000b883a 	mov	r5,zero
    2d9c:	01800204 	movi	r6,8
    2da0:	0004a0c0 	call	4a0c <memset>
    2da4:	84000715 	stw	r16,28(r16)
    2da8:	85800815 	stw	r22,32(r16)
    2dac:	85400915 	stw	r21,36(r16)
    2db0:	85000a15 	stw	r20,40(r16)
    2db4:	84c00b15 	stw	r19,44(r16)
    2db8:	dfc00817 	ldw	ra,32(sp)
    2dbc:	ddc00717 	ldw	r23,28(sp)
    2dc0:	dd800617 	ldw	r22,24(sp)
    2dc4:	dd400517 	ldw	r21,20(sp)
    2dc8:	dd000417 	ldw	r20,16(sp)
    2dcc:	dcc00317 	ldw	r19,12(sp)
    2dd0:	dc800217 	ldw	r18,8(sp)
    2dd4:	dc400117 	ldw	r17,4(sp)
    2dd8:	dc000017 	ldw	r16,0(sp)
    2ddc:	dec00904 	addi	sp,sp,36
    2de0:	f800283a 	ret

00002de4 <__sfp>:
    2de4:	defffb04 	addi	sp,sp,-20
    2de8:	00800074 	movhi	r2,1
    2dec:	109bcd04 	addi	r2,r2,28468
    2df0:	dc800215 	stw	r18,8(sp)
    2df4:	14800017 	ldw	r18,0(r2)
    2df8:	dcc00315 	stw	r19,12(sp)
    2dfc:	dfc00415 	stw	ra,16(sp)
    2e00:	90800e17 	ldw	r2,56(r18)
    2e04:	dc400115 	stw	r17,4(sp)
    2e08:	dc000015 	stw	r16,0(sp)
    2e0c:	2027883a 	mov	r19,r4
    2e10:	10002f26 	beq	r2,zero,2ed0 <__sfp+0xec>
    2e14:	9480b804 	addi	r18,r18,736
    2e18:	047fffc4 	movi	r17,-1
    2e1c:	91400117 	ldw	r5,4(r18)
    2e20:	94000217 	ldw	r16,8(r18)
    2e24:	297fffc4 	addi	r5,r5,-1
    2e28:	28000a16 	blt	r5,zero,2e54 <__sfp+0x70>
    2e2c:	8080030f 	ldh	r2,12(r16)
    2e30:	10000c26 	beq	r2,zero,2e64 <__sfp+0x80>
    2e34:	80c01d04 	addi	r3,r16,116
    2e38:	00000206 	br	2e44 <__sfp+0x60>
    2e3c:	18bfe60f 	ldh	r2,-104(r3)
    2e40:	10000826 	beq	r2,zero,2e64 <__sfp+0x80>
    2e44:	297fffc4 	addi	r5,r5,-1
    2e48:	1c3ffd04 	addi	r16,r3,-12
    2e4c:	18c01a04 	addi	r3,r3,104
    2e50:	2c7ffa1e 	bne	r5,r17,2e3c <__alt_data_end+0xfe002e3c>
    2e54:	90800017 	ldw	r2,0(r18)
    2e58:	10002026 	beq	r2,zero,2edc <__sfp+0xf8>
    2e5c:	1025883a 	mov	r18,r2
    2e60:	003fee06 	br	2e1c <__alt_data_end+0xfe002e1c>
    2e64:	00bfffc4 	movi	r2,-1
    2e68:	8080038d 	sth	r2,14(r16)
    2e6c:	00800044 	movi	r2,1
    2e70:	8080030d 	sth	r2,12(r16)
    2e74:	80001915 	stw	zero,100(r16)
    2e78:	80000015 	stw	zero,0(r16)
    2e7c:	80000215 	stw	zero,8(r16)
    2e80:	80000115 	stw	zero,4(r16)
    2e84:	80000415 	stw	zero,16(r16)
    2e88:	80000515 	stw	zero,20(r16)
    2e8c:	80000615 	stw	zero,24(r16)
    2e90:	81001704 	addi	r4,r16,92
    2e94:	000b883a 	mov	r5,zero
    2e98:	01800204 	movi	r6,8
    2e9c:	0004a0c0 	call	4a0c <memset>
    2ea0:	8005883a 	mov	r2,r16
    2ea4:	80000c15 	stw	zero,48(r16)
    2ea8:	80000d15 	stw	zero,52(r16)
    2eac:	80001115 	stw	zero,68(r16)
    2eb0:	80001215 	stw	zero,72(r16)
    2eb4:	dfc00417 	ldw	ra,16(sp)
    2eb8:	dcc00317 	ldw	r19,12(sp)
    2ebc:	dc800217 	ldw	r18,8(sp)
    2ec0:	dc400117 	ldw	r17,4(sp)
    2ec4:	dc000017 	ldw	r16,0(sp)
    2ec8:	dec00504 	addi	sp,sp,20
    2ecc:	f800283a 	ret
    2ed0:	9009883a 	mov	r4,r18
    2ed4:	0002c480 	call	2c48 <__sinit>
    2ed8:	003fce06 	br	2e14 <__alt_data_end+0xfe002e14>
    2edc:	9809883a 	mov	r4,r19
    2ee0:	01400104 	movi	r5,4
    2ee4:	0002bcc0 	call	2bcc <__sfmoreglue>
    2ee8:	90800015 	stw	r2,0(r18)
    2eec:	103fdb1e 	bne	r2,zero,2e5c <__alt_data_end+0xfe002e5c>
    2ef0:	00800304 	movi	r2,12
    2ef4:	98800015 	stw	r2,0(r19)
    2ef8:	0005883a 	mov	r2,zero
    2efc:	003fed06 	br	2eb4 <__alt_data_end+0xfe002eb4>

00002f00 <__sfp_lock_acquire>:
    2f00:	f800283a 	ret

00002f04 <__sfp_lock_release>:
    2f04:	f800283a 	ret

00002f08 <__sinit_lock_acquire>:
    2f08:	f800283a 	ret

00002f0c <__sinit_lock_release>:
    2f0c:	f800283a 	ret

00002f10 <__fp_lock_all>:
    2f10:	00800074 	movhi	r2,1
    2f14:	109bce04 	addi	r2,r2,28472
    2f18:	11000017 	ldw	r4,0(r2)
    2f1c:	01400034 	movhi	r5,0
    2f20:	294aec04 	addi	r5,r5,11184
    2f24:	0003a781 	jmpi	3a78 <_fwalk>

00002f28 <__fp_unlock_all>:
    2f28:	00800074 	movhi	r2,1
    2f2c:	109bce04 	addi	r2,r2,28472
    2f30:	11000017 	ldw	r4,0(r2)
    2f34:	01400034 	movhi	r5,0
    2f38:	294aee04 	addi	r5,r5,11192
    2f3c:	0003a781 	jmpi	3a78 <_fwalk>

00002f40 <_fread_r>:
    2f40:	defff504 	addi	sp,sp,-44
    2f44:	dd400615 	stw	r21,24(sp)
    2f48:	39ab383a 	mul	r21,r7,r6
    2f4c:	ddc00815 	stw	r23,32(sp)
    2f50:	dd800715 	stw	r22,28(sp)
    2f54:	dc000115 	stw	r16,4(sp)
    2f58:	dfc00a15 	stw	ra,40(sp)
    2f5c:	df000915 	stw	fp,36(sp)
    2f60:	dd000515 	stw	r20,20(sp)
    2f64:	dcc00415 	stw	r19,16(sp)
    2f68:	dc800315 	stw	r18,12(sp)
    2f6c:	dc400215 	stw	r17,8(sp)
    2f70:	302f883a 	mov	r23,r6
    2f74:	382d883a 	mov	r22,r7
    2f78:	dc000b17 	ldw	r16,44(sp)
    2f7c:	a8003b26 	beq	r21,zero,306c <_fread_r+0x12c>
    2f80:	2029883a 	mov	r20,r4
    2f84:	2825883a 	mov	r18,r5
    2f88:	20000226 	beq	r4,zero,2f94 <_fread_r+0x54>
    2f8c:	20800e17 	ldw	r2,56(r4)
    2f90:	10007326 	beq	r2,zero,3160 <_fread_r+0x220>
    2f94:	0002f000 	call	2f00 <__sfp_lock_acquire>
    2f98:	8080030b 	ldhu	r2,12(r16)
    2f9c:	10c8000c 	andi	r3,r2,8192
    2fa0:	1800061e 	bne	r3,zero,2fbc <_fread_r+0x7c>
    2fa4:	81001917 	ldw	r4,100(r16)
    2fa8:	00f7ffc4 	movi	r3,-8193
    2fac:	10880014 	ori	r2,r2,8192
    2fb0:	20c6703a 	and	r3,r4,r3
    2fb4:	8080030d 	sth	r2,12(r16)
    2fb8:	80c01915 	stw	r3,100(r16)
    2fbc:	84400117 	ldw	r17,4(r16)
    2fc0:	88003116 	blt	r17,zero,3088 <_fread_r+0x148>
    2fc4:	1080008c 	andi	r2,r2,2
    2fc8:	8807883a 	mov	r3,r17
    2fcc:	1000331e 	bne	r2,zero,309c <_fread_r+0x15c>
    2fd0:	a827883a 	mov	r19,r21
    2fd4:	00000b06 	br	3004 <_fread_r+0xc4>
    2fd8:	00047c40 	call	47c4 <memcpy>
    2fdc:	80800017 	ldw	r2,0(r16)
    2fe0:	9465883a 	add	r18,r18,r17
    2fe4:	9c67c83a 	sub	r19,r19,r17
    2fe8:	1463883a 	add	r17,r2,r17
    2fec:	a009883a 	mov	r4,r20
    2ff0:	800b883a 	mov	r5,r16
    2ff4:	84400015 	stw	r17,0(r16)
    2ff8:	00050a00 	call	50a0 <__srefill_r>
    2ffc:	10001d1e 	bne	r2,zero,3074 <_fread_r+0x134>
    3000:	84400117 	ldw	r17,4(r16)
    3004:	9009883a 	mov	r4,r18
    3008:	880d883a 	mov	r6,r17
    300c:	81400017 	ldw	r5,0(r16)
    3010:	8cfff136 	bltu	r17,r19,2fd8 <__alt_data_end+0xfe002fd8>
    3014:	980d883a 	mov	r6,r19
    3018:	00047c40 	call	47c4 <memcpy>
    301c:	80800117 	ldw	r2,4(r16)
    3020:	80c00017 	ldw	r3,0(r16)
    3024:	14c5c83a 	sub	r2,r2,r19
    3028:	1ce7883a 	add	r19,r3,r19
    302c:	80800115 	stw	r2,4(r16)
    3030:	84c00015 	stw	r19,0(r16)
    3034:	0002f040 	call	2f04 <__sfp_lock_release>
    3038:	b005883a 	mov	r2,r22
    303c:	dfc00a17 	ldw	ra,40(sp)
    3040:	df000917 	ldw	fp,36(sp)
    3044:	ddc00817 	ldw	r23,32(sp)
    3048:	dd800717 	ldw	r22,28(sp)
    304c:	dd400617 	ldw	r21,24(sp)
    3050:	dd000517 	ldw	r20,20(sp)
    3054:	dcc00417 	ldw	r19,16(sp)
    3058:	dc800317 	ldw	r18,12(sp)
    305c:	dc400217 	ldw	r17,8(sp)
    3060:	dc000117 	ldw	r16,4(sp)
    3064:	dec00b04 	addi	sp,sp,44
    3068:	f800283a 	ret
    306c:	0005883a 	mov	r2,zero
    3070:	003ff206 	br	303c <__alt_data_end+0xfe00303c>
    3074:	0002f040 	call	2f04 <__sfp_lock_release>
    3078:	acc9c83a 	sub	r4,r21,r19
    307c:	b80b883a 	mov	r5,r23
    3080:	000f7b00 	call	f7b0 <__udivsi3>
    3084:	003fed06 	br	303c <__alt_data_end+0xfe00303c>
    3088:	80000115 	stw	zero,4(r16)
    308c:	1080008c 	andi	r2,r2,2
    3090:	0007883a 	mov	r3,zero
    3094:	0023883a 	mov	r17,zero
    3098:	103fcd26 	beq	r2,zero,2fd0 <__alt_data_end+0xfe002fd0>
    309c:	1823883a 	mov	r17,r3
    30a0:	a8c0012e 	bgeu	r21,r3,30a8 <_fread_r+0x168>
    30a4:	a823883a 	mov	r17,r21
    30a8:	81400017 	ldw	r5,0(r16)
    30ac:	9009883a 	mov	r4,r18
    30b0:	880d883a 	mov	r6,r17
    30b4:	00047c40 	call	47c4 <memcpy>
    30b8:	80800117 	ldw	r2,4(r16)
    30bc:	84c00017 	ldw	r19,0(r16)
    30c0:	81400c17 	ldw	r5,48(r16)
    30c4:	1445c83a 	sub	r2,r2,r17
    30c8:	9c67883a 	add	r19,r19,r17
    30cc:	84c00015 	stw	r19,0(r16)
    30d0:	80800115 	stw	r2,4(r16)
    30d4:	9465883a 	add	r18,r18,r17
    30d8:	ac63c83a 	sub	r17,r21,r17
    30dc:	28002626 	beq	r5,zero,3178 <_fread_r+0x238>
    30e0:	883fd426 	beq	r17,zero,3034 <__alt_data_end+0xfe003034>
    30e4:	80801004 	addi	r2,r16,64
    30e8:	28800326 	beq	r5,r2,30f8 <_fread_r+0x1b8>
    30ec:	a009883a 	mov	r4,r20
    30f0:	00032fc0 	call	32fc <_free_r>
    30f4:	84c00017 	ldw	r19,0(r16)
    30f8:	80000c15 	stw	zero,48(r16)
    30fc:	80c00417 	ldw	r3,16(r16)
    3100:	87000517 	ldw	fp,20(r16)
    3104:	d8c00015 	stw	r3,0(sp)
    3108:	00000106 	br	3110 <_fread_r+0x1d0>
    310c:	883fc926 	beq	r17,zero,3034 <__alt_data_end+0xfe003034>
    3110:	84800415 	stw	r18,16(r16)
    3114:	84400515 	stw	r17,20(r16)
    3118:	84800015 	stw	r18,0(r16)
    311c:	a009883a 	mov	r4,r20
    3120:	800b883a 	mov	r5,r16
    3124:	00050a00 	call	50a0 <__srefill_r>
    3128:	d8c00017 	ldw	r3,0(sp)
    312c:	81000117 	ldw	r4,4(r16)
    3130:	87000515 	stw	fp,20(r16)
    3134:	80c00415 	stw	r3,16(r16)
    3138:	84c00015 	stw	r19,0(r16)
    313c:	80000115 	stw	zero,4(r16)
    3140:	8923c83a 	sub	r17,r17,r4
    3144:	9125883a 	add	r18,r18,r4
    3148:	103ff026 	beq	r2,zero,310c <__alt_data_end+0xfe00310c>
    314c:	0002f040 	call	2f04 <__sfp_lock_release>
    3150:	ac49c83a 	sub	r4,r21,r17
    3154:	b80b883a 	mov	r5,r23
    3158:	000f7b00 	call	f7b0 <__udivsi3>
    315c:	003fb706 	br	303c <__alt_data_end+0xfe00303c>
    3160:	0002c480 	call	2c48 <__sinit>
    3164:	0002f000 	call	2f00 <__sfp_lock_acquire>
    3168:	8080030b 	ldhu	r2,12(r16)
    316c:	10c8000c 	andi	r3,r2,8192
    3170:	183f921e 	bne	r3,zero,2fbc <__alt_data_end+0xfe002fbc>
    3174:	003f8b06 	br	2fa4 <__alt_data_end+0xfe002fa4>
    3178:	883fe01e 	bne	r17,zero,30fc <__alt_data_end+0xfe0030fc>
    317c:	003fad06 	br	3034 <__alt_data_end+0xfe003034>

00003180 <fread>:
    3180:	00800074 	movhi	r2,1
    3184:	109bce04 	addi	r2,r2,28472
    3188:	2011883a 	mov	r8,r4
    318c:	11000017 	ldw	r4,0(r2)
    3190:	defffe04 	addi	sp,sp,-8
    3194:	2807883a 	mov	r3,r5
    3198:	3005883a 	mov	r2,r6
    319c:	d9c00015 	stw	r7,0(sp)
    31a0:	400b883a 	mov	r5,r8
    31a4:	180d883a 	mov	r6,r3
    31a8:	100f883a 	mov	r7,r2
    31ac:	dfc00115 	stw	ra,4(sp)
    31b0:	0002f400 	call	2f40 <_fread_r>
    31b4:	dfc00117 	ldw	ra,4(sp)
    31b8:	dec00204 	addi	sp,sp,8
    31bc:	f800283a 	ret

000031c0 <_malloc_trim_r>:
    31c0:	defffb04 	addi	sp,sp,-20
    31c4:	dcc00315 	stw	r19,12(sp)
    31c8:	dc800215 	stw	r18,8(sp)
    31cc:	dc400115 	stw	r17,4(sp)
    31d0:	dc000015 	stw	r16,0(sp)
    31d4:	2827883a 	mov	r19,r5
    31d8:	dfc00415 	stw	ra,16(sp)
    31dc:	04400074 	movhi	r17,1
    31e0:	8c563504 	addi	r17,r17,22740
    31e4:	2021883a 	mov	r16,r4
    31e8:	00126c80 	call	126c8 <__malloc_lock>
    31ec:	88800217 	ldw	r2,8(r17)
    31f0:	14800117 	ldw	r18,4(r2)
    31f4:	00bfff04 	movi	r2,-4
    31f8:	90a4703a 	and	r18,r18,r2
    31fc:	94e7c83a 	sub	r19,r18,r19
    3200:	9cc3fbc4 	addi	r19,r19,4079
    3204:	9826d33a 	srli	r19,r19,12
    3208:	0083ffc4 	movi	r2,4095
    320c:	9cffffc4 	addi	r19,r19,-1
    3210:	9826933a 	slli	r19,r19,12
    3214:	14c0060e 	bge	r2,r19,3230 <_malloc_trim_r+0x70>
    3218:	8009883a 	mov	r4,r16
    321c:	000b883a 	mov	r5,zero
    3220:	00052e00 	call	52e0 <_sbrk_r>
    3224:	88c00217 	ldw	r3,8(r17)
    3228:	1c87883a 	add	r3,r3,r18
    322c:	10c00a26 	beq	r2,r3,3258 <_malloc_trim_r+0x98>
    3230:	8009883a 	mov	r4,r16
    3234:	00126e80 	call	126e8 <__malloc_unlock>
    3238:	0005883a 	mov	r2,zero
    323c:	dfc00417 	ldw	ra,16(sp)
    3240:	dcc00317 	ldw	r19,12(sp)
    3244:	dc800217 	ldw	r18,8(sp)
    3248:	dc400117 	ldw	r17,4(sp)
    324c:	dc000017 	ldw	r16,0(sp)
    3250:	dec00504 	addi	sp,sp,20
    3254:	f800283a 	ret
    3258:	8009883a 	mov	r4,r16
    325c:	04cbc83a 	sub	r5,zero,r19
    3260:	00052e00 	call	52e0 <_sbrk_r>
    3264:	00ffffc4 	movi	r3,-1
    3268:	10c01326 	beq	r2,r3,32b8 <_malloc_trim_r+0xf8>
    326c:	008000b4 	movhi	r2,2
    3270:	10a2df04 	addi	r2,r2,-29828
    3274:	11000017 	ldw	r4,0(r2)
    3278:	88c00217 	ldw	r3,8(r17)
    327c:	94e5c83a 	sub	r18,r18,r19
    3280:	94800054 	ori	r18,r18,1
    3284:	24e7c83a 	sub	r19,r4,r19
    3288:	1c800115 	stw	r18,4(r3)
    328c:	8009883a 	mov	r4,r16
    3290:	14c00015 	stw	r19,0(r2)
    3294:	00126e80 	call	126e8 <__malloc_unlock>
    3298:	00800044 	movi	r2,1
    329c:	dfc00417 	ldw	ra,16(sp)
    32a0:	dcc00317 	ldw	r19,12(sp)
    32a4:	dc800217 	ldw	r18,8(sp)
    32a8:	dc400117 	ldw	r17,4(sp)
    32ac:	dc000017 	ldw	r16,0(sp)
    32b0:	dec00504 	addi	sp,sp,20
    32b4:	f800283a 	ret
    32b8:	8009883a 	mov	r4,r16
    32bc:	000b883a 	mov	r5,zero
    32c0:	00052e00 	call	52e0 <_sbrk_r>
    32c4:	88c00217 	ldw	r3,8(r17)
    32c8:	014003c4 	movi	r5,15
    32cc:	10c9c83a 	sub	r4,r2,r3
    32d0:	293fd70e 	bge	r5,r4,3230 <__alt_data_end+0xfe003230>
    32d4:	01400074 	movhi	r5,1
    32d8:	295bd104 	addi	r5,r5,28484
    32dc:	29400017 	ldw	r5,0(r5)
    32e0:	21000054 	ori	r4,r4,1
    32e4:	19000115 	stw	r4,4(r3)
    32e8:	1145c83a 	sub	r2,r2,r5
    32ec:	014000b4 	movhi	r5,2
    32f0:	2962df04 	addi	r5,r5,-29828
    32f4:	28800015 	stw	r2,0(r5)
    32f8:	003fcd06 	br	3230 <__alt_data_end+0xfe003230>

000032fc <_free_r>:
    32fc:	defffd04 	addi	sp,sp,-12
    3300:	dc000015 	stw	r16,0(sp)
    3304:	dfc00215 	stw	ra,8(sp)
    3308:	dc400115 	stw	r17,4(sp)
    330c:	2821883a 	mov	r16,r5
    3310:	28004c26 	beq	r5,zero,3444 <_free_r+0x148>
    3314:	2023883a 	mov	r17,r4
    3318:	00126c80 	call	126c8 <__malloc_lock>
    331c:	823fff17 	ldw	r8,-4(r16)
    3320:	00bfff84 	movi	r2,-2
    3324:	81bffe04 	addi	r6,r16,-8
    3328:	4084703a 	and	r2,r8,r2
    332c:	3087883a 	add	r3,r6,r2
    3330:	01400074 	movhi	r5,1
    3334:	29563504 	addi	r5,r5,22740
    3338:	1a400117 	ldw	r9,4(r3)
    333c:	29000217 	ldw	r4,8(r5)
    3340:	01ffff04 	movi	r7,-4
    3344:	49ce703a 	and	r7,r9,r7
    3348:	20c06526 	beq	r4,r3,34e0 <_free_r+0x1e4>
    334c:	19c00115 	stw	r7,4(r3)
    3350:	4200004c 	andi	r8,r8,1
    3354:	40003026 	beq	r8,zero,3418 <_free_r+0x11c>
    3358:	0009883a 	mov	r4,zero
    335c:	19d1883a 	add	r8,r3,r7
    3360:	42000117 	ldw	r8,4(r8)
    3364:	4200004c 	andi	r8,r8,1
    3368:	4000061e 	bne	r8,zero,3384 <_free_r+0x88>
    336c:	11c5883a 	add	r2,r2,r7
    3370:	19c00217 	ldw	r7,8(r3)
    3374:	20004e26 	beq	r4,zero,34b0 <_free_r+0x1b4>
    3378:	18c00317 	ldw	r3,12(r3)
    337c:	38c00315 	stw	r3,12(r7)
    3380:	19c00215 	stw	r7,8(r3)
    3384:	10c00054 	ori	r3,r2,1
    3388:	30c00115 	stw	r3,4(r6)
    338c:	3087883a 	add	r3,r6,r2
    3390:	18800015 	stw	r2,0(r3)
    3394:	20001a1e 	bne	r4,zero,3400 <_free_r+0x104>
    3398:	00c07fc4 	movi	r3,511
    339c:	18802e2e 	bgeu	r3,r2,3458 <_free_r+0x15c>
    33a0:	1006d27a 	srli	r3,r2,9
    33a4:	01000104 	movi	r4,4
    33a8:	20c06636 	bltu	r4,r3,3544 <_free_r+0x248>
    33ac:	1008d1ba 	srli	r4,r2,6
    33b0:	21000e04 	addi	r4,r4,56
    33b4:	210f883a 	add	r7,r4,r4
    33b8:	39cf883a 	add	r7,r7,r7
    33bc:	39cf883a 	add	r7,r7,r7
    33c0:	29cf883a 	add	r7,r5,r7
    33c4:	38c00217 	ldw	r3,8(r7)
    33c8:	01400074 	movhi	r5,1
    33cc:	29563504 	addi	r5,r5,22740
    33d0:	19c06126 	beq	r3,r7,3558 <_free_r+0x25c>
    33d4:	013fff04 	movi	r4,-4
    33d8:	19400117 	ldw	r5,4(r3)
    33dc:	290a703a 	and	r5,r5,r4
    33e0:	1140022e 	bgeu	r2,r5,33ec <_free_r+0xf0>
    33e4:	18c00217 	ldw	r3,8(r3)
    33e8:	38fffb1e 	bne	r7,r3,33d8 <__alt_data_end+0xfe0033d8>
    33ec:	18800317 	ldw	r2,12(r3)
    33f0:	30800315 	stw	r2,12(r6)
    33f4:	30c00215 	stw	r3,8(r6)
    33f8:	11800215 	stw	r6,8(r2)
    33fc:	19800315 	stw	r6,12(r3)
    3400:	8809883a 	mov	r4,r17
    3404:	dfc00217 	ldw	ra,8(sp)
    3408:	dc400117 	ldw	r17,4(sp)
    340c:	dc000017 	ldw	r16,0(sp)
    3410:	dec00304 	addi	sp,sp,12
    3414:	00126e81 	jmpi	126e8 <__malloc_unlock>
    3418:	813ffe17 	ldw	r4,-8(r16)
    341c:	2a400204 	addi	r9,r5,8
    3420:	310dc83a 	sub	r6,r6,r4
    3424:	32000217 	ldw	r8,8(r6)
    3428:	1105883a 	add	r2,r2,r4
    342c:	42404326 	beq	r8,r9,353c <_free_r+0x240>
    3430:	32400317 	ldw	r9,12(r6)
    3434:	0009883a 	mov	r4,zero
    3438:	42400315 	stw	r9,12(r8)
    343c:	4a000215 	stw	r8,8(r9)
    3440:	003fc606 	br	335c <__alt_data_end+0xfe00335c>
    3444:	dfc00217 	ldw	ra,8(sp)
    3448:	dc400117 	ldw	r17,4(sp)
    344c:	dc000017 	ldw	r16,0(sp)
    3450:	dec00304 	addi	sp,sp,12
    3454:	f800283a 	ret
    3458:	1004d0fa 	srli	r2,r2,3
    345c:	02000044 	movi	r8,1
    3460:	29c00117 	ldw	r7,4(r5)
    3464:	1087883a 	add	r3,r2,r2
    3468:	18c7883a 	add	r3,r3,r3
    346c:	18c7883a 	add	r3,r3,r3
    3470:	28c7883a 	add	r3,r5,r3
    3474:	1005d0ba 	srai	r2,r2,2
    3478:	19000217 	ldw	r4,8(r3)
    347c:	30c00315 	stw	r3,12(r6)
    3480:	4084983a 	sll	r2,r8,r2
    3484:	31000215 	stw	r4,8(r6)
    3488:	19800215 	stw	r6,8(r3)
    348c:	11c4b03a 	or	r2,r2,r7
    3490:	21800315 	stw	r6,12(r4)
    3494:	8809883a 	mov	r4,r17
    3498:	28800115 	stw	r2,4(r5)
    349c:	dfc00217 	ldw	ra,8(sp)
    34a0:	dc400117 	ldw	r17,4(sp)
    34a4:	dc000017 	ldw	r16,0(sp)
    34a8:	dec00304 	addi	sp,sp,12
    34ac:	00126e81 	jmpi	126e8 <__malloc_unlock>
    34b0:	02000074 	movhi	r8,1
    34b4:	42163704 	addi	r8,r8,22748
    34b8:	3a3faf1e 	bne	r7,r8,3378 <__alt_data_end+0xfe003378>
    34bc:	29800515 	stw	r6,20(r5)
    34c0:	29800415 	stw	r6,16(r5)
    34c4:	10c00054 	ori	r3,r2,1
    34c8:	31c00315 	stw	r7,12(r6)
    34cc:	31c00215 	stw	r7,8(r6)
    34d0:	30c00115 	stw	r3,4(r6)
    34d4:	308d883a 	add	r6,r6,r2
    34d8:	30800015 	stw	r2,0(r6)
    34dc:	003fc806 	br	3400 <__alt_data_end+0xfe003400>
    34e0:	4200004c 	andi	r8,r8,1
    34e4:	3885883a 	add	r2,r7,r2
    34e8:	4000071e 	bne	r8,zero,3508 <_free_r+0x20c>
    34ec:	81fffe17 	ldw	r7,-8(r16)
    34f0:	31cdc83a 	sub	r6,r6,r7
    34f4:	30c00317 	ldw	r3,12(r6)
    34f8:	31000217 	ldw	r4,8(r6)
    34fc:	11c5883a 	add	r2,r2,r7
    3500:	20c00315 	stw	r3,12(r4)
    3504:	19000215 	stw	r4,8(r3)
    3508:	00c00074 	movhi	r3,1
    350c:	18dbd204 	addi	r3,r3,28488
    3510:	11000054 	ori	r4,r2,1
    3514:	18c00017 	ldw	r3,0(r3)
    3518:	31000115 	stw	r4,4(r6)
    351c:	29800215 	stw	r6,8(r5)
    3520:	10ffb736 	bltu	r2,r3,3400 <__alt_data_end+0xfe003400>
    3524:	008000b4 	movhi	r2,2
    3528:	10a2d704 	addi	r2,r2,-29860
    352c:	11400017 	ldw	r5,0(r2)
    3530:	8809883a 	mov	r4,r17
    3534:	00031c00 	call	31c0 <_malloc_trim_r>
    3538:	003fb106 	br	3400 <__alt_data_end+0xfe003400>
    353c:	01000044 	movi	r4,1
    3540:	003f8606 	br	335c <__alt_data_end+0xfe00335c>
    3544:	01000504 	movi	r4,20
    3548:	20c00b36 	bltu	r4,r3,3578 <_free_r+0x27c>
    354c:	190016c4 	addi	r4,r3,91
    3550:	210f883a 	add	r7,r4,r4
    3554:	003f9806 	br	33b8 <__alt_data_end+0xfe0033b8>
    3558:	2009d0ba 	srai	r4,r4,2
    355c:	00800044 	movi	r2,1
    3560:	29c00117 	ldw	r7,4(r5)
    3564:	1108983a 	sll	r4,r2,r4
    3568:	1805883a 	mov	r2,r3
    356c:	21c8b03a 	or	r4,r4,r7
    3570:	29000115 	stw	r4,4(r5)
    3574:	003f9e06 	br	33f0 <__alt_data_end+0xfe0033f0>
    3578:	01001504 	movi	r4,84
    357c:	20c00436 	bltu	r4,r3,3590 <_free_r+0x294>
    3580:	1008d33a 	srli	r4,r2,12
    3584:	21001b84 	addi	r4,r4,110
    3588:	210f883a 	add	r7,r4,r4
    358c:	003f8a06 	br	33b8 <__alt_data_end+0xfe0033b8>
    3590:	01005504 	movi	r4,340
    3594:	20c00436 	bltu	r4,r3,35a8 <_free_r+0x2ac>
    3598:	1008d3fa 	srli	r4,r2,15
    359c:	21001dc4 	addi	r4,r4,119
    35a0:	210f883a 	add	r7,r4,r4
    35a4:	003f8406 	br	33b8 <__alt_data_end+0xfe0033b8>
    35a8:	01015504 	movi	r4,1364
    35ac:	20c00436 	bltu	r4,r3,35c0 <_free_r+0x2c4>
    35b0:	1008d4ba 	srli	r4,r2,18
    35b4:	21001f04 	addi	r4,r4,124
    35b8:	210f883a 	add	r7,r4,r4
    35bc:	003f7e06 	br	33b8 <__alt_data_end+0xfe0033b8>
    35c0:	01c03f04 	movi	r7,252
    35c4:	01001f84 	movi	r4,126
    35c8:	003f7b06 	br	33b8 <__alt_data_end+0xfe0033b8>

000035cc <__sfvwrite_r>:
    35cc:	30800217 	ldw	r2,8(r6)
    35d0:	defff404 	addi	sp,sp,-48
    35d4:	dcc00515 	stw	r19,20(sp)
    35d8:	dfc00b15 	stw	ra,44(sp)
    35dc:	df000a15 	stw	fp,40(sp)
    35e0:	ddc00915 	stw	r23,36(sp)
    35e4:	dd800815 	stw	r22,32(sp)
    35e8:	dd400715 	stw	r21,28(sp)
    35ec:	dd000615 	stw	r20,24(sp)
    35f0:	dc800415 	stw	r18,16(sp)
    35f4:	dc400315 	stw	r17,12(sp)
    35f8:	dc000215 	stw	r16,8(sp)
    35fc:	3027883a 	mov	r19,r6
    3600:	10001d26 	beq	r2,zero,3678 <__sfvwrite_r+0xac>
    3604:	2880030b 	ldhu	r2,12(r5)
    3608:	202b883a 	mov	r21,r4
    360c:	2821883a 	mov	r16,r5
    3610:	10c0020c 	andi	r3,r2,8
    3614:	18002526 	beq	r3,zero,36ac <__sfvwrite_r+0xe0>
    3618:	28c00417 	ldw	r3,16(r5)
    361c:	18002326 	beq	r3,zero,36ac <__sfvwrite_r+0xe0>
    3620:	10c0008c 	andi	r3,r2,2
    3624:	9c400017 	ldw	r17,0(r19)
    3628:	18002826 	beq	r3,zero,36cc <__sfvwrite_r+0x100>
    362c:	0029883a 	mov	r20,zero
    3630:	0025883a 	mov	r18,zero
    3634:	05810004 	movi	r22,1024
    3638:	a00d883a 	mov	r6,r20
    363c:	a809883a 	mov	r4,r21
    3640:	90004726 	beq	r18,zero,3760 <__sfvwrite_r+0x194>
    3644:	900f883a 	mov	r7,r18
    3648:	81400717 	ldw	r5,28(r16)
    364c:	b480012e 	bgeu	r22,r18,3654 <__sfvwrite_r+0x88>
    3650:	01c10004 	movi	r7,1024
    3654:	80800917 	ldw	r2,36(r16)
    3658:	103ee83a 	callr	r2
    365c:	00804c0e 	bge	zero,r2,3790 <__sfvwrite_r+0x1c4>
    3660:	98c00217 	ldw	r3,8(r19)
    3664:	a0a9883a 	add	r20,r20,r2
    3668:	90a5c83a 	sub	r18,r18,r2
    366c:	1885c83a 	sub	r2,r3,r2
    3670:	98800215 	stw	r2,8(r19)
    3674:	103ff01e 	bne	r2,zero,3638 <__alt_data_end+0xfe003638>
    3678:	0005883a 	mov	r2,zero
    367c:	dfc00b17 	ldw	ra,44(sp)
    3680:	df000a17 	ldw	fp,40(sp)
    3684:	ddc00917 	ldw	r23,36(sp)
    3688:	dd800817 	ldw	r22,32(sp)
    368c:	dd400717 	ldw	r21,28(sp)
    3690:	dd000617 	ldw	r20,24(sp)
    3694:	dcc00517 	ldw	r19,20(sp)
    3698:	dc800417 	ldw	r18,16(sp)
    369c:	dc400317 	ldw	r17,12(sp)
    36a0:	dc000217 	ldw	r16,8(sp)
    36a4:	dec00c04 	addi	sp,sp,48
    36a8:	f800283a 	ret
    36ac:	a809883a 	mov	r4,r21
    36b0:	800b883a 	mov	r5,r16
    36b4:	0009a4c0 	call	9a4c <__swsetup_r>
    36b8:	1000e81e 	bne	r2,zero,3a5c <__sfvwrite_r+0x490>
    36bc:	8080030b 	ldhu	r2,12(r16)
    36c0:	9c400017 	ldw	r17,0(r19)
    36c4:	10c0008c 	andi	r3,r2,2
    36c8:	183fd81e 	bne	r3,zero,362c <__alt_data_end+0xfe00362c>
    36cc:	10c0004c 	andi	r3,r2,1
    36d0:	002d883a 	mov	r22,zero
    36d4:	1800331e 	bne	r3,zero,37a4 <__sfvwrite_r+0x1d8>
    36d8:	0025883a 	mov	r18,zero
    36dc:	90001c26 	beq	r18,zero,3750 <__sfvwrite_r+0x184>
    36e0:	10c0800c 	andi	r3,r2,512
    36e4:	85000217 	ldw	r20,8(r16)
    36e8:	18006f26 	beq	r3,zero,38a8 <__sfvwrite_r+0x2dc>
    36ec:	95008936 	bltu	r18,r20,3914 <__sfvwrite_r+0x348>
    36f0:	10c1200c 	andi	r3,r2,1152
    36f4:	1800a11e 	bne	r3,zero,397c <__sfvwrite_r+0x3b0>
    36f8:	81000017 	ldw	r4,0(r16)
    36fc:	a02f883a 	mov	r23,r20
    3700:	a039883a 	mov	fp,r20
    3704:	9029883a 	mov	r20,r18
    3708:	b00b883a 	mov	r5,r22
    370c:	b80d883a 	mov	r6,r23
    3710:	00048d00 	call	48d0 <memmove>
    3714:	81400217 	ldw	r5,8(r16)
    3718:	81000017 	ldw	r4,0(r16)
    371c:	9005883a 	mov	r2,r18
    3720:	2f39c83a 	sub	fp,r5,fp
    3724:	25c7883a 	add	r3,r4,r23
    3728:	87000215 	stw	fp,8(r16)
    372c:	80c00015 	stw	r3,0(r16)
    3730:	98c00217 	ldw	r3,8(r19)
    3734:	b0ad883a 	add	r22,r22,r2
    3738:	90a5c83a 	sub	r18,r18,r2
    373c:	1d29c83a 	sub	r20,r3,r20
    3740:	9d000215 	stw	r20,8(r19)
    3744:	a03fcc26 	beq	r20,zero,3678 <__alt_data_end+0xfe003678>
    3748:	8080030b 	ldhu	r2,12(r16)
    374c:	903fe41e 	bne	r18,zero,36e0 <__alt_data_end+0xfe0036e0>
    3750:	8d800017 	ldw	r22,0(r17)
    3754:	8c800117 	ldw	r18,4(r17)
    3758:	8c400204 	addi	r17,r17,8
    375c:	003fdf06 	br	36dc <__alt_data_end+0xfe0036dc>
    3760:	8d000017 	ldw	r20,0(r17)
    3764:	8c800117 	ldw	r18,4(r17)
    3768:	8c400204 	addi	r17,r17,8
    376c:	003fb206 	br	3638 <__alt_data_end+0xfe003638>
    3770:	0004b200 	call	4b20 <_realloc_r>
    3774:	1039883a 	mov	fp,r2
    3778:	10009d1e 	bne	r2,zero,39f0 <__sfvwrite_r+0x424>
    377c:	81400417 	ldw	r5,16(r16)
    3780:	a809883a 	mov	r4,r21
    3784:	00032fc0 	call	32fc <_free_r>
    3788:	00800304 	movi	r2,12
    378c:	a8800015 	stw	r2,0(r21)
    3790:	80c0030b 	ldhu	r3,12(r16)
    3794:	00bfffc4 	movi	r2,-1
    3798:	18c01014 	ori	r3,r3,64
    379c:	80c0030d 	sth	r3,12(r16)
    37a0:	003fb606 	br	367c <__alt_data_end+0xfe00367c>
    37a4:	0007883a 	mov	r3,zero
    37a8:	0039883a 	mov	fp,zero
    37ac:	0025883a 	mov	r18,zero
    37b0:	90001f26 	beq	r18,zero,3830 <__sfvwrite_r+0x264>
    37b4:	18006826 	beq	r3,zero,3958 <__sfvwrite_r+0x38c>
    37b8:	b02f883a 	mov	r23,r22
    37bc:	9580012e 	bgeu	r18,r22,37c4 <__sfvwrite_r+0x1f8>
    37c0:	902f883a 	mov	r23,r18
    37c4:	81000017 	ldw	r4,0(r16)
    37c8:	80800417 	ldw	r2,16(r16)
    37cc:	b829883a 	mov	r20,r23
    37d0:	81800217 	ldw	r6,8(r16)
    37d4:	81c00517 	ldw	r7,20(r16)
    37d8:	1100022e 	bgeu	r2,r4,37e4 <__sfvwrite_r+0x218>
    37dc:	31d1883a 	add	r8,r6,r7
    37e0:	45c01816 	blt	r8,r23,3844 <__sfvwrite_r+0x278>
    37e4:	b9c03f16 	blt	r23,r7,38e4 <__sfvwrite_r+0x318>
    37e8:	80800917 	ldw	r2,36(r16)
    37ec:	81400717 	ldw	r5,28(r16)
    37f0:	a809883a 	mov	r4,r21
    37f4:	d8c00115 	stw	r3,4(sp)
    37f8:	e00d883a 	mov	r6,fp
    37fc:	103ee83a 	callr	r2
    3800:	1029883a 	mov	r20,r2
    3804:	d8c00117 	ldw	r3,4(sp)
    3808:	00bfe10e 	bge	zero,r2,3790 <__alt_data_end+0xfe003790>
    380c:	b52dc83a 	sub	r22,r22,r20
    3810:	b0001f26 	beq	r22,zero,3890 <__sfvwrite_r+0x2c4>
    3814:	98800217 	ldw	r2,8(r19)
    3818:	e539883a 	add	fp,fp,r20
    381c:	9525c83a 	sub	r18,r18,r20
    3820:	1529c83a 	sub	r20,r2,r20
    3824:	9d000215 	stw	r20,8(r19)
    3828:	a03f9326 	beq	r20,zero,3678 <__alt_data_end+0xfe003678>
    382c:	903fe11e 	bne	r18,zero,37b4 <__alt_data_end+0xfe0037b4>
    3830:	8f000017 	ldw	fp,0(r17)
    3834:	8c800117 	ldw	r18,4(r17)
    3838:	0007883a 	mov	r3,zero
    383c:	8c400204 	addi	r17,r17,8
    3840:	003fdb06 	br	37b0 <__alt_data_end+0xfe0037b0>
    3844:	400d883a 	mov	r6,r8
    3848:	e00b883a 	mov	r5,fp
    384c:	d8c00115 	stw	r3,4(sp)
    3850:	da000015 	stw	r8,0(sp)
    3854:	00048d00 	call	48d0 <memmove>
    3858:	da000017 	ldw	r8,0(sp)
    385c:	80800017 	ldw	r2,0(r16)
    3860:	a809883a 	mov	r4,r21
    3864:	800b883a 	mov	r5,r16
    3868:	1205883a 	add	r2,r2,r8
    386c:	80800015 	stw	r2,0(r16)
    3870:	da000015 	stw	r8,0(sp)
    3874:	000b5640 	call	b564 <_fflush_r>
    3878:	d8c00117 	ldw	r3,4(sp)
    387c:	da000017 	ldw	r8,0(sp)
    3880:	103fc31e 	bne	r2,zero,3790 <__alt_data_end+0xfe003790>
    3884:	4029883a 	mov	r20,r8
    3888:	b52dc83a 	sub	r22,r22,r20
    388c:	b03fe11e 	bne	r22,zero,3814 <__alt_data_end+0xfe003814>
    3890:	a809883a 	mov	r4,r21
    3894:	800b883a 	mov	r5,r16
    3898:	000b5640 	call	b564 <_fflush_r>
    389c:	103fbc1e 	bne	r2,zero,3790 <__alt_data_end+0xfe003790>
    38a0:	0007883a 	mov	r3,zero
    38a4:	003fdb06 	br	3814 <__alt_data_end+0xfe003814>
    38a8:	81000017 	ldw	r4,0(r16)
    38ac:	80800417 	ldw	r2,16(r16)
    38b0:	1100012e 	bgeu	r2,r4,38b8 <__sfvwrite_r+0x2ec>
    38b4:	a4805836 	bltu	r20,r18,3a18 <__sfvwrite_r+0x44c>
    38b8:	81c00517 	ldw	r7,20(r16)
    38bc:	91c01a36 	bltu	r18,r7,3928 <__sfvwrite_r+0x35c>
    38c0:	80800917 	ldw	r2,36(r16)
    38c4:	81400717 	ldw	r5,28(r16)
    38c8:	a809883a 	mov	r4,r21
    38cc:	b00d883a 	mov	r6,r22
    38d0:	103ee83a 	callr	r2
    38d4:	1029883a 	mov	r20,r2
    38d8:	00bfad0e 	bge	zero,r2,3790 <__alt_data_end+0xfe003790>
    38dc:	a005883a 	mov	r2,r20
    38e0:	003f9306 	br	3730 <__alt_data_end+0xfe003730>
    38e4:	b80d883a 	mov	r6,r23
    38e8:	e00b883a 	mov	r5,fp
    38ec:	d8c00115 	stw	r3,4(sp)
    38f0:	00048d00 	call	48d0 <memmove>
    38f4:	80800217 	ldw	r2,8(r16)
    38f8:	81000017 	ldw	r4,0(r16)
    38fc:	d8c00117 	ldw	r3,4(sp)
    3900:	15c5c83a 	sub	r2,r2,r23
    3904:	25ef883a 	add	r23,r4,r23
    3908:	80800215 	stw	r2,8(r16)
    390c:	85c00015 	stw	r23,0(r16)
    3910:	003fbe06 	br	380c <__alt_data_end+0xfe00380c>
    3914:	81000017 	ldw	r4,0(r16)
    3918:	9039883a 	mov	fp,r18
    391c:	9029883a 	mov	r20,r18
    3920:	902f883a 	mov	r23,r18
    3924:	003f7806 	br	3708 <__alt_data_end+0xfe003708>
    3928:	b00b883a 	mov	r5,r22
    392c:	900d883a 	mov	r6,r18
    3930:	00048d00 	call	48d0 <memmove>
    3934:	80c00217 	ldw	r3,8(r16)
    3938:	80800017 	ldw	r2,0(r16)
    393c:	9029883a 	mov	r20,r18
    3940:	1c87c83a 	sub	r3,r3,r18
    3944:	1485883a 	add	r2,r2,r18
    3948:	80800015 	stw	r2,0(r16)
    394c:	80c00215 	stw	r3,8(r16)
    3950:	9005883a 	mov	r2,r18
    3954:	003f7606 	br	3730 <__alt_data_end+0xfe003730>
    3958:	e009883a 	mov	r4,fp
    395c:	01400284 	movi	r5,10
    3960:	900d883a 	mov	r6,r18
    3964:	00046dc0 	call	46dc <memchr>
    3968:	10003926 	beq	r2,zero,3a50 <__sfvwrite_r+0x484>
    396c:	15800044 	addi	r22,r2,1
    3970:	b72dc83a 	sub	r22,r22,fp
    3974:	00c00044 	movi	r3,1
    3978:	003f8f06 	br	37b8 <__alt_data_end+0xfe0037b8>
    397c:	81000517 	ldw	r4,20(r16)
    3980:	81400417 	ldw	r5,16(r16)
    3984:	80c00017 	ldw	r3,0(r16)
    3988:	210d883a 	add	r6,r4,r4
    398c:	3109883a 	add	r4,r6,r4
    3990:	2028d7fa 	srli	r20,r4,31
    3994:	196fc83a 	sub	r23,r3,r5
    3998:	b9800044 	addi	r6,r23,1
    399c:	a109883a 	add	r4,r20,r4
    39a0:	2029d07a 	srai	r20,r4,1
    39a4:	348d883a 	add	r6,r6,r18
    39a8:	a180272e 	bgeu	r20,r6,3a48 <__sfvwrite_r+0x47c>
    39ac:	3029883a 	mov	r20,r6
    39b0:	1081000c 	andi	r2,r2,1024
    39b4:	a809883a 	mov	r4,r21
    39b8:	103f6d26 	beq	r2,zero,3770 <__alt_data_end+0xfe003770>
    39bc:	300b883a 	mov	r5,r6
    39c0:	0003cdc0 	call	3cdc <_malloc_r>
    39c4:	1039883a 	mov	fp,r2
    39c8:	103f6f26 	beq	r2,zero,3788 <__alt_data_end+0xfe003788>
    39cc:	81400417 	ldw	r5,16(r16)
    39d0:	1009883a 	mov	r4,r2
    39d4:	b80d883a 	mov	r6,r23
    39d8:	00047c40 	call	47c4 <memcpy>
    39dc:	8080030b 	ldhu	r2,12(r16)
    39e0:	00fedfc4 	movi	r3,-1153
    39e4:	10c4703a 	and	r2,r2,r3
    39e8:	10802014 	ori	r2,r2,128
    39ec:	8080030d 	sth	r2,12(r16)
    39f0:	e5c9883a 	add	r4,fp,r23
    39f4:	a5c7c83a 	sub	r3,r20,r23
    39f8:	87000415 	stw	fp,16(r16)
    39fc:	85000515 	stw	r20,20(r16)
    3a00:	81000015 	stw	r4,0(r16)
    3a04:	9039883a 	mov	fp,r18
    3a08:	80c00215 	stw	r3,8(r16)
    3a0c:	9029883a 	mov	r20,r18
    3a10:	902f883a 	mov	r23,r18
    3a14:	003f3c06 	br	3708 <__alt_data_end+0xfe003708>
    3a18:	b00b883a 	mov	r5,r22
    3a1c:	a00d883a 	mov	r6,r20
    3a20:	00048d00 	call	48d0 <memmove>
    3a24:	80800017 	ldw	r2,0(r16)
    3a28:	a809883a 	mov	r4,r21
    3a2c:	800b883a 	mov	r5,r16
    3a30:	1505883a 	add	r2,r2,r20
    3a34:	80800015 	stw	r2,0(r16)
    3a38:	000b5640 	call	b564 <_fflush_r>
    3a3c:	103f541e 	bne	r2,zero,3790 <__alt_data_end+0xfe003790>
    3a40:	a005883a 	mov	r2,r20
    3a44:	003f3a06 	br	3730 <__alt_data_end+0xfe003730>
    3a48:	a00d883a 	mov	r6,r20
    3a4c:	003fd806 	br	39b0 <__alt_data_end+0xfe0039b0>
    3a50:	95800044 	addi	r22,r18,1
    3a54:	00c00044 	movi	r3,1
    3a58:	003f5706 	br	37b8 <__alt_data_end+0xfe0037b8>
    3a5c:	80c0030b 	ldhu	r3,12(r16)
    3a60:	00bfffc4 	movi	r2,-1
    3a64:	18c01014 	ori	r3,r3,64
    3a68:	80c0030d 	sth	r3,12(r16)
    3a6c:	00c00244 	movi	r3,9
    3a70:	a8c00015 	stw	r3,0(r21)
    3a74:	003f0106 	br	367c <__alt_data_end+0xfe00367c>

00003a78 <_fwalk>:
    3a78:	defff904 	addi	sp,sp,-28
    3a7c:	dcc00315 	stw	r19,12(sp)
    3a80:	24c0b804 	addi	r19,r4,736
    3a84:	dd400515 	stw	r21,20(sp)
    3a88:	dd000415 	stw	r20,16(sp)
    3a8c:	dfc00615 	stw	ra,24(sp)
    3a90:	dc800215 	stw	r18,8(sp)
    3a94:	dc400115 	stw	r17,4(sp)
    3a98:	dc000015 	stw	r16,0(sp)
    3a9c:	282b883a 	mov	r21,r5
    3aa0:	0029883a 	mov	r20,zero
    3aa4:	0002f000 	call	2f00 <__sfp_lock_acquire>
    3aa8:	98001226 	beq	r19,zero,3af4 <_fwalk+0x7c>
    3aac:	04bfffc4 	movi	r18,-1
    3ab0:	9c400117 	ldw	r17,4(r19)
    3ab4:	9c000217 	ldw	r16,8(r19)
    3ab8:	8c7fffc4 	addi	r17,r17,-1
    3abc:	88000b16 	blt	r17,zero,3aec <_fwalk+0x74>
    3ac0:	84000304 	addi	r16,r16,12
    3ac4:	80c0000f 	ldh	r3,0(r16)
    3ac8:	8c7fffc4 	addi	r17,r17,-1
    3acc:	813ffd04 	addi	r4,r16,-12
    3ad0:	18000426 	beq	r3,zero,3ae4 <_fwalk+0x6c>
    3ad4:	80c0008f 	ldh	r3,2(r16)
    3ad8:	1c800226 	beq	r3,r18,3ae4 <_fwalk+0x6c>
    3adc:	a83ee83a 	callr	r21
    3ae0:	a0a8b03a 	or	r20,r20,r2
    3ae4:	84001a04 	addi	r16,r16,104
    3ae8:	8cbff61e 	bne	r17,r18,3ac4 <__alt_data_end+0xfe003ac4>
    3aec:	9cc00017 	ldw	r19,0(r19)
    3af0:	983fef1e 	bne	r19,zero,3ab0 <__alt_data_end+0xfe003ab0>
    3af4:	0002f040 	call	2f04 <__sfp_lock_release>
    3af8:	a005883a 	mov	r2,r20
    3afc:	dfc00617 	ldw	ra,24(sp)
    3b00:	dd400517 	ldw	r21,20(sp)
    3b04:	dd000417 	ldw	r20,16(sp)
    3b08:	dcc00317 	ldw	r19,12(sp)
    3b0c:	dc800217 	ldw	r18,8(sp)
    3b10:	dc400117 	ldw	r17,4(sp)
    3b14:	dc000017 	ldw	r16,0(sp)
    3b18:	dec00704 	addi	sp,sp,28
    3b1c:	f800283a 	ret

00003b20 <_fwalk_reent>:
    3b20:	defff804 	addi	sp,sp,-32
    3b24:	dcc00315 	stw	r19,12(sp)
    3b28:	24c0b804 	addi	r19,r4,736
    3b2c:	dd800615 	stw	r22,24(sp)
    3b30:	dd400515 	stw	r21,20(sp)
    3b34:	dd000415 	stw	r20,16(sp)
    3b38:	dfc00715 	stw	ra,28(sp)
    3b3c:	dc800215 	stw	r18,8(sp)
    3b40:	dc400115 	stw	r17,4(sp)
    3b44:	dc000015 	stw	r16,0(sp)
    3b48:	2029883a 	mov	r20,r4
    3b4c:	282b883a 	mov	r21,r5
    3b50:	002d883a 	mov	r22,zero
    3b54:	0002f000 	call	2f00 <__sfp_lock_acquire>
    3b58:	98001326 	beq	r19,zero,3ba8 <_fwalk_reent+0x88>
    3b5c:	04bfffc4 	movi	r18,-1
    3b60:	9c400117 	ldw	r17,4(r19)
    3b64:	9c000217 	ldw	r16,8(r19)
    3b68:	8c7fffc4 	addi	r17,r17,-1
    3b6c:	88000c16 	blt	r17,zero,3ba0 <_fwalk_reent+0x80>
    3b70:	84000304 	addi	r16,r16,12
    3b74:	80c0000f 	ldh	r3,0(r16)
    3b78:	8c7fffc4 	addi	r17,r17,-1
    3b7c:	817ffd04 	addi	r5,r16,-12
    3b80:	18000526 	beq	r3,zero,3b98 <_fwalk_reent+0x78>
    3b84:	80c0008f 	ldh	r3,2(r16)
    3b88:	a009883a 	mov	r4,r20
    3b8c:	1c800226 	beq	r3,r18,3b98 <_fwalk_reent+0x78>
    3b90:	a83ee83a 	callr	r21
    3b94:	b0acb03a 	or	r22,r22,r2
    3b98:	84001a04 	addi	r16,r16,104
    3b9c:	8cbff51e 	bne	r17,r18,3b74 <__alt_data_end+0xfe003b74>
    3ba0:	9cc00017 	ldw	r19,0(r19)
    3ba4:	983fee1e 	bne	r19,zero,3b60 <__alt_data_end+0xfe003b60>
    3ba8:	0002f040 	call	2f04 <__sfp_lock_release>
    3bac:	b005883a 	mov	r2,r22
    3bb0:	dfc00717 	ldw	ra,28(sp)
    3bb4:	dd800617 	ldw	r22,24(sp)
    3bb8:	dd400517 	ldw	r21,20(sp)
    3bbc:	dd000417 	ldw	r20,16(sp)
    3bc0:	dcc00317 	ldw	r19,12(sp)
    3bc4:	dc800217 	ldw	r18,8(sp)
    3bc8:	dc400117 	ldw	r17,4(sp)
    3bcc:	dc000017 	ldw	r16,0(sp)
    3bd0:	dec00804 	addi	sp,sp,32
    3bd4:	f800283a 	ret

00003bd8 <iswspace>:
    3bd8:	00803fc4 	movi	r2,255
    3bdc:	11000836 	bltu	r2,r4,3c00 <iswspace+0x28>
    3be0:	00800074 	movhi	r2,1
    3be4:	109bcf04 	addi	r2,r2,28476
    3be8:	10800017 	ldw	r2,0(r2)
    3bec:	1109883a 	add	r4,r2,r4
    3bf0:	20800043 	ldbu	r2,1(r4)
    3bf4:	1080020c 	andi	r2,r2,8
    3bf8:	10803fcc 	andi	r2,r2,255
    3bfc:	f800283a 	ret
    3c00:	0005883a 	mov	r2,zero
    3c04:	f800283a 	ret

00003c08 <_setlocale_r>:
    3c08:	defffe04 	addi	sp,sp,-8
    3c0c:	dc000015 	stw	r16,0(sp)
    3c10:	dfc00115 	stw	ra,4(sp)
    3c14:	3021883a 	mov	r16,r6
    3c18:	30000526 	beq	r6,zero,3c30 <_setlocale_r+0x28>
    3c1c:	3009883a 	mov	r4,r6
    3c20:	01400074 	movhi	r5,1
    3c24:	29543804 	addi	r5,r5,20704
    3c28:	00056100 	call	5610 <strcmp>
    3c2c:	1000061e 	bne	r2,zero,3c48 <_setlocale_r+0x40>
    3c30:	00800074 	movhi	r2,1
    3c34:	10938b04 	addi	r2,r2,20012
    3c38:	dfc00117 	ldw	ra,4(sp)
    3c3c:	dc000017 	ldw	r16,0(sp)
    3c40:	dec00204 	addi	sp,sp,8
    3c44:	f800283a 	ret
    3c48:	8009883a 	mov	r4,r16
    3c4c:	01400074 	movhi	r5,1
    3c50:	29538b04 	addi	r5,r5,20012
    3c54:	00056100 	call	5610 <strcmp>
    3c58:	103ff526 	beq	r2,zero,3c30 <__alt_data_end+0xfe003c30>
    3c5c:	8009883a 	mov	r4,r16
    3c60:	01400074 	movhi	r5,1
    3c64:	29545104 	addi	r5,r5,20804
    3c68:	00056100 	call	5610 <strcmp>
    3c6c:	103ff026 	beq	r2,zero,3c30 <__alt_data_end+0xfe003c30>
    3c70:	0005883a 	mov	r2,zero
    3c74:	003ff006 	br	3c38 <__alt_data_end+0xfe003c38>

00003c78 <__locale_charset>:
    3c78:	00800074 	movhi	r2,1
    3c7c:	10961f04 	addi	r2,r2,22652
    3c80:	f800283a 	ret

00003c84 <__locale_mb_cur_max>:
    3c84:	00800074 	movhi	r2,1
    3c88:	109bd004 	addi	r2,r2,28480
    3c8c:	10800017 	ldw	r2,0(r2)
    3c90:	f800283a 	ret

00003c94 <__locale_msgcharset>:
    3c94:	00800074 	movhi	r2,1
    3c98:	10961704 	addi	r2,r2,22620
    3c9c:	f800283a 	ret

00003ca0 <__locale_cjk_lang>:
    3ca0:	0005883a 	mov	r2,zero
    3ca4:	f800283a 	ret

00003ca8 <_localeconv_r>:
    3ca8:	00800074 	movhi	r2,1
    3cac:	10962704 	addi	r2,r2,22684
    3cb0:	f800283a 	ret

00003cb4 <setlocale>:
    3cb4:	00c00074 	movhi	r3,1
    3cb8:	18dbce04 	addi	r3,r3,28472
    3cbc:	2005883a 	mov	r2,r4
    3cc0:	19000017 	ldw	r4,0(r3)
    3cc4:	280d883a 	mov	r6,r5
    3cc8:	100b883a 	mov	r5,r2
    3ccc:	0003c081 	jmpi	3c08 <_setlocale_r>

00003cd0 <localeconv>:
    3cd0:	00800074 	movhi	r2,1
    3cd4:	10962704 	addi	r2,r2,22684
    3cd8:	f800283a 	ret

00003cdc <_malloc_r>:
    3cdc:	defff504 	addi	sp,sp,-44
    3ce0:	dc800315 	stw	r18,12(sp)
    3ce4:	dfc00a15 	stw	ra,40(sp)
    3ce8:	df000915 	stw	fp,36(sp)
    3cec:	ddc00815 	stw	r23,32(sp)
    3cf0:	dd800715 	stw	r22,28(sp)
    3cf4:	dd400615 	stw	r21,24(sp)
    3cf8:	dd000515 	stw	r20,20(sp)
    3cfc:	dcc00415 	stw	r19,16(sp)
    3d00:	dc400215 	stw	r17,8(sp)
    3d04:	dc000115 	stw	r16,4(sp)
    3d08:	288002c4 	addi	r2,r5,11
    3d0c:	00c00584 	movi	r3,22
    3d10:	2025883a 	mov	r18,r4
    3d14:	18802b2e 	bgeu	r3,r2,3dc4 <_malloc_r+0xe8>
    3d18:	047ffe04 	movi	r17,-8
    3d1c:	1462703a 	and	r17,r2,r17
    3d20:	88002a16 	blt	r17,zero,3dcc <_malloc_r+0xf0>
    3d24:	89402936 	bltu	r17,r5,3dcc <_malloc_r+0xf0>
    3d28:	9009883a 	mov	r4,r18
    3d2c:	00126c80 	call	126c8 <__malloc_lock>
    3d30:	00807dc4 	movi	r2,503
    3d34:	14402936 	bltu	r2,r17,3ddc <_malloc_r+0x100>
    3d38:	8808d0fa 	srli	r4,r17,3
    3d3c:	04c00074 	movhi	r19,1
    3d40:	9cd63504 	addi	r19,r19,22740
    3d44:	2105883a 	add	r2,r4,r4
    3d48:	1085883a 	add	r2,r2,r2
    3d4c:	1085883a 	add	r2,r2,r2
    3d50:	9885883a 	add	r2,r19,r2
    3d54:	14000317 	ldw	r16,12(r2)
    3d58:	80815226 	beq	r16,r2,42a4 <_malloc_r+0x5c8>
    3d5c:	81000117 	ldw	r4,4(r16)
    3d60:	00bfff04 	movi	r2,-4
    3d64:	80c00317 	ldw	r3,12(r16)
    3d68:	2084703a 	and	r2,r4,r2
    3d6c:	8085883a 	add	r2,r16,r2
    3d70:	81000217 	ldw	r4,8(r16)
    3d74:	11400117 	ldw	r5,4(r2)
    3d78:	20c00315 	stw	r3,12(r4)
    3d7c:	19000215 	stw	r4,8(r3)
    3d80:	28c00054 	ori	r3,r5,1
    3d84:	10c00115 	stw	r3,4(r2)
    3d88:	9009883a 	mov	r4,r18
    3d8c:	00126e80 	call	126e8 <__malloc_unlock>
    3d90:	80800204 	addi	r2,r16,8
    3d94:	dfc00a17 	ldw	ra,40(sp)
    3d98:	df000917 	ldw	fp,36(sp)
    3d9c:	ddc00817 	ldw	r23,32(sp)
    3da0:	dd800717 	ldw	r22,28(sp)
    3da4:	dd400617 	ldw	r21,24(sp)
    3da8:	dd000517 	ldw	r20,20(sp)
    3dac:	dcc00417 	ldw	r19,16(sp)
    3db0:	dc800317 	ldw	r18,12(sp)
    3db4:	dc400217 	ldw	r17,8(sp)
    3db8:	dc000117 	ldw	r16,4(sp)
    3dbc:	dec00b04 	addi	sp,sp,44
    3dc0:	f800283a 	ret
    3dc4:	04400404 	movi	r17,16
    3dc8:	897fd72e 	bgeu	r17,r5,3d28 <__alt_data_end+0xfe003d28>
    3dcc:	00800304 	movi	r2,12
    3dd0:	90800015 	stw	r2,0(r18)
    3dd4:	0005883a 	mov	r2,zero
    3dd8:	003fee06 	br	3d94 <__alt_data_end+0xfe003d94>
    3ddc:	8808d27a 	srli	r4,r17,9
    3de0:	20007126 	beq	r4,zero,3fa8 <_malloc_r+0x2cc>
    3de4:	00800104 	movi	r2,4
    3de8:	1100f536 	bltu	r2,r4,41c0 <_malloc_r+0x4e4>
    3dec:	8808d1ba 	srli	r4,r17,6
    3df0:	21000e04 	addi	r4,r4,56
    3df4:	210b883a 	add	r5,r4,r4
    3df8:	294b883a 	add	r5,r5,r5
    3dfc:	294b883a 	add	r5,r5,r5
    3e00:	04c00074 	movhi	r19,1
    3e04:	9cd63504 	addi	r19,r19,22740
    3e08:	994b883a 	add	r5,r19,r5
    3e0c:	2c000317 	ldw	r16,12(r5)
    3e10:	2c000e26 	beq	r5,r16,3e4c <_malloc_r+0x170>
    3e14:	80c00117 	ldw	r3,4(r16)
    3e18:	01ffff04 	movi	r7,-4
    3e1c:	018003c4 	movi	r6,15
    3e20:	19c6703a 	and	r3,r3,r7
    3e24:	1c45c83a 	sub	r2,r3,r17
    3e28:	30800716 	blt	r6,r2,3e48 <_malloc_r+0x16c>
    3e2c:	1000610e 	bge	r2,zero,3fb4 <_malloc_r+0x2d8>
    3e30:	84000317 	ldw	r16,12(r16)
    3e34:	2c000526 	beq	r5,r16,3e4c <_malloc_r+0x170>
    3e38:	80c00117 	ldw	r3,4(r16)
    3e3c:	19c6703a 	and	r3,r3,r7
    3e40:	1c45c83a 	sub	r2,r3,r17
    3e44:	30bff90e 	bge	r6,r2,3e2c <__alt_data_end+0xfe003e2c>
    3e48:	213fffc4 	addi	r4,r4,-1
    3e4c:	21000044 	addi	r4,r4,1
    3e50:	9c000417 	ldw	r16,16(r19)
    3e54:	00c00074 	movhi	r3,1
    3e58:	18d63504 	addi	r3,r3,22740
    3e5c:	1a400204 	addi	r9,r3,8
    3e60:	82410926 	beq	r16,r9,4288 <_malloc_r+0x5ac>
    3e64:	81400117 	ldw	r5,4(r16)
    3e68:	00bfff04 	movi	r2,-4
    3e6c:	018003c4 	movi	r6,15
    3e70:	2884703a 	and	r2,r5,r2
    3e74:	144bc83a 	sub	r5,r2,r17
    3e78:	3140f416 	blt	r6,r5,424c <_malloc_r+0x570>
    3e7c:	1a400515 	stw	r9,20(r3)
    3e80:	1a400415 	stw	r9,16(r3)
    3e84:	2800570e 	bge	r5,zero,3fe4 <_malloc_r+0x308>
    3e88:	01407fc4 	movi	r5,511
    3e8c:	2880d436 	bltu	r5,r2,41e0 <_malloc_r+0x504>
    3e90:	1004d0fa 	srli	r2,r2,3
    3e94:	02000044 	movi	r8,1
    3e98:	19c00117 	ldw	r7,4(r3)
    3e9c:	108b883a 	add	r5,r2,r2
    3ea0:	294b883a 	add	r5,r5,r5
    3ea4:	1005d0ba 	srai	r2,r2,2
    3ea8:	294b883a 	add	r5,r5,r5
    3eac:	28cb883a 	add	r5,r5,r3
    3eb0:	29800217 	ldw	r6,8(r5)
    3eb4:	4084983a 	sll	r2,r8,r2
    3eb8:	81400315 	stw	r5,12(r16)
    3ebc:	81800215 	stw	r6,8(r16)
    3ec0:	11c4b03a 	or	r2,r2,r7
    3ec4:	2c000215 	stw	r16,8(r5)
    3ec8:	18800115 	stw	r2,4(r3)
    3ecc:	34000315 	stw	r16,12(r6)
    3ed0:	2007d0ba 	srai	r3,r4,2
    3ed4:	01400044 	movi	r5,1
    3ed8:	28ca983a 	sll	r5,r5,r3
    3edc:	11404936 	bltu	r2,r5,4004 <_malloc_r+0x328>
    3ee0:	1146703a 	and	r3,r2,r5
    3ee4:	18000a1e 	bne	r3,zero,3f10 <_malloc_r+0x234>
    3ee8:	00ffff04 	movi	r3,-4
    3eec:	294b883a 	add	r5,r5,r5
    3ef0:	20c8703a 	and	r4,r4,r3
    3ef4:	1146703a 	and	r3,r2,r5
    3ef8:	21000104 	addi	r4,r4,4
    3efc:	1800041e 	bne	r3,zero,3f10 <_malloc_r+0x234>
    3f00:	294b883a 	add	r5,r5,r5
    3f04:	1146703a 	and	r3,r2,r5
    3f08:	21000104 	addi	r4,r4,4
    3f0c:	183ffc26 	beq	r3,zero,3f00 <__alt_data_end+0xfe003f00>
    3f10:	023fff04 	movi	r8,-4
    3f14:	01c003c4 	movi	r7,15
    3f18:	2105883a 	add	r2,r4,r4
    3f1c:	1085883a 	add	r2,r2,r2
    3f20:	1085883a 	add	r2,r2,r2
    3f24:	9897883a 	add	r11,r19,r2
    3f28:	5a800304 	addi	r10,r11,12
    3f2c:	2019883a 	mov	r12,r4
    3f30:	54000017 	ldw	r16,0(r10)
    3f34:	51bffd04 	addi	r6,r10,-12
    3f38:	8180041e 	bne	r16,r6,3f4c <_malloc_r+0x270>
    3f3c:	0000d406 	br	4290 <_malloc_r+0x5b4>
    3f40:	1000dd0e 	bge	r2,zero,42b8 <_malloc_r+0x5dc>
    3f44:	84000317 	ldw	r16,12(r16)
    3f48:	8180d126 	beq	r16,r6,4290 <_malloc_r+0x5b4>
    3f4c:	80c00117 	ldw	r3,4(r16)
    3f50:	1a06703a 	and	r3,r3,r8
    3f54:	1c45c83a 	sub	r2,r3,r17
    3f58:	38bff90e 	bge	r7,r2,3f40 <__alt_data_end+0xfe003f40>
    3f5c:	80c00317 	ldw	r3,12(r16)
    3f60:	81000217 	ldw	r4,8(r16)
    3f64:	89400054 	ori	r5,r17,1
    3f68:	81400115 	stw	r5,4(r16)
    3f6c:	20c00315 	stw	r3,12(r4)
    3f70:	19000215 	stw	r4,8(r3)
    3f74:	8463883a 	add	r17,r16,r17
    3f78:	9c400515 	stw	r17,20(r19)
    3f7c:	9c400415 	stw	r17,16(r19)
    3f80:	10c00054 	ori	r3,r2,1
    3f84:	8a400315 	stw	r9,12(r17)
    3f88:	8a400215 	stw	r9,8(r17)
    3f8c:	88c00115 	stw	r3,4(r17)
    3f90:	88a3883a 	add	r17,r17,r2
    3f94:	88800015 	stw	r2,0(r17)
    3f98:	9009883a 	mov	r4,r18
    3f9c:	00126e80 	call	126e8 <__malloc_unlock>
    3fa0:	80800204 	addi	r2,r16,8
    3fa4:	003f7b06 	br	3d94 <__alt_data_end+0xfe003d94>
    3fa8:	01401f84 	movi	r5,126
    3fac:	01000fc4 	movi	r4,63
    3fb0:	003f9106 	br	3df8 <__alt_data_end+0xfe003df8>
    3fb4:	80800317 	ldw	r2,12(r16)
    3fb8:	81000217 	ldw	r4,8(r16)
    3fbc:	80c7883a 	add	r3,r16,r3
    3fc0:	19400117 	ldw	r5,4(r3)
    3fc4:	20800315 	stw	r2,12(r4)
    3fc8:	11000215 	stw	r4,8(r2)
    3fcc:	28800054 	ori	r2,r5,1
    3fd0:	18800115 	stw	r2,4(r3)
    3fd4:	9009883a 	mov	r4,r18
    3fd8:	00126e80 	call	126e8 <__malloc_unlock>
    3fdc:	80800204 	addi	r2,r16,8
    3fe0:	003f6c06 	br	3d94 <__alt_data_end+0xfe003d94>
    3fe4:	8085883a 	add	r2,r16,r2
    3fe8:	10c00117 	ldw	r3,4(r2)
    3fec:	9009883a 	mov	r4,r18
    3ff0:	18c00054 	ori	r3,r3,1
    3ff4:	10c00115 	stw	r3,4(r2)
    3ff8:	00126e80 	call	126e8 <__malloc_unlock>
    3ffc:	80800204 	addi	r2,r16,8
    4000:	003f6406 	br	3d94 <__alt_data_end+0xfe003d94>
    4004:	9c000217 	ldw	r16,8(r19)
    4008:	00bfff04 	movi	r2,-4
    400c:	85400117 	ldw	r21,4(r16)
    4010:	a8aa703a 	and	r21,r21,r2
    4014:	ac400336 	bltu	r21,r17,4024 <_malloc_r+0x348>
    4018:	ac45c83a 	sub	r2,r21,r17
    401c:	00c003c4 	movi	r3,15
    4020:	18805d16 	blt	r3,r2,4198 <_malloc_r+0x4bc>
    4024:	008000b4 	movhi	r2,2
    4028:	10a2d704 	addi	r2,r2,-29860
    402c:	00c00074 	movhi	r3,1
    4030:	18dbd104 	addi	r3,r3,28484
    4034:	15c00017 	ldw	r23,0(r2)
    4038:	19000017 	ldw	r4,0(r3)
    403c:	00bfffc4 	movi	r2,-1
    4040:	8579883a 	add	fp,r16,r21
    4044:	8def883a 	add	r23,r17,r23
    4048:	2080e426 	beq	r4,r2,43dc <_malloc_r+0x700>
    404c:	bdc403c4 	addi	r23,r23,4111
    4050:	00bc0004 	movi	r2,-4096
    4054:	b8ae703a 	and	r23,r23,r2
    4058:	9009883a 	mov	r4,r18
    405c:	b80b883a 	mov	r5,r23
    4060:	d8c00015 	stw	r3,0(sp)
    4064:	00052e00 	call	52e0 <_sbrk_r>
    4068:	1029883a 	mov	r20,r2
    406c:	00bfffc4 	movi	r2,-1
    4070:	d8c00017 	ldw	r3,0(sp)
    4074:	a080a426 	beq	r20,r2,4308 <_malloc_r+0x62c>
    4078:	a700a236 	bltu	r20,fp,4304 <_malloc_r+0x628>
    407c:	058000b4 	movhi	r22,2
    4080:	b5a2df04 	addi	r22,r22,-29828
    4084:	b0800017 	ldw	r2,0(r22)
    4088:	b885883a 	add	r2,r23,r2
    408c:	b0800015 	stw	r2,0(r22)
    4090:	e500da26 	beq	fp,r20,43fc <_malloc_r+0x720>
    4094:	19000017 	ldw	r4,0(r3)
    4098:	00ffffc4 	movi	r3,-1
    409c:	20c0e426 	beq	r4,r3,4430 <_malloc_r+0x754>
    40a0:	a739c83a 	sub	fp,r20,fp
    40a4:	1705883a 	add	r2,r2,fp
    40a8:	b0800015 	stw	r2,0(r22)
    40ac:	a08001cc 	andi	r2,r20,7
    40b0:	1000b526 	beq	r2,zero,4388 <_malloc_r+0x6ac>
    40b4:	a0a9c83a 	sub	r20,r20,r2
    40b8:	00c40204 	movi	r3,4104
    40bc:	a5000204 	addi	r20,r20,8
    40c0:	1885c83a 	sub	r2,r3,r2
    40c4:	a5c7883a 	add	r3,r20,r23
    40c8:	18c3ffcc 	andi	r3,r3,4095
    40cc:	10efc83a 	sub	r23,r2,r3
    40d0:	9009883a 	mov	r4,r18
    40d4:	b80b883a 	mov	r5,r23
    40d8:	00052e00 	call	52e0 <_sbrk_r>
    40dc:	00ffffc4 	movi	r3,-1
    40e0:	10c0d026 	beq	r2,r3,4424 <_malloc_r+0x748>
    40e4:	1505c83a 	sub	r2,r2,r20
    40e8:	b887883a 	add	r3,r23,r2
    40ec:	18c00054 	ori	r3,r3,1
    40f0:	b0800017 	ldw	r2,0(r22)
    40f4:	9d000215 	stw	r20,8(r19)
    40f8:	a0c00115 	stw	r3,4(r20)
    40fc:	b885883a 	add	r2,r23,r2
    4100:	b0800015 	stw	r2,0(r22)
    4104:	84c00e26 	beq	r16,r19,4140 <_malloc_r+0x464>
    4108:	00c003c4 	movi	r3,15
    410c:	1d40a02e 	bgeu	r3,r21,4390 <_malloc_r+0x6b4>
    4110:	81400117 	ldw	r5,4(r16)
    4114:	ad7ffd04 	addi	r21,r21,-12
    4118:	013ffe04 	movi	r4,-8
    411c:	a908703a 	and	r4,r21,r4
    4120:	2940004c 	andi	r5,r5,1
    4124:	214ab03a 	or	r5,r4,r5
    4128:	81400115 	stw	r5,4(r16)
    412c:	01800144 	movi	r6,5
    4130:	810b883a 	add	r5,r16,r4
    4134:	29800115 	stw	r6,4(r5)
    4138:	29800215 	stw	r6,8(r5)
    413c:	1900c036 	bltu	r3,r4,4440 <_malloc_r+0x764>
    4140:	00c000b4 	movhi	r3,2
    4144:	18e2d604 	addi	r3,r3,-29864
    4148:	19000017 	ldw	r4,0(r3)
    414c:	2080012e 	bgeu	r4,r2,4154 <_malloc_r+0x478>
    4150:	18800015 	stw	r2,0(r3)
    4154:	00c000b4 	movhi	r3,2
    4158:	18e2d504 	addi	r3,r3,-29868
    415c:	19000017 	ldw	r4,0(r3)
    4160:	9c000217 	ldw	r16,8(r19)
    4164:	2080012e 	bgeu	r4,r2,416c <_malloc_r+0x490>
    4168:	18800015 	stw	r2,0(r3)
    416c:	80c00117 	ldw	r3,4(r16)
    4170:	00bfff04 	movi	r2,-4
    4174:	1886703a 	and	r3,r3,r2
    4178:	1c45c83a 	sub	r2,r3,r17
    417c:	1c400236 	bltu	r3,r17,4188 <_malloc_r+0x4ac>
    4180:	00c003c4 	movi	r3,15
    4184:	18800416 	blt	r3,r2,4198 <_malloc_r+0x4bc>
    4188:	9009883a 	mov	r4,r18
    418c:	00126e80 	call	126e8 <__malloc_unlock>
    4190:	0005883a 	mov	r2,zero
    4194:	003eff06 	br	3d94 <__alt_data_end+0xfe003d94>
    4198:	88c00054 	ori	r3,r17,1
    419c:	80c00115 	stw	r3,4(r16)
    41a0:	8463883a 	add	r17,r16,r17
    41a4:	10800054 	ori	r2,r2,1
    41a8:	9c400215 	stw	r17,8(r19)
    41ac:	88800115 	stw	r2,4(r17)
    41b0:	9009883a 	mov	r4,r18
    41b4:	00126e80 	call	126e8 <__malloc_unlock>
    41b8:	80800204 	addi	r2,r16,8
    41bc:	003ef506 	br	3d94 <__alt_data_end+0xfe003d94>
    41c0:	00800504 	movi	r2,20
    41c4:	1100482e 	bgeu	r2,r4,42e8 <_malloc_r+0x60c>
    41c8:	00801504 	movi	r2,84
    41cc:	11006836 	bltu	r2,r4,4370 <_malloc_r+0x694>
    41d0:	8808d33a 	srli	r4,r17,12
    41d4:	21001b84 	addi	r4,r4,110
    41d8:	210b883a 	add	r5,r4,r4
    41dc:	003f0606 	br	3df8 <__alt_data_end+0xfe003df8>
    41e0:	1006d27a 	srli	r3,r2,9
    41e4:	01400104 	movi	r5,4
    41e8:	28c0422e 	bgeu	r5,r3,42f4 <_malloc_r+0x618>
    41ec:	01400504 	movi	r5,20
    41f0:	28c07c36 	bltu	r5,r3,43e4 <_malloc_r+0x708>
    41f4:	194016c4 	addi	r5,r3,91
    41f8:	294d883a 	add	r6,r5,r5
    41fc:	318d883a 	add	r6,r6,r6
    4200:	318d883a 	add	r6,r6,r6
    4204:	998d883a 	add	r6,r19,r6
    4208:	30c00217 	ldw	r3,8(r6)
    420c:	01c00074 	movhi	r7,1
    4210:	39d63504 	addi	r7,r7,22740
    4214:	19806326 	beq	r3,r6,43a4 <_malloc_r+0x6c8>
    4218:	01ffff04 	movi	r7,-4
    421c:	19400117 	ldw	r5,4(r3)
    4220:	29ca703a 	and	r5,r5,r7
    4224:	1140022e 	bgeu	r2,r5,4230 <_malloc_r+0x554>
    4228:	18c00217 	ldw	r3,8(r3)
    422c:	30fffb1e 	bne	r6,r3,421c <__alt_data_end+0xfe00421c>
    4230:	19400317 	ldw	r5,12(r3)
    4234:	98800117 	ldw	r2,4(r19)
    4238:	81400315 	stw	r5,12(r16)
    423c:	80c00215 	stw	r3,8(r16)
    4240:	2c000215 	stw	r16,8(r5)
    4244:	1c000315 	stw	r16,12(r3)
    4248:	003f2106 	br	3ed0 <__alt_data_end+0xfe003ed0>
    424c:	88800054 	ori	r2,r17,1
    4250:	80800115 	stw	r2,4(r16)
    4254:	8463883a 	add	r17,r16,r17
    4258:	1c400515 	stw	r17,20(r3)
    425c:	1c400415 	stw	r17,16(r3)
    4260:	28800054 	ori	r2,r5,1
    4264:	88800115 	stw	r2,4(r17)
    4268:	8a400315 	stw	r9,12(r17)
    426c:	8a400215 	stw	r9,8(r17)
    4270:	8963883a 	add	r17,r17,r5
    4274:	89400015 	stw	r5,0(r17)
    4278:	9009883a 	mov	r4,r18
    427c:	00126e80 	call	126e8 <__malloc_unlock>
    4280:	80800204 	addi	r2,r16,8
    4284:	003ec306 	br	3d94 <__alt_data_end+0xfe003d94>
    4288:	18800117 	ldw	r2,4(r3)
    428c:	003f1006 	br	3ed0 <__alt_data_end+0xfe003ed0>
    4290:	63000044 	addi	r12,r12,1
    4294:	608000cc 	andi	r2,r12,3
    4298:	52800204 	addi	r10,r10,8
    429c:	103f241e 	bne	r2,zero,3f30 <__alt_data_end+0xfe003f30>
    42a0:	00002106 	br	4328 <_malloc_r+0x64c>
    42a4:	80800204 	addi	r2,r16,8
    42a8:	84000517 	ldw	r16,20(r16)
    42ac:	143eab1e 	bne	r2,r16,3d5c <__alt_data_end+0xfe003d5c>
    42b0:	21000084 	addi	r4,r4,2
    42b4:	003ee606 	br	3e50 <__alt_data_end+0xfe003e50>
    42b8:	80c7883a 	add	r3,r16,r3
    42bc:	19400117 	ldw	r5,4(r3)
    42c0:	80800317 	ldw	r2,12(r16)
    42c4:	81000217 	ldw	r4,8(r16)
    42c8:	29400054 	ori	r5,r5,1
    42cc:	19400115 	stw	r5,4(r3)
    42d0:	20800315 	stw	r2,12(r4)
    42d4:	11000215 	stw	r4,8(r2)
    42d8:	9009883a 	mov	r4,r18
    42dc:	00126e80 	call	126e8 <__malloc_unlock>
    42e0:	80800204 	addi	r2,r16,8
    42e4:	003eab06 	br	3d94 <__alt_data_end+0xfe003d94>
    42e8:	210016c4 	addi	r4,r4,91
    42ec:	210b883a 	add	r5,r4,r4
    42f0:	003ec106 	br	3df8 <__alt_data_end+0xfe003df8>
    42f4:	100ad1ba 	srli	r5,r2,6
    42f8:	29400e04 	addi	r5,r5,56
    42fc:	294d883a 	add	r6,r5,r5
    4300:	003fbe06 	br	41fc <__alt_data_end+0xfe0041fc>
    4304:	84ff5d26 	beq	r16,r19,407c <__alt_data_end+0xfe00407c>
    4308:	9c000217 	ldw	r16,8(r19)
    430c:	00bfff04 	movi	r2,-4
    4310:	80c00117 	ldw	r3,4(r16)
    4314:	1886703a 	and	r3,r3,r2
    4318:	003f9706 	br	4178 <__alt_data_end+0xfe004178>
    431c:	5ac00017 	ldw	r11,0(r11)
    4320:	213fffc4 	addi	r4,r4,-1
    4324:	58805c1e 	bne	r11,r2,4498 <_malloc_r+0x7bc>
    4328:	20c000cc 	andi	r3,r4,3
    432c:	58bffe04 	addi	r2,r11,-8
    4330:	183ffa1e 	bne	r3,zero,431c <__alt_data_end+0xfe00431c>
    4334:	98800117 	ldw	r2,4(r19)
    4338:	0146303a 	nor	r3,zero,r5
    433c:	1884703a 	and	r2,r3,r2
    4340:	98800115 	stw	r2,4(r19)
    4344:	294b883a 	add	r5,r5,r5
    4348:	117f2e36 	bltu	r2,r5,4004 <__alt_data_end+0xfe004004>
    434c:	283f2d26 	beq	r5,zero,4004 <__alt_data_end+0xfe004004>
    4350:	1146703a 	and	r3,r2,r5
    4354:	6009883a 	mov	r4,r12
    4358:	183eef1e 	bne	r3,zero,3f18 <__alt_data_end+0xfe003f18>
    435c:	294b883a 	add	r5,r5,r5
    4360:	1146703a 	and	r3,r2,r5
    4364:	21000104 	addi	r4,r4,4
    4368:	183ffc26 	beq	r3,zero,435c <__alt_data_end+0xfe00435c>
    436c:	003eea06 	br	3f18 <__alt_data_end+0xfe003f18>
    4370:	00805504 	movi	r2,340
    4374:	11001336 	bltu	r2,r4,43c4 <_malloc_r+0x6e8>
    4378:	8808d3fa 	srli	r4,r17,15
    437c:	21001dc4 	addi	r4,r4,119
    4380:	210b883a 	add	r5,r4,r4
    4384:	003e9c06 	br	3df8 <__alt_data_end+0xfe003df8>
    4388:	00840004 	movi	r2,4096
    438c:	003f4d06 	br	40c4 <__alt_data_end+0xfe0040c4>
    4390:	00800044 	movi	r2,1
    4394:	a0800115 	stw	r2,4(r20)
    4398:	a021883a 	mov	r16,r20
    439c:	0007883a 	mov	r3,zero
    43a0:	003f7506 	br	4178 <__alt_data_end+0xfe004178>
    43a4:	280bd0ba 	srai	r5,r5,2
    43a8:	01800044 	movi	r6,1
    43ac:	38800117 	ldw	r2,4(r7)
    43b0:	314c983a 	sll	r6,r6,r5
    43b4:	180b883a 	mov	r5,r3
    43b8:	3084b03a 	or	r2,r6,r2
    43bc:	38800115 	stw	r2,4(r7)
    43c0:	003f9d06 	br	4238 <__alt_data_end+0xfe004238>
    43c4:	00815504 	movi	r2,1364
    43c8:	11001336 	bltu	r2,r4,4418 <_malloc_r+0x73c>
    43cc:	8808d4ba 	srli	r4,r17,18
    43d0:	21001f04 	addi	r4,r4,124
    43d4:	210b883a 	add	r5,r4,r4
    43d8:	003e8706 	br	3df8 <__alt_data_end+0xfe003df8>
    43dc:	bdc00404 	addi	r23,r23,16
    43e0:	003f1d06 	br	4058 <__alt_data_end+0xfe004058>
    43e4:	01401504 	movi	r5,84
    43e8:	28c01c36 	bltu	r5,r3,445c <_malloc_r+0x780>
    43ec:	100ad33a 	srli	r5,r2,12
    43f0:	29401b84 	addi	r5,r5,110
    43f4:	294d883a 	add	r6,r5,r5
    43f8:	003f8006 	br	41fc <__alt_data_end+0xfe0041fc>
    43fc:	e103ffcc 	andi	r4,fp,4095
    4400:	203f241e 	bne	r4,zero,4094 <__alt_data_end+0xfe004094>
    4404:	98c00217 	ldw	r3,8(r19)
    4408:	bd49883a 	add	r4,r23,r21
    440c:	21000054 	ori	r4,r4,1
    4410:	19000115 	stw	r4,4(r3)
    4414:	003f4a06 	br	4140 <__alt_data_end+0xfe004140>
    4418:	01403f04 	movi	r5,252
    441c:	01001f84 	movi	r4,126
    4420:	003e7506 	br	3df8 <__alt_data_end+0xfe003df8>
    4424:	00c00044 	movi	r3,1
    4428:	002f883a 	mov	r23,zero
    442c:	003f3006 	br	40f0 <__alt_data_end+0xfe0040f0>
    4430:	00800074 	movhi	r2,1
    4434:	109bd104 	addi	r2,r2,28484
    4438:	15000015 	stw	r20,0(r2)
    443c:	003f1b06 	br	40ac <__alt_data_end+0xfe0040ac>
    4440:	9009883a 	mov	r4,r18
    4444:	81400204 	addi	r5,r16,8
    4448:	00032fc0 	call	32fc <_free_r>
    444c:	008000b4 	movhi	r2,2
    4450:	10a2df04 	addi	r2,r2,-29828
    4454:	10800017 	ldw	r2,0(r2)
    4458:	003f3906 	br	4140 <__alt_data_end+0xfe004140>
    445c:	01405504 	movi	r5,340
    4460:	28c00436 	bltu	r5,r3,4474 <_malloc_r+0x798>
    4464:	100ad3fa 	srli	r5,r2,15
    4468:	29401dc4 	addi	r5,r5,119
    446c:	294d883a 	add	r6,r5,r5
    4470:	003f6206 	br	41fc <__alt_data_end+0xfe0041fc>
    4474:	01415504 	movi	r5,1364
    4478:	28c00436 	bltu	r5,r3,448c <_malloc_r+0x7b0>
    447c:	100ad4ba 	srli	r5,r2,18
    4480:	29401f04 	addi	r5,r5,124
    4484:	294d883a 	add	r6,r5,r5
    4488:	003f5c06 	br	41fc <__alt_data_end+0xfe0041fc>
    448c:	01803f04 	movi	r6,252
    4490:	01401f84 	movi	r5,126
    4494:	003f5906 	br	41fc <__alt_data_end+0xfe0041fc>
    4498:	98800117 	ldw	r2,4(r19)
    449c:	003fa906 	br	4344 <__alt_data_end+0xfe004344>

000044a0 <_mbrtowc_r>:
    44a0:	defff704 	addi	sp,sp,-36
    44a4:	dc800715 	stw	r18,28(sp)
    44a8:	dc400615 	stw	r17,24(sp)
    44ac:	dc000515 	stw	r16,20(sp)
    44b0:	00800074 	movhi	r2,1
    44b4:	109bd304 	addi	r2,r2,28492
    44b8:	dfc00815 	stw	ra,32(sp)
    44bc:	2021883a 	mov	r16,r4
    44c0:	dc400917 	ldw	r17,36(sp)
    44c4:	14800017 	ldw	r18,0(r2)
    44c8:	30001626 	beq	r6,zero,4524 <_mbrtowc_r+0x84>
    44cc:	d9400215 	stw	r5,8(sp)
    44d0:	d9800315 	stw	r6,12(sp)
    44d4:	d9c00415 	stw	r7,16(sp)
    44d8:	0003c780 	call	3c78 <__locale_charset>
    44dc:	d9400217 	ldw	r5,8(sp)
    44e0:	d9800317 	ldw	r6,12(sp)
    44e4:	d9c00417 	ldw	r7,16(sp)
    44e8:	d8800015 	stw	r2,0(sp)
    44ec:	dc400115 	stw	r17,4(sp)
    44f0:	8009883a 	mov	r4,r16
    44f4:	903ee83a 	callr	r18
    44f8:	00ffffc4 	movi	r3,-1
    44fc:	10c0031e 	bne	r2,r3,450c <_mbrtowc_r+0x6c>
    4500:	88000015 	stw	zero,0(r17)
    4504:	00c02284 	movi	r3,138
    4508:	80c00015 	stw	r3,0(r16)
    450c:	dfc00817 	ldw	ra,32(sp)
    4510:	dc800717 	ldw	r18,28(sp)
    4514:	dc400617 	ldw	r17,24(sp)
    4518:	dc000517 	ldw	r16,20(sp)
    451c:	dec00904 	addi	sp,sp,36
    4520:	f800283a 	ret
    4524:	0003c780 	call	3c78 <__locale_charset>
    4528:	d8800015 	stw	r2,0(sp)
    452c:	dc400115 	stw	r17,4(sp)
    4530:	8009883a 	mov	r4,r16
    4534:	000b883a 	mov	r5,zero
    4538:	01800074 	movhi	r6,1
    453c:	31945104 	addi	r6,r6,20804
    4540:	01c00044 	movi	r7,1
    4544:	903ee83a 	callr	r18
    4548:	003feb06 	br	44f8 <__alt_data_end+0xfe0044f8>

0000454c <mbrtowc>:
    454c:	defff604 	addi	sp,sp,-40
    4550:	dc400315 	stw	r17,12(sp)
    4554:	dc000215 	stw	r16,8(sp)
    4558:	dfc00915 	stw	ra,36(sp)
    455c:	dd800815 	stw	r22,32(sp)
    4560:	dd400715 	stw	r21,28(sp)
    4564:	dd000615 	stw	r20,24(sp)
    4568:	dcc00515 	stw	r19,20(sp)
    456c:	dc800415 	stw	r18,16(sp)
    4570:	2821883a 	mov	r16,r5
    4574:	3823883a 	mov	r17,r7
    4578:	28002026 	beq	r5,zero,45fc <mbrtowc+0xb0>
    457c:	04800074 	movhi	r18,1
    4580:	949bce04 	addi	r18,r18,28472
    4584:	95800017 	ldw	r22,0(r18)
    4588:	00800074 	movhi	r2,1
    458c:	109bd304 	addi	r2,r2,28492
    4590:	15400017 	ldw	r21,0(r2)
    4594:	2029883a 	mov	r20,r4
    4598:	3027883a 	mov	r19,r6
    459c:	0003c780 	call	3c78 <__locale_charset>
    45a0:	d8800015 	stw	r2,0(sp)
    45a4:	dc400115 	stw	r17,4(sp)
    45a8:	b009883a 	mov	r4,r22
    45ac:	a00b883a 	mov	r5,r20
    45b0:	800d883a 	mov	r6,r16
    45b4:	980f883a 	mov	r7,r19
    45b8:	a83ee83a 	callr	r21
    45bc:	00ffffc4 	movi	r3,-1
    45c0:	10c0041e 	bne	r2,r3,45d4 <mbrtowc+0x88>
    45c4:	90c00017 	ldw	r3,0(r18)
    45c8:	01002284 	movi	r4,138
    45cc:	88000015 	stw	zero,0(r17)
    45d0:	19000015 	stw	r4,0(r3)
    45d4:	dfc00917 	ldw	ra,36(sp)
    45d8:	dd800817 	ldw	r22,32(sp)
    45dc:	dd400717 	ldw	r21,28(sp)
    45e0:	dd000617 	ldw	r20,24(sp)
    45e4:	dcc00517 	ldw	r19,20(sp)
    45e8:	dc800417 	ldw	r18,16(sp)
    45ec:	dc400317 	ldw	r17,12(sp)
    45f0:	dc000217 	ldw	r16,8(sp)
    45f4:	dec00a04 	addi	sp,sp,40
    45f8:	f800283a 	ret
    45fc:	04800074 	movhi	r18,1
    4600:	949bce04 	addi	r18,r18,28472
    4604:	94c00017 	ldw	r19,0(r18)
    4608:	00800074 	movhi	r2,1
    460c:	109bd304 	addi	r2,r2,28492
    4610:	14000017 	ldw	r16,0(r2)
    4614:	0003c780 	call	3c78 <__locale_charset>
    4618:	d8800015 	stw	r2,0(sp)
    461c:	dc400115 	stw	r17,4(sp)
    4620:	9809883a 	mov	r4,r19
    4624:	000b883a 	mov	r5,zero
    4628:	01800074 	movhi	r6,1
    462c:	31945104 	addi	r6,r6,20804
    4630:	01c00044 	movi	r7,1
    4634:	803ee83a 	callr	r16
    4638:	003fe006 	br	45bc <__alt_data_end+0xfe0045bc>

0000463c <__ascii_mbtowc>:
    463c:	deffff04 	addi	sp,sp,-4
    4640:	28000826 	beq	r5,zero,4664 <__ascii_mbtowc+0x28>
    4644:	30000926 	beq	r6,zero,466c <__ascii_mbtowc+0x30>
    4648:	38000b26 	beq	r7,zero,4678 <__ascii_mbtowc+0x3c>
    464c:	30800003 	ldbu	r2,0(r6)
    4650:	28800015 	stw	r2,0(r5)
    4654:	30800003 	ldbu	r2,0(r6)
    4658:	1004c03a 	cmpne	r2,r2,zero
    465c:	dec00104 	addi	sp,sp,4
    4660:	f800283a 	ret
    4664:	d80b883a 	mov	r5,sp
    4668:	303ff71e 	bne	r6,zero,4648 <__alt_data_end+0xfe004648>
    466c:	0005883a 	mov	r2,zero
    4670:	dec00104 	addi	sp,sp,4
    4674:	f800283a 	ret
    4678:	00bfff84 	movi	r2,-2
    467c:	003ff706 	br	465c <__alt_data_end+0xfe00465c>

00004680 <_mbtowc_r>:
    4680:	defff804 	addi	sp,sp,-32
    4684:	00800074 	movhi	r2,1
    4688:	109bd304 	addi	r2,r2,28492
    468c:	dfc00715 	stw	ra,28(sp)
    4690:	dc000615 	stw	r16,24(sp)
    4694:	14000017 	ldw	r16,0(r2)
    4698:	d9000215 	stw	r4,8(sp)
    469c:	d9400315 	stw	r5,12(sp)
    46a0:	d9800415 	stw	r6,16(sp)
    46a4:	d9c00515 	stw	r7,20(sp)
    46a8:	0003c780 	call	3c78 <__locale_charset>
    46ac:	d8800015 	stw	r2,0(sp)
    46b0:	d8800817 	ldw	r2,32(sp)
    46b4:	d9000217 	ldw	r4,8(sp)
    46b8:	d9400317 	ldw	r5,12(sp)
    46bc:	d9800417 	ldw	r6,16(sp)
    46c0:	d9c00517 	ldw	r7,20(sp)
    46c4:	d8800115 	stw	r2,4(sp)
    46c8:	803ee83a 	callr	r16
    46cc:	dfc00717 	ldw	ra,28(sp)
    46d0:	dc000617 	ldw	r16,24(sp)
    46d4:	dec00804 	addi	sp,sp,32
    46d8:	f800283a 	ret

000046dc <memchr>:
    46dc:	208000cc 	andi	r2,r4,3
    46e0:	2811883a 	mov	r8,r5
    46e4:	10003526 	beq	r2,zero,47bc <memchr+0xe0>
    46e8:	30bfffc4 	addi	r2,r6,-1
    46ec:	30001b26 	beq	r6,zero,475c <memchr+0x80>
    46f0:	21800003 	ldbu	r6,0(r4)
    46f4:	28c03fcc 	andi	r3,r5,255
    46f8:	30c01a26 	beq	r6,r3,4764 <memchr+0x88>
    46fc:	180d883a 	mov	r6,r3
    4700:	00000406 	br	4714 <memchr+0x38>
    4704:	10001526 	beq	r2,zero,475c <memchr+0x80>
    4708:	20c00003 	ldbu	r3,0(r4)
    470c:	10bfffc4 	addi	r2,r2,-1
    4710:	19801426 	beq	r3,r6,4764 <memchr+0x88>
    4714:	21000044 	addi	r4,r4,1
    4718:	20c000cc 	andi	r3,r4,3
    471c:	183ff91e 	bne	r3,zero,4704 <__alt_data_end+0xfe004704>
    4720:	02c000c4 	movi	r11,3
    4724:	58801136 	bltu	r11,r2,476c <memchr+0x90>
    4728:	10000c26 	beq	r2,zero,475c <memchr+0x80>
    472c:	20c00003 	ldbu	r3,0(r4)
    4730:	29403fcc 	andi	r5,r5,255
    4734:	19400b26 	beq	r3,r5,4764 <memchr+0x88>
    4738:	20c00044 	addi	r3,r4,1
    473c:	2085883a 	add	r2,r4,r2
    4740:	41803fcc 	andi	r6,r8,255
    4744:	00000306 	br	4754 <memchr+0x78>
    4748:	18c00044 	addi	r3,r3,1
    474c:	197fffc3 	ldbu	r5,-1(r3)
    4750:	29800426 	beq	r5,r6,4764 <memchr+0x88>
    4754:	1809883a 	mov	r4,r3
    4758:	18bffb1e 	bne	r3,r2,4748 <__alt_data_end+0xfe004748>
    475c:	0005883a 	mov	r2,zero
    4760:	f800283a 	ret
    4764:	2005883a 	mov	r2,r4
    4768:	f800283a 	ret
    476c:	28c03fcc 	andi	r3,r5,255
    4770:	180c923a 	slli	r6,r3,8
    4774:	02bfbff4 	movhi	r10,65279
    4778:	52bfbfc4 	addi	r10,r10,-257
    477c:	02602074 	movhi	r9,32897
    4780:	4a602004 	addi	r9,r9,-32640
    4784:	30c6b03a 	or	r3,r6,r3
    4788:	180c943a 	slli	r6,r3,16
    478c:	30ccb03a 	or	r6,r6,r3
    4790:	20c00017 	ldw	r3,0(r4)
    4794:	30c6f03a 	xor	r3,r6,r3
    4798:	1a8f883a 	add	r7,r3,r10
    479c:	00c6303a 	nor	r3,zero,r3
    47a0:	38c6703a 	and	r3,r7,r3
    47a4:	1a46703a 	and	r3,r3,r9
    47a8:	183fdf1e 	bne	r3,zero,4728 <__alt_data_end+0xfe004728>
    47ac:	10bfff04 	addi	r2,r2,-4
    47b0:	21000104 	addi	r4,r4,4
    47b4:	58bff636 	bltu	r11,r2,4790 <__alt_data_end+0xfe004790>
    47b8:	003fdb06 	br	4728 <__alt_data_end+0xfe004728>
    47bc:	3005883a 	mov	r2,r6
    47c0:	003fd706 	br	4720 <__alt_data_end+0xfe004720>

000047c4 <memcpy>:
    47c4:	00c003c4 	movi	r3,15
    47c8:	2005883a 	mov	r2,r4
    47cc:	1980372e 	bgeu	r3,r6,48ac <memcpy+0xe8>
    47d0:	2146b03a 	or	r3,r4,r5
    47d4:	18c000cc 	andi	r3,r3,3
    47d8:	1800371e 	bne	r3,zero,48b8 <memcpy+0xf4>
    47dc:	327ffc04 	addi	r9,r6,-16
    47e0:	4812d13a 	srli	r9,r9,4
    47e4:	2007883a 	mov	r3,r4
    47e8:	280f883a 	mov	r7,r5
    47ec:	4808913a 	slli	r4,r9,4
    47f0:	1109883a 	add	r4,r2,r4
    47f4:	21000404 	addi	r4,r4,16
    47f8:	3a000017 	ldw	r8,0(r7)
    47fc:	18c00404 	addi	r3,r3,16
    4800:	39c00404 	addi	r7,r7,16
    4804:	1a3ffc15 	stw	r8,-16(r3)
    4808:	3a3ffd17 	ldw	r8,-12(r7)
    480c:	1a3ffd15 	stw	r8,-12(r3)
    4810:	3a3ffe17 	ldw	r8,-8(r7)
    4814:	1a3ffe15 	stw	r8,-8(r3)
    4818:	3a3fff17 	ldw	r8,-4(r7)
    481c:	1a3fff15 	stw	r8,-4(r3)
    4820:	193ff51e 	bne	r3,r4,47f8 <__alt_data_end+0xfe0047f8>
    4824:	49000044 	addi	r4,r9,1
    4828:	2008913a 	slli	r4,r4,4
    482c:	328003cc 	andi	r10,r6,15
    4830:	1107883a 	add	r3,r2,r4
    4834:	290b883a 	add	r5,r5,r4
    4838:	010000c4 	movi	r4,3
    483c:	2280212e 	bgeu	r4,r10,48c4 <memcpy+0x100>
    4840:	52bfff04 	addi	r10,r10,-4
    4844:	5014d0ba 	srli	r10,r10,2
    4848:	180f883a 	mov	r7,r3
    484c:	2811883a 	mov	r8,r5
    4850:	5289883a 	add	r4,r10,r10
    4854:	2109883a 	add	r4,r4,r4
    4858:	21000104 	addi	r4,r4,4
    485c:	1909883a 	add	r4,r3,r4
    4860:	42400017 	ldw	r9,0(r8)
    4864:	39c00104 	addi	r7,r7,4
    4868:	42000104 	addi	r8,r8,4
    486c:	3a7fff15 	stw	r9,-4(r7)
    4870:	393ffb1e 	bne	r7,r4,4860 <__alt_data_end+0xfe004860>
    4874:	51000044 	addi	r4,r10,1
    4878:	2109883a 	add	r4,r4,r4
    487c:	2109883a 	add	r4,r4,r4
    4880:	318000cc 	andi	r6,r6,3
    4884:	1907883a 	add	r3,r3,r4
    4888:	290b883a 	add	r5,r5,r4
    488c:	30000c26 	beq	r6,zero,48c0 <memcpy+0xfc>
    4890:	298d883a 	add	r6,r5,r6
    4894:	29c00003 	ldbu	r7,0(r5)
    4898:	18c00044 	addi	r3,r3,1
    489c:	29400044 	addi	r5,r5,1
    48a0:	19ffffc5 	stb	r7,-1(r3)
    48a4:	29bffb1e 	bne	r5,r6,4894 <__alt_data_end+0xfe004894>
    48a8:	f800283a 	ret
    48ac:	2007883a 	mov	r3,r4
    48b0:	303ff71e 	bne	r6,zero,4890 <__alt_data_end+0xfe004890>
    48b4:	00000206 	br	48c0 <memcpy+0xfc>
    48b8:	2007883a 	mov	r3,r4
    48bc:	003ff406 	br	4890 <__alt_data_end+0xfe004890>
    48c0:	f800283a 	ret
    48c4:	500d883a 	mov	r6,r10
    48c8:	303ff11e 	bne	r6,zero,4890 <__alt_data_end+0xfe004890>
    48cc:	003ffc06 	br	48c0 <__alt_data_end+0xfe0048c0>

000048d0 <memmove>:
    48d0:	2005883a 	mov	r2,r4
    48d4:	29000b2e 	bgeu	r5,r4,4904 <memmove+0x34>
    48d8:	298f883a 	add	r7,r5,r6
    48dc:	21c0092e 	bgeu	r4,r7,4904 <memmove+0x34>
    48e0:	2187883a 	add	r3,r4,r6
    48e4:	198bc83a 	sub	r5,r3,r6
    48e8:	30003e26 	beq	r6,zero,49e4 <memmove+0x114>
    48ec:	39ffffc4 	addi	r7,r7,-1
    48f0:	39000003 	ldbu	r4,0(r7)
    48f4:	18ffffc4 	addi	r3,r3,-1
    48f8:	19000005 	stb	r4,0(r3)
    48fc:	197ffb1e 	bne	r3,r5,48ec <__alt_data_end+0xfe0048ec>
    4900:	f800283a 	ret
    4904:	00c003c4 	movi	r3,15
    4908:	1980372e 	bgeu	r3,r6,49e8 <memmove+0x118>
    490c:	1146b03a 	or	r3,r2,r5
    4910:	18c000cc 	andi	r3,r3,3
    4914:	1800371e 	bne	r3,zero,49f4 <memmove+0x124>
    4918:	327ffc04 	addi	r9,r6,-16
    491c:	4812d13a 	srli	r9,r9,4
    4920:	280f883a 	mov	r7,r5
    4924:	1007883a 	mov	r3,r2
    4928:	4810913a 	slli	r8,r9,4
    492c:	1211883a 	add	r8,r2,r8
    4930:	42000404 	addi	r8,r8,16
    4934:	39000017 	ldw	r4,0(r7)
    4938:	18c00404 	addi	r3,r3,16
    493c:	39c00404 	addi	r7,r7,16
    4940:	193ffc15 	stw	r4,-16(r3)
    4944:	393ffd17 	ldw	r4,-12(r7)
    4948:	193ffd15 	stw	r4,-12(r3)
    494c:	393ffe17 	ldw	r4,-8(r7)
    4950:	193ffe15 	stw	r4,-8(r3)
    4954:	393fff17 	ldw	r4,-4(r7)
    4958:	193fff15 	stw	r4,-4(r3)
    495c:	1a3ff51e 	bne	r3,r8,4934 <__alt_data_end+0xfe004934>
    4960:	49000044 	addi	r4,r9,1
    4964:	2008913a 	slli	r4,r4,4
    4968:	328003cc 	andi	r10,r6,15
    496c:	1107883a 	add	r3,r2,r4
    4970:	290b883a 	add	r5,r5,r4
    4974:	010000c4 	movi	r4,3
    4978:	2280212e 	bgeu	r4,r10,4a00 <memmove+0x130>
    497c:	52bfff04 	addi	r10,r10,-4
    4980:	5014d0ba 	srli	r10,r10,2
    4984:	180f883a 	mov	r7,r3
    4988:	2809883a 	mov	r4,r5
    498c:	5291883a 	add	r8,r10,r10
    4990:	4211883a 	add	r8,r8,r8
    4994:	42400104 	addi	r9,r8,4
    4998:	1a53883a 	add	r9,r3,r9
    499c:	22000017 	ldw	r8,0(r4)
    49a0:	39c00104 	addi	r7,r7,4
    49a4:	21000104 	addi	r4,r4,4
    49a8:	3a3fff15 	stw	r8,-4(r7)
    49ac:	3a7ffb1e 	bne	r7,r9,499c <__alt_data_end+0xfe00499c>
    49b0:	51000044 	addi	r4,r10,1
    49b4:	2109883a 	add	r4,r4,r4
    49b8:	2109883a 	add	r4,r4,r4
    49bc:	318000cc 	andi	r6,r6,3
    49c0:	1907883a 	add	r3,r3,r4
    49c4:	290b883a 	add	r5,r5,r4
    49c8:	30000c26 	beq	r6,zero,49fc <memmove+0x12c>
    49cc:	198d883a 	add	r6,r3,r6
    49d0:	29c00003 	ldbu	r7,0(r5)
    49d4:	18c00044 	addi	r3,r3,1
    49d8:	29400044 	addi	r5,r5,1
    49dc:	19ffffc5 	stb	r7,-1(r3)
    49e0:	19bffb1e 	bne	r3,r6,49d0 <__alt_data_end+0xfe0049d0>
    49e4:	f800283a 	ret
    49e8:	1007883a 	mov	r3,r2
    49ec:	303ff71e 	bne	r6,zero,49cc <__alt_data_end+0xfe0049cc>
    49f0:	00000206 	br	49fc <memmove+0x12c>
    49f4:	1007883a 	mov	r3,r2
    49f8:	003ff406 	br	49cc <__alt_data_end+0xfe0049cc>
    49fc:	f800283a 	ret
    4a00:	500d883a 	mov	r6,r10
    4a04:	303ff11e 	bne	r6,zero,49cc <__alt_data_end+0xfe0049cc>
    4a08:	003ffc06 	br	49fc <__alt_data_end+0xfe0049fc>

00004a0c <memset>:
    4a0c:	20c000cc 	andi	r3,r4,3
    4a10:	2005883a 	mov	r2,r4
    4a14:	18003f26 	beq	r3,zero,4b14 <memset+0x108>
    4a18:	31ffffc4 	addi	r7,r6,-1
    4a1c:	30003b26 	beq	r6,zero,4b0c <memset+0x100>
    4a20:	2813883a 	mov	r9,r5
    4a24:	200d883a 	mov	r6,r4
    4a28:	2007883a 	mov	r3,r4
    4a2c:	00000406 	br	4a40 <memset+0x34>
    4a30:	3a3fffc4 	addi	r8,r7,-1
    4a34:	31800044 	addi	r6,r6,1
    4a38:	38003426 	beq	r7,zero,4b0c <memset+0x100>
    4a3c:	400f883a 	mov	r7,r8
    4a40:	18c00044 	addi	r3,r3,1
    4a44:	32400005 	stb	r9,0(r6)
    4a48:	1a0000cc 	andi	r8,r3,3
    4a4c:	403ff81e 	bne	r8,zero,4a30 <__alt_data_end+0xfe004a30>
    4a50:	010000c4 	movi	r4,3
    4a54:	21c0282e 	bgeu	r4,r7,4af8 <memset+0xec>
    4a58:	29003fcc 	andi	r4,r5,255
    4a5c:	2010923a 	slli	r8,r4,8
    4a60:	4108b03a 	or	r4,r8,r4
    4a64:	2010943a 	slli	r8,r4,16
    4a68:	4110b03a 	or	r8,r8,r4
    4a6c:	010003c4 	movi	r4,15
    4a70:	21c0122e 	bgeu	r4,r7,4abc <memset+0xb0>
    4a74:	3a7ffc04 	addi	r9,r7,-16
    4a78:	4812d13a 	srli	r9,r9,4
    4a7c:	19000404 	addi	r4,r3,16
    4a80:	180d883a 	mov	r6,r3
    4a84:	4814913a 	slli	r10,r9,4
    4a88:	2289883a 	add	r4,r4,r10
    4a8c:	32000015 	stw	r8,0(r6)
    4a90:	32000115 	stw	r8,4(r6)
    4a94:	32000215 	stw	r8,8(r6)
    4a98:	32000315 	stw	r8,12(r6)
    4a9c:	31800404 	addi	r6,r6,16
    4aa0:	313ffa1e 	bne	r6,r4,4a8c <__alt_data_end+0xfe004a8c>
    4aa4:	4a400044 	addi	r9,r9,1
    4aa8:	4812913a 	slli	r9,r9,4
    4aac:	39c003cc 	andi	r7,r7,15
    4ab0:	010000c4 	movi	r4,3
    4ab4:	1a47883a 	add	r3,r3,r9
    4ab8:	21c00f2e 	bgeu	r4,r7,4af8 <memset+0xec>
    4abc:	3a7fff04 	addi	r9,r7,-4
    4ac0:	4812d0ba 	srli	r9,r9,2
    4ac4:	19000104 	addi	r4,r3,4
    4ac8:	180d883a 	mov	r6,r3
    4acc:	4a55883a 	add	r10,r9,r9
    4ad0:	5295883a 	add	r10,r10,r10
    4ad4:	2289883a 	add	r4,r4,r10
    4ad8:	32000015 	stw	r8,0(r6)
    4adc:	31800104 	addi	r6,r6,4
    4ae0:	313ffd1e 	bne	r6,r4,4ad8 <__alt_data_end+0xfe004ad8>
    4ae4:	4a400044 	addi	r9,r9,1
    4ae8:	4a53883a 	add	r9,r9,r9
    4aec:	4a53883a 	add	r9,r9,r9
    4af0:	1a47883a 	add	r3,r3,r9
    4af4:	39c000cc 	andi	r7,r7,3
    4af8:	38000526 	beq	r7,zero,4b10 <memset+0x104>
    4afc:	19cf883a 	add	r7,r3,r7
    4b00:	19400005 	stb	r5,0(r3)
    4b04:	18c00044 	addi	r3,r3,1
    4b08:	19fffd1e 	bne	r3,r7,4b00 <__alt_data_end+0xfe004b00>
    4b0c:	f800283a 	ret
    4b10:	f800283a 	ret
    4b14:	2007883a 	mov	r3,r4
    4b18:	300f883a 	mov	r7,r6
    4b1c:	003fcc06 	br	4a50 <__alt_data_end+0xfe004a50>

00004b20 <_realloc_r>:
    4b20:	defff604 	addi	sp,sp,-40
    4b24:	dd000415 	stw	r20,16(sp)
    4b28:	dc000015 	stw	r16,0(sp)
    4b2c:	dfc00915 	stw	ra,36(sp)
    4b30:	df000815 	stw	fp,32(sp)
    4b34:	ddc00715 	stw	r23,28(sp)
    4b38:	dd800615 	stw	r22,24(sp)
    4b3c:	dd400515 	stw	r21,20(sp)
    4b40:	dcc00315 	stw	r19,12(sp)
    4b44:	dc800215 	stw	r18,8(sp)
    4b48:	dc400115 	stw	r17,4(sp)
    4b4c:	2821883a 	mov	r16,r5
    4b50:	3029883a 	mov	r20,r6
    4b54:	28009a26 	beq	r5,zero,4dc0 <_realloc_r+0x2a0>
    4b58:	202b883a 	mov	r21,r4
    4b5c:	00126c80 	call	126c8 <__malloc_lock>
    4b60:	80ffff17 	ldw	r3,-4(r16)
    4b64:	047fff04 	movi	r17,-4
    4b68:	a08002c4 	addi	r2,r20,11
    4b6c:	01000584 	movi	r4,22
    4b70:	84fffe04 	addi	r19,r16,-8
    4b74:	1c62703a 	and	r17,r3,r17
    4b78:	2080372e 	bgeu	r4,r2,4c58 <_realloc_r+0x138>
    4b7c:	04bffe04 	movi	r18,-8
    4b80:	14a4703a 	and	r18,r2,r18
    4b84:	9005883a 	mov	r2,r18
    4b88:	90005b16 	blt	r18,zero,4cf8 <_realloc_r+0x1d8>
    4b8c:	95005a36 	bltu	r18,r20,4cf8 <_realloc_r+0x1d8>
    4b90:	8880340e 	bge	r17,r2,4c64 <_realloc_r+0x144>
    4b94:	05c00074 	movhi	r23,1
    4b98:	bdd63504 	addi	r23,r23,22740
    4b9c:	b9000217 	ldw	r4,8(r23)
    4ba0:	9c4b883a 	add	r5,r19,r17
    4ba4:	21409626 	beq	r4,r5,4e00 <_realloc_r+0x2e0>
    4ba8:	29800117 	ldw	r6,4(r5)
    4bac:	01ffff84 	movi	r7,-2
    4bb0:	31ce703a 	and	r7,r6,r7
    4bb4:	29cf883a 	add	r7,r5,r7
    4bb8:	39c00117 	ldw	r7,4(r7)
    4bbc:	39c0004c 	andi	r7,r7,1
    4bc0:	38004226 	beq	r7,zero,4ccc <_realloc_r+0x1ac>
    4bc4:	000d883a 	mov	r6,zero
    4bc8:	000b883a 	mov	r5,zero
    4bcc:	18c0004c 	andi	r3,r3,1
    4bd0:	18005c1e 	bne	r3,zero,4d44 <_realloc_r+0x224>
    4bd4:	85bffe17 	ldw	r22,-8(r16)
    4bd8:	00ffff04 	movi	r3,-4
    4bdc:	9dadc83a 	sub	r22,r19,r22
    4be0:	b1c00117 	ldw	r7,4(r22)
    4be4:	38c6703a 	and	r3,r7,r3
    4be8:	28005426 	beq	r5,zero,4d3c <_realloc_r+0x21c>
    4bec:	1c47883a 	add	r3,r3,r17
    4bf0:	2900bf26 	beq	r5,r4,4ef0 <_realloc_r+0x3d0>
    4bf4:	30ef883a 	add	r23,r6,r3
    4bf8:	b8807e16 	blt	r23,r2,4df4 <_realloc_r+0x2d4>
    4bfc:	28800317 	ldw	r2,12(r5)
    4c00:	28c00217 	ldw	r3,8(r5)
    4c04:	89bfff04 	addi	r6,r17,-4
    4c08:	01000904 	movi	r4,36
    4c0c:	18800315 	stw	r2,12(r3)
    4c10:	10c00215 	stw	r3,8(r2)
    4c14:	b1400217 	ldw	r5,8(r22)
    4c18:	b0c00317 	ldw	r3,12(r22)
    4c1c:	b5000204 	addi	r20,r22,8
    4c20:	28c00315 	stw	r3,12(r5)
    4c24:	19400215 	stw	r5,8(r3)
    4c28:	21808536 	bltu	r4,r6,4e40 <_realloc_r+0x320>
    4c2c:	008004c4 	movi	r2,19
    4c30:	1180932e 	bgeu	r2,r6,4e80 <_realloc_r+0x360>
    4c34:	80800017 	ldw	r2,0(r16)
    4c38:	b0800215 	stw	r2,8(r22)
    4c3c:	80800117 	ldw	r2,4(r16)
    4c40:	b0800315 	stw	r2,12(r22)
    4c44:	008006c4 	movi	r2,27
    4c48:	1180df36 	bltu	r2,r6,4fc8 <_realloc_r+0x4a8>
    4c4c:	b0c00404 	addi	r3,r22,16
    4c50:	84000204 	addi	r16,r16,8
    4c54:	00008b06 	br	4e84 <_realloc_r+0x364>
    4c58:	00800404 	movi	r2,16
    4c5c:	1025883a 	mov	r18,r2
    4c60:	003fca06 	br	4b8c <__alt_data_end+0xfe004b8c>
    4c64:	8029883a 	mov	r20,r16
    4c68:	8c8dc83a 	sub	r6,r17,r18
    4c6c:	008003c4 	movi	r2,15
    4c70:	18c0004c 	andi	r3,r3,1
    4c74:	11802436 	bltu	r2,r6,4d08 <_realloc_r+0x1e8>
    4c78:	1c46b03a 	or	r3,r3,r17
    4c7c:	98c00115 	stw	r3,4(r19)
    4c80:	9c63883a 	add	r17,r19,r17
    4c84:	88800117 	ldw	r2,4(r17)
    4c88:	10800054 	ori	r2,r2,1
    4c8c:	88800115 	stw	r2,4(r17)
    4c90:	a809883a 	mov	r4,r21
    4c94:	00126e80 	call	126e8 <__malloc_unlock>
    4c98:	a005883a 	mov	r2,r20
    4c9c:	dfc00917 	ldw	ra,36(sp)
    4ca0:	df000817 	ldw	fp,32(sp)
    4ca4:	ddc00717 	ldw	r23,28(sp)
    4ca8:	dd800617 	ldw	r22,24(sp)
    4cac:	dd400517 	ldw	r21,20(sp)
    4cb0:	dd000417 	ldw	r20,16(sp)
    4cb4:	dcc00317 	ldw	r19,12(sp)
    4cb8:	dc800217 	ldw	r18,8(sp)
    4cbc:	dc400117 	ldw	r17,4(sp)
    4cc0:	dc000017 	ldw	r16,0(sp)
    4cc4:	dec00a04 	addi	sp,sp,40
    4cc8:	f800283a 	ret
    4ccc:	01ffff04 	movi	r7,-4
    4cd0:	31cc703a 	and	r6,r6,r7
    4cd4:	344f883a 	add	r7,r6,r17
    4cd8:	38bfbc16 	blt	r7,r2,4bcc <__alt_data_end+0xfe004bcc>
    4cdc:	28800317 	ldw	r2,12(r5)
    4ce0:	29000217 	ldw	r4,8(r5)
    4ce4:	8029883a 	mov	r20,r16
    4ce8:	3823883a 	mov	r17,r7
    4cec:	20800315 	stw	r2,12(r4)
    4cf0:	11000215 	stw	r4,8(r2)
    4cf4:	003fdc06 	br	4c68 <__alt_data_end+0xfe004c68>
    4cf8:	00800304 	movi	r2,12
    4cfc:	a8800015 	stw	r2,0(r21)
    4d00:	0005883a 	mov	r2,zero
    4d04:	003fe506 	br	4c9c <__alt_data_end+0xfe004c9c>
    4d08:	1c86b03a 	or	r3,r3,r18
    4d0c:	9c8b883a 	add	r5,r19,r18
    4d10:	98c00115 	stw	r3,4(r19)
    4d14:	30800054 	ori	r2,r6,1
    4d18:	28800115 	stw	r2,4(r5)
    4d1c:	298d883a 	add	r6,r5,r6
    4d20:	30800117 	ldw	r2,4(r6)
    4d24:	a809883a 	mov	r4,r21
    4d28:	29400204 	addi	r5,r5,8
    4d2c:	10800054 	ori	r2,r2,1
    4d30:	30800115 	stw	r2,4(r6)
    4d34:	00032fc0 	call	32fc <_free_r>
    4d38:	003fd506 	br	4c90 <__alt_data_end+0xfe004c90>
    4d3c:	1c6f883a 	add	r23,r3,r17
    4d40:	b880370e 	bge	r23,r2,4e20 <_realloc_r+0x300>
    4d44:	a00b883a 	mov	r5,r20
    4d48:	a809883a 	mov	r4,r21
    4d4c:	0003cdc0 	call	3cdc <_malloc_r>
    4d50:	1029883a 	mov	r20,r2
    4d54:	1000c026 	beq	r2,zero,5058 <_realloc_r+0x538>
    4d58:	80ffff17 	ldw	r3,-4(r16)
    4d5c:	113ffe04 	addi	r4,r2,-8
    4d60:	00bfff84 	movi	r2,-2
    4d64:	1884703a 	and	r2,r3,r2
    4d68:	9885883a 	add	r2,r19,r2
    4d6c:	20809026 	beq	r4,r2,4fb0 <_realloc_r+0x490>
    4d70:	89bfff04 	addi	r6,r17,-4
    4d74:	00800904 	movi	r2,36
    4d78:	11805936 	bltu	r2,r6,4ee0 <_realloc_r+0x3c0>
    4d7c:	00c004c4 	movi	r3,19
    4d80:	19803636 	bltu	r3,r6,4e5c <_realloc_r+0x33c>
    4d84:	a005883a 	mov	r2,r20
    4d88:	8007883a 	mov	r3,r16
    4d8c:	19000017 	ldw	r4,0(r3)
    4d90:	11000015 	stw	r4,0(r2)
    4d94:	19000117 	ldw	r4,4(r3)
    4d98:	11000115 	stw	r4,4(r2)
    4d9c:	18c00217 	ldw	r3,8(r3)
    4da0:	10c00215 	stw	r3,8(r2)
    4da4:	800b883a 	mov	r5,r16
    4da8:	a809883a 	mov	r4,r21
    4dac:	00032fc0 	call	32fc <_free_r>
    4db0:	a809883a 	mov	r4,r21
    4db4:	00126e80 	call	126e8 <__malloc_unlock>
    4db8:	a005883a 	mov	r2,r20
    4dbc:	003fb706 	br	4c9c <__alt_data_end+0xfe004c9c>
    4dc0:	300b883a 	mov	r5,r6
    4dc4:	dfc00917 	ldw	ra,36(sp)
    4dc8:	df000817 	ldw	fp,32(sp)
    4dcc:	ddc00717 	ldw	r23,28(sp)
    4dd0:	dd800617 	ldw	r22,24(sp)
    4dd4:	dd400517 	ldw	r21,20(sp)
    4dd8:	dd000417 	ldw	r20,16(sp)
    4ddc:	dcc00317 	ldw	r19,12(sp)
    4de0:	dc800217 	ldw	r18,8(sp)
    4de4:	dc400117 	ldw	r17,4(sp)
    4de8:	dc000017 	ldw	r16,0(sp)
    4dec:	dec00a04 	addi	sp,sp,40
    4df0:	0003cdc1 	jmpi	3cdc <_malloc_r>
    4df4:	182f883a 	mov	r23,r3
    4df8:	b8bfd216 	blt	r23,r2,4d44 <__alt_data_end+0xfe004d44>
    4dfc:	00000806 	br	4e20 <_realloc_r+0x300>
    4e00:	21800117 	ldw	r6,4(r4)
    4e04:	017fff04 	movi	r5,-4
    4e08:	91c00404 	addi	r7,r18,16
    4e0c:	314c703a 	and	r6,r6,r5
    4e10:	344b883a 	add	r5,r6,r17
    4e14:	29c0250e 	bge	r5,r7,4eac <_realloc_r+0x38c>
    4e18:	200b883a 	mov	r5,r4
    4e1c:	003f6b06 	br	4bcc <__alt_data_end+0xfe004bcc>
    4e20:	b0800317 	ldw	r2,12(r22)
    4e24:	b0c00217 	ldw	r3,8(r22)
    4e28:	89bfff04 	addi	r6,r17,-4
    4e2c:	01000904 	movi	r4,36
    4e30:	18800315 	stw	r2,12(r3)
    4e34:	10c00215 	stw	r3,8(r2)
    4e38:	b5000204 	addi	r20,r22,8
    4e3c:	21bf7b2e 	bgeu	r4,r6,4c2c <__alt_data_end+0xfe004c2c>
    4e40:	a009883a 	mov	r4,r20
    4e44:	800b883a 	mov	r5,r16
    4e48:	00048d00 	call	48d0 <memmove>
    4e4c:	b0c00117 	ldw	r3,4(r22)
    4e50:	b823883a 	mov	r17,r23
    4e54:	b027883a 	mov	r19,r22
    4e58:	003f8306 	br	4c68 <__alt_data_end+0xfe004c68>
    4e5c:	80c00017 	ldw	r3,0(r16)
    4e60:	a0c00015 	stw	r3,0(r20)
    4e64:	80c00117 	ldw	r3,4(r16)
    4e68:	a0c00115 	stw	r3,4(r20)
    4e6c:	00c006c4 	movi	r3,27
    4e70:	19804736 	bltu	r3,r6,4f90 <_realloc_r+0x470>
    4e74:	a0800204 	addi	r2,r20,8
    4e78:	80c00204 	addi	r3,r16,8
    4e7c:	003fc306 	br	4d8c <__alt_data_end+0xfe004d8c>
    4e80:	a007883a 	mov	r3,r20
    4e84:	80800017 	ldw	r2,0(r16)
    4e88:	b823883a 	mov	r17,r23
    4e8c:	b027883a 	mov	r19,r22
    4e90:	18800015 	stw	r2,0(r3)
    4e94:	80800117 	ldw	r2,4(r16)
    4e98:	18800115 	stw	r2,4(r3)
    4e9c:	80800217 	ldw	r2,8(r16)
    4ea0:	18800215 	stw	r2,8(r3)
    4ea4:	b0c00117 	ldw	r3,4(r22)
    4ea8:	003f6f06 	br	4c68 <__alt_data_end+0xfe004c68>
    4eac:	9ca7883a 	add	r19,r19,r18
    4eb0:	2c85c83a 	sub	r2,r5,r18
    4eb4:	bcc00215 	stw	r19,8(r23)
    4eb8:	10800054 	ori	r2,r2,1
    4ebc:	98800115 	stw	r2,4(r19)
    4ec0:	80bfff17 	ldw	r2,-4(r16)
    4ec4:	a809883a 	mov	r4,r21
    4ec8:	1080004c 	andi	r2,r2,1
    4ecc:	90a4b03a 	or	r18,r18,r2
    4ed0:	84bfff15 	stw	r18,-4(r16)
    4ed4:	00126e80 	call	126e8 <__malloc_unlock>
    4ed8:	8005883a 	mov	r2,r16
    4edc:	003f6f06 	br	4c9c <__alt_data_end+0xfe004c9c>
    4ee0:	a009883a 	mov	r4,r20
    4ee4:	800b883a 	mov	r5,r16
    4ee8:	00048d00 	call	48d0 <memmove>
    4eec:	003fad06 	br	4da4 <__alt_data_end+0xfe004da4>
    4ef0:	30f9883a 	add	fp,r6,r3
    4ef4:	91000404 	addi	r4,r18,16
    4ef8:	e13fbe16 	blt	fp,r4,4df4 <__alt_data_end+0xfe004df4>
    4efc:	b0800317 	ldw	r2,12(r22)
    4f00:	b0c00217 	ldw	r3,8(r22)
    4f04:	89bfff04 	addi	r6,r17,-4
    4f08:	01000904 	movi	r4,36
    4f0c:	18800315 	stw	r2,12(r3)
    4f10:	10c00215 	stw	r3,8(r2)
    4f14:	b4400204 	addi	r17,r22,8
    4f18:	21804336 	bltu	r4,r6,5028 <_realloc_r+0x508>
    4f1c:	008004c4 	movi	r2,19
    4f20:	11803f2e 	bgeu	r2,r6,5020 <_realloc_r+0x500>
    4f24:	80800017 	ldw	r2,0(r16)
    4f28:	b0800215 	stw	r2,8(r22)
    4f2c:	80800117 	ldw	r2,4(r16)
    4f30:	b0800315 	stw	r2,12(r22)
    4f34:	008006c4 	movi	r2,27
    4f38:	11803f36 	bltu	r2,r6,5038 <_realloc_r+0x518>
    4f3c:	b0c00404 	addi	r3,r22,16
    4f40:	84000204 	addi	r16,r16,8
    4f44:	80800017 	ldw	r2,0(r16)
    4f48:	18800015 	stw	r2,0(r3)
    4f4c:	80800117 	ldw	r2,4(r16)
    4f50:	18800115 	stw	r2,4(r3)
    4f54:	80800217 	ldw	r2,8(r16)
    4f58:	18800215 	stw	r2,8(r3)
    4f5c:	b487883a 	add	r3,r22,r18
    4f60:	e485c83a 	sub	r2,fp,r18
    4f64:	b8c00215 	stw	r3,8(r23)
    4f68:	10800054 	ori	r2,r2,1
    4f6c:	18800115 	stw	r2,4(r3)
    4f70:	b0800117 	ldw	r2,4(r22)
    4f74:	a809883a 	mov	r4,r21
    4f78:	1080004c 	andi	r2,r2,1
    4f7c:	90a4b03a 	or	r18,r18,r2
    4f80:	b4800115 	stw	r18,4(r22)
    4f84:	00126e80 	call	126e8 <__malloc_unlock>
    4f88:	8805883a 	mov	r2,r17
    4f8c:	003f4306 	br	4c9c <__alt_data_end+0xfe004c9c>
    4f90:	80c00217 	ldw	r3,8(r16)
    4f94:	a0c00215 	stw	r3,8(r20)
    4f98:	80c00317 	ldw	r3,12(r16)
    4f9c:	a0c00315 	stw	r3,12(r20)
    4fa0:	30801126 	beq	r6,r2,4fe8 <_realloc_r+0x4c8>
    4fa4:	a0800404 	addi	r2,r20,16
    4fa8:	80c00404 	addi	r3,r16,16
    4fac:	003f7706 	br	4d8c <__alt_data_end+0xfe004d8c>
    4fb0:	a13fff17 	ldw	r4,-4(r20)
    4fb4:	00bfff04 	movi	r2,-4
    4fb8:	8029883a 	mov	r20,r16
    4fbc:	2084703a 	and	r2,r4,r2
    4fc0:	88a3883a 	add	r17,r17,r2
    4fc4:	003f2806 	br	4c68 <__alt_data_end+0xfe004c68>
    4fc8:	80800217 	ldw	r2,8(r16)
    4fcc:	b0800415 	stw	r2,16(r22)
    4fd0:	80800317 	ldw	r2,12(r16)
    4fd4:	b0800515 	stw	r2,20(r22)
    4fd8:	31000a26 	beq	r6,r4,5004 <_realloc_r+0x4e4>
    4fdc:	b0c00604 	addi	r3,r22,24
    4fe0:	84000404 	addi	r16,r16,16
    4fe4:	003fa706 	br	4e84 <__alt_data_end+0xfe004e84>
    4fe8:	81000417 	ldw	r4,16(r16)
    4fec:	a0800604 	addi	r2,r20,24
    4ff0:	80c00604 	addi	r3,r16,24
    4ff4:	a1000415 	stw	r4,16(r20)
    4ff8:	81000517 	ldw	r4,20(r16)
    4ffc:	a1000515 	stw	r4,20(r20)
    5000:	003f6206 	br	4d8c <__alt_data_end+0xfe004d8c>
    5004:	80800417 	ldw	r2,16(r16)
    5008:	84000604 	addi	r16,r16,24
    500c:	b0c00804 	addi	r3,r22,32
    5010:	b0800615 	stw	r2,24(r22)
    5014:	80bfff17 	ldw	r2,-4(r16)
    5018:	b0800715 	stw	r2,28(r22)
    501c:	003f9906 	br	4e84 <__alt_data_end+0xfe004e84>
    5020:	8807883a 	mov	r3,r17
    5024:	003fc706 	br	4f44 <__alt_data_end+0xfe004f44>
    5028:	8809883a 	mov	r4,r17
    502c:	800b883a 	mov	r5,r16
    5030:	00048d00 	call	48d0 <memmove>
    5034:	003fc906 	br	4f5c <__alt_data_end+0xfe004f5c>
    5038:	80800217 	ldw	r2,8(r16)
    503c:	b0800415 	stw	r2,16(r22)
    5040:	80800317 	ldw	r2,12(r16)
    5044:	b0800515 	stw	r2,20(r22)
    5048:	31000726 	beq	r6,r4,5068 <_realloc_r+0x548>
    504c:	b0c00604 	addi	r3,r22,24
    5050:	84000404 	addi	r16,r16,16
    5054:	003fbb06 	br	4f44 <__alt_data_end+0xfe004f44>
    5058:	a809883a 	mov	r4,r21
    505c:	00126e80 	call	126e8 <__malloc_unlock>
    5060:	0005883a 	mov	r2,zero
    5064:	003f0d06 	br	4c9c <__alt_data_end+0xfe004c9c>
    5068:	80800417 	ldw	r2,16(r16)
    506c:	84000604 	addi	r16,r16,24
    5070:	b0c00804 	addi	r3,r22,32
    5074:	b0800615 	stw	r2,24(r22)
    5078:	80bfff17 	ldw	r2,-4(r16)
    507c:	b0800715 	stw	r2,28(r22)
    5080:	003fb006 	br	4f44 <__alt_data_end+0xfe004f44>

00005084 <lflush>:
    5084:	20c0030b 	ldhu	r3,12(r4)
    5088:	00800244 	movi	r2,9
    508c:	18c0024c 	andi	r3,r3,9
    5090:	18800226 	beq	r3,r2,509c <lflush+0x18>
    5094:	0005883a 	mov	r2,zero
    5098:	f800283a 	ret
    509c:	000b7a81 	jmpi	b7a8 <fflush>

000050a0 <__srefill_r>:
    50a0:	defffd04 	addi	sp,sp,-12
    50a4:	dc400115 	stw	r17,4(sp)
    50a8:	dc000015 	stw	r16,0(sp)
    50ac:	dfc00215 	stw	ra,8(sp)
    50b0:	2023883a 	mov	r17,r4
    50b4:	2821883a 	mov	r16,r5
    50b8:	20000226 	beq	r4,zero,50c4 <__srefill_r+0x24>
    50bc:	20800e17 	ldw	r2,56(r4)
    50c0:	10003f26 	beq	r2,zero,51c0 <__srefill_r+0x120>
    50c4:	8080030b 	ldhu	r2,12(r16)
    50c8:	1108000c 	andi	r4,r2,8192
    50cc:	1007883a 	mov	r3,r2
    50d0:	2000071e 	bne	r4,zero,50f0 <__srefill_r+0x50>
    50d4:	81001917 	ldw	r4,100(r16)
    50d8:	10c80014 	ori	r3,r2,8192
    50dc:	00b7ffc4 	movi	r2,-8193
    50e0:	2088703a 	and	r4,r4,r2
    50e4:	80c0030d 	sth	r3,12(r16)
    50e8:	1805883a 	mov	r2,r3
    50ec:	81001915 	stw	r4,100(r16)
    50f0:	80000115 	stw	zero,4(r16)
    50f4:	1900080c 	andi	r4,r3,32
    50f8:	2000591e 	bne	r4,zero,5260 <__srefill_r+0x1c0>
    50fc:	1900010c 	andi	r4,r3,4
    5100:	20001e26 	beq	r4,zero,517c <__srefill_r+0xdc>
    5104:	81400c17 	ldw	r5,48(r16)
    5108:	28000826 	beq	r5,zero,512c <__srefill_r+0x8c>
    510c:	80801004 	addi	r2,r16,64
    5110:	28800226 	beq	r5,r2,511c <__srefill_r+0x7c>
    5114:	8809883a 	mov	r4,r17
    5118:	00032fc0 	call	32fc <_free_r>
    511c:	80800f17 	ldw	r2,60(r16)
    5120:	80000c15 	stw	zero,48(r16)
    5124:	80800115 	stw	r2,4(r16)
    5128:	1000371e 	bne	r2,zero,5208 <__srefill_r+0x168>
    512c:	80800417 	ldw	r2,16(r16)
    5130:	10004d26 	beq	r2,zero,5268 <__srefill_r+0x1c8>
    5134:	8080030b 	ldhu	r2,12(r16)
    5138:	108000cc 	andi	r2,r2,3
    513c:	1000221e 	bne	r2,zero,51c8 <__srefill_r+0x128>
    5140:	81800417 	ldw	r6,16(r16)
    5144:	80800817 	ldw	r2,32(r16)
    5148:	81400717 	ldw	r5,28(r16)
    514c:	81c00517 	ldw	r7,20(r16)
    5150:	81800015 	stw	r6,0(r16)
    5154:	8809883a 	mov	r4,r17
    5158:	103ee83a 	callr	r2
    515c:	80800115 	stw	r2,4(r16)
    5160:	00800d0e 	bge	zero,r2,5198 <__srefill_r+0xf8>
    5164:	0005883a 	mov	r2,zero
    5168:	dfc00217 	ldw	ra,8(sp)
    516c:	dc400117 	ldw	r17,4(sp)
    5170:	dc000017 	ldw	r16,0(sp)
    5174:	dec00304 	addi	sp,sp,12
    5178:	f800283a 	ret
    517c:	1900040c 	andi	r4,r3,16
    5180:	20003326 	beq	r4,zero,5250 <__srefill_r+0x1b0>
    5184:	18c0020c 	andi	r3,r3,8
    5188:	1800271e 	bne	r3,zero,5228 <__srefill_r+0x188>
    518c:	10800114 	ori	r2,r2,4
    5190:	8080030d 	sth	r2,12(r16)
    5194:	003fe506 	br	512c <__alt_data_end+0xfe00512c>
    5198:	80c0030b 	ldhu	r3,12(r16)
    519c:	1000111e 	bne	r2,zero,51e4 <__srefill_r+0x144>
    51a0:	00bfffc4 	movi	r2,-1
    51a4:	18c00814 	ori	r3,r3,32
    51a8:	80c0030d 	sth	r3,12(r16)
    51ac:	dfc00217 	ldw	ra,8(sp)
    51b0:	dc400117 	ldw	r17,4(sp)
    51b4:	dc000017 	ldw	r16,0(sp)
    51b8:	dec00304 	addi	sp,sp,12
    51bc:	f800283a 	ret
    51c0:	0002c480 	call	2c48 <__sinit>
    51c4:	003fbf06 	br	50c4 <__alt_data_end+0xfe0050c4>
    51c8:	00800074 	movhi	r2,1
    51cc:	109bcd04 	addi	r2,r2,28468
    51d0:	11000017 	ldw	r4,0(r2)
    51d4:	01400034 	movhi	r5,0
    51d8:	29542104 	addi	r5,r5,20612
    51dc:	0003a780 	call	3a78 <_fwalk>
    51e0:	003fd706 	br	5140 <__alt_data_end+0xfe005140>
    51e4:	00bfffc4 	movi	r2,-1
    51e8:	18c01014 	ori	r3,r3,64
    51ec:	80000115 	stw	zero,4(r16)
    51f0:	80c0030d 	sth	r3,12(r16)
    51f4:	dfc00217 	ldw	ra,8(sp)
    51f8:	dc400117 	ldw	r17,4(sp)
    51fc:	dc000017 	ldw	r16,0(sp)
    5200:	dec00304 	addi	sp,sp,12
    5204:	f800283a 	ret
    5208:	80c00e17 	ldw	r3,56(r16)
    520c:	0005883a 	mov	r2,zero
    5210:	80c00015 	stw	r3,0(r16)
    5214:	dfc00217 	ldw	ra,8(sp)
    5218:	dc400117 	ldw	r17,4(sp)
    521c:	dc000017 	ldw	r16,0(sp)
    5220:	dec00304 	addi	sp,sp,12
    5224:	f800283a 	ret
    5228:	8809883a 	mov	r4,r17
    522c:	800b883a 	mov	r5,r16
    5230:	000b5640 	call	b564 <_fflush_r>
    5234:	10000a1e 	bne	r2,zero,5260 <__srefill_r+0x1c0>
    5238:	8080030b 	ldhu	r2,12(r16)
    523c:	00fffdc4 	movi	r3,-9
    5240:	80000215 	stw	zero,8(r16)
    5244:	1884703a 	and	r2,r3,r2
    5248:	80000615 	stw	zero,24(r16)
    524c:	003fcf06 	br	518c <__alt_data_end+0xfe00518c>
    5250:	00c00244 	movi	r3,9
    5254:	88c00015 	stw	r3,0(r17)
    5258:	10801014 	ori	r2,r2,64
    525c:	8080030d 	sth	r2,12(r16)
    5260:	00bfffc4 	movi	r2,-1
    5264:	003fc006 	br	5168 <__alt_data_end+0xfe005168>
    5268:	8809883a 	mov	r4,r17
    526c:	800b883a 	mov	r5,r16
    5270:	000c4b00 	call	c4b0 <__smakebuf_r>
    5274:	003faf06 	br	5134 <__alt_data_end+0xfe005134>

00005278 <__fpclassifyd>:
    5278:	00a00034 	movhi	r2,32768
    527c:	10bfffc4 	addi	r2,r2,-1
    5280:	288a703a 	and	r5,r5,r2
    5284:	28000726 	beq	r5,zero,52a4 <__fpclassifyd+0x2c>
    5288:	00bffc34 	movhi	r2,65520
    528c:	2885883a 	add	r2,r5,r2
    5290:	00dff834 	movhi	r3,32736
    5294:	18ffffc4 	addi	r3,r3,-1
    5298:	18800636 	bltu	r3,r2,52b4 <__fpclassifyd+0x3c>
    529c:	00800104 	movi	r2,4
    52a0:	f800283a 	ret
    52a4:	2005003a 	cmpeq	r2,r4,zero
    52a8:	00c000c4 	movi	r3,3
    52ac:	1885c83a 	sub	r2,r3,r2
    52b0:	f800283a 	ret
    52b4:	00800434 	movhi	r2,16
    52b8:	10bfffc4 	addi	r2,r2,-1
    52bc:	11400236 	bltu	r2,r5,52c8 <__fpclassifyd+0x50>
    52c0:	008000c4 	movi	r2,3
    52c4:	f800283a 	ret
    52c8:	009ffc34 	movhi	r2,32752
    52cc:	28800226 	beq	r5,r2,52d8 <__fpclassifyd+0x60>
    52d0:	0005883a 	mov	r2,zero
    52d4:	f800283a 	ret
    52d8:	2005003a 	cmpeq	r2,r4,zero
    52dc:	f800283a 	ret

000052e0 <_sbrk_r>:
    52e0:	defffd04 	addi	sp,sp,-12
    52e4:	dc400115 	stw	r17,4(sp)
    52e8:	dc000015 	stw	r16,0(sp)
    52ec:	2023883a 	mov	r17,r4
    52f0:	040000b4 	movhi	r16,2
    52f4:	8422d804 	addi	r16,r16,-29856
    52f8:	2809883a 	mov	r4,r5
    52fc:	dfc00215 	stw	ra,8(sp)
    5300:	80000015 	stw	zero,0(r16)
    5304:	00128a80 	call	128a8 <sbrk>
    5308:	00ffffc4 	movi	r3,-1
    530c:	10c00526 	beq	r2,r3,5324 <_sbrk_r+0x44>
    5310:	dfc00217 	ldw	ra,8(sp)
    5314:	dc400117 	ldw	r17,4(sp)
    5318:	dc000017 	ldw	r16,0(sp)
    531c:	dec00304 	addi	sp,sp,12
    5320:	f800283a 	ret
    5324:	80c00017 	ldw	r3,0(r16)
    5328:	183ff926 	beq	r3,zero,5310 <__alt_data_end+0xfe005310>
    532c:	88c00015 	stw	r3,0(r17)
    5330:	dfc00217 	ldw	ra,8(sp)
    5334:	dc400117 	ldw	r17,4(sp)
    5338:	dc000017 	ldw	r16,0(sp)
    533c:	dec00304 	addi	sp,sp,12
    5340:	f800283a 	ret

00005344 <__sccl>:
    5344:	2a000003 	ldbu	r8,0(r5)
    5348:	00801784 	movi	r2,94
    534c:	40802626 	beq	r8,r2,53e8 <__sccl+0xa4>
    5350:	28800044 	addi	r2,r5,1
    5354:	000f883a 	mov	r7,zero
    5358:	0013883a 	mov	r9,zero
    535c:	0007883a 	mov	r3,zero
    5360:	01804004 	movi	r6,256
    5364:	20cb883a 	add	r5,r4,r3
    5368:	29c00005 	stb	r7,0(r5)
    536c:	18c00044 	addi	r3,r3,1
    5370:	19bffc1e 	bne	r3,r6,5364 <__alt_data_end+0xfe005364>
    5374:	40000f26 	beq	r8,zero,53b4 <__sccl+0x70>
    5378:	01400044 	movi	r5,1
    537c:	2a4bc83a 	sub	r5,r5,r9
    5380:	01c00b44 	movi	r7,45
    5384:	02801744 	movi	r10,93
    5388:	2207883a 	add	r3,r4,r8
    538c:	19400005 	stb	r5,0(r3)
    5390:	10c00003 	ldbu	r3,0(r2)
    5394:	12400044 	addi	r9,r2,1
    5398:	19c00a26 	beq	r3,r7,53c4 <__sccl+0x80>
    539c:	1a800726 	beq	r3,r10,53bc <__sccl+0x78>
    53a0:	18000326 	beq	r3,zero,53b0 <__sccl+0x6c>
    53a4:	1811883a 	mov	r8,r3
    53a8:	4805883a 	mov	r2,r9
    53ac:	003ff606 	br	5388 <__alt_data_end+0xfe005388>
    53b0:	f800283a 	ret
    53b4:	10bfffc4 	addi	r2,r2,-1
    53b8:	f800283a 	ret
    53bc:	4805883a 	mov	r2,r9
    53c0:	f800283a 	ret
    53c4:	11800043 	ldbu	r6,1(r2)
    53c8:	32800c26 	beq	r6,r10,53fc <__sccl+0xb8>
    53cc:	32000b16 	blt	r6,r8,53fc <__sccl+0xb8>
    53d0:	10800084 	addi	r2,r2,2
    53d4:	42000044 	addi	r8,r8,1
    53d8:	2207883a 	add	r3,r4,r8
    53dc:	19400005 	stb	r5,0(r3)
    53e0:	41bffc16 	blt	r8,r6,53d4 <__alt_data_end+0xfe0053d4>
    53e4:	003fea06 	br	5390 <__alt_data_end+0xfe005390>
    53e8:	2a000043 	ldbu	r8,1(r5)
    53ec:	28800084 	addi	r2,r5,2
    53f0:	01c00044 	movi	r7,1
    53f4:	02400044 	movi	r9,1
    53f8:	003fd806 	br	535c <__alt_data_end+0xfe00535c>
    53fc:	3811883a 	mov	r8,r7
    5400:	4805883a 	mov	r2,r9
    5404:	003fe006 	br	5388 <__alt_data_end+0xfe005388>

00005408 <nanf>:
    5408:	009ff034 	movhi	r2,32704
    540c:	f800283a 	ret

00005410 <_sprintf_r>:
    5410:	deffe404 	addi	sp,sp,-112
    5414:	2807883a 	mov	r3,r5
    5418:	dfc01a15 	stw	ra,104(sp)
    541c:	d9c01b15 	stw	r7,108(sp)
    5420:	00a00034 	movhi	r2,32768
    5424:	10bfffc4 	addi	r2,r2,-1
    5428:	02008204 	movi	r8,520
    542c:	d8800215 	stw	r2,8(sp)
    5430:	d8800515 	stw	r2,20(sp)
    5434:	d80b883a 	mov	r5,sp
    5438:	d9c01b04 	addi	r7,sp,108
    543c:	00bfffc4 	movi	r2,-1
    5440:	d8c00015 	stw	r3,0(sp)
    5444:	d8c00415 	stw	r3,16(sp)
    5448:	da00030d 	sth	r8,12(sp)
    544c:	d880038d 	sth	r2,14(sp)
    5450:	00078500 	call	7850 <___svfprintf_internal_r>
    5454:	d8c00017 	ldw	r3,0(sp)
    5458:	18000005 	stb	zero,0(r3)
    545c:	dfc01a17 	ldw	ra,104(sp)
    5460:	dec01c04 	addi	sp,sp,112
    5464:	f800283a 	ret

00005468 <sprintf>:
    5468:	deffe304 	addi	sp,sp,-116
    546c:	2007883a 	mov	r3,r4
    5470:	dfc01a15 	stw	ra,104(sp)
    5474:	d9801b15 	stw	r6,108(sp)
    5478:	d9c01c15 	stw	r7,112(sp)
    547c:	00800074 	movhi	r2,1
    5480:	109bce04 	addi	r2,r2,28472
    5484:	11000017 	ldw	r4,0(r2)
    5488:	00a00034 	movhi	r2,32768
    548c:	10bfffc4 	addi	r2,r2,-1
    5490:	280d883a 	mov	r6,r5
    5494:	02008204 	movi	r8,520
    5498:	d8800215 	stw	r2,8(sp)
    549c:	d8800515 	stw	r2,20(sp)
    54a0:	d80b883a 	mov	r5,sp
    54a4:	d9c01b04 	addi	r7,sp,108
    54a8:	00bfffc4 	movi	r2,-1
    54ac:	d8c00015 	stw	r3,0(sp)
    54b0:	d8c00415 	stw	r3,16(sp)
    54b4:	da00030d 	sth	r8,12(sp)
    54b8:	d880038d 	sth	r2,14(sp)
    54bc:	00078500 	call	7850 <___svfprintf_internal_r>
    54c0:	d8c00017 	ldw	r3,0(sp)
    54c4:	18000005 	stb	zero,0(r3)
    54c8:	dfc01a17 	ldw	ra,104(sp)
    54cc:	dec01d04 	addi	sp,sp,116
    54d0:	f800283a 	ret

000054d4 <__sread>:
    54d4:	defffe04 	addi	sp,sp,-8
    54d8:	dc000015 	stw	r16,0(sp)
    54dc:	2821883a 	mov	r16,r5
    54e0:	2940038f 	ldh	r5,14(r5)
    54e4:	dfc00115 	stw	ra,4(sp)
    54e8:	000d5dc0 	call	d5dc <_read_r>
    54ec:	10000716 	blt	r2,zero,550c <__sread+0x38>
    54f0:	80c01417 	ldw	r3,80(r16)
    54f4:	1887883a 	add	r3,r3,r2
    54f8:	80c01415 	stw	r3,80(r16)
    54fc:	dfc00117 	ldw	ra,4(sp)
    5500:	dc000017 	ldw	r16,0(sp)
    5504:	dec00204 	addi	sp,sp,8
    5508:	f800283a 	ret
    550c:	80c0030b 	ldhu	r3,12(r16)
    5510:	18fbffcc 	andi	r3,r3,61439
    5514:	80c0030d 	sth	r3,12(r16)
    5518:	dfc00117 	ldw	ra,4(sp)
    551c:	dc000017 	ldw	r16,0(sp)
    5520:	dec00204 	addi	sp,sp,8
    5524:	f800283a 	ret

00005528 <__seofread>:
    5528:	0005883a 	mov	r2,zero
    552c:	f800283a 	ret

00005530 <__swrite>:
    5530:	2880030b 	ldhu	r2,12(r5)
    5534:	defffb04 	addi	sp,sp,-20
    5538:	dcc00315 	stw	r19,12(sp)
    553c:	dc800215 	stw	r18,8(sp)
    5540:	dc400115 	stw	r17,4(sp)
    5544:	dc000015 	stw	r16,0(sp)
    5548:	dfc00415 	stw	ra,16(sp)
    554c:	10c0400c 	andi	r3,r2,256
    5550:	2821883a 	mov	r16,r5
    5554:	2027883a 	mov	r19,r4
    5558:	3025883a 	mov	r18,r6
    555c:	3823883a 	mov	r17,r7
    5560:	18000526 	beq	r3,zero,5578 <__swrite+0x48>
    5564:	2940038f 	ldh	r5,14(r5)
    5568:	000d883a 	mov	r6,zero
    556c:	01c00084 	movi	r7,2
    5570:	000c4440 	call	c444 <_lseek_r>
    5574:	8080030b 	ldhu	r2,12(r16)
    5578:	8140038f 	ldh	r5,14(r16)
    557c:	10bbffcc 	andi	r2,r2,61439
    5580:	9809883a 	mov	r4,r19
    5584:	900d883a 	mov	r6,r18
    5588:	880f883a 	mov	r7,r17
    558c:	8080030d 	sth	r2,12(r16)
    5590:	dfc00417 	ldw	ra,16(sp)
    5594:	dcc00317 	ldw	r19,12(sp)
    5598:	dc800217 	ldw	r18,8(sp)
    559c:	dc400117 	ldw	r17,4(sp)
    55a0:	dc000017 	ldw	r16,0(sp)
    55a4:	dec00504 	addi	sp,sp,20
    55a8:	00099e01 	jmpi	99e0 <_write_r>

000055ac <__sseek>:
    55ac:	defffe04 	addi	sp,sp,-8
    55b0:	dc000015 	stw	r16,0(sp)
    55b4:	2821883a 	mov	r16,r5
    55b8:	2940038f 	ldh	r5,14(r5)
    55bc:	dfc00115 	stw	ra,4(sp)
    55c0:	000c4440 	call	c444 <_lseek_r>
    55c4:	00ffffc4 	movi	r3,-1
    55c8:	10c00826 	beq	r2,r3,55ec <__sseek+0x40>
    55cc:	80c0030b 	ldhu	r3,12(r16)
    55d0:	80801415 	stw	r2,80(r16)
    55d4:	18c40014 	ori	r3,r3,4096
    55d8:	80c0030d 	sth	r3,12(r16)
    55dc:	dfc00117 	ldw	ra,4(sp)
    55e0:	dc000017 	ldw	r16,0(sp)
    55e4:	dec00204 	addi	sp,sp,8
    55e8:	f800283a 	ret
    55ec:	80c0030b 	ldhu	r3,12(r16)
    55f0:	18fbffcc 	andi	r3,r3,61439
    55f4:	80c0030d 	sth	r3,12(r16)
    55f8:	dfc00117 	ldw	ra,4(sp)
    55fc:	dc000017 	ldw	r16,0(sp)
    5600:	dec00204 	addi	sp,sp,8
    5604:	f800283a 	ret

00005608 <__sclose>:
    5608:	2940038f 	ldh	r5,14(r5)
    560c:	0009b841 	jmpi	9b84 <_close_r>

00005610 <strcmp>:
    5610:	2144b03a 	or	r2,r4,r5
    5614:	108000cc 	andi	r2,r2,3
    5618:	1000171e 	bne	r2,zero,5678 <strcmp+0x68>
    561c:	20800017 	ldw	r2,0(r4)
    5620:	28c00017 	ldw	r3,0(r5)
    5624:	10c0141e 	bne	r2,r3,5678 <strcmp+0x68>
    5628:	027fbff4 	movhi	r9,65279
    562c:	4a7fbfc4 	addi	r9,r9,-257
    5630:	1247883a 	add	r3,r2,r9
    5634:	0084303a 	nor	r2,zero,r2
    5638:	1884703a 	and	r2,r3,r2
    563c:	02202074 	movhi	r8,32897
    5640:	42202004 	addi	r8,r8,-32640
    5644:	1204703a 	and	r2,r2,r8
    5648:	10000226 	beq	r2,zero,5654 <strcmp+0x44>
    564c:	00001706 	br	56ac <strcmp+0x9c>
    5650:	3000161e 	bne	r6,zero,56ac <strcmp+0x9c>
    5654:	21000104 	addi	r4,r4,4
    5658:	20800017 	ldw	r2,0(r4)
    565c:	29400104 	addi	r5,r5,4
    5660:	28c00017 	ldw	r3,0(r5)
    5664:	124f883a 	add	r7,r2,r9
    5668:	008c303a 	nor	r6,zero,r2
    566c:	398c703a 	and	r6,r7,r6
    5670:	320c703a 	and	r6,r6,r8
    5674:	10fff626 	beq	r2,r3,5650 <__alt_data_end+0xfe005650>
    5678:	20800007 	ldb	r2,0(r4)
    567c:	1000051e 	bne	r2,zero,5694 <strcmp+0x84>
    5680:	00000606 	br	569c <strcmp+0x8c>
    5684:	21000044 	addi	r4,r4,1
    5688:	20800007 	ldb	r2,0(r4)
    568c:	29400044 	addi	r5,r5,1
    5690:	10000226 	beq	r2,zero,569c <strcmp+0x8c>
    5694:	28c00007 	ldb	r3,0(r5)
    5698:	10fffa26 	beq	r2,r3,5684 <__alt_data_end+0xfe005684>
    569c:	20c00003 	ldbu	r3,0(r4)
    56a0:	28800003 	ldbu	r2,0(r5)
    56a4:	1885c83a 	sub	r2,r3,r2
    56a8:	f800283a 	ret
    56ac:	0005883a 	mov	r2,zero
    56b0:	f800283a 	ret

000056b4 <_strtod_r>:
    56b4:	deffe104 	addi	sp,sp,-124
    56b8:	df001d15 	stw	fp,116(sp)
    56bc:	dc801715 	stw	r18,92(sp)
    56c0:	dc001515 	stw	r16,84(sp)
    56c4:	d9400615 	stw	r5,24(sp)
    56c8:	2825883a 	mov	r18,r5
    56cc:	dfc01e15 	stw	ra,120(sp)
    56d0:	ddc01c15 	stw	r23,112(sp)
    56d4:	dd801b15 	stw	r22,108(sp)
    56d8:	dd401a15 	stw	r21,104(sp)
    56dc:	dd001915 	stw	r20,100(sp)
    56e0:	dcc01815 	stw	r19,96(sp)
    56e4:	dc401615 	stw	r17,88(sp)
    56e8:	90c00003 	ldbu	r3,0(r18)
    56ec:	2839883a 	mov	fp,r5
    56f0:	d9800e15 	stw	r6,56(sp)
    56f4:	d8000815 	stw	zero,32(sp)
    56f8:	d8000715 	stw	zero,28(sp)
    56fc:	01400b44 	movi	r5,45
    5700:	18803fcc 	andi	r2,r3,255
    5704:	2021883a 	mov	r16,r4
    5708:	01800034 	movhi	r6,0
    570c:	3195ca04 	addi	r6,r6,22312
    5710:	2880cb36 	bltu	r5,r2,5a40 <_strtod_r+0x38c>
    5714:	1085883a 	add	r2,r2,r2
    5718:	1085883a 	add	r2,r2,r2
    571c:	1185883a 	add	r2,r2,r6
    5720:	10800017 	ldw	r2,0(r2)
    5724:	1000683a 	jmp	r2
    5728:	000057e8 	cmpgeui	zero,zero,351
    572c:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5730:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5734:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5738:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    573c:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5740:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5744:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5748:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    574c:	00005a2c 	andhi	zero,zero,360
    5750:	00005a2c 	andhi	zero,zero,360
    5754:	00005a2c 	andhi	zero,zero,360
    5758:	00005a2c 	andhi	zero,zero,360
    575c:	00005a2c 	andhi	zero,zero,360
    5760:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5764:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5768:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    576c:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5770:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5774:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5778:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    577c:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5780:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5784:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5788:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    578c:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5790:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5794:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    5798:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    579c:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57a0:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57a4:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57a8:	00005a2c 	andhi	zero,zero,360
    57ac:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57b0:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57b4:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57b8:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57bc:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57c0:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57c4:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57c8:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57cc:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57d0:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57d4:	00005848 	cmpgei	zero,zero,353
    57d8:	00005a40 	call	5a4 <LCD_Pattern_Horizon+0x40>
    57dc:	00005a9c 	xori	zero,zero,362
    57e0:	00801244 	movi	r2,73
    57e4:	98848926 	beq	r19,r2,6a0c <_strtod_r+0x1358>
    57e8:	0027883a 	mov	r19,zero
    57ec:	0023883a 	mov	r17,zero
    57f0:	df000615 	stw	fp,24(sp)
    57f4:	d8001015 	stw	zero,64(sp)
    57f8:	d9000e17 	ldw	r4,56(sp)
    57fc:	20000226 	beq	r4,zero,5808 <_strtod_r+0x154>
    5800:	d8800617 	ldw	r2,24(sp)
    5804:	20800015 	stw	r2,0(r4)
    5808:	d9401017 	ldw	r5,64(sp)
    580c:	2800ae1e 	bne	r5,zero,5ac8 <_strtod_r+0x414>
    5810:	8807883a 	mov	r3,r17
    5814:	9805883a 	mov	r2,r19
    5818:	dfc01e17 	ldw	ra,120(sp)
    581c:	df001d17 	ldw	fp,116(sp)
    5820:	ddc01c17 	ldw	r23,112(sp)
    5824:	dd801b17 	ldw	r22,108(sp)
    5828:	dd401a17 	ldw	r21,104(sp)
    582c:	dd001917 	ldw	r20,100(sp)
    5830:	dcc01817 	ldw	r19,96(sp)
    5834:	dc801717 	ldw	r18,92(sp)
    5838:	dc401617 	ldw	r17,88(sp)
    583c:	dc001517 	ldw	r16,84(sp)
    5840:	dec01f04 	addi	sp,sp,124
    5844:	f800283a 	ret
    5848:	d8001015 	stw	zero,64(sp)
    584c:	90800044 	addi	r2,r18,1
    5850:	d8800615 	stw	r2,24(sp)
    5854:	90c00043 	ldbu	r3,1(r18)
    5858:	19003fcc 	andi	r4,r3,255
    585c:	2100201c 	xori	r4,r4,128
    5860:	213fe004 	addi	r4,r4,-128
    5864:	203fe026 	beq	r4,zero,57e8 <__alt_data_end+0xfe0057e8>
    5868:	19403fcc 	andi	r5,r3,255
    586c:	2940201c 	xori	r5,r5,128
    5870:	1025883a 	mov	r18,r2
    5874:	297fe004 	addi	r5,r5,-128
    5878:	00800c04 	movi	r2,48
    587c:	28807626 	beq	r5,r2,5a58 <_strtod_r+0x3a4>
    5880:	0023883a 	mov	r17,zero
    5884:	18bff404 	addi	r2,r3,-48
    5888:	10803fcc 	andi	r2,r2,255
    588c:	01000244 	movi	r4,9
    5890:	2083e736 	bltu	r4,r2,6830 <_strtod_r+0x117c>
    5894:	90800044 	addi	r2,r18,1
    5898:	002f883a 	mov	r23,zero
    589c:	002b883a 	mov	r21,zero
    58a0:	0029883a 	mov	r20,zero
    58a4:	01400204 	movi	r5,8
    58a8:	01c003c4 	movi	r7,15
    58ac:	2d007e16 	blt	r5,r20,5aa8 <_strtod_r+0x3f4>
    58b0:	ad4002a4 	muli	r21,r21,10
    58b4:	18c03fcc 	andi	r3,r3,255
    58b8:	18c0201c 	xori	r3,r3,128
    58bc:	18ffe004 	addi	r3,r3,-128
    58c0:	a8eb883a 	add	r21,r21,r3
    58c4:	ad7ff404 	addi	r21,r21,-48
    58c8:	d8800615 	stw	r2,24(sp)
    58cc:	10c00003 	ldbu	r3,0(r2)
    58d0:	102d883a 	mov	r22,r2
    58d4:	a5000044 	addi	r20,r20,1
    58d8:	19bff404 	addi	r6,r3,-48
    58dc:	31803fcc 	andi	r6,r6,255
    58e0:	10800044 	addi	r2,r2,1
    58e4:	21bff12e 	bgeu	r4,r6,58ac <__alt_data_end+0xfe0058ac>
    58e8:	1cc03fcc 	andi	r19,r3,255
    58ec:	9cc0201c 	xori	r19,r19,128
    58f0:	9cffe004 	addi	r19,r19,-128
    58f4:	8009883a 	mov	r4,r16
    58f8:	0003ca80 	call	3ca8 <_localeconv_r>
    58fc:	11400017 	ldw	r5,0(r2)
    5900:	8009883a 	mov	r4,r16
    5904:	d9401315 	stw	r5,76(sp)
    5908:	0003ca80 	call	3ca8 <_localeconv_r>
    590c:	11000017 	ldw	r4,0(r2)
    5910:	00012640 	call	1264 <strlen>
    5914:	d9401317 	ldw	r5,76(sp)
    5918:	b009883a 	mov	r4,r22
    591c:	100d883a 	mov	r6,r2
    5920:	000d6480 	call	d648 <strncmp>
    5924:	10006a26 	beq	r2,zero,5ad0 <_strtod_r+0x41c>
    5928:	a02d883a 	mov	r22,r20
    592c:	000f883a 	mov	r7,zero
    5930:	000d883a 	mov	r6,zero
    5934:	0013883a 	mov	r9,zero
    5938:	00fff7c4 	movi	r3,-33
    593c:	98c6703a 	and	r3,r19,r3
    5940:	00801144 	movi	r2,69
    5944:	1880a826 	beq	r3,r2,5be8 <_strtod_r+0x534>
    5948:	0007883a 	mov	r3,zero
    594c:	b0007f26 	beq	r22,zero,5b4c <_strtod_r+0x498>
    5950:	198dc83a 	sub	r6,r3,r6
    5954:	d9800d15 	stw	r6,52(sp)
    5958:	a000011e 	bne	r20,zero,5960 <_strtod_r+0x2ac>
    595c:	b029883a 	mov	r20,r22
    5960:	00800404 	movi	r2,16
    5964:	b023883a 	mov	r17,r22
    5968:	1580010e 	bge	r2,r22,5970 <_strtod_r+0x2bc>
    596c:	1023883a 	mov	r17,r2
    5970:	a809883a 	mov	r4,r21
    5974:	0011e140 	call	11e14 <__floatunsidf>
    5978:	d8800815 	stw	r2,32(sp)
    597c:	d8c00715 	stw	r3,28(sp)
    5980:	00800244 	movi	r2,9
    5984:	1440150e 	bge	r2,r17,59dc <_strtod_r+0x328>
    5988:	88bffdc4 	addi	r2,r17,-9
    598c:	100490fa 	slli	r2,r2,3
    5990:	180b883a 	mov	r5,r3
    5994:	00c00074 	movhi	r3,1
    5998:	18d48404 	addi	r3,r3,21008
    599c:	1885883a 	add	r2,r3,r2
    59a0:	11800017 	ldw	r6,0(r2)
    59a4:	11c00117 	ldw	r7,4(r2)
    59a8:	d9000817 	ldw	r4,32(sp)
    59ac:	0010d500 	call	10d50 <__muldf3>
    59b0:	b809883a 	mov	r4,r23
    59b4:	1039883a 	mov	fp,r2
    59b8:	1827883a 	mov	r19,r3
    59bc:	0011e140 	call	11e14 <__floatunsidf>
    59c0:	e009883a 	mov	r4,fp
    59c4:	980b883a 	mov	r5,r19
    59c8:	100d883a 	mov	r6,r2
    59cc:	180f883a 	mov	r7,r3
    59d0:	000f9b80 	call	f9b8 <__adddf3>
    59d4:	d8800815 	stw	r2,32(sp)
    59d8:	d8c00715 	stw	r3,28(sp)
    59dc:	008003c4 	movi	r2,15
    59e0:	1580cb16 	blt	r2,r22,5d10 <_strtod_r+0x65c>
    59e4:	d8c00d17 	ldw	r3,52(sp)
    59e8:	18007c26 	beq	r3,zero,5bdc <_strtod_r+0x528>
    59ec:	d9000d17 	ldw	r4,52(sp)
    59f0:	0103ee0e 	bge	zero,r4,69ac <_strtod_r+0x12f8>
    59f4:	00c00584 	movi	r3,22
    59f8:	19039516 	blt	r3,r4,6850 <_strtod_r+0x119c>
    59fc:	200490fa 	slli	r2,r4,3
    5a00:	00c00074 	movhi	r3,1
    5a04:	18d48404 	addi	r3,r3,21008
    5a08:	d9800817 	ldw	r6,32(sp)
    5a0c:	1885883a 	add	r2,r3,r2
    5a10:	11000017 	ldw	r4,0(r2)
    5a14:	11400117 	ldw	r5,4(r2)
    5a18:	d9c00717 	ldw	r7,28(sp)
    5a1c:	0010d500 	call	10d50 <__muldf3>
    5a20:	1027883a 	mov	r19,r2
    5a24:	1823883a 	mov	r17,r3
    5a28:	003f7306 	br	57f8 <__alt_data_end+0xfe0057f8>
    5a2c:	94800044 	addi	r18,r18,1
    5a30:	dc800615 	stw	r18,24(sp)
    5a34:	90c00003 	ldbu	r3,0(r18)
    5a38:	18803fcc 	andi	r2,r3,255
    5a3c:	28bf352e 	bgeu	r5,r2,5714 <__alt_data_end+0xfe005714>
    5a40:	19403fcc 	andi	r5,r3,255
    5a44:	2940201c 	xori	r5,r5,128
    5a48:	d8001015 	stw	zero,64(sp)
    5a4c:	297fe004 	addi	r5,r5,-128
    5a50:	00800c04 	movi	r2,48
    5a54:	28bf8a1e 	bne	r5,r2,5880 <__alt_data_end+0xfe005880>
    5a58:	90800047 	ldb	r2,1(r18)
    5a5c:	00c01604 	movi	r3,88
    5a60:	10c2c126 	beq	r2,r3,6568 <_strtod_r+0xeb4>
    5a64:	00c01e04 	movi	r3,120
    5a68:	10c2bf26 	beq	r2,r3,6568 <_strtod_r+0xeb4>
    5a6c:	90800044 	addi	r2,r18,1
    5a70:	1025883a 	mov	r18,r2
    5a74:	d8800615 	stw	r2,24(sp)
    5a78:	10800044 	addi	r2,r2,1
    5a7c:	10ffffc3 	ldbu	r3,-1(r2)
    5a80:	19003fcc 	andi	r4,r3,255
    5a84:	2100201c 	xori	r4,r4,128
    5a88:	213fe004 	addi	r4,r4,-128
    5a8c:	217ff826 	beq	r4,r5,5a70 <__alt_data_end+0xfe005a70>
    5a90:	20009c26 	beq	r4,zero,5d04 <_strtod_r+0x650>
    5a94:	04400044 	movi	r17,1
    5a98:	003f7a06 	br	5884 <__alt_data_end+0xfe005884>
    5a9c:	00800044 	movi	r2,1
    5aa0:	d8801015 	stw	r2,64(sp)
    5aa4:	003f6906 	br	584c <__alt_data_end+0xfe00584c>
    5aa8:	3d3f8716 	blt	r7,r20,58c8 <__alt_data_end+0xfe0058c8>
    5aac:	bdc002a4 	muli	r23,r23,10
    5ab0:	18c03fcc 	andi	r3,r3,255
    5ab4:	18c0201c 	xori	r3,r3,128
    5ab8:	18ffe004 	addi	r3,r3,-128
    5abc:	b8ef883a 	add	r23,r23,r3
    5ac0:	bdfff404 	addi	r23,r23,-48
    5ac4:	003f8006 	br	58c8 <__alt_data_end+0xfe0058c8>
    5ac8:	88e0003c 	xorhi	r3,r17,32768
    5acc:	003f5106 	br	5814 <__alt_data_end+0xfe005814>
    5ad0:	8009883a 	mov	r4,r16
    5ad4:	dcc00617 	ldw	r19,24(sp)
    5ad8:	0003ca80 	call	3ca8 <_localeconv_r>
    5adc:	11000017 	ldw	r4,0(r2)
    5ae0:	00012640 	call	1264 <strlen>
    5ae4:	9885883a 	add	r2,r19,r2
    5ae8:	d8800615 	stw	r2,24(sp)
    5aec:	14c00007 	ldb	r19,0(r2)
    5af0:	a002171e 	bne	r20,zero,6350 <_strtod_r+0xc9c>
    5af4:	00c00c04 	movi	r3,48
    5af8:	98c3ef1e 	bne	r19,r3,6ab8 <_strtod_r+0x1404>
    5afc:	01400044 	movi	r5,1
    5b00:	288bc83a 	sub	r5,r5,r2
    5b04:	9809883a 	mov	r4,r19
    5b08:	00000106 	br	5b10 <_strtod_r+0x45c>
    5b0c:	1805883a 	mov	r2,r3
    5b10:	10c00044 	addi	r3,r2,1
    5b14:	d8c00615 	stw	r3,24(sp)
    5b18:	14c00047 	ldb	r19,1(r2)
    5b1c:	2885883a 	add	r2,r5,r2
    5b20:	993ffa26 	beq	r19,r4,5b0c <__alt_data_end+0xfe005b0c>
    5b24:	100d883a 	mov	r6,r2
    5b28:	98bff3c4 	addi	r2,r19,-49
    5b2c:	00c00204 	movi	r3,8
    5b30:	18826a2e 	bgeu	r3,r2,64dc <_strtod_r+0xe28>
    5b34:	00fff7c4 	movi	r3,-33
    5b38:	98c6703a 	and	r3,r19,r3
    5b3c:	00801144 	movi	r2,69
    5b40:	300f883a 	mov	r7,r6
    5b44:	18806826 	beq	r3,r2,5ce8 <_strtod_r+0x634>
    5b48:	02400044 	movi	r9,1
    5b4c:	38006d1e 	bne	r7,zero,5d04 <_strtod_r+0x650>
    5b50:	88006c1e 	bne	r17,zero,5d04 <_strtod_r+0x650>
    5b54:	483f241e 	bne	r9,zero,57e8 <__alt_data_end+0xfe0057e8>
    5b58:	00801384 	movi	r2,78
    5b5c:	98800526 	beq	r19,r2,5b74 <_strtod_r+0x4c0>
    5b60:	14ff1f0e 	bge	r2,r19,57e0 <__alt_data_end+0xfe0057e0>
    5b64:	00801a44 	movi	r2,105
    5b68:	9883a826 	beq	r19,r2,6a0c <_strtod_r+0x1358>
    5b6c:	00801b84 	movi	r2,110
    5b70:	98bf1d1e 	bne	r19,r2,57e8 <__alt_data_end+0xfe0057e8>
    5b74:	d8800617 	ldw	r2,24(sp)
    5b78:	00c00074 	movhi	r3,1
    5b7c:	18d43e04 	addi	r3,r3,20728
    5b80:	01c00644 	movi	r7,25
    5b84:	00000b06 	br	5bb4 <_strtod_r+0x500>
    5b88:	10800044 	addi	r2,r2,1
    5b8c:	11400003 	ldbu	r5,0(r2)
    5b90:	29bfefc4 	addi	r6,r5,-65
    5b94:	29403fcc 	andi	r5,r5,255
    5b98:	2940201c 	xori	r5,r5,128
    5b9c:	31803fcc 	andi	r6,r6,255
    5ba0:	297fe004 	addi	r5,r5,-128
    5ba4:	39800136 	bltu	r7,r6,5bac <_strtod_r+0x4f8>
    5ba8:	29400804 	addi	r5,r5,32
    5bac:	18c00044 	addi	r3,r3,1
    5bb0:	293f0d1e 	bne	r5,r4,57e8 <__alt_data_end+0xfe0057e8>
    5bb4:	19000007 	ldb	r4,0(r3)
    5bb8:	203ff31e 	bne	r4,zero,5b88 <__alt_data_end+0xfe005b88>
    5bbc:	10c00044 	addi	r3,r2,1
    5bc0:	d8c00615 	stw	r3,24(sp)
    5bc4:	10c00047 	ldb	r3,1(r2)
    5bc8:	00800a04 	movi	r2,40
    5bcc:	1883ec26 	beq	r3,r2,6b80 <_strtod_r+0x14cc>
    5bd0:	017ffe34 	movhi	r5,65528
    5bd4:	d9400715 	stw	r5,28(sp)
    5bd8:	d8000815 	stw	zero,32(sp)
    5bdc:	dcc00817 	ldw	r19,32(sp)
    5be0:	dc400717 	ldw	r17,28(sp)
    5be4:	003f0406 	br	57f8 <__alt_data_end+0xfe0057f8>
    5be8:	b0004226 	beq	r22,zero,5cf4 <_strtod_r+0x640>
    5bec:	df000617 	ldw	fp,24(sp)
    5bf0:	e0800044 	addi	r2,fp,1
    5bf4:	d8800615 	stw	r2,24(sp)
    5bf8:	e4c00047 	ldb	r19,1(fp)
    5bfc:	00800ac4 	movi	r2,43
    5c00:	9881f526 	beq	r19,r2,63d8 <_strtod_r+0xd24>
    5c04:	00800b44 	movi	r2,45
    5c08:	9881f11e 	bne	r19,r2,63d0 <_strtod_r+0xd1c>
    5c0c:	02800044 	movi	r10,1
    5c10:	e0800084 	addi	r2,fp,2
    5c14:	d8800615 	stw	r2,24(sp)
    5c18:	e4c00087 	ldb	r19,2(fp)
    5c1c:	98bff404 	addi	r2,r19,-48
    5c20:	00c00244 	movi	r3,9
    5c24:	1881c636 	bltu	r3,r2,6340 <_strtod_r+0xc8c>
    5c28:	00800c04 	movi	r2,48
    5c2c:	9880071e 	bne	r19,r2,5c4c <_strtod_r+0x598>
    5c30:	d8800617 	ldw	r2,24(sp)
    5c34:	9807883a 	mov	r3,r19
    5c38:	10800044 	addi	r2,r2,1
    5c3c:	d8800615 	stw	r2,24(sp)
    5c40:	14c00007 	ldb	r19,0(r2)
    5c44:	10800044 	addi	r2,r2,1
    5c48:	98fffc26 	beq	r19,r3,5c3c <__alt_data_end+0xfe005c3c>
    5c4c:	98bff3c4 	addi	r2,r19,-49
    5c50:	00c00204 	movi	r3,8
    5c54:	18bf3c36 	bltu	r3,r2,5948 <__alt_data_end+0xfe005948>
    5c58:	db000617 	ldw	r12,24(sp)
    5c5c:	98fff404 	addi	r3,r19,-48
    5c60:	02c00244 	movi	r11,9
    5c64:	62000044 	addi	r8,r12,1
    5c68:	da000615 	stw	r8,24(sp)
    5c6c:	64c00043 	ldbu	r19,1(r12)
    5c70:	98bff404 	addi	r2,r19,-48
    5c74:	9cc03fcc 	andi	r19,r19,255
    5c78:	9cc0201c 	xori	r19,r19,128
    5c7c:	10803fcc 	andi	r2,r2,255
    5c80:	9cffe004 	addi	r19,r19,-128
    5c84:	58800e36 	bltu	r11,r2,5cc0 <_strtod_r+0x60c>
    5c88:	61000084 	addi	r4,r12,2
    5c8c:	d9000615 	stw	r4,24(sp)
    5c90:	20800003 	ldbu	r2,0(r4)
    5c94:	18c002a4 	muli	r3,r3,10
    5c98:	2011883a 	mov	r8,r4
    5c9c:	117ff404 	addi	r5,r2,-48
    5ca0:	1cc7883a 	add	r3,r3,r19
    5ca4:	14c03fcc 	andi	r19,r2,255
    5ca8:	9cc0201c 	xori	r19,r19,128
    5cac:	29403fcc 	andi	r5,r5,255
    5cb0:	18fff404 	addi	r3,r3,-48
    5cb4:	9cffe004 	addi	r19,r19,-128
    5cb8:	21000044 	addi	r4,r4,1
    5cbc:	597ff32e 	bgeu	r11,r5,5c8c <__alt_data_end+0xfe005c8c>
    5cc0:	4311c83a 	sub	r8,r8,r12
    5cc4:	00800204 	movi	r2,8
    5cc8:	1202d716 	blt	r2,r8,6828 <_strtod_r+0x1174>
    5ccc:	009387c4 	movi	r2,19999
    5cd0:	10c0010e 	bge	r2,r3,5cd8 <_strtod_r+0x624>
    5cd4:	1007883a 	mov	r3,r2
    5cd8:	503f1c26 	beq	r10,zero,594c <__alt_data_end+0xfe00594c>
    5cdc:	00c7c83a 	sub	r3,zero,r3
    5ce0:	b03f1b1e 	bne	r22,zero,5950 <__alt_data_end+0xfe005950>
    5ce4:	003f9906 	br	5b4c <__alt_data_end+0xfe005b4c>
    5ce8:	002d883a 	mov	r22,zero
    5cec:	000d883a 	mov	r6,zero
    5cf0:	02400044 	movi	r9,1
    5cf4:	383fbd1e 	bne	r7,zero,5bec <__alt_data_end+0xfe005bec>
    5cf8:	883fbc1e 	bne	r17,zero,5bec <__alt_data_end+0xfe005bec>
    5cfc:	0027883a 	mov	r19,zero
    5d00:	003ebb06 	br	57f0 <__alt_data_end+0xfe0057f0>
    5d04:	0027883a 	mov	r19,zero
    5d08:	0023883a 	mov	r17,zero
    5d0c:	003eba06 	br	57f8 <__alt_data_end+0xfe0057f8>
    5d10:	d8800d17 	ldw	r2,52(sp)
    5d14:	b463c83a 	sub	r17,r22,r17
    5d18:	1463883a 	add	r17,r2,r17
    5d1c:	0442790e 	bge	zero,r17,6704 <_strtod_r+0x1050>
    5d20:	888003cc 	andi	r2,r17,15
    5d24:	10000b26 	beq	r2,zero,5d54 <_strtod_r+0x6a0>
    5d28:	100490fa 	slli	r2,r2,3
    5d2c:	00c00074 	movhi	r3,1
    5d30:	18d48404 	addi	r3,r3,21008
    5d34:	d9800817 	ldw	r6,32(sp)
    5d38:	1885883a 	add	r2,r3,r2
    5d3c:	d9c00717 	ldw	r7,28(sp)
    5d40:	11000017 	ldw	r4,0(r2)
    5d44:	11400117 	ldw	r5,4(r2)
    5d48:	0010d500 	call	10d50 <__muldf3>
    5d4c:	d8800815 	stw	r2,32(sp)
    5d50:	d8c00715 	stw	r3,28(sp)
    5d54:	00bffc04 	movi	r2,-16
    5d58:	88a2703a 	and	r17,r17,r2
    5d5c:	8801af1e 	bne	r17,zero,641c <_strtod_r+0xd68>
    5d60:	dcc00817 	ldw	r19,32(sp)
    5d64:	dc400717 	ldw	r17,28(sp)
    5d68:	d8001215 	stw	zero,72(sp)
    5d6c:	8009883a 	mov	r4,r16
    5d70:	900b883a 	mov	r5,r18
    5d74:	b00f883a 	mov	r7,r22
    5d78:	dd400015 	stw	r21,0(sp)
    5d7c:	a00d883a 	mov	r6,r20
    5d80:	000c8480 	call	c848 <__s2b>
    5d84:	d9400d17 	ldw	r5,52(sp)
    5d88:	d8800c15 	stw	r2,48(sp)
    5d8c:	d9000c17 	ldw	r4,48(sp)
    5d90:	2807d7fa 	srai	r3,r5,31
    5d94:	0145c83a 	sub	r2,zero,r5
    5d98:	dd801217 	ldw	r22,72(sp)
    5d9c:	21000304 	addi	r4,r4,12
    5da0:	1886703a 	and	r3,r3,r2
    5da4:	d9001115 	stw	r4,68(sp)
    5da8:	d8c00915 	stw	r3,36(sp)
    5dac:	d8800c17 	ldw	r2,48(sp)
    5db0:	8009883a 	mov	r4,r16
    5db4:	002b883a 	mov	r21,zero
    5db8:	11400117 	ldw	r5,4(r2)
    5dbc:	000c6640 	call	c664 <_Balloc>
    5dc0:	d8c00c17 	ldw	r3,48(sp)
    5dc4:	d9401117 	ldw	r5,68(sp)
    5dc8:	11000304 	addi	r4,r2,12
    5dcc:	19800417 	ldw	r6,16(r3)
    5dd0:	1029883a 	mov	r20,r2
    5dd4:	31800084 	addi	r6,r6,2
    5dd8:	318d883a 	add	r6,r6,r6
    5ddc:	318d883a 	add	r6,r6,r6
    5de0:	00047c40 	call	47c4 <memcpy>
    5de4:	d8800204 	addi	r2,sp,8
    5de8:	8009883a 	mov	r4,r16
    5dec:	980b883a 	mov	r5,r19
    5df0:	880d883a 	mov	r6,r17
    5df4:	d9c00404 	addi	r7,sp,16
    5df8:	d8800015 	stw	r2,0(sp)
    5dfc:	000d2840 	call	d284 <__d2b>
    5e00:	8009883a 	mov	r4,r16
    5e04:	01400044 	movi	r5,1
    5e08:	d8800515 	stw	r2,20(sp)
    5e0c:	000ca640 	call	ca64 <__i2b>
    5e10:	d8c00d17 	ldw	r3,52(sp)
    5e14:	1025883a 	mov	r18,r2
    5e18:	00c0010e 	bge	zero,r3,5e20 <_strtod_r+0x76c>
    5e1c:	182b883a 	mov	r21,r3
    5e20:	d8800417 	ldw	r2,16(sp)
    5e24:	1000dc16 	blt	r2,zero,6198 <_strtod_r+0xae4>
    5e28:	d9000917 	ldw	r4,36(sp)
    5e2c:	a80f883a 	mov	r7,r21
    5e30:	20b9883a 	add	fp,r4,r2
    5e34:	d8c00217 	ldw	r3,8(sp)
    5e38:	1585c83a 	sub	r2,r2,r22
    5e3c:	013f00c4 	movi	r4,-1021
    5e40:	10cb883a 	add	r5,r2,r3
    5e44:	29009e0e 	bge	r5,r4,60c0 <_strtod_r+0xa0c>
    5e48:	10810cc4 	addi	r2,r2,1075
    5e4c:	e087883a 	add	r3,fp,r2
    5e50:	3885883a 	add	r2,r7,r2
    5e54:	15af883a 	add	r23,r2,r22
    5e58:	1805883a 	mov	r2,r3
    5e5c:	e0c0010e 	bge	fp,r3,5e64 <_strtod_r+0x7b0>
    5e60:	e005883a 	mov	r2,fp
    5e64:	b880010e 	bge	r23,r2,5e6c <_strtod_r+0x7b8>
    5e68:	b805883a 	mov	r2,r23
    5e6c:	0080030e 	bge	zero,r2,5e7c <_strtod_r+0x7c8>
    5e70:	1887c83a 	sub	r3,r3,r2
    5e74:	b8afc83a 	sub	r23,r23,r2
    5e78:	e0b9c83a 	sub	fp,fp,r2
    5e7c:	d9400917 	ldw	r5,36(sp)
    5e80:	28001126 	beq	r5,zero,5ec8 <_strtod_r+0x814>
    5e84:	280d883a 	mov	r6,r5
    5e88:	8009883a 	mov	r4,r16
    5e8c:	900b883a 	mov	r5,r18
    5e90:	d8c01415 	stw	r3,80(sp)
    5e94:	000cc8c0 	call	cc8c <__pow5mult>
    5e98:	d9800517 	ldw	r6,20(sp)
    5e9c:	8009883a 	mov	r4,r16
    5ea0:	100b883a 	mov	r5,r2
    5ea4:	1025883a 	mov	r18,r2
    5ea8:	000caa00 	call	caa0 <__multiply>
    5eac:	d9400517 	ldw	r5,20(sp)
    5eb0:	8009883a 	mov	r4,r16
    5eb4:	d8801315 	stw	r2,76(sp)
    5eb8:	000c70c0 	call	c70c <_Bfree>
    5ebc:	d8801317 	ldw	r2,76(sp)
    5ec0:	d8c01417 	ldw	r3,80(sp)
    5ec4:	d8800515 	stw	r2,20(sp)
    5ec8:	00c0050e 	bge	zero,r3,5ee0 <_strtod_r+0x82c>
    5ecc:	d9400517 	ldw	r5,20(sp)
    5ed0:	8009883a 	mov	r4,r16
    5ed4:	180d883a 	mov	r6,r3
    5ed8:	000cdd40 	call	cdd4 <__lshift>
    5edc:	d8800515 	stw	r2,20(sp)
    5ee0:	a8000526 	beq	r21,zero,5ef8 <_strtod_r+0x844>
    5ee4:	a00b883a 	mov	r5,r20
    5ee8:	8009883a 	mov	r4,r16
    5eec:	a80d883a 	mov	r6,r21
    5ef0:	000cc8c0 	call	cc8c <__pow5mult>
    5ef4:	1029883a 	mov	r20,r2
    5ef8:	05c0050e 	bge	zero,r23,5f10 <_strtod_r+0x85c>
    5efc:	a00b883a 	mov	r5,r20
    5f00:	8009883a 	mov	r4,r16
    5f04:	b80d883a 	mov	r6,r23
    5f08:	000cdd40 	call	cdd4 <__lshift>
    5f0c:	1029883a 	mov	r20,r2
    5f10:	0700050e 	bge	zero,fp,5f28 <_strtod_r+0x874>
    5f14:	900b883a 	mov	r5,r18
    5f18:	8009883a 	mov	r4,r16
    5f1c:	e00d883a 	mov	r6,fp
    5f20:	000cdd40 	call	cdd4 <__lshift>
    5f24:	1025883a 	mov	r18,r2
    5f28:	d9400517 	ldw	r5,20(sp)
    5f2c:	8009883a 	mov	r4,r16
    5f30:	a00d883a 	mov	r6,r20
    5f34:	000cf840 	call	cf84 <__mdiff>
    5f38:	102b883a 	mov	r21,r2
    5f3c:	10800317 	ldw	r2,12(r2)
    5f40:	a809883a 	mov	r4,r21
    5f44:	a8000315 	stw	zero,12(r21)
    5f48:	900b883a 	mov	r5,r18
    5f4c:	d8800b15 	stw	r2,44(sp)
    5f50:	000cf240 	call	cf24 <__mcmp>
    5f54:	10019816 	blt	r2,zero,65b8 <_strtod_r+0xf04>
    5f58:	1001c926 	beq	r2,zero,6680 <_strtod_r+0xfcc>
    5f5c:	a809883a 	mov	r4,r21
    5f60:	900b883a 	mov	r5,r18
    5f64:	000d3c80 	call	d3c8 <__ratio>
    5f68:	180b883a 	mov	r5,r3
    5f6c:	1009883a 	mov	r4,r2
    5f70:	000d883a 	mov	r6,zero
    5f74:	01d00034 	movhi	r7,16384
    5f78:	d8c01415 	stw	r3,80(sp)
    5f7c:	1039883a 	mov	fp,r2
    5f80:	0010c640 	call	10c64 <__ledf2>
    5f84:	d8c01417 	ldw	r3,80(sp)
    5f88:	00805016 	blt	zero,r2,60cc <_strtod_r+0xa18>
    5f8c:	d8800b17 	ldw	r2,44(sp)
    5f90:	10008426 	beq	r2,zero,61a4 <_strtod_r+0xaf0>
    5f94:	070ffc34 	movhi	fp,16368
    5f98:	002f883a 	mov	r23,zero
    5f9c:	d8000f15 	stw	zero,60(sp)
    5fa0:	df000a15 	stw	fp,40(sp)
    5fa4:	d8800717 	ldw	r2,28(sp)
    5fa8:	121ffc2c 	andhi	r8,r2,32752
    5fac:	009ff834 	movhi	r2,32736
    5fb0:	40805626 	beq	r8,r2,610c <_strtod_r+0xa58>
    5fb4:	b0001e26 	beq	r22,zero,6030 <_strtod_r+0x97c>
    5fb8:	0081a834 	movhi	r2,1696
    5fbc:	12001c36 	bltu	r2,r8,6030 <_strtod_r+0x97c>
    5fc0:	d9000f17 	ldw	r4,60(sp)
    5fc4:	d9400a17 	ldw	r5,40(sp)
    5fc8:	01bff034 	movhi	r6,65472
    5fcc:	01d07834 	movhi	r7,16864
    5fd0:	39ffffc4 	addi	r7,r7,-1
    5fd4:	da001315 	stw	r8,76(sp)
    5fd8:	0010c640 	call	10c64 <__ledf2>
    5fdc:	da001317 	ldw	r8,76(sp)
    5fe0:	00801016 	blt	zero,r2,6024 <_strtod_r+0x970>
    5fe4:	d9000f17 	ldw	r4,60(sp)
    5fe8:	d9400a17 	ldw	r5,40(sp)
    5fec:	000eacc0 	call	eacc <__fixunsdfsi>
    5ff0:	da001317 	ldw	r8,76(sp)
    5ff4:	1000ce26 	beq	r2,zero,6330 <_strtod_r+0xc7c>
    5ff8:	1009883a 	mov	r4,r2
    5ffc:	0011e140 	call	11e14 <__floatunsidf>
    6000:	da001317 	ldw	r8,76(sp)
    6004:	d8800f15 	stw	r2,60(sp)
    6008:	d8c00a15 	stw	r3,40(sp)
    600c:	d9400b17 	ldw	r5,44(sp)
    6010:	2800c51e 	bne	r5,zero,6328 <_strtod_r+0xc74>
    6014:	d8800a17 	ldw	r2,40(sp)
    6018:	1260003c 	xorhi	r9,r2,32768
    601c:	ddc00f17 	ldw	r23,60(sp)
    6020:	4839883a 	mov	fp,r9
    6024:	0081ac34 	movhi	r2,1712
    6028:	e093883a 	add	r9,fp,r2
    602c:	4a39c83a 	sub	fp,r9,r8
    6030:	9809883a 	mov	r4,r19
    6034:	880b883a 	mov	r5,r17
    6038:	da001315 	stw	r8,76(sp)
    603c:	000d1340 	call	d134 <__ulp>
    6040:	e00b883a 	mov	r5,fp
    6044:	b809883a 	mov	r4,r23
    6048:	100d883a 	mov	r6,r2
    604c:	180f883a 	mov	r7,r3
    6050:	0010d500 	call	10d50 <__muldf3>
    6054:	9809883a 	mov	r4,r19
    6058:	880b883a 	mov	r5,r17
    605c:	100d883a 	mov	r6,r2
    6060:	180f883a 	mov	r7,r3
    6064:	000f9b80 	call	f9b8 <__adddf3>
    6068:	da001317 	ldw	r8,76(sp)
    606c:	1027883a 	mov	r19,r2
    6070:	1823883a 	mov	r17,r3
    6074:	d8800815 	stw	r2,32(sp)
    6078:	d8c00715 	stw	r3,28(sp)
    607c:	1839883a 	mov	fp,r3
    6080:	b000021e 	bne	r22,zero,608c <_strtod_r+0x9d8>
    6084:	e09ffc2c 	andhi	r2,fp,32752
    6088:	40806e26 	beq	r8,r2,6244 <_strtod_r+0xb90>
    608c:	d9400517 	ldw	r5,20(sp)
    6090:	8009883a 	mov	r4,r16
    6094:	000c70c0 	call	c70c <_Bfree>
    6098:	8009883a 	mov	r4,r16
    609c:	a00b883a 	mov	r5,r20
    60a0:	000c70c0 	call	c70c <_Bfree>
    60a4:	8009883a 	mov	r4,r16
    60a8:	900b883a 	mov	r5,r18
    60ac:	000c70c0 	call	c70c <_Bfree>
    60b0:	8009883a 	mov	r4,r16
    60b4:	a80b883a 	mov	r5,r21
    60b8:	000c70c0 	call	c70c <_Bfree>
    60bc:	003f3b06 	br	5dac <__alt_data_end+0xfe005dac>
    60c0:	00800d84 	movi	r2,54
    60c4:	10c5c83a 	sub	r2,r2,r3
    60c8:	003f6006 	br	5e4c <__alt_data_end+0xfe005e4c>
    60cc:	180b883a 	mov	r5,r3
    60d0:	e009883a 	mov	r4,fp
    60d4:	000d883a 	mov	r6,zero
    60d8:	01cff834 	movhi	r7,16352
    60dc:	0010d500 	call	10d50 <__muldf3>
    60e0:	d9400b17 	ldw	r5,44(sp)
    60e4:	d8800f15 	stw	r2,60(sp)
    60e8:	d8c00a15 	stw	r3,40(sp)
    60ec:	2800481e 	bne	r5,zero,6210 <_strtod_r+0xb5c>
    60f0:	1a60003c 	xorhi	r9,r3,32768
    60f4:	102f883a 	mov	r23,r2
    60f8:	d8800717 	ldw	r2,28(sp)
    60fc:	4839883a 	mov	fp,r9
    6100:	121ffc2c 	andhi	r8,r2,32752
    6104:	009ff834 	movhi	r2,32736
    6108:	40bfaa1e 	bne	r8,r2,5fb4 <__alt_data_end+0xfe005fb4>
    610c:	d8c00717 	ldw	r3,28(sp)
    6110:	00bf2c34 	movhi	r2,64688
    6114:	d9000817 	ldw	r4,32(sp)
    6118:	1887883a 	add	r3,r3,r2
    611c:	180b883a 	mov	r5,r3
    6120:	da001315 	stw	r8,76(sp)
    6124:	d8c00715 	stw	r3,28(sp)
    6128:	000d1340 	call	d134 <__ulp>
    612c:	b809883a 	mov	r4,r23
    6130:	e00b883a 	mov	r5,fp
    6134:	100d883a 	mov	r6,r2
    6138:	180f883a 	mov	r7,r3
    613c:	0010d500 	call	10d50 <__muldf3>
    6140:	d9000817 	ldw	r4,32(sp)
    6144:	d9400717 	ldw	r5,28(sp)
    6148:	100d883a 	mov	r6,r2
    614c:	180f883a 	mov	r7,r3
    6150:	000f9b80 	call	f9b8 <__adddf3>
    6154:	d8800815 	stw	r2,32(sp)
    6158:	011f2834 	movhi	r4,31904
    615c:	213fffc4 	addi	r4,r4,-1
    6160:	189ffc2c 	andhi	r2,r3,32752
    6164:	da001317 	ldw	r8,76(sp)
    6168:	2080682e 	bgeu	r4,r2,630c <_strtod_r+0xc58>
    616c:	015ffc34 	movhi	r5,32752
    6170:	297fffc4 	addi	r5,r5,-1
    6174:	89415726 	beq	r17,r5,66d4 <_strtod_r+0x1020>
    6178:	009ffc34 	movhi	r2,32752
    617c:	10bfffc4 	addi	r2,r2,-1
    6180:	00ffffc4 	movi	r3,-1
    6184:	d8800715 	stw	r2,28(sp)
    6188:	d8c00815 	stw	r3,32(sp)
    618c:	1827883a 	mov	r19,r3
    6190:	1023883a 	mov	r17,r2
    6194:	003fbd06 	br	608c <__alt_data_end+0xfe00608c>
    6198:	a88fc83a 	sub	r7,r21,r2
    619c:	df000917 	ldw	fp,36(sp)
    61a0:	003f2406 	br	5e34 <__alt_data_end+0xfe005e34>
    61a4:	d9000817 	ldw	r4,32(sp)
    61a8:	20001b1e 	bne	r4,zero,6218 <_strtod_r+0xb64>
    61ac:	d9400717 	ldw	r5,28(sp)
    61b0:	01000434 	movhi	r4,16
    61b4:	213fffc4 	addi	r4,r4,-1
    61b8:	2904703a 	and	r2,r5,r4
    61bc:	10001b1e 	bne	r2,zero,622c <_strtod_r+0xb78>
    61c0:	180b883a 	mov	r5,r3
    61c4:	e009883a 	mov	r4,fp
    61c8:	000d883a 	mov	r6,zero
    61cc:	01cffc34 	movhi	r7,16368
    61d0:	d8c01415 	stw	r3,80(sp)
    61d4:	0010c640 	call	10c64 <__ledf2>
    61d8:	d8c01417 	ldw	r3,80(sp)
    61dc:	10018c16 	blt	r2,zero,6810 <_strtod_r+0x115c>
    61e0:	e009883a 	mov	r4,fp
    61e4:	180b883a 	mov	r5,r3
    61e8:	000d883a 	mov	r6,zero
    61ec:	01cff834 	movhi	r7,16352
    61f0:	0010d500 	call	10d50 <__muldf3>
    61f4:	d8800f15 	stw	r2,60(sp)
    61f8:	d8c00a15 	stw	r3,40(sp)
    61fc:	1039883a 	mov	fp,r2
    6200:	1a60003c 	xorhi	r9,r3,32768
    6204:	e02f883a 	mov	r23,fp
    6208:	4839883a 	mov	fp,r9
    620c:	003f6506 	br	5fa4 <__alt_data_end+0xfe005fa4>
    6210:	da400a17 	ldw	r9,40(sp)
    6214:	003fb706 	br	60f4 <__alt_data_end+0xfe0060f4>
    6218:	d9400817 	ldw	r5,32(sp)
    621c:	00800044 	movi	r2,1
    6220:	2880021e 	bne	r5,r2,622c <_strtod_r+0xb78>
    6224:	d8800717 	ldw	r2,28(sp)
    6228:	1000c726 	beq	r2,zero,6548 <_strtod_r+0xe94>
    622c:	00cffc34 	movhi	r3,16368
    6230:	002f883a 	mov	r23,zero
    6234:	072ffc34 	movhi	fp,49136
    6238:	d8000f15 	stw	zero,60(sp)
    623c:	d8c00a15 	stw	r3,40(sp)
    6240:	003f5806 	br	5fa4 <__alt_data_end+0xfe005fa4>
    6244:	d9400a17 	ldw	r5,40(sp)
    6248:	d9000f17 	ldw	r4,60(sp)
    624c:	0011cc40 	call	11cc4 <__fixdfsi>
    6250:	1009883a 	mov	r4,r2
    6254:	0011d440 	call	11d44 <__floatsidf>
    6258:	d9000f17 	ldw	r4,60(sp)
    625c:	d9400a17 	ldw	r5,40(sp)
    6260:	100d883a 	mov	r6,r2
    6264:	180f883a 	mov	r7,r3
    6268:	001143c0 	call	1143c <__subdf3>
    626c:	d9000b17 	ldw	r4,44(sp)
    6270:	1011883a 	mov	r8,r2
    6274:	2000021e 	bne	r4,zero,6280 <_strtod_r+0xbcc>
    6278:	d9400817 	ldw	r5,32(sp)
    627c:	28005826 	beq	r5,zero,63e0 <_strtod_r+0xd2c>
    6280:	4009883a 	mov	r4,r8
    6284:	180b883a 	mov	r5,r3
    6288:	01a52834 	movhi	r6,38048
    628c:	318d6544 	addi	r6,r6,13717
    6290:	01cff834 	movhi	r7,16352
    6294:	39ffffc4 	addi	r7,r7,-1
    6298:	d8c01415 	stw	r3,80(sp)
    629c:	da001315 	stw	r8,76(sp)
    62a0:	0010c640 	call	10c64 <__ledf2>
    62a4:	d8c01417 	ldw	r3,80(sp)
    62a8:	da001317 	ldw	r8,76(sp)
    62ac:	10000716 	blt	r2,zero,62cc <_strtod_r+0xc18>
    62b0:	4009883a 	mov	r4,r8
    62b4:	180b883a 	mov	r5,r3
    62b8:	018d6c34 	movhi	r6,13744
    62bc:	31b94d44 	addi	r6,r6,-6859
    62c0:	01cff834 	movhi	r7,16352
    62c4:	0010b8c0 	call	10b8c <__gedf2>
    62c8:	00bf700e 	bge	zero,r2,608c <__alt_data_end+0xfe00608c>
    62cc:	d9400517 	ldw	r5,20(sp)
    62d0:	8009883a 	mov	r4,r16
    62d4:	000c70c0 	call	c70c <_Bfree>
    62d8:	8009883a 	mov	r4,r16
    62dc:	a00b883a 	mov	r5,r20
    62e0:	000c70c0 	call	c70c <_Bfree>
    62e4:	8009883a 	mov	r4,r16
    62e8:	900b883a 	mov	r5,r18
    62ec:	000c70c0 	call	c70c <_Bfree>
    62f0:	d9400c17 	ldw	r5,48(sp)
    62f4:	8009883a 	mov	r4,r16
    62f8:	000c70c0 	call	c70c <_Bfree>
    62fc:	8009883a 	mov	r4,r16
    6300:	a80b883a 	mov	r5,r21
    6304:	000c70c0 	call	c70c <_Bfree>
    6308:	003d3b06 	br	57f8 <__alt_data_end+0xfe0057f8>
    630c:	0080d434 	movhi	r2,848
    6310:	1887883a 	add	r3,r3,r2
    6314:	d8c00715 	stw	r3,28(sp)
    6318:	dcc00817 	ldw	r19,32(sp)
    631c:	1823883a 	mov	r17,r3
    6320:	1839883a 	mov	fp,r3
    6324:	003f5606 	br	6080 <__alt_data_end+0xfe006080>
    6328:	da400a17 	ldw	r9,40(sp)
    632c:	003f3b06 	br	601c <__alt_data_end+0xfe00601c>
    6330:	010ffc34 	movhi	r4,16368
    6334:	d8000f15 	stw	zero,60(sp)
    6338:	d9000a15 	stw	r4,40(sp)
    633c:	003f3306 	br	600c <__alt_data_end+0xfe00600c>
    6340:	df000615 	stw	fp,24(sp)
    6344:	0007883a 	mov	r3,zero
    6348:	b03d811e 	bne	r22,zero,5950 <__alt_data_end+0xfe005950>
    634c:	003dff06 	br	5b4c <__alt_data_end+0xfe005b4c>
    6350:	a02d883a 	mov	r22,r20
    6354:	000f883a 	mov	r7,zero
    6358:	000d883a 	mov	r6,zero
    635c:	98fff404 	addi	r3,r19,-48
    6360:	00800244 	movi	r2,9
    6364:	10c02b36 	bltu	r2,r3,6414 <_strtod_r+0xd60>
    6368:	da000617 	ldw	r8,24(sp)
    636c:	39c00044 	addi	r7,r7,1
    6370:	18001326 	beq	r3,zero,63c0 <_strtod_r+0xd0c>
    6374:	00800044 	movi	r2,1
    6378:	31cd883a 	add	r6,r6,r7
    637c:	3881fb26 	beq	r7,r2,6b6c <_strtod_r+0x14b8>
    6380:	b1cf883a 	add	r7,r22,r7
    6384:	397fffc4 	addi	r5,r7,-1
    6388:	01000204 	movi	r4,8
    638c:	02400404 	movi	r9,16
    6390:	b5800044 	addi	r22,r22,1
    6394:	b0bfffc4 	addi	r2,r22,-1
    6398:	20807016 	blt	r4,r2,655c <_strtod_r+0xea8>
    639c:	ad4002a4 	muli	r21,r21,10
    63a0:	b17ffb1e 	bne	r22,r5,6390 <__alt_data_end+0xfe006390>
    63a4:	38bfffc4 	addi	r2,r7,-1
    63a8:	01000204 	movi	r4,8
    63ac:	15800044 	addi	r22,r2,1
    63b0:	20819016 	blt	r4,r2,69f4 <_strtod_r+0x1340>
    63b4:	ad4002a4 	muli	r21,r21,10
    63b8:	000f883a 	mov	r7,zero
    63bc:	a8eb883a 	add	r21,r21,r3
    63c0:	40800044 	addi	r2,r8,1
    63c4:	d8800615 	stw	r2,24(sp)
    63c8:	44c00047 	ldb	r19,1(r8)
    63cc:	003fe306 	br	635c <__alt_data_end+0xfe00635c>
    63d0:	0015883a 	mov	r10,zero
    63d4:	003e1106 	br	5c1c <__alt_data_end+0xfe005c1c>
    63d8:	0015883a 	mov	r10,zero
    63dc:	003e0c06 	br	5c10 <__alt_data_end+0xfe005c10>
    63e0:	00800434 	movhi	r2,16
    63e4:	10bfffc4 	addi	r2,r2,-1
    63e8:	e0b8703a 	and	fp,fp,r2
    63ec:	e03fa41e 	bne	fp,zero,6280 <__alt_data_end+0xfe006280>
    63f0:	4009883a 	mov	r4,r8
    63f4:	180b883a 	mov	r5,r3
    63f8:	01a52834 	movhi	r6,38048
    63fc:	318d6544 	addi	r6,r6,13717
    6400:	01cff434 	movhi	r7,16336
    6404:	39ffffc4 	addi	r7,r7,-1
    6408:	0010c640 	call	10c64 <__ledf2>
    640c:	103f1f0e 	bge	r2,zero,608c <__alt_data_end+0xfe00608c>
    6410:	003fae06 	br	62cc <__alt_data_end+0xfe0062cc>
    6414:	02400044 	movi	r9,1
    6418:	003d4706 	br	5938 <__alt_data_end+0xfe005938>
    641c:	00804d04 	movi	r2,308
    6420:	1440b316 	blt	r2,r17,66f0 <_strtod_r+0x103c>
    6424:	8827d13a 	srai	r19,r17,4
    6428:	07000044 	movi	fp,1
    642c:	e4c1c80e 	bge	fp,r19,6b50 <_strtod_r+0x149c>
    6430:	d9000817 	ldw	r4,32(sp)
    6434:	d8c00717 	ldw	r3,28(sp)
    6438:	002f883a 	mov	r23,zero
    643c:	04400074 	movhi	r17,1
    6440:	8c547a04 	addi	r17,r17,20968
    6444:	9980004c 	andi	r6,r19,1
    6448:	30000726 	beq	r6,zero,6468 <_strtod_r+0xdb4>
    644c:	b80c90fa 	slli	r6,r23,3
    6450:	180b883a 	mov	r5,r3
    6454:	8985883a 	add	r2,r17,r6
    6458:	11800017 	ldw	r6,0(r2)
    645c:	11c00117 	ldw	r7,4(r2)
    6460:	0010d500 	call	10d50 <__muldf3>
    6464:	1009883a 	mov	r4,r2
    6468:	9827d07a 	srai	r19,r19,1
    646c:	bdc00044 	addi	r23,r23,1
    6470:	e4fff416 	blt	fp,r19,6444 <__alt_data_end+0xfe006444>
    6474:	d9000815 	stw	r4,32(sp)
    6478:	d8c00715 	stw	r3,28(sp)
    647c:	b82e90fa 	slli	r23,r23,3
    6480:	d8c00717 	ldw	r3,28(sp)
    6484:	d9800817 	ldw	r6,32(sp)
    6488:	8de3883a 	add	r17,r17,r23
    648c:	89000017 	ldw	r4,0(r17)
    6490:	89400117 	ldw	r5,4(r17)
    6494:	01ff2c34 	movhi	r7,64688
    6498:	19cf883a 	add	r7,r3,r7
    649c:	0010d500 	call	10d50 <__muldf3>
    64a0:	d8800815 	stw	r2,32(sp)
    64a4:	011f2834 	movhi	r4,31904
    64a8:	189ffc2c 	andhi	r2,r3,32752
    64ac:	20809036 	bltu	r4,r2,66f0 <_strtod_r+0x103c>
    64b0:	011f2434 	movhi	r4,31888
    64b4:	2081822e 	bgeu	r4,r2,6ac0 <_strtod_r+0x140c>
    64b8:	011ffc34 	movhi	r4,32752
    64bc:	213fffc4 	addi	r4,r4,-1
    64c0:	017fffc4 	movi	r5,-1
    64c4:	d9000715 	stw	r4,28(sp)
    64c8:	d9400815 	stw	r5,32(sp)
    64cc:	2827883a 	mov	r19,r5
    64d0:	2023883a 	mov	r17,r4
    64d4:	d8001215 	stw	zero,72(sp)
    64d8:	003e2406 	br	5d6c <__alt_data_end+0xfe005d6c>
    64dc:	dc800617 	ldw	r18,24(sp)
    64e0:	002d883a 	mov	r22,zero
    64e4:	01c00044 	movi	r7,1
    64e8:	9011883a 	mov	r8,r18
    64ec:	98fff404 	addi	r3,r19,-48
    64f0:	003f9f06 	br	6370 <__alt_data_end+0xfe006370>
    64f4:	2884703a 	and	r2,r5,r2
    64f8:	10013b26 	beq	r2,zero,69e8 <_strtod_r+0x1334>
    64fc:	d8c00817 	ldw	r3,32(sp)
    6500:	1880004c 	andi	r2,r3,1
    6504:	10005026 	beq	r2,zero,6648 <_strtod_r+0xf94>
    6508:	9809883a 	mov	r4,r19
    650c:	880b883a 	mov	r5,r17
    6510:	000d1340 	call	d134 <__ulp>
    6514:	9809883a 	mov	r4,r19
    6518:	880b883a 	mov	r5,r17
    651c:	100d883a 	mov	r6,r2
    6520:	180f883a 	mov	r7,r3
    6524:	001143c0 	call	1143c <__subdf3>
    6528:	1009883a 	mov	r4,r2
    652c:	180b883a 	mov	r5,r3
    6530:	000d883a 	mov	r6,zero
    6534:	000f883a 	mov	r7,zero
    6538:	1027883a 	mov	r19,r2
    653c:	1823883a 	mov	r17,r3
    6540:	0010b080 	call	10b08 <__eqdf2>
    6544:	1000401e 	bne	r2,zero,6648 <_strtod_r+0xf94>
    6548:	00800884 	movi	r2,34
    654c:	80800015 	stw	r2,0(r16)
    6550:	0027883a 	mov	r19,zero
    6554:	0023883a 	mov	r17,zero
    6558:	003f5c06 	br	62cc <__alt_data_end+0xfe0062cc>
    655c:	4dbf9016 	blt	r9,r22,63a0 <__alt_data_end+0xfe0063a0>
    6560:	bdc002a4 	muli	r23,r23,10
    6564:	003f8e06 	br	63a0 <__alt_data_end+0xfe0063a0>
    6568:	d8c01017 	ldw	r3,64(sp)
    656c:	d8800504 	addi	r2,sp,20
    6570:	04c00074 	movhi	r19,1
    6574:	9cd73c04 	addi	r19,r19,23792
    6578:	d8800015 	stw	r2,0(sp)
    657c:	d8c00115 	stw	r3,4(sp)
    6580:	8009883a 	mov	r4,r16
    6584:	d9400604 	addi	r5,sp,24
    6588:	980d883a 	mov	r6,r19
    658c:	d9c00404 	addi	r7,sp,16
    6590:	000b9640 	call	b964 <__gethex>
    6594:	144001cc 	andi	r17,r2,7
    6598:	883dda26 	beq	r17,zero,5d04 <__alt_data_end+0xfe005d04>
    659c:	00c00184 	movi	r3,6
    65a0:	88c0c51e 	bne	r17,r3,68b8 <_strtod_r+0x1204>
    65a4:	94800044 	addi	r18,r18,1
    65a8:	dc800615 	stw	r18,24(sp)
    65ac:	0027883a 	mov	r19,zero
    65b0:	0023883a 	mov	r17,zero
    65b4:	003c9006 	br	57f8 <__alt_data_end+0xfe0057f8>
    65b8:	df000b17 	ldw	fp,44(sp)
    65bc:	e000221e 	bne	fp,zero,6648 <_strtod_r+0xf94>
    65c0:	d8c00817 	ldw	r3,32(sp)
    65c4:	1800201e 	bne	r3,zero,6648 <_strtod_r+0xf94>
    65c8:	d9000717 	ldw	r4,28(sp)
    65cc:	00800434 	movhi	r2,16
    65d0:	10bfffc4 	addi	r2,r2,-1
    65d4:	2084703a 	and	r2,r4,r2
    65d8:	10001b1e 	bne	r2,zero,6648 <_strtod_r+0xf94>
    65dc:	209ffc2c 	andhi	r2,r4,32752
    65e0:	00c1ac34 	movhi	r3,1712
    65e4:	1880182e 	bgeu	r3,r2,6648 <_strtod_r+0xf94>
    65e8:	a8800517 	ldw	r2,20(r21)
    65ec:	1000031e 	bne	r2,zero,65fc <_strtod_r+0xf48>
    65f0:	a8800417 	ldw	r2,16(r21)
    65f4:	00c00044 	movi	r3,1
    65f8:	1880130e 	bge	r3,r2,6648 <_strtod_r+0xf94>
    65fc:	a80b883a 	mov	r5,r21
    6600:	8009883a 	mov	r4,r16
    6604:	01800044 	movi	r6,1
    6608:	000cdd40 	call	cdd4 <__lshift>
    660c:	1009883a 	mov	r4,r2
    6610:	900b883a 	mov	r5,r18
    6614:	102b883a 	mov	r21,r2
    6618:	000cf240 	call	cf24 <__mcmp>
    661c:	00800a0e 	bge	zero,r2,6648 <_strtod_r+0xf94>
    6620:	d8c01217 	ldw	r3,72(sp)
    6624:	1801431e 	bne	r3,zero,6b34 <_strtod_r+0x1480>
    6628:	d9000717 	ldw	r4,28(sp)
    662c:	209ffc2c 	andhi	r2,r4,32752
    6630:	00fffc34 	movhi	r3,65520
    6634:	10c5883a 	add	r2,r2,r3
    6638:	00c00434 	movhi	r3,16
    663c:	18ffffc4 	addi	r3,r3,-1
    6640:	04ffffc4 	movi	r19,-1
    6644:	10e2b03a 	or	r17,r2,r3
    6648:	d8c01217 	ldw	r3,72(sp)
    664c:	183f1f26 	beq	r3,zero,62cc <__alt_data_end+0xfe0062cc>
    6650:	9809883a 	mov	r4,r19
    6654:	880b883a 	mov	r5,r17
    6658:	000d883a 	mov	r6,zero
    665c:	01ce5434 	movhi	r7,14672
    6660:	0010d500 	call	10d50 <__muldf3>
    6664:	1027883a 	mov	r19,r2
    6668:	1823883a 	mov	r17,r3
    666c:	183f171e 	bne	r3,zero,62cc <__alt_data_end+0xfe0062cc>
    6670:	103f161e 	bne	r2,zero,62cc <__alt_data_end+0xfe0062cc>
    6674:	00800884 	movi	r2,34
    6678:	80800015 	stw	r2,0(r16)
    667c:	003f1306 	br	62cc <__alt_data_end+0xfe0062cc>
    6680:	df000b17 	ldw	fp,44(sp)
    6684:	00800434 	movhi	r2,16
    6688:	10bfffc4 	addi	r2,r2,-1
    668c:	d9400717 	ldw	r5,28(sp)
    6690:	e03f9826 	beq	fp,zero,64f4 <__alt_data_end+0xfe0064f4>
    6694:	2886703a 	and	r3,r5,r2
    6698:	18811026 	beq	r3,r2,6adc <_strtod_r+0x1428>
    669c:	d9000817 	ldw	r4,32(sp)
    66a0:	2080004c 	andi	r2,r4,1
    66a4:	103fe826 	beq	r2,zero,6648 <__alt_data_end+0xfe006648>
    66a8:	9809883a 	mov	r4,r19
    66ac:	880b883a 	mov	r5,r17
    66b0:	000d1340 	call	d134 <__ulp>
    66b4:	9809883a 	mov	r4,r19
    66b8:	880b883a 	mov	r5,r17
    66bc:	100d883a 	mov	r6,r2
    66c0:	180f883a 	mov	r7,r3
    66c4:	000f9b80 	call	f9b8 <__adddf3>
    66c8:	1027883a 	mov	r19,r2
    66cc:	1823883a 	mov	r17,r3
    66d0:	003fdd06 	br	6648 <__alt_data_end+0xfe006648>
    66d4:	00bfffc4 	movi	r2,-1
    66d8:	98bea71e 	bne	r19,r2,6178 <__alt_data_end+0xfe006178>
    66dc:	00800884 	movi	r2,34
    66e0:	80800015 	stw	r2,0(r16)
    66e4:	0027883a 	mov	r19,zero
    66e8:	045ffc34 	movhi	r17,32752
    66ec:	003ef706 	br	62cc <__alt_data_end+0xfe0062cc>
    66f0:	00800884 	movi	r2,34
    66f4:	80800015 	stw	r2,0(r16)
    66f8:	0027883a 	mov	r19,zero
    66fc:	045ffc34 	movhi	r17,32752
    6700:	003c3d06 	br	57f8 <__alt_data_end+0xfe0057f8>
    6704:	883d9626 	beq	r17,zero,5d60 <__alt_data_end+0xfe005d60>
    6708:	0463c83a 	sub	r17,zero,r17
    670c:	888003cc 	andi	r2,r17,15
    6710:	10000b26 	beq	r2,zero,6740 <_strtod_r+0x108c>
    6714:	100490fa 	slli	r2,r2,3
    6718:	00c00074 	movhi	r3,1
    671c:	18d48404 	addi	r3,r3,21008
    6720:	d9000817 	ldw	r4,32(sp)
    6724:	1885883a 	add	r2,r3,r2
    6728:	d9400717 	ldw	r5,28(sp)
    672c:	11800017 	ldw	r6,0(r2)
    6730:	11c00117 	ldw	r7,4(r2)
    6734:	00102340 	call	10234 <__divdf3>
    6738:	d8800815 	stw	r2,32(sp)
    673c:	d8c00715 	stw	r3,28(sp)
    6740:	8823d13a 	srai	r17,r17,4
    6744:	883d8626 	beq	r17,zero,5d60 <__alt_data_end+0xfe005d60>
    6748:	008007c4 	movi	r2,31
    674c:	14402b16 	blt	r2,r17,67fc <_strtod_r+0x1148>
    6750:	8880040c 	andi	r2,r17,16
    6754:	1001071e 	bne	r2,zero,6b74 <_strtod_r+0x14c0>
    6758:	d8001215 	stw	zero,72(sp)
    675c:	0440100e 	bge	zero,r17,67a0 <_strtod_r+0x10ec>
    6760:	d8800817 	ldw	r2,32(sp)
    6764:	d8c00717 	ldw	r3,28(sp)
    6768:	04c00074 	movhi	r19,1
    676c:	9cd43f04 	addi	r19,r19,20732
    6770:	8980004c 	andi	r6,r17,1
    6774:	30000526 	beq	r6,zero,678c <_strtod_r+0x10d8>
    6778:	99800017 	ldw	r6,0(r19)
    677c:	99c00117 	ldw	r7,4(r19)
    6780:	1009883a 	mov	r4,r2
    6784:	180b883a 	mov	r5,r3
    6788:	0010d500 	call	10d50 <__muldf3>
    678c:	8823d07a 	srai	r17,r17,1
    6790:	9cc00204 	addi	r19,r19,8
    6794:	883ff61e 	bne	r17,zero,6770 <__alt_data_end+0xfe006770>
    6798:	d8800815 	stw	r2,32(sp)
    679c:	d8c00715 	stw	r3,28(sp)
    67a0:	d8c01217 	ldw	r3,72(sp)
    67a4:	18000d26 	beq	r3,zero,67dc <_strtod_r+0x1128>
    67a8:	d9000717 	ldw	r4,28(sp)
    67ac:	00c01ac4 	movi	r3,107
    67b0:	209ffc2c 	andhi	r2,r4,32752
    67b4:	1004d53a 	srli	r2,r2,20
    67b8:	1885c83a 	sub	r2,r3,r2
    67bc:	0080070e 	bge	zero,r2,67dc <_strtod_r+0x1128>
    67c0:	00c007c4 	movi	r3,31
    67c4:	1880fc0e 	bge	r3,r2,6bb8 <_strtod_r+0x1504>
    67c8:	d8000815 	stw	zero,32(sp)
    67cc:	00c00d04 	movi	r3,52
    67d0:	1880ff0e 	bge	r3,r2,6bd0 <_strtod_r+0x151c>
    67d4:	0140dc34 	movhi	r5,880
    67d8:	d9400715 	stw	r5,28(sp)
    67dc:	d9000817 	ldw	r4,32(sp)
    67e0:	d9400717 	ldw	r5,28(sp)
    67e4:	000d883a 	mov	r6,zero
    67e8:	000f883a 	mov	r7,zero
    67ec:	2027883a 	mov	r19,r4
    67f0:	2823883a 	mov	r17,r5
    67f4:	0010b080 	call	10b08 <__eqdf2>
    67f8:	103d5c1e 	bne	r2,zero,5d6c <__alt_data_end+0xfe005d6c>
    67fc:	00800884 	movi	r2,34
    6800:	80800015 	stw	r2,0(r16)
    6804:	0027883a 	mov	r19,zero
    6808:	0023883a 	mov	r17,zero
    680c:	003bfa06 	br	57f8 <__alt_data_end+0xfe0057f8>
    6810:	010ff834 	movhi	r4,16352
    6814:	0039883a 	mov	fp,zero
    6818:	026ff834 	movhi	r9,49120
    681c:	d8000f15 	stw	zero,60(sp)
    6820:	d9000a15 	stw	r4,40(sp)
    6824:	003e7706 	br	6204 <__alt_data_end+0xfe006204>
    6828:	00d387c4 	movi	r3,19999
    682c:	003d2a06 	br	5cd8 <__alt_data_end+0xfe005cd8>
    6830:	1cc03fcc 	andi	r19,r3,255
    6834:	9cc0201c 	xori	r19,r19,128
    6838:	9cffe004 	addi	r19,r19,-128
    683c:	902d883a 	mov	r22,r18
    6840:	002f883a 	mov	r23,zero
    6844:	002b883a 	mov	r21,zero
    6848:	0029883a 	mov	r20,zero
    684c:	003c2906 	br	58f4 <__alt_data_end+0xfe0058f4>
    6850:	d9400d17 	ldw	r5,52(sp)
    6854:	00c00944 	movi	r3,37
    6858:	1d87c83a 	sub	r3,r3,r22
    685c:	197d2c16 	blt	r3,r5,5d10 <__alt_data_end+0xfe005d10>
    6860:	15adc83a 	sub	r22,r2,r22
    6864:	b00490fa 	slli	r2,r22,3
    6868:	04000074 	movhi	r16,1
    686c:	84148404 	addi	r16,r16,21008
    6870:	d9800817 	ldw	r6,32(sp)
    6874:	8085883a 	add	r2,r16,r2
    6878:	11000017 	ldw	r4,0(r2)
    687c:	11400117 	ldw	r5,4(r2)
    6880:	d9c00717 	ldw	r7,28(sp)
    6884:	0010d500 	call	10d50 <__muldf3>
    6888:	d9000d17 	ldw	r4,52(sp)
    688c:	180b883a 	mov	r5,r3
    6890:	258dc83a 	sub	r6,r4,r22
    6894:	300c90fa 	slli	r6,r6,3
    6898:	1009883a 	mov	r4,r2
    689c:	81a1883a 	add	r16,r16,r6
    68a0:	81800017 	ldw	r6,0(r16)
    68a4:	81c00117 	ldw	r7,4(r16)
    68a8:	0010d500 	call	10d50 <__muldf3>
    68ac:	1027883a 	mov	r19,r2
    68b0:	1823883a 	mov	r17,r3
    68b4:	003bd006 	br	57f8 <__alt_data_end+0xfe0057f8>
    68b8:	d9800517 	ldw	r6,20(sp)
    68bc:	30000826 	beq	r6,zero,68e0 <_strtod_r+0x122c>
    68c0:	99400017 	ldw	r5,0(r19)
    68c4:	d9000204 	addi	r4,sp,8
    68c8:	d8801315 	stw	r2,76(sp)
    68cc:	000d4dc0 	call	d4dc <__copybits>
    68d0:	d9400517 	ldw	r5,20(sp)
    68d4:	8009883a 	mov	r4,r16
    68d8:	000c70c0 	call	c70c <_Bfree>
    68dc:	d8801317 	ldw	r2,76(sp)
    68e0:	00c00184 	movi	r3,6
    68e4:	d9000417 	ldw	r4,16(sp)
    68e8:	1c401136 	bltu	r3,r17,6930 <_strtod_r+0x127c>
    68ec:	8c63883a 	add	r17,r17,r17
    68f0:	8c63883a 	add	r17,r17,r17
    68f4:	00c00034 	movhi	r3,0
    68f8:	18da4204 	addi	r3,r3,26888
    68fc:	88c7883a 	add	r3,r17,r3
    6900:	18c00017 	ldw	r3,0(r3)
    6904:	1800683a 	jmp	r3
    6908:	000069a0 	cmpeqi	zero,zero,422
    690c:	0000695c 	xori	zero,zero,421
    6910:	00006948 	cmpgei	zero,zero,421
    6914:	00006924 	muli	zero,zero,420
    6918:	00006988 	cmpgei	zero,zero,422
    691c:	0000695c 	xori	zero,zero,421
    6920:	000069a0 	cmpeqi	zero,zero,422
    6924:	00dffc34 	movhi	r3,32752
    6928:	d8c00715 	stw	r3,28(sp)
    692c:	d8000815 	stw	zero,32(sp)
    6930:	1080020c 	andi	r2,r2,8
    6934:	dcc00817 	ldw	r19,32(sp)
    6938:	103ca926 	beq	r2,zero,5be0 <__alt_data_end+0xfe005be0>
    693c:	d8800717 	ldw	r2,28(sp)
    6940:	14600034 	orhi	r17,r2,32768
    6944:	003bac06 	br	57f8 <__alt_data_end+0xfe0057f8>
    6948:	d9000217 	ldw	r4,8(sp)
    694c:	d9400317 	ldw	r5,12(sp)
    6950:	d9000815 	stw	r4,32(sp)
    6954:	d9400715 	stw	r5,28(sp)
    6958:	003ff506 	br	6930 <__alt_data_end+0xfe006930>
    695c:	d9400317 	ldw	r5,12(sp)
    6960:	21010cc4 	addi	r4,r4,1075
    6964:	2008953a 	slli	r4,r4,20
    6968:	00fffc34 	movhi	r3,65520
    696c:	18ffffc4 	addi	r3,r3,-1
    6970:	28c6703a 	and	r3,r5,r3
    6974:	d9400217 	ldw	r5,8(sp)
    6978:	20c6b03a 	or	r3,r4,r3
    697c:	d8c00715 	stw	r3,28(sp)
    6980:	d9400815 	stw	r5,32(sp)
    6984:	003fea06 	br	6930 <__alt_data_end+0xfe006930>
    6988:	01200034 	movhi	r4,32768
    698c:	213fffc4 	addi	r4,r4,-1
    6990:	017fffc4 	movi	r5,-1
    6994:	d9000715 	stw	r4,28(sp)
    6998:	d9400815 	stw	r5,32(sp)
    699c:	003fe406 	br	6930 <__alt_data_end+0xfe006930>
    69a0:	d8000715 	stw	zero,28(sp)
    69a4:	d8000815 	stw	zero,32(sp)
    69a8:	003fe106 	br	6930 <__alt_data_end+0xfe006930>
    69ac:	d9400d17 	ldw	r5,52(sp)
    69b0:	00bffa84 	movi	r2,-22
    69b4:	28bcd616 	blt	r5,r2,5d10 <__alt_data_end+0xfe005d10>
    69b8:	280490fa 	slli	r2,r5,3
    69bc:	00c00074 	movhi	r3,1
    69c0:	18d48404 	addi	r3,r3,21008
    69c4:	d9000817 	ldw	r4,32(sp)
    69c8:	1885c83a 	sub	r2,r3,r2
    69cc:	11800017 	ldw	r6,0(r2)
    69d0:	11c00117 	ldw	r7,4(r2)
    69d4:	d9400717 	ldw	r5,28(sp)
    69d8:	00102340 	call	10234 <__divdf3>
    69dc:	1027883a 	mov	r19,r2
    69e0:	1823883a 	mov	r17,r3
    69e4:	003b8406 	br	57f8 <__alt_data_end+0xfe0057f8>
    69e8:	d8800817 	ldw	r2,32(sp)
    69ec:	103ec31e 	bne	r2,zero,64fc <__alt_data_end+0xfe0064fc>
    69f0:	003f0b06 	br	6620 <__alt_data_end+0xfe006620>
    69f4:	00800404 	movi	r2,16
    69f8:	15804a16 	blt	r2,r22,6b24 <_strtod_r+0x1470>
    69fc:	bdc002a4 	muli	r23,r23,10
    6a00:	000f883a 	mov	r7,zero
    6a04:	b8ef883a 	add	r23,r23,r3
    6a08:	003e6d06 	br	63c0 <__alt_data_end+0xfe0063c0>
    6a0c:	d8800617 	ldw	r2,24(sp)
    6a10:	00c00074 	movhi	r3,1
    6a14:	18d43b04 	addi	r3,r3,20716
    6a18:	01c00644 	movi	r7,25
    6a1c:	00000b06 	br	6a4c <_strtod_r+0x1398>
    6a20:	10800044 	addi	r2,r2,1
    6a24:	11400003 	ldbu	r5,0(r2)
    6a28:	29bfefc4 	addi	r6,r5,-65
    6a2c:	29403fcc 	andi	r5,r5,255
    6a30:	2940201c 	xori	r5,r5,128
    6a34:	31803fcc 	andi	r6,r6,255
    6a38:	297fe004 	addi	r5,r5,-128
    6a3c:	39800136 	bltu	r7,r6,6a44 <_strtod_r+0x1390>
    6a40:	29400804 	addi	r5,r5,32
    6a44:	18c00044 	addi	r3,r3,1
    6a48:	293b671e 	bne	r5,r4,57e8 <__alt_data_end+0xfe0057e8>
    6a4c:	19000007 	ldb	r4,0(r3)
    6a50:	203ff31e 	bne	r4,zero,6a20 <__alt_data_end+0xfe006a20>
    6a54:	1011883a 	mov	r8,r2
    6a58:	d8800615 	stw	r2,24(sp)
    6a5c:	00c00074 	movhi	r3,1
    6a60:	18d43c04 	addi	r3,r3,20720
    6a64:	01c00644 	movi	r7,25
    6a68:	00000a06 	br	6a94 <_strtod_r+0x13e0>
    6a6c:	11400003 	ldbu	r5,0(r2)
    6a70:	29bfefc4 	addi	r6,r5,-65
    6a74:	29403fcc 	andi	r5,r5,255
    6a78:	2940201c 	xori	r5,r5,128
    6a7c:	31803fcc 	andi	r6,r6,255
    6a80:	297fe004 	addi	r5,r5,-128
    6a84:	39800136 	bltu	r7,r6,6a8c <_strtod_r+0x13d8>
    6a88:	29400804 	addi	r5,r5,32
    6a8c:	18c00044 	addi	r3,r3,1
    6a90:	2900331e 	bne	r5,r4,6b60 <_strtod_r+0x14ac>
    6a94:	19000007 	ldb	r4,0(r3)
    6a98:	10800044 	addi	r2,r2,1
    6a9c:	203ff31e 	bne	r4,zero,6a6c <__alt_data_end+0xfe006a6c>
    6aa0:	d8800615 	stw	r2,24(sp)
    6aa4:	00dffc34 	movhi	r3,32752
    6aa8:	d8000815 	stw	zero,32(sp)
    6aac:	d8c00715 	stw	r3,28(sp)
    6ab0:	dcc00817 	ldw	r19,32(sp)
    6ab4:	003c4a06 	br	5be0 <__alt_data_end+0xfe005be0>
    6ab8:	000d883a 	mov	r6,zero
    6abc:	003c1a06 	br	5b28 <__alt_data_end+0xfe005b28>
    6ac0:	0080d434 	movhi	r2,848
    6ac4:	1887883a 	add	r3,r3,r2
    6ac8:	d8c00715 	stw	r3,28(sp)
    6acc:	dcc00817 	ldw	r19,32(sp)
    6ad0:	1823883a 	mov	r17,r3
    6ad4:	d8001215 	stw	zero,72(sp)
    6ad8:	003ca406 	br	5d6c <__alt_data_end+0xfe005d6c>
    6adc:	d8801217 	ldw	r2,72(sp)
    6ae0:	10001226 	beq	r2,zero,6b2c <_strtod_r+0x1478>
    6ae4:	289ffc2c 	andhi	r2,r5,32752
    6ae8:	00c1a834 	movhi	r3,1696
    6aec:	18800f36 	bltu	r3,r2,6b2c <_strtod_r+0x1478>
    6af0:	1004d53a 	srli	r2,r2,20
    6af4:	00c01ac4 	movi	r3,107
    6af8:	1885c83a 	sub	r2,r3,r2
    6afc:	00ffffc4 	movi	r3,-1
    6b00:	1884983a 	sll	r2,r3,r2
    6b04:	d8c00817 	ldw	r3,32(sp)
    6b08:	18bee41e 	bne	r3,r2,669c <__alt_data_end+0xfe00669c>
    6b0c:	d9000717 	ldw	r4,28(sp)
    6b10:	00800434 	movhi	r2,16
    6b14:	0027883a 	mov	r19,zero
    6b18:	245ffc2c 	andhi	r17,r4,32752
    6b1c:	88a3883a 	add	r17,r17,r2
    6b20:	003ec906 	br	6648 <__alt_data_end+0xfe006648>
    6b24:	000f883a 	mov	r7,zero
    6b28:	003e2506 	br	63c0 <__alt_data_end+0xfe0063c0>
    6b2c:	00bfffc4 	movi	r2,-1
    6b30:	003ff406 	br	6b04 <__alt_data_end+0xfe006b04>
    6b34:	d9400717 	ldw	r5,28(sp)
    6b38:	00c1ac34 	movhi	r3,1712
    6b3c:	289ffc2c 	andhi	r2,r5,32752
    6b40:	18bebb36 	bltu	r3,r2,6630 <__alt_data_end+0xfe006630>
    6b44:	00c0dc34 	movhi	r3,880
    6b48:	18bec136 	bltu	r3,r2,6650 <__alt_data_end+0xfe006650>
    6b4c:	003e7e06 	br	6548 <__alt_data_end+0xfe006548>
    6b50:	002f883a 	mov	r23,zero
    6b54:	04400074 	movhi	r17,1
    6b58:	8c547a04 	addi	r17,r17,20968
    6b5c:	003e4706 	br	647c <__alt_data_end+0xfe00647c>
    6b60:	40800044 	addi	r2,r8,1
    6b64:	d8800615 	stw	r2,24(sp)
    6b68:	003fce06 	br	6aa4 <__alt_data_end+0xfe006aa4>
    6b6c:	b005883a 	mov	r2,r22
    6b70:	003e0d06 	br	63a8 <__alt_data_end+0xfe0063a8>
    6b74:	00801a84 	movi	r2,106
    6b78:	d8801215 	stw	r2,72(sp)
    6b7c:	003ef706 	br	675c <__alt_data_end+0xfe00675c>
    6b80:	d9000604 	addi	r4,sp,24
    6b84:	01400074 	movhi	r5,1
    6b88:	29573704 	addi	r5,r5,23772
    6b8c:	d9800204 	addi	r6,sp,8
    6b90:	000c17c0 	call	c17c <__hexnan>
    6b94:	00c00144 	movi	r3,5
    6b98:	10fc0d1e 	bne	r2,r3,5bd0 <__alt_data_end+0xfe005bd0>
    6b9c:	d9000217 	ldw	r4,8(sp)
    6ba0:	d8800317 	ldw	r2,12(sp)
    6ba4:	d9000815 	stw	r4,32(sp)
    6ba8:	109ffc34 	orhi	r2,r2,32752
    6bac:	d8800715 	stw	r2,28(sp)
    6bb0:	dcc00817 	ldw	r19,32(sp)
    6bb4:	003c0a06 	br	5be0 <__alt_data_end+0xfe005be0>
    6bb8:	00ffffc4 	movi	r3,-1
    6bbc:	d9000817 	ldw	r4,32(sp)
    6bc0:	1884983a 	sll	r2,r3,r2
    6bc4:	1108703a 	and	r4,r2,r4
    6bc8:	d9000815 	stw	r4,32(sp)
    6bcc:	003f0306 	br	67dc <__alt_data_end+0xfe0067dc>
    6bd0:	00ffffc4 	movi	r3,-1
    6bd4:	10bff804 	addi	r2,r2,-32
    6bd8:	1884983a 	sll	r2,r3,r2
    6bdc:	d8c00717 	ldw	r3,28(sp)
    6be0:	10c6703a 	and	r3,r2,r3
    6be4:	d8c00715 	stw	r3,28(sp)
    6be8:	003efc06 	br	67dc <__alt_data_end+0xfe0067dc>

00006bec <strtod>:
    6bec:	00c00074 	movhi	r3,1
    6bf0:	18dbce04 	addi	r3,r3,28472
    6bf4:	2005883a 	mov	r2,r4
    6bf8:	19000017 	ldw	r4,0(r3)
    6bfc:	280d883a 	mov	r6,r5
    6c00:	100b883a 	mov	r5,r2
    6c04:	00056b41 	jmpi	56b4 <_strtod_r>

00006c08 <strtof>:
    6c08:	defffb04 	addi	sp,sp,-20
    6c0c:	dcc00315 	stw	r19,12(sp)
    6c10:	04c00074 	movhi	r19,1
    6c14:	9cdbce04 	addi	r19,r19,28472
    6c18:	2005883a 	mov	r2,r4
    6c1c:	99000017 	ldw	r4,0(r19)
    6c20:	280d883a 	mov	r6,r5
    6c24:	100b883a 	mov	r5,r2
    6c28:	dfc00415 	stw	ra,16(sp)
    6c2c:	dc800215 	stw	r18,8(sp)
    6c30:	dc400115 	stw	r17,4(sp)
    6c34:	dc000015 	stw	r16,0(sp)
    6c38:	00056b40 	call	56b4 <_strtod_r>
    6c3c:	1009883a 	mov	r4,r2
    6c40:	180b883a 	mov	r5,r3
    6c44:	1025883a 	mov	r18,r2
    6c48:	1823883a 	mov	r17,r3
    6c4c:	0011eb40 	call	11eb4 <__truncdfsf2>
    6c50:	1009883a 	mov	r4,r2
    6c54:	000b883a 	mov	r5,zero
    6c58:	1021883a 	mov	r16,r2
    6c5c:	000f7c00 	call	f7c0 <__eqsf2>
    6c60:	1000111e 	bne	r2,zero,6ca8 <strtof+0xa0>
    6c64:	9009883a 	mov	r4,r18
    6c68:	880b883a 	mov	r5,r17
    6c6c:	000d883a 	mov	r6,zero
    6c70:	000f883a 	mov	r7,zero
    6c74:	0010b080 	call	10b08 <__eqdf2>
    6c78:	10000b26 	beq	r2,zero,6ca8 <strtof+0xa0>
    6c7c:	98800017 	ldw	r2,0(r19)
    6c80:	00c00884 	movi	r3,34
    6c84:	10c00015 	stw	r3,0(r2)
    6c88:	8005883a 	mov	r2,r16
    6c8c:	dfc00417 	ldw	ra,16(sp)
    6c90:	dcc00317 	ldw	r19,12(sp)
    6c94:	dc800217 	ldw	r18,8(sp)
    6c98:	dc400117 	ldw	r17,4(sp)
    6c9c:	dc000017 	ldw	r16,0(sp)
    6ca0:	dec00504 	addi	sp,sp,20
    6ca4:	f800283a 	ret
    6ca8:	8009883a 	mov	r4,r16
    6cac:	015fe034 	movhi	r5,32640
    6cb0:	297fffc4 	addi	r5,r5,-1
    6cb4:	000f8340 	call	f834 <__gesf2>
    6cb8:	0080070e 	bge	zero,r2,6cd8 <strtof+0xd0>
    6cbc:	9009883a 	mov	r4,r18
    6cc0:	880b883a 	mov	r5,r17
    6cc4:	01bfffc4 	movi	r6,-1
    6cc8:	01dffc34 	movhi	r7,32752
    6ccc:	39ffffc4 	addi	r7,r7,-1
    6cd0:	0010b8c0 	call	10b8c <__gedf2>
    6cd4:	00bfe90e 	bge	zero,r2,6c7c <__alt_data_end+0xfe006c7c>
    6cd8:	8009883a 	mov	r4,r16
    6cdc:	017fe034 	movhi	r5,65408
    6ce0:	297fffc4 	addi	r5,r5,-1
    6ce4:	000f8e80 	call	f8e8 <__lesf2>
    6ce8:	103fe70e 	bge	r2,zero,6c88 <__alt_data_end+0xfe006c88>
    6cec:	9009883a 	mov	r4,r18
    6cf0:	880b883a 	mov	r5,r17
    6cf4:	01bfffc4 	movi	r6,-1
    6cf8:	01fffc34 	movhi	r7,65520
    6cfc:	39ffffc4 	addi	r7,r7,-1
    6d00:	0010c640 	call	10c64 <__ledf2>
    6d04:	103fdd0e 	bge	r2,zero,6c7c <__alt_data_end+0xfe006c7c>
    6d08:	8005883a 	mov	r2,r16
    6d0c:	dfc00417 	ldw	ra,16(sp)
    6d10:	dcc00317 	ldw	r19,12(sp)
    6d14:	dc800217 	ldw	r18,8(sp)
    6d18:	dc400117 	ldw	r17,4(sp)
    6d1c:	dc000017 	ldw	r16,0(sp)
    6d20:	dec00504 	addi	sp,sp,20
    6d24:	f800283a 	ret

00006d28 <_strtol_r>:
    6d28:	defff404 	addi	sp,sp,-48
    6d2c:	00800074 	movhi	r2,1
    6d30:	109bcf04 	addi	r2,r2,28476
    6d34:	dd800815 	stw	r22,32(sp)
    6d38:	dd400715 	stw	r21,28(sp)
    6d3c:	dd000615 	stw	r20,24(sp)
    6d40:	dc400315 	stw	r17,12(sp)
    6d44:	dfc00b15 	stw	ra,44(sp)
    6d48:	14400017 	ldw	r17,0(r2)
    6d4c:	df000a15 	stw	fp,40(sp)
    6d50:	ddc00915 	stw	r23,36(sp)
    6d54:	dcc00515 	stw	r19,20(sp)
    6d58:	dc800415 	stw	r18,16(sp)
    6d5c:	dc000215 	stw	r16,8(sp)
    6d60:	2829883a 	mov	r20,r5
    6d64:	d9000015 	stw	r4,0(sp)
    6d68:	302b883a 	mov	r21,r6
    6d6c:	382d883a 	mov	r22,r7
    6d70:	2805883a 	mov	r2,r5
    6d74:	00000106 	br	6d7c <_strtol_r+0x54>
    6d78:	9805883a 	mov	r2,r19
    6d7c:	14000007 	ldb	r16,0(r2)
    6d80:	14c00044 	addi	r19,r2,1
    6d84:	8c09883a 	add	r4,r17,r16
    6d88:	21000043 	ldbu	r4,1(r4)
    6d8c:	2100020c 	andi	r4,r4,8
    6d90:	203ff91e 	bne	r4,zero,6d78 <__alt_data_end+0xfe006d78>
    6d94:	00c00b44 	movi	r3,45
    6d98:	80c05a26 	beq	r16,r3,6f04 <_strtol_r+0x1dc>
    6d9c:	00c00ac4 	movi	r3,43
    6da0:	80c05c26 	beq	r16,r3,6f14 <_strtol_r+0x1ec>
    6da4:	0039883a 	mov	fp,zero
    6da8:	00bffbc4 	movi	r2,-17
    6dac:	b084703a 	and	r2,r22,r2
    6db0:	10003d26 	beq	r2,zero,6ea8 <_strtol_r+0x180>
    6db4:	b02f883a 	mov	r23,r22
    6db8:	00a00034 	movhi	r2,32768
    6dbc:	e025003a 	cmpeq	r18,fp,zero
    6dc0:	14a5c83a 	sub	r18,r2,r18
    6dc4:	9009883a 	mov	r4,r18
    6dc8:	b80b883a 	mov	r5,r23
    6dcc:	000f7b80 	call	f7b8 <__umodsi3>
    6dd0:	9009883a 	mov	r4,r18
    6dd4:	b80b883a 	mov	r5,r23
    6dd8:	d8800115 	stw	r2,4(sp)
    6ddc:	000f7b00 	call	f7b0 <__udivsi3>
    6de0:	8c11883a 	add	r8,r17,r16
    6de4:	42000043 	ldbu	r8,1(r8)
    6de8:	100d883a 	mov	r6,r2
    6dec:	9807883a 	mov	r3,r19
    6df0:	4240010c 	andi	r9,r8,4
    6df4:	0009883a 	mov	r4,zero
    6df8:	0015883a 	mov	r10,zero
    6dfc:	01400044 	movi	r5,1
    6e00:	01ffffc4 	movi	r7,-1
    6e04:	dac00117 	ldw	r11,4(sp)
    6e08:	48000e26 	beq	r9,zero,6e44 <_strtol_r+0x11c>
    6e0c:	843ff404 	addi	r16,r16,-48
    6e10:	8580120e 	bge	r16,r22,6e5c <_strtol_r+0x134>
    6e14:	21c00526 	beq	r4,r7,6e2c <_strtol_r+0x104>
    6e18:	32802a36 	bltu	r6,r10,6ec4 <_strtol_r+0x19c>
    6e1c:	51802826 	beq	r10,r6,6ec0 <_strtol_r+0x198>
    6e20:	55d5383a 	mul	r10,r10,r23
    6e24:	01000044 	movi	r4,1
    6e28:	8295883a 	add	r10,r16,r10
    6e2c:	1c000007 	ldb	r16,0(r3)
    6e30:	18c00044 	addi	r3,r3,1
    6e34:	8c11883a 	add	r8,r17,r16
    6e38:	42000043 	ldbu	r8,1(r8)
    6e3c:	4240010c 	andi	r9,r8,4
    6e40:	483ff21e 	bne	r9,zero,6e0c <__alt_data_end+0xfe006e0c>
    6e44:	420000cc 	andi	r8,r8,3
    6e48:	40000426 	beq	r8,zero,6e5c <_strtol_r+0x134>
    6e4c:	41401f26 	beq	r8,r5,6ecc <_strtol_r+0x1a4>
    6e50:	008015c4 	movi	r2,87
    6e54:	80a1c83a 	sub	r16,r16,r2
    6e58:	85bfee16 	blt	r16,r22,6e14 <__alt_data_end+0xfe006e14>
    6e5c:	00bfffc4 	movi	r2,-1
    6e60:	20801d26 	beq	r4,r2,6ed8 <_strtol_r+0x1b0>
    6e64:	e000251e 	bne	fp,zero,6efc <_strtol_r+0x1d4>
    6e68:	5005883a 	mov	r2,r10
    6e6c:	a8000226 	beq	r21,zero,6e78 <_strtol_r+0x150>
    6e70:	2000201e 	bne	r4,zero,6ef4 <_strtol_r+0x1cc>
    6e74:	ad000015 	stw	r20,0(r21)
    6e78:	dfc00b17 	ldw	ra,44(sp)
    6e7c:	df000a17 	ldw	fp,40(sp)
    6e80:	ddc00917 	ldw	r23,36(sp)
    6e84:	dd800817 	ldw	r22,32(sp)
    6e88:	dd400717 	ldw	r21,28(sp)
    6e8c:	dd000617 	ldw	r20,24(sp)
    6e90:	dcc00517 	ldw	r19,20(sp)
    6e94:	dc800417 	ldw	r18,16(sp)
    6e98:	dc400317 	ldw	r17,12(sp)
    6e9c:	dc000217 	ldw	r16,8(sp)
    6ea0:	dec00c04 	addi	sp,sp,48
    6ea4:	f800283a 	ret
    6ea8:	00800c04 	movi	r2,48
    6eac:	80801d26 	beq	r16,r2,6f24 <_strtol_r+0x1fc>
    6eb0:	b03fc01e 	bne	r22,zero,6db4 <__alt_data_end+0xfe006db4>
    6eb4:	05800284 	movi	r22,10
    6eb8:	b02f883a 	mov	r23,r22
    6ebc:	003fbe06 	br	6db8 <__alt_data_end+0xfe006db8>
    6ec0:	5c3fd70e 	bge	r11,r16,6e20 <__alt_data_end+0xfe006e20>
    6ec4:	013fffc4 	movi	r4,-1
    6ec8:	003fd806 	br	6e2c <__alt_data_end+0xfe006e2c>
    6ecc:	00800dc4 	movi	r2,55
    6ed0:	80a1c83a 	sub	r16,r16,r2
    6ed4:	003fe006 	br	6e58 <__alt_data_end+0xfe006e58>
    6ed8:	d9400017 	ldw	r5,0(sp)
    6edc:	01000884 	movi	r4,34
    6ee0:	e005003a 	cmpeq	r2,fp,zero
    6ee4:	29000015 	stw	r4,0(r5)
    6ee8:	01200034 	movhi	r4,32768
    6eec:	2085c83a 	sub	r2,r4,r2
    6ef0:	a83fe126 	beq	r21,zero,6e78 <__alt_data_end+0xfe006e78>
    6ef4:	1d3fffc4 	addi	r20,r3,-1
    6ef8:	003fde06 	br	6e74 <__alt_data_end+0xfe006e74>
    6efc:	0295c83a 	sub	r10,zero,r10
    6f00:	003fd906 	br	6e68 <__alt_data_end+0xfe006e68>
    6f04:	14c00084 	addi	r19,r2,2
    6f08:	14000047 	ldb	r16,1(r2)
    6f0c:	07000044 	movi	fp,1
    6f10:	003fa506 	br	6da8 <__alt_data_end+0xfe006da8>
    6f14:	14c00084 	addi	r19,r2,2
    6f18:	14000047 	ldb	r16,1(r2)
    6f1c:	0039883a 	mov	fp,zero
    6f20:	003fa106 	br	6da8 <__alt_data_end+0xfe006da8>
    6f24:	98c00003 	ldbu	r3,0(r19)
    6f28:	00bff7c4 	movi	r2,-33
    6f2c:	1886703a 	and	r3,r3,r2
    6f30:	18c03fcc 	andi	r3,r3,255
    6f34:	18c0201c 	xori	r3,r3,128
    6f38:	18ffe004 	addi	r3,r3,-128
    6f3c:	00801604 	movi	r2,88
    6f40:	18800326 	beq	r3,r2,6f50 <_strtol_r+0x228>
    6f44:	b03f9b1e 	bne	r22,zero,6db4 <__alt_data_end+0xfe006db4>
    6f48:	05800204 	movi	r22,8
    6f4c:	003f9906 	br	6db4 <__alt_data_end+0xfe006db4>
    6f50:	05800404 	movi	r22,16
    6f54:	9c000047 	ldb	r16,1(r19)
    6f58:	b02f883a 	mov	r23,r22
    6f5c:	9cc00084 	addi	r19,r19,2
    6f60:	003f9506 	br	6db8 <__alt_data_end+0xfe006db8>

00006f64 <strtol>:
    6f64:	00800074 	movhi	r2,1
    6f68:	109bce04 	addi	r2,r2,28472
    6f6c:	2007883a 	mov	r3,r4
    6f70:	11000017 	ldw	r4,0(r2)
    6f74:	2805883a 	mov	r2,r5
    6f78:	300f883a 	mov	r7,r6
    6f7c:	180b883a 	mov	r5,r3
    6f80:	100d883a 	mov	r6,r2
    6f84:	0006d281 	jmpi	6d28 <_strtol_r>

00006f88 <_strtoll_r>:
    6f88:	deffef04 	addi	sp,sp,-68
    6f8c:	00800074 	movhi	r2,1
    6f90:	109bcf04 	addi	r2,r2,28476
    6f94:	df000f15 	stw	fp,60(sp)
    6f98:	dd800d15 	stw	r22,52(sp)
    6f9c:	dfc01015 	stw	ra,64(sp)
    6fa0:	15800017 	ldw	r22,0(r2)
    6fa4:	ddc00e15 	stw	r23,56(sp)
    6fa8:	dd400c15 	stw	r21,48(sp)
    6fac:	dd000b15 	stw	r20,44(sp)
    6fb0:	dcc00a15 	stw	r19,40(sp)
    6fb4:	dc800915 	stw	r18,36(sp)
    6fb8:	dc400815 	stw	r17,32(sp)
    6fbc:	dc000715 	stw	r16,28(sp)
    6fc0:	d9400415 	stw	r5,16(sp)
    6fc4:	d9000515 	stw	r4,20(sp)
    6fc8:	d9800115 	stw	r6,4(sp)
    6fcc:	3839883a 	mov	fp,r7
    6fd0:	2805883a 	mov	r2,r5
    6fd4:	00000106 	br	6fdc <_strtoll_r+0x54>
    6fd8:	8805883a 	mov	r2,r17
    6fdc:	12000007 	ldb	r8,0(r2)
    6fe0:	14400044 	addi	r17,r2,1
    6fe4:	b207883a 	add	r3,r22,r8
    6fe8:	18c00043 	ldbu	r3,1(r3)
    6fec:	18c0020c 	andi	r3,r3,8
    6ff0:	183ff91e 	bne	r3,zero,6fd8 <__alt_data_end+0xfe006fd8>
    6ff4:	00c00b44 	movi	r3,45
    6ff8:	40c07c26 	beq	r8,r3,71ec <_strtoll_r+0x264>
    6ffc:	00c00ac4 	movi	r3,43
    7000:	40c08b26 	beq	r8,r3,7230 <_strtoll_r+0x2a8>
    7004:	d8000215 	stw	zero,8(sp)
    7008:	00bffbc4 	movi	r2,-17
    700c:	e084703a 	and	r2,fp,r2
    7010:	10005e26 	beq	r2,zero,718c <_strtoll_r+0x204>
    7014:	e00bd7fa 	srai	r5,fp,31
    7018:	e025883a 	mov	r18,fp
    701c:	d9400015 	stw	r5,0(sp)
    7020:	d9400217 	ldw	r5,8(sp)
    7024:	28006126 	beq	r5,zero,71ac <_strtoll_r+0x224>
    7028:	0029883a 	mov	r20,zero
    702c:	04200034 	movhi	r16,32768
    7030:	d9c00017 	ldw	r7,0(sp)
    7034:	a009883a 	mov	r4,r20
    7038:	800b883a 	mov	r5,r16
    703c:	900d883a 	mov	r6,r18
    7040:	da000615 	stw	r8,24(sp)
    7044:	000f1140 	call	f114 <__umoddi3>
    7048:	d9c00017 	ldw	r7,0(sp)
    704c:	a009883a 	mov	r4,r20
    7050:	800b883a 	mov	r5,r16
    7054:	900d883a 	mov	r6,r18
    7058:	d8800315 	stw	r2,12(sp)
    705c:	000eb500 	call	eb50 <__udivdi3>
    7060:	da000617 	ldw	r8,24(sp)
    7064:	1829883a 	mov	r20,r3
    7068:	882f883a 	mov	r23,r17
    706c:	b20d883a 	add	r6,r22,r8
    7070:	31800043 	ldbu	r6,1(r6)
    7074:	1021883a 	mov	r16,r2
    7078:	0007883a 	mov	r3,zero
    707c:	31c0010c 	andi	r7,r6,4
    7080:	0009883a 	mov	r4,zero
    7084:	000b883a 	mov	r5,zero
    7088:	04400044 	movi	r17,1
    708c:	057fffc4 	movi	r21,-1
    7090:	38000d26 	beq	r7,zero,70c8 <_strtoll_r+0x140>
    7094:	44fff404 	addi	r19,r8,-48
    7098:	9f00110e 	bge	r19,fp,70e0 <_strtoll_r+0x158>
    709c:	1d400426 	beq	r3,r21,70b0 <_strtoll_r+0x128>
    70a0:	a1400236 	bltu	r20,r5,70ac <_strtoll_r+0x124>
    70a4:	2d00261e 	bne	r5,r20,7140 <_strtoll_r+0x1b8>
    70a8:	8100252e 	bgeu	r16,r4,7140 <_strtoll_r+0x1b8>
    70ac:	00ffffc4 	movi	r3,-1
    70b0:	ba000007 	ldb	r8,0(r23)
    70b4:	bdc00044 	addi	r23,r23,1
    70b8:	b20d883a 	add	r6,r22,r8
    70bc:	31800043 	ldbu	r6,1(r6)
    70c0:	31c0010c 	andi	r7,r6,4
    70c4:	383ff31e 	bne	r7,zero,7094 <__alt_data_end+0xfe007094>
    70c8:	318000cc 	andi	r6,r6,3
    70cc:	30000426 	beq	r6,zero,70e0 <_strtoll_r+0x158>
    70d0:	34402726 	beq	r6,r17,7170 <_strtoll_r+0x1e8>
    70d4:	008015c4 	movi	r2,87
    70d8:	40a7c83a 	sub	r19,r8,r2
    70dc:	9f3fef16 	blt	r19,fp,709c <__alt_data_end+0xfe00709c>
    70e0:	00bfffc4 	movi	r2,-1
    70e4:	18804626 	beq	r3,r2,7200 <_strtoll_r+0x278>
    70e8:	d8800217 	ldw	r2,8(sp)
    70ec:	1000361e 	bne	r2,zero,71c8 <_strtoll_r+0x240>
    70f0:	d8800117 	ldw	r2,4(sp)
    70f4:	10003a26 	beq	r2,zero,71e0 <_strtoll_r+0x258>
    70f8:	2005883a 	mov	r2,r4
    70fc:	18002f1e 	bne	r3,zero,71bc <_strtoll_r+0x234>
    7100:	dd800417 	ldw	r22,16(sp)
    7104:	2807883a 	mov	r3,r5
    7108:	d9000117 	ldw	r4,4(sp)
    710c:	25800015 	stw	r22,0(r4)
    7110:	dfc01017 	ldw	ra,64(sp)
    7114:	df000f17 	ldw	fp,60(sp)
    7118:	ddc00e17 	ldw	r23,56(sp)
    711c:	dd800d17 	ldw	r22,52(sp)
    7120:	dd400c17 	ldw	r21,48(sp)
    7124:	dd000b17 	ldw	r20,44(sp)
    7128:	dcc00a17 	ldw	r19,40(sp)
    712c:	dc800917 	ldw	r18,36(sp)
    7130:	dc400817 	ldw	r17,32(sp)
    7134:	dc000717 	ldw	r16,28(sp)
    7138:	dec01104 	addi	sp,sp,68
    713c:	f800283a 	ret
    7140:	24000e26 	beq	r4,r16,717c <_strtoll_r+0x1f4>
    7144:	d9c00017 	ldw	r7,0(sp)
    7148:	900d883a 	mov	r6,r18
    714c:	000ea6c0 	call	ea6c <__muldi3>
    7150:	980dd7fa 	srai	r6,r19,31
    7154:	9885883a 	add	r2,r19,r2
    7158:	14d1803a 	cmpltu	r8,r2,r19
    715c:	30c7883a 	add	r3,r6,r3
    7160:	40cb883a 	add	r5,r8,r3
    7164:	1009883a 	mov	r4,r2
    7168:	00c00044 	movi	r3,1
    716c:	003fd006 	br	70b0 <__alt_data_end+0xfe0070b0>
    7170:	00800dc4 	movi	r2,55
    7174:	40a7c83a 	sub	r19,r8,r2
    7178:	003fd806 	br	70dc <__alt_data_end+0xfe0070dc>
    717c:	2d3ff11e 	bne	r5,r20,7144 <__alt_data_end+0xfe007144>
    7180:	d8800317 	ldw	r2,12(sp)
    7184:	14ffc916 	blt	r2,r19,70ac <__alt_data_end+0xfe0070ac>
    7188:	003fee06 	br	7144 <__alt_data_end+0xfe007144>
    718c:	00800c04 	movi	r2,48
    7190:	40802b26 	beq	r8,r2,7240 <_strtoll_r+0x2b8>
    7194:	e000401e 	bne	fp,zero,7298 <_strtoll_r+0x310>
    7198:	d9400217 	ldw	r5,8(sp)
    719c:	04800284 	movi	r18,10
    71a0:	d8000015 	stw	zero,0(sp)
    71a4:	9039883a 	mov	fp,r18
    71a8:	283f9f1e 	bne	r5,zero,7028 <__alt_data_end+0xfe007028>
    71ac:	053fffc4 	movi	r20,-1
    71b0:	04200034 	movhi	r16,32768
    71b4:	843fffc4 	addi	r16,r16,-1
    71b8:	003f9d06 	br	7030 <__alt_data_end+0xfe007030>
    71bc:	2807883a 	mov	r3,r5
    71c0:	bdbfffc4 	addi	r22,r23,-1
    71c4:	003fd006 	br	7108 <__alt_data_end+0xfe007108>
    71c8:	0109c83a 	sub	r4,zero,r4
    71cc:	2004c03a 	cmpne	r2,r4,zero
    71d0:	014bc83a 	sub	r5,zero,r5
    71d4:	288bc83a 	sub	r5,r5,r2
    71d8:	d8800117 	ldw	r2,4(sp)
    71dc:	103fc61e 	bne	r2,zero,70f8 <__alt_data_end+0xfe0070f8>
    71e0:	2005883a 	mov	r2,r4
    71e4:	2807883a 	mov	r3,r5
    71e8:	003fc906 	br	7110 <__alt_data_end+0xfe007110>
    71ec:	14400084 	addi	r17,r2,2
    71f0:	12000047 	ldb	r8,1(r2)
    71f4:	00800044 	movi	r2,1
    71f8:	d8800215 	stw	r2,8(sp)
    71fc:	003f8206 	br	7008 <__alt_data_end+0xfe007008>
    7200:	d9000217 	ldw	r4,8(sp)
    7204:	20001b1e 	bne	r4,zero,7274 <_strtoll_r+0x2ec>
    7208:	1805883a 	mov	r2,r3
    720c:	00e00034 	movhi	r3,32768
    7210:	18ffffc4 	addi	r3,r3,-1
    7214:	d9400517 	ldw	r5,20(sp)
    7218:	01000884 	movi	r4,34
    721c:	29000015 	stw	r4,0(r5)
    7220:	d9000117 	ldw	r4,4(sp)
    7224:	203fba26 	beq	r4,zero,7110 <__alt_data_end+0xfe007110>
    7228:	bdbfffc4 	addi	r22,r23,-1
    722c:	003fb606 	br	7108 <__alt_data_end+0xfe007108>
    7230:	14400084 	addi	r17,r2,2
    7234:	12000047 	ldb	r8,1(r2)
    7238:	d8000215 	stw	zero,8(sp)
    723c:	003f7206 	br	7008 <__alt_data_end+0xfe007008>
    7240:	88c00003 	ldbu	r3,0(r17)
    7244:	00bff7c4 	movi	r2,-33
    7248:	1886703a 	and	r3,r3,r2
    724c:	18c03fcc 	andi	r3,r3,255
    7250:	18c0201c 	xori	r3,r3,128
    7254:	18ffe004 	addi	r3,r3,-128
    7258:	00801604 	movi	r2,88
    725c:	18800826 	beq	r3,r2,7280 <_strtoll_r+0x2f8>
    7260:	e000111e 	bne	fp,zero,72a8 <_strtoll_r+0x320>
    7264:	04800204 	movi	r18,8
    7268:	d8000015 	stw	zero,0(sp)
    726c:	9039883a 	mov	fp,r18
    7270:	003f6b06 	br	7020 <__alt_data_end+0xfe007020>
    7274:	0005883a 	mov	r2,zero
    7278:	00e00034 	movhi	r3,32768
    727c:	003fe506 	br	7214 <__alt_data_end+0xfe007214>
    7280:	04800404 	movi	r18,16
    7284:	8a000047 	ldb	r8,1(r17)
    7288:	d8000015 	stw	zero,0(sp)
    728c:	8c400084 	addi	r17,r17,2
    7290:	9039883a 	mov	fp,r18
    7294:	003f6206 	br	7020 <__alt_data_end+0xfe007020>
    7298:	e009d7fa 	srai	r4,fp,31
    729c:	e025883a 	mov	r18,fp
    72a0:	d9000015 	stw	r4,0(sp)
    72a4:	003f5e06 	br	7020 <__alt_data_end+0xfe007020>
    72a8:	e005d7fa 	srai	r2,fp,31
    72ac:	e025883a 	mov	r18,fp
    72b0:	d8800015 	stw	r2,0(sp)
    72b4:	003f5a06 	br	7020 <__alt_data_end+0xfe007020>

000072b8 <_strtoul_r>:
    72b8:	defff604 	addi	sp,sp,-40
    72bc:	00800074 	movhi	r2,1
    72c0:	109bcf04 	addi	r2,r2,28476
    72c4:	dd800615 	stw	r22,24(sp)
    72c8:	dd400515 	stw	r21,20(sp)
    72cc:	dd000415 	stw	r20,16(sp)
    72d0:	dcc00315 	stw	r19,12(sp)
    72d4:	dc400115 	stw	r17,4(sp)
    72d8:	dfc00915 	stw	ra,36(sp)
    72dc:	14400017 	ldw	r17,0(r2)
    72e0:	df000815 	stw	fp,32(sp)
    72e4:	ddc00715 	stw	r23,28(sp)
    72e8:	dc800215 	stw	r18,8(sp)
    72ec:	dc000015 	stw	r16,0(sp)
    72f0:	2827883a 	mov	r19,r5
    72f4:	2029883a 	mov	r20,r4
    72f8:	302b883a 	mov	r21,r6
    72fc:	382d883a 	mov	r22,r7
    7300:	2805883a 	mov	r2,r5
    7304:	00000106 	br	730c <_strtoul_r+0x54>
    7308:	9005883a 	mov	r2,r18
    730c:	14000007 	ldb	r16,0(r2)
    7310:	14800044 	addi	r18,r2,1
    7314:	8c11883a 	add	r8,r17,r16
    7318:	42000043 	ldbu	r8,1(r8)
    731c:	4200020c 	andi	r8,r8,8
    7320:	403ff91e 	bne	r8,zero,7308 <__alt_data_end+0xfe007308>
    7324:	00c00b44 	movi	r3,45
    7328:	80c05426 	beq	r16,r3,747c <_strtoul_r+0x1c4>
    732c:	00c00ac4 	movi	r3,43
    7330:	80c05626 	beq	r16,r3,748c <_strtoul_r+0x1d4>
    7334:	002f883a 	mov	r23,zero
    7338:	00bffbc4 	movi	r2,-17
    733c:	b084703a 	and	r2,r22,r2
    7340:	10003d26 	beq	r2,zero,7438 <_strtoul_r+0x180>
    7344:	013fffc4 	movi	r4,-1
    7348:	b00b883a 	mov	r5,r22
    734c:	000f7b00 	call	f7b0 <__udivsi3>
    7350:	013fffc4 	movi	r4,-1
    7354:	b00b883a 	mov	r5,r22
    7358:	1039883a 	mov	fp,r2
    735c:	000f7b80 	call	f7b8 <__umodsi3>
    7360:	1017883a 	mov	r11,r2
    7364:	b00f883a 	mov	r7,r22
    7368:	e009883a 	mov	r4,fp
    736c:	8c11883a 	add	r8,r17,r16
    7370:	42000043 	ldbu	r8,1(r8)
    7374:	9007883a 	mov	r3,r18
    7378:	0013883a 	mov	r9,zero
    737c:	4280010c 	andi	r10,r8,4
    7380:	0005883a 	mov	r2,zero
    7384:	01800044 	movi	r6,1
    7388:	50000e26 	beq	r10,zero,73c4 <_strtoul_r+0x10c>
    738c:	843ff404 	addi	r16,r16,-48
    7390:	8580120e 	bge	r16,r22,73dc <_strtoul_r+0x124>
    7394:	48002316 	blt	r9,zero,7424 <_strtoul_r+0x16c>
    7398:	20802236 	bltu	r4,r2,7424 <_strtoul_r+0x16c>
    739c:	11002026 	beq	r2,r4,7420 <_strtoul_r+0x168>
    73a0:	11cb383a 	mul	r5,r2,r7
    73a4:	02400044 	movi	r9,1
    73a8:	8145883a 	add	r2,r16,r5
    73ac:	1c000007 	ldb	r16,0(r3)
    73b0:	18c00044 	addi	r3,r3,1
    73b4:	8c11883a 	add	r8,r17,r16
    73b8:	42000043 	ldbu	r8,1(r8)
    73bc:	4280010c 	andi	r10,r8,4
    73c0:	503ff21e 	bne	r10,zero,738c <__alt_data_end+0xfe00738c>
    73c4:	420000cc 	andi	r8,r8,3
    73c8:	40000426 	beq	r8,zero,73dc <_strtoul_r+0x124>
    73cc:	41801726 	beq	r8,r6,742c <_strtoul_r+0x174>
    73d0:	014015c4 	movi	r5,87
    73d4:	8161c83a 	sub	r16,r16,r5
    73d8:	85bfee16 	blt	r16,r22,7394 <__alt_data_end+0xfe007394>
    73dc:	48002316 	blt	r9,zero,746c <_strtoul_r+0x1b4>
    73e0:	b800201e 	bne	r23,zero,7464 <_strtoul_r+0x1ac>
    73e4:	a8000226 	beq	r21,zero,73f0 <_strtoul_r+0x138>
    73e8:	48001c1e 	bne	r9,zero,745c <_strtoul_r+0x1a4>
    73ec:	acc00015 	stw	r19,0(r21)
    73f0:	dfc00917 	ldw	ra,36(sp)
    73f4:	df000817 	ldw	fp,32(sp)
    73f8:	ddc00717 	ldw	r23,28(sp)
    73fc:	dd800617 	ldw	r22,24(sp)
    7400:	dd400517 	ldw	r21,20(sp)
    7404:	dd000417 	ldw	r20,16(sp)
    7408:	dcc00317 	ldw	r19,12(sp)
    740c:	dc800217 	ldw	r18,8(sp)
    7410:	dc400117 	ldw	r17,4(sp)
    7414:	dc000017 	ldw	r16,0(sp)
    7418:	dec00a04 	addi	sp,sp,40
    741c:	f800283a 	ret
    7420:	5c3fdf0e 	bge	r11,r16,73a0 <__alt_data_end+0xfe0073a0>
    7424:	027fffc4 	movi	r9,-1
    7428:	003fe006 	br	73ac <__alt_data_end+0xfe0073ac>
    742c:	01400dc4 	movi	r5,55
    7430:	8161c83a 	sub	r16,r16,r5
    7434:	003fe806 	br	73d8 <__alt_data_end+0xfe0073d8>
    7438:	00800c04 	movi	r2,48
    743c:	80801726 	beq	r16,r2,749c <_strtoul_r+0x1e4>
    7440:	b03fc01e 	bne	r22,zero,7344 <__alt_data_end+0xfe007344>
    7444:	05800284 	movi	r22,10
    7448:	02c00144 	movi	r11,5
    744c:	010666b4 	movhi	r4,6554
    7450:	21266644 	addi	r4,r4,-26215
    7454:	b00f883a 	mov	r7,r22
    7458:	003fc406 	br	736c <__alt_data_end+0xfe00736c>
    745c:	1cffffc4 	addi	r19,r3,-1
    7460:	003fe206 	br	73ec <__alt_data_end+0xfe0073ec>
    7464:	0085c83a 	sub	r2,zero,r2
    7468:	003fde06 	br	73e4 <__alt_data_end+0xfe0073e4>
    746c:	00800884 	movi	r2,34
    7470:	a0800015 	stw	r2,0(r20)
    7474:	00bfffc4 	movi	r2,-1
    7478:	003fda06 	br	73e4 <__alt_data_end+0xfe0073e4>
    747c:	14800084 	addi	r18,r2,2
    7480:	14000047 	ldb	r16,1(r2)
    7484:	05c00044 	movi	r23,1
    7488:	003fab06 	br	7338 <__alt_data_end+0xfe007338>
    748c:	14800084 	addi	r18,r2,2
    7490:	14000047 	ldb	r16,1(r2)
    7494:	002f883a 	mov	r23,zero
    7498:	003fa706 	br	7338 <__alt_data_end+0xfe007338>
    749c:	90c00003 	ldbu	r3,0(r18)
    74a0:	00bff7c4 	movi	r2,-33
    74a4:	1886703a 	and	r3,r3,r2
    74a8:	18c03fcc 	andi	r3,r3,255
    74ac:	18c0201c 	xori	r3,r3,128
    74b0:	18ffe004 	addi	r3,r3,-128
    74b4:	00801604 	movi	r2,88
    74b8:	18800726 	beq	r3,r2,74d8 <_strtoul_r+0x220>
    74bc:	b03fa11e 	bne	r22,zero,7344 <__alt_data_end+0xfe007344>
    74c0:	05800204 	movi	r22,8
    74c4:	02c001c4 	movi	r11,7
    74c8:	01080034 	movhi	r4,8192
    74cc:	213fffc4 	addi	r4,r4,-1
    74d0:	b00f883a 	mov	r7,r22
    74d4:	003fa506 	br	736c <__alt_data_end+0xfe00736c>
    74d8:	05800404 	movi	r22,16
    74dc:	94000047 	ldb	r16,1(r18)
    74e0:	02c003c4 	movi	r11,15
    74e4:	94800084 	addi	r18,r18,2
    74e8:	07040034 	movhi	fp,4096
    74ec:	e73fffc4 	addi	fp,fp,-1
    74f0:	b00f883a 	mov	r7,r22
    74f4:	003f9c06 	br	7368 <__alt_data_end+0xfe007368>

000074f8 <strtoul>:
    74f8:	00800074 	movhi	r2,1
    74fc:	109bce04 	addi	r2,r2,28472
    7500:	2007883a 	mov	r3,r4
    7504:	11000017 	ldw	r4,0(r2)
    7508:	2805883a 	mov	r2,r5
    750c:	300f883a 	mov	r7,r6
    7510:	180b883a 	mov	r5,r3
    7514:	100d883a 	mov	r6,r2
    7518:	00072b81 	jmpi	72b8 <_strtoul_r>

0000751c <_strtoull_r>:
    751c:	defff004 	addi	sp,sp,-64
    7520:	00800074 	movhi	r2,1
    7524:	109bcf04 	addi	r2,r2,28476
    7528:	ddc00d15 	stw	r23,52(sp)
    752c:	dd800c15 	stw	r22,48(sp)
    7530:	dfc00f15 	stw	ra,60(sp)
    7534:	15800017 	ldw	r22,0(r2)
    7538:	df000e15 	stw	fp,56(sp)
    753c:	dd400b15 	stw	r21,44(sp)
    7540:	dd000a15 	stw	r20,40(sp)
    7544:	dcc00915 	stw	r19,36(sp)
    7548:	dc800815 	stw	r18,32(sp)
    754c:	dc400715 	stw	r17,28(sp)
    7550:	dc000615 	stw	r16,24(sp)
    7554:	d9400215 	stw	r5,8(sp)
    7558:	d9000415 	stw	r4,16(sp)
    755c:	d9800015 	stw	r6,0(sp)
    7560:	382f883a 	mov	r23,r7
    7564:	2805883a 	mov	r2,r5
    7568:	00000106 	br	7570 <_strtoull_r+0x54>
    756c:	8805883a 	mov	r2,r17
    7570:	12000007 	ldb	r8,0(r2)
    7574:	14400044 	addi	r17,r2,1
    7578:	b207883a 	add	r3,r22,r8
    757c:	18c00043 	ldbu	r3,1(r3)
    7580:	18c0020c 	andi	r3,r3,8
    7584:	183ff91e 	bne	r3,zero,756c <__alt_data_end+0xfe00756c>
    7588:	00c00b44 	movi	r3,45
    758c:	40c07726 	beq	r8,r3,776c <_strtoull_r+0x250>
    7590:	00c00ac4 	movi	r3,43
    7594:	40c07a26 	beq	r8,r3,7780 <_strtoull_r+0x264>
    7598:	d8000315 	stw	zero,12(sp)
    759c:	00bffbc4 	movi	r2,-17
    75a0:	b884703a 	and	r2,r23,r2
    75a4:	10005726 	beq	r2,zero,7704 <_strtoull_r+0x1e8>
    75a8:	b825d7fa 	srai	r18,r23,31
    75ac:	013fffc4 	movi	r4,-1
    75b0:	200b883a 	mov	r5,r4
    75b4:	b80d883a 	mov	r6,r23
    75b8:	900f883a 	mov	r7,r18
    75bc:	da000515 	stw	r8,20(sp)
    75c0:	000eb500 	call	eb50 <__udivdi3>
    75c4:	013fffc4 	movi	r4,-1
    75c8:	200b883a 	mov	r5,r4
    75cc:	b80d883a 	mov	r6,r23
    75d0:	900f883a 	mov	r7,r18
    75d4:	1021883a 	mov	r16,r2
    75d8:	1839883a 	mov	fp,r3
    75dc:	000f1140 	call	f114 <__umoddi3>
    75e0:	da000517 	ldw	r8,20(sp)
    75e4:	d8800115 	stw	r2,4(sp)
    75e8:	b827883a 	mov	r19,r23
    75ec:	b20d883a 	add	r6,r22,r8
    75f0:	32800043 	ldbu	r10,1(r6)
    75f4:	882b883a 	mov	r21,r17
    75f8:	0017883a 	mov	r11,zero
    75fc:	5180010c 	andi	r6,r10,4
    7600:	0009883a 	mov	r4,zero
    7604:	000b883a 	mov	r5,zero
    7608:	04400044 	movi	r17,1
    760c:	30000d26 	beq	r6,zero,7644 <_strtoull_r+0x128>
    7610:	453ff404 	addi	r20,r8,-48
    7614:	a5c0110e 	bge	r20,r23,765c <_strtoull_r+0x140>
    7618:	58000316 	blt	r11,zero,7628 <_strtoull_r+0x10c>
    761c:	e1400236 	bltu	fp,r5,7628 <_strtoull_r+0x10c>
    7620:	2f00251e 	bne	r5,fp,76b8 <_strtoull_r+0x19c>
    7624:	8100242e 	bgeu	r16,r4,76b8 <_strtoull_r+0x19c>
    7628:	02ffffc4 	movi	r11,-1
    762c:	aa000007 	ldb	r8,0(r21)
    7630:	ad400044 	addi	r21,r21,1
    7634:	b20d883a 	add	r6,r22,r8
    7638:	32800043 	ldbu	r10,1(r6)
    763c:	5180010c 	andi	r6,r10,4
    7640:	303ff31e 	bne	r6,zero,7610 <__alt_data_end+0xfe007610>
    7644:	528000cc 	andi	r10,r10,3
    7648:	50000426 	beq	r10,zero,765c <_strtoull_r+0x140>
    764c:	54402626 	beq	r10,r17,76e8 <_strtoull_r+0x1cc>
    7650:	008015c4 	movi	r2,87
    7654:	40a9c83a 	sub	r20,r8,r2
    7658:	a5ffef16 	blt	r20,r23,7618 <__alt_data_end+0xfe007618>
    765c:	58003d16 	blt	r11,zero,7754 <_strtoull_r+0x238>
    7660:	d8800317 	ldw	r2,12(sp)
    7664:	1000361e 	bne	r2,zero,7740 <_strtoull_r+0x224>
    7668:	d8c00017 	ldw	r3,0(sp)
    766c:	18000426 	beq	r3,zero,7680 <_strtoull_r+0x164>
    7670:	5800311e 	bne	r11,zero,7738 <_strtoull_r+0x21c>
    7674:	dd800217 	ldw	r22,8(sp)
    7678:	d8800017 	ldw	r2,0(sp)
    767c:	15800015 	stw	r22,0(r2)
    7680:	2005883a 	mov	r2,r4
    7684:	2807883a 	mov	r3,r5
    7688:	dfc00f17 	ldw	ra,60(sp)
    768c:	df000e17 	ldw	fp,56(sp)
    7690:	ddc00d17 	ldw	r23,52(sp)
    7694:	dd800c17 	ldw	r22,48(sp)
    7698:	dd400b17 	ldw	r21,44(sp)
    769c:	dd000a17 	ldw	r20,40(sp)
    76a0:	dcc00917 	ldw	r19,36(sp)
    76a4:	dc800817 	ldw	r18,32(sp)
    76a8:	dc400717 	ldw	r17,28(sp)
    76ac:	dc000617 	ldw	r16,24(sp)
    76b0:	dec01004 	addi	sp,sp,64
    76b4:	f800283a 	ret
    76b8:	24000e26 	beq	r4,r16,76f4 <_strtoull_r+0x1d8>
    76bc:	980d883a 	mov	r6,r19
    76c0:	900f883a 	mov	r7,r18
    76c4:	000ea6c0 	call	ea6c <__muldi3>
    76c8:	a00dd7fa 	srai	r6,r20,31
    76cc:	a085883a 	add	r2,r20,r2
    76d0:	1511803a 	cmpltu	r8,r2,r20
    76d4:	30c7883a 	add	r3,r6,r3
    76d8:	1009883a 	mov	r4,r2
    76dc:	40cb883a 	add	r5,r8,r3
    76e0:	02c00044 	movi	r11,1
    76e4:	003fd106 	br	762c <__alt_data_end+0xfe00762c>
    76e8:	00800dc4 	movi	r2,55
    76ec:	40a9c83a 	sub	r20,r8,r2
    76f0:	003fd906 	br	7658 <__alt_data_end+0xfe007658>
    76f4:	2f3ff11e 	bne	r5,fp,76bc <__alt_data_end+0xfe0076bc>
    76f8:	d8800117 	ldw	r2,4(sp)
    76fc:	153fca16 	blt	r2,r20,7628 <__alt_data_end+0xfe007628>
    7700:	003fee06 	br	76bc <__alt_data_end+0xfe0076bc>
    7704:	00800c04 	movi	r2,48
    7708:	40802126 	beq	r8,r2,7790 <_strtoull_r+0x274>
    770c:	b8003d1e 	bne	r23,zero,7804 <_strtoull_r+0x2e8>
    7710:	04c00284 	movi	r19,10
    7714:	00800144 	movi	r2,5
    7718:	d8800115 	stw	r2,4(sp)
    771c:	042666b4 	movhi	r16,39322
    7720:	84266644 	addi	r16,r16,-26215
    7724:	070666b4 	movhi	fp,6554
    7728:	e7266644 	addi	fp,fp,-26215
    772c:	0025883a 	mov	r18,zero
    7730:	982f883a 	mov	r23,r19
    7734:	003fad06 	br	75ec <__alt_data_end+0xfe0075ec>
    7738:	adbfffc4 	addi	r22,r21,-1
    773c:	003fce06 	br	7678 <__alt_data_end+0xfe007678>
    7740:	0109c83a 	sub	r4,zero,r4
    7744:	2004c03a 	cmpne	r2,r4,zero
    7748:	014bc83a 	sub	r5,zero,r5
    774c:	288bc83a 	sub	r5,r5,r2
    7750:	003fc506 	br	7668 <__alt_data_end+0xfe007668>
    7754:	d8c00417 	ldw	r3,16(sp)
    7758:	013fffc4 	movi	r4,-1
    775c:	00800884 	movi	r2,34
    7760:	18800015 	stw	r2,0(r3)
    7764:	200b883a 	mov	r5,r4
    7768:	003fbf06 	br	7668 <__alt_data_end+0xfe007668>
    776c:	14400084 	addi	r17,r2,2
    7770:	12000047 	ldb	r8,1(r2)
    7774:	00800044 	movi	r2,1
    7778:	d8800315 	stw	r2,12(sp)
    777c:	003f8706 	br	759c <__alt_data_end+0xfe00759c>
    7780:	14400084 	addi	r17,r2,2
    7784:	12000047 	ldb	r8,1(r2)
    7788:	d8000315 	stw	zero,12(sp)
    778c:	003f8306 	br	759c <__alt_data_end+0xfe00759c>
    7790:	88c00003 	ldbu	r3,0(r17)
    7794:	00bff7c4 	movi	r2,-33
    7798:	1886703a 	and	r3,r3,r2
    779c:	18c03fcc 	andi	r3,r3,255
    77a0:	18c0201c 	xori	r3,r3,128
    77a4:	18ffe004 	addi	r3,r3,-128
    77a8:	00801604 	movi	r2,88
    77ac:	18800a26 	beq	r3,r2,77d8 <_strtoull_r+0x2bc>
    77b0:	b83f7d1e 	bne	r23,zero,75a8 <__alt_data_end+0xfe0075a8>
    77b4:	04c00204 	movi	r19,8
    77b8:	00c001c4 	movi	r3,7
    77bc:	d8c00115 	stw	r3,4(sp)
    77c0:	043fffc4 	movi	r16,-1
    77c4:	07080034 	movhi	fp,8192
    77c8:	e73fffc4 	addi	fp,fp,-1
    77cc:	0025883a 	mov	r18,zero
    77d0:	982f883a 	mov	r23,r19
    77d4:	003f8506 	br	75ec <__alt_data_end+0xfe0075ec>
    77d8:	04c00404 	movi	r19,16
    77dc:	00c003c4 	movi	r3,15
    77e0:	8a000047 	ldb	r8,1(r17)
    77e4:	d8c00115 	stw	r3,4(sp)
    77e8:	8c400084 	addi	r17,r17,2
    77ec:	043fffc4 	movi	r16,-1
    77f0:	07040034 	movhi	fp,4096
    77f4:	e73fffc4 	addi	fp,fp,-1
    77f8:	0025883a 	mov	r18,zero
    77fc:	982f883a 	mov	r23,r19
    7800:	003f7a06 	br	75ec <__alt_data_end+0xfe0075ec>
    7804:	b825d7fa 	srai	r18,r23,31
    7808:	013fffc4 	movi	r4,-1
    780c:	200b883a 	mov	r5,r4
    7810:	b80d883a 	mov	r6,r23
    7814:	900f883a 	mov	r7,r18
    7818:	da000515 	stw	r8,20(sp)
    781c:	000eb500 	call	eb50 <__udivdi3>
    7820:	013fffc4 	movi	r4,-1
    7824:	200b883a 	mov	r5,r4
    7828:	b80d883a 	mov	r6,r23
    782c:	900f883a 	mov	r7,r18
    7830:	182b883a 	mov	r21,r3
    7834:	1021883a 	mov	r16,r2
    7838:	000f1140 	call	f114 <__umoddi3>
    783c:	d8800115 	stw	r2,4(sp)
    7840:	b827883a 	mov	r19,r23
    7844:	a839883a 	mov	fp,r21
    7848:	da000517 	ldw	r8,20(sp)
    784c:	003f6706 	br	75ec <__alt_data_end+0xfe0075ec>

00007850 <___svfprintf_internal_r>:
    7850:	deffb504 	addi	sp,sp,-300
    7854:	dfc04a15 	stw	ra,296(sp)
    7858:	ddc04815 	stw	r23,288(sp)
    785c:	d9402e15 	stw	r5,184(sp)
    7860:	d9003115 	stw	r4,196(sp)
    7864:	302f883a 	mov	r23,r6
    7868:	d9c02f15 	stw	r7,188(sp)
    786c:	df004915 	stw	fp,292(sp)
    7870:	dd804715 	stw	r22,284(sp)
    7874:	dd404615 	stw	r21,280(sp)
    7878:	dd004515 	stw	r20,276(sp)
    787c:	dcc04415 	stw	r19,272(sp)
    7880:	dc804315 	stw	r18,268(sp)
    7884:	dc404215 	stw	r17,264(sp)
    7888:	dc004115 	stw	r16,260(sp)
    788c:	0003ca80 	call	3ca8 <_localeconv_r>
    7890:	10800017 	ldw	r2,0(r2)
    7894:	1009883a 	mov	r4,r2
    7898:	d8803515 	stw	r2,212(sp)
    789c:	00012640 	call	1264 <strlen>
    78a0:	da802e17 	ldw	r10,184(sp)
    78a4:	d8803915 	stw	r2,228(sp)
    78a8:	5080030b 	ldhu	r2,12(r10)
    78ac:	1080200c 	andi	r2,r2,128
    78b0:	10000226 	beq	r2,zero,78bc <___svfprintf_internal_r+0x6c>
    78b4:	50800417 	ldw	r2,16(r10)
    78b8:	10065c26 	beq	r2,zero,922c <___svfprintf_internal_r+0x19dc>
    78bc:	da801e04 	addi	r10,sp,120
    78c0:	d8800404 	addi	r2,sp,16
    78c4:	da802815 	stw	r10,160(sp)
    78c8:	d8801e15 	stw	r2,120(sp)
    78cc:	1011883a 	mov	r8,r2
    78d0:	d8802817 	ldw	r2,160(sp)
    78d4:	da801dc4 	addi	r10,sp,119
    78d8:	da802915 	stw	r10,164(sp)
    78dc:	1295c83a 	sub	r10,r2,r10
    78e0:	d8002015 	stw	zero,128(sp)
    78e4:	d8001f15 	stw	zero,124(sp)
    78e8:	d8003415 	stw	zero,208(sp)
    78ec:	d8003715 	stw	zero,220(sp)
    78f0:	d8003815 	stw	zero,224(sp)
    78f4:	d8003b15 	stw	zero,236(sp)
    78f8:	d8003a15 	stw	zero,232(sp)
    78fc:	d8003215 	stw	zero,200(sp)
    7900:	04c00074 	movhi	r19,1
    7904:	9cd45984 	addi	r19,r19,20838
    7908:	da803e15 	stw	r10,248(sp)
    790c:	b8800007 	ldb	r2,0(r23)
    7910:	10019926 	beq	r2,zero,7f78 <___svfprintf_internal_r+0x728>
    7914:	00c00944 	movi	r3,37
    7918:	b821883a 	mov	r16,r23
    791c:	10c0021e 	bne	r2,r3,7928 <___svfprintf_internal_r+0xd8>
    7920:	00001406 	br	7974 <___svfprintf_internal_r+0x124>
    7924:	10c00326 	beq	r2,r3,7934 <___svfprintf_internal_r+0xe4>
    7928:	84000044 	addi	r16,r16,1
    792c:	80800007 	ldb	r2,0(r16)
    7930:	103ffc1e 	bne	r2,zero,7924 <__alt_data_end+0xfe007924>
    7934:	85e3c83a 	sub	r17,r16,r23
    7938:	88000e26 	beq	r17,zero,7974 <___svfprintf_internal_r+0x124>
    793c:	d8c02017 	ldw	r3,128(sp)
    7940:	d8801f17 	ldw	r2,124(sp)
    7944:	45c00015 	stw	r23,0(r8)
    7948:	1c47883a 	add	r3,r3,r17
    794c:	10800044 	addi	r2,r2,1
    7950:	d8c02015 	stw	r3,128(sp)
    7954:	44400115 	stw	r17,4(r8)
    7958:	d8801f15 	stw	r2,124(sp)
    795c:	00c001c4 	movi	r3,7
    7960:	1881a016 	blt	r3,r2,7fe4 <___svfprintf_internal_r+0x794>
    7964:	42000204 	addi	r8,r8,8
    7968:	da803217 	ldw	r10,200(sp)
    796c:	5455883a 	add	r10,r10,r17
    7970:	da803215 	stw	r10,200(sp)
    7974:	80800007 	ldb	r2,0(r16)
    7978:	1001a126 	beq	r2,zero,8000 <___svfprintf_internal_r+0x7b0>
    797c:	84400047 	ldb	r17,1(r16)
    7980:	85c00044 	addi	r23,r16,1
    7984:	d8002785 	stb	zero,158(sp)
    7988:	000d883a 	mov	r6,zero
    798c:	04bfffc4 	movi	r18,-1
    7990:	d8003015 	stw	zero,192(sp)
    7994:	d8002a15 	stw	zero,168(sp)
    7998:	00c01604 	movi	r3,88
    799c:	01000244 	movi	r4,9
    79a0:	02400a84 	movi	r9,42
    79a4:	01c01b04 	movi	r7,108
    79a8:	bdc00044 	addi	r23,r23,1
    79ac:	88bff804 	addi	r2,r17,-32
    79b0:	1882d136 	bltu	r3,r2,84f8 <___svfprintf_internal_r+0xca8>
    79b4:	1085883a 	add	r2,r2,r2
    79b8:	1085883a 	add	r2,r2,r2
    79bc:	01400034 	movhi	r5,0
    79c0:	295e7404 	addi	r5,r5,31184
    79c4:	1145883a 	add	r2,r2,r5
    79c8:	10800017 	ldw	r2,0(r2)
    79cc:	1000683a 	jmp	r2
    79d0:	000081fc 	xorhi	zero,zero,519
    79d4:	000084f8 	rdprs	zero,zero,531
    79d8:	000084f8 	rdprs	zero,zero,531
    79dc:	00008218 	cmpnei	zero,zero,520
    79e0:	000084f8 	rdprs	zero,zero,531
    79e4:	000084f8 	rdprs	zero,zero,531
    79e8:	000084f8 	rdprs	zero,zero,531
    79ec:	000084f8 	rdprs	zero,zero,531
    79f0:	000084f8 	rdprs	zero,zero,531
    79f4:	000084f8 	rdprs	zero,zero,531
    79f8:	00008490 	cmplti	zero,zero,530
    79fc:	00008484 	movi	zero,530
    7a00:	000084f8 	rdprs	zero,zero,531
    7a04:	00007fd0 	cmplti	zero,zero,511
    7a08:	000084b8 	rdprs	zero,zero,530
    7a0c:	000084f8 	rdprs	zero,zero,531
    7a10:	00008390 	cmplti	zero,zero,526
    7a14:	000082f4 	movhi	zero,523
    7a18:	000082f4 	movhi	zero,523
    7a1c:	000082f4 	movhi	zero,523
    7a20:	000082f4 	movhi	zero,523
    7a24:	000082f4 	movhi	zero,523
    7a28:	000082f4 	movhi	zero,523
    7a2c:	000082f4 	movhi	zero,523
    7a30:	000082f4 	movhi	zero,523
    7a34:	000082f4 	movhi	zero,523
    7a38:	000084f8 	rdprs	zero,zero,531
    7a3c:	000084f8 	rdprs	zero,zero,531
    7a40:	000084f8 	rdprs	zero,zero,531
    7a44:	000084f8 	rdprs	zero,zero,531
    7a48:	000084f8 	rdprs	zero,zero,531
    7a4c:	000084f8 	rdprs	zero,zero,531
    7a50:	000084f8 	rdprs	zero,zero,531
    7a54:	000084f8 	rdprs	zero,zero,531
    7a58:	000084f8 	rdprs	zero,zero,531
    7a5c:	000084f8 	rdprs	zero,zero,531
    7a60:	00008328 	cmpgeui	zero,zero,524
    7a64:	000080b0 	cmpltui	zero,zero,514
    7a68:	000084f8 	rdprs	zero,zero,531
    7a6c:	000080b0 	cmpltui	zero,zero,514
    7a70:	000084f8 	rdprs	zero,zero,531
    7a74:	000084f8 	rdprs	zero,zero,531
    7a78:	000084f8 	rdprs	zero,zero,531
    7a7c:	000084f8 	rdprs	zero,zero,531
    7a80:	00008404 	movi	zero,528
    7a84:	000084f8 	rdprs	zero,zero,531
    7a88:	000084f8 	rdprs	zero,zero,531
    7a8c:	00007f80 	call	7f8 <LCD_Frouze+0xac>
    7a90:	000084f8 	rdprs	zero,zero,531
    7a94:	000084f8 	rdprs	zero,zero,531
    7a98:	000084f8 	rdprs	zero,zero,531
    7a9c:	000084f8 	rdprs	zero,zero,531
    7aa0:	000084f8 	rdprs	zero,zero,531
    7aa4:	00007b34 	movhi	zero,492
    7aa8:	000084f8 	rdprs	zero,zero,531
    7aac:	000084f8 	rdprs	zero,zero,531
    7ab0:	0000822c 	andhi	zero,zero,520
    7ab4:	000084f8 	rdprs	zero,zero,531
    7ab8:	000084f8 	rdprs	zero,zero,531
    7abc:	000084f8 	rdprs	zero,zero,531
    7ac0:	000084f8 	rdprs	zero,zero,531
    7ac4:	000084f8 	rdprs	zero,zero,531
    7ac8:	000084f8 	rdprs	zero,zero,531
    7acc:	000084f8 	rdprs	zero,zero,531
    7ad0:	000084f8 	rdprs	zero,zero,531
    7ad4:	000084f8 	rdprs	zero,zero,531
    7ad8:	000084f8 	rdprs	zero,zero,531
    7adc:	0000826c 	andhi	zero,zero,521
    7ae0:	000082a4 	muli	zero,zero,522
    7ae4:	000080b0 	cmpltui	zero,zero,514
    7ae8:	000080b0 	cmpltui	zero,zero,514
    7aec:	000080b0 	cmpltui	zero,zero,514
    7af0:	000082e0 	cmpeqi	zero,zero,523
    7af4:	000082a4 	muli	zero,zero,522
    7af8:	000084f8 	rdprs	zero,zero,531
    7afc:	000084f8 	rdprs	zero,zero,531
    7b00:	00008468 	cmpgeui	zero,zero,529
    7b04:	000084f8 	rdprs	zero,zero,531
    7b08:	0000842c 	andhi	zero,zero,528
    7b0c:	00007f8c 	andi	zero,zero,510
    7b10:	0000814c 	andi	zero,zero,517
    7b14:	00008418 	cmpnei	zero,zero,528
    7b18:	000084f8 	rdprs	zero,zero,531
    7b1c:	000083a4 	muli	zero,zero,526
    7b20:	000084f8 	rdprs	zero,zero,531
    7b24:	00007b40 	call	7b4 <LCD_Frouze+0x68>
    7b28:	000084f8 	rdprs	zero,zero,531
    7b2c:	000084f8 	rdprs	zero,zero,531
    7b30:	0000819c 	xori	zero,zero,518
    7b34:	da802a17 	ldw	r10,168(sp)
    7b38:	52800414 	ori	r10,r10,16
    7b3c:	da802a15 	stw	r10,168(sp)
    7b40:	da802a17 	ldw	r10,168(sp)
    7b44:	5080080c 	andi	r2,r10,32
    7b48:	1001511e 	bne	r2,zero,8090 <___svfprintf_internal_r+0x840>
    7b4c:	da802a17 	ldw	r10,168(sp)
    7b50:	5080040c 	andi	r2,r10,16
    7b54:	1004ef26 	beq	r2,zero,8f14 <___svfprintf_internal_r+0x16c4>
    7b58:	da802f17 	ldw	r10,188(sp)
    7b5c:	55000017 	ldw	r20,0(r10)
    7b60:	52800104 	addi	r10,r10,4
    7b64:	002b883a 	mov	r21,zero
    7b68:	da802f15 	stw	r10,188(sp)
    7b6c:	00c00044 	movi	r3,1
    7b70:	a005883a 	mov	r2,r20
    7b74:	d8002785 	stb	zero,158(sp)
    7b78:	002d883a 	mov	r22,zero
    7b7c:	90000416 	blt	r18,zero,7b90 <___svfprintf_internal_r+0x340>
    7b80:	da802a17 	ldw	r10,168(sp)
    7b84:	013fdfc4 	movi	r4,-129
    7b88:	5114703a 	and	r10,r10,r4
    7b8c:	da802a15 	stw	r10,168(sp)
    7b90:	10027b1e 	bne	r2,zero,8580 <___svfprintf_internal_r+0xd30>
    7b94:	90027a1e 	bne	r18,zero,8580 <___svfprintf_internal_r+0xd30>
    7b98:	18c03fcc 	andi	r3,r3,255
    7b9c:	1803971e 	bne	r3,zero,89fc <___svfprintf_internal_r+0x11ac>
    7ba0:	da802a17 	ldw	r10,168(sp)
    7ba4:	5080004c 	andi	r2,r10,1
    7ba8:	10039426 	beq	r2,zero,89fc <___svfprintf_internal_r+0x11ac>
    7bac:	dd003e17 	ldw	r20,248(sp)
    7bb0:	00800c04 	movi	r2,48
    7bb4:	d8801dc5 	stb	r2,119(sp)
    7bb8:	dc001dc4 	addi	r16,sp,119
    7bbc:	a005883a 	mov	r2,r20
    7bc0:	a480010e 	bge	r20,r18,7bc8 <___svfprintf_internal_r+0x378>
    7bc4:	9005883a 	mov	r2,r18
    7bc8:	d8802b15 	stw	r2,172(sp)
    7bcc:	d8003315 	stw	zero,204(sp)
    7bd0:	b0803fcc 	andi	r2,r22,255
    7bd4:	1080201c 	xori	r2,r2,128
    7bd8:	10bfe004 	addi	r2,r2,-128
    7bdc:	10000326 	beq	r2,zero,7bec <___svfprintf_internal_r+0x39c>
    7be0:	da802b17 	ldw	r10,172(sp)
    7be4:	52800044 	addi	r10,r10,1
    7be8:	da802b15 	stw	r10,172(sp)
    7bec:	d8c02a17 	ldw	r3,168(sp)
    7bf0:	18c0008c 	andi	r3,r3,2
    7bf4:	d8c02c15 	stw	r3,176(sp)
    7bf8:	18000326 	beq	r3,zero,7c08 <___svfprintf_internal_r+0x3b8>
    7bfc:	da802b17 	ldw	r10,172(sp)
    7c00:	52800084 	addi	r10,r10,2
    7c04:	da802b15 	stw	r10,172(sp)
    7c08:	d8c02a17 	ldw	r3,168(sp)
    7c0c:	18c0210c 	andi	r3,r3,132
    7c10:	d8c02d15 	stw	r3,180(sp)
    7c14:	18023f1e 	bne	r3,zero,8514 <___svfprintf_internal_r+0xcc4>
    7c18:	da803017 	ldw	r10,192(sp)
    7c1c:	d8c02b17 	ldw	r3,172(sp)
    7c20:	50f9c83a 	sub	fp,r10,r3
    7c24:	07023b0e 	bge	zero,fp,8514 <___svfprintf_internal_r+0xcc4>
    7c28:	02800074 	movhi	r10,1
    7c2c:	52945d84 	addi	r10,r10,20854
    7c30:	02400404 	movi	r9,16
    7c34:	da803615 	stw	r10,216(sp)
    7c38:	d8c02017 	ldw	r3,128(sp)
    7c3c:	d8801f17 	ldw	r2,124(sp)
    7c40:	4f00270e 	bge	r9,fp,7ce0 <___svfprintf_internal_r+0x490>
    7c44:	dc403c15 	stw	r17,240(sp)
    7c48:	dc003d15 	stw	r16,244(sp)
    7c4c:	e023883a 	mov	r17,fp
    7c50:	482d883a 	mov	r22,r9
    7c54:	b839883a 	mov	fp,r23
    7c58:	054001c4 	movi	r21,7
    7c5c:	a02f883a 	mov	r23,r20
    7c60:	dc003117 	ldw	r16,196(sp)
    7c64:	9029883a 	mov	r20,r18
    7c68:	dc802e17 	ldw	r18,184(sp)
    7c6c:	00000306 	br	7c7c <___svfprintf_internal_r+0x42c>
    7c70:	8c7ffc04 	addi	r17,r17,-16
    7c74:	42000204 	addi	r8,r8,8
    7c78:	b440130e 	bge	r22,r17,7cc8 <___svfprintf_internal_r+0x478>
    7c7c:	18c00404 	addi	r3,r3,16
    7c80:	10800044 	addi	r2,r2,1
    7c84:	01000074 	movhi	r4,1
    7c88:	21145d84 	addi	r4,r4,20854
    7c8c:	41000015 	stw	r4,0(r8)
    7c90:	45800115 	stw	r22,4(r8)
    7c94:	d8c02015 	stw	r3,128(sp)
    7c98:	d8801f15 	stw	r2,124(sp)
    7c9c:	a8bff40e 	bge	r21,r2,7c70 <__alt_data_end+0xfe007c70>
    7ca0:	8009883a 	mov	r4,r16
    7ca4:	900b883a 	mov	r5,r18
    7ca8:	d9801e04 	addi	r6,sp,120
    7cac:	000d7440 	call	d744 <__ssprint_r>
    7cb0:	1000d91e 	bne	r2,zero,8018 <___svfprintf_internal_r+0x7c8>
    7cb4:	8c7ffc04 	addi	r17,r17,-16
    7cb8:	d8c02017 	ldw	r3,128(sp)
    7cbc:	d8801f17 	ldw	r2,124(sp)
    7cc0:	da000404 	addi	r8,sp,16
    7cc4:	b47fed16 	blt	r22,r17,7c7c <__alt_data_end+0xfe007c7c>
    7cc8:	a025883a 	mov	r18,r20
    7ccc:	dc003d17 	ldw	r16,244(sp)
    7cd0:	b829883a 	mov	r20,r23
    7cd4:	e02f883a 	mov	r23,fp
    7cd8:	8839883a 	mov	fp,r17
    7cdc:	dc403c17 	ldw	r17,240(sp)
    7ce0:	da803617 	ldw	r10,216(sp)
    7ce4:	e0c7883a 	add	r3,fp,r3
    7ce8:	10800044 	addi	r2,r2,1
    7cec:	42800015 	stw	r10,0(r8)
    7cf0:	47000115 	stw	fp,4(r8)
    7cf4:	d8c02015 	stw	r3,128(sp)
    7cf8:	d8801f15 	stw	r2,124(sp)
    7cfc:	010001c4 	movi	r4,7
    7d00:	20839816 	blt	r4,r2,8b64 <___svfprintf_internal_r+0x1314>
    7d04:	d8802787 	ldb	r2,158(sp)
    7d08:	42000204 	addi	r8,r8,8
    7d0c:	10000c26 	beq	r2,zero,7d40 <___svfprintf_internal_r+0x4f0>
    7d10:	d8801f17 	ldw	r2,124(sp)
    7d14:	d9002784 	addi	r4,sp,158
    7d18:	18c00044 	addi	r3,r3,1
    7d1c:	10800044 	addi	r2,r2,1
    7d20:	41000015 	stw	r4,0(r8)
    7d24:	01000044 	movi	r4,1
    7d28:	41000115 	stw	r4,4(r8)
    7d2c:	d8c02015 	stw	r3,128(sp)
    7d30:	d8801f15 	stw	r2,124(sp)
    7d34:	010001c4 	movi	r4,7
    7d38:	20832016 	blt	r4,r2,89bc <___svfprintf_internal_r+0x116c>
    7d3c:	42000204 	addi	r8,r8,8
    7d40:	da802c17 	ldw	r10,176(sp)
    7d44:	50000c26 	beq	r10,zero,7d78 <___svfprintf_internal_r+0x528>
    7d48:	d8801f17 	ldw	r2,124(sp)
    7d4c:	d9002704 	addi	r4,sp,156
    7d50:	18c00084 	addi	r3,r3,2
    7d54:	10800044 	addi	r2,r2,1
    7d58:	41000015 	stw	r4,0(r8)
    7d5c:	01000084 	movi	r4,2
    7d60:	41000115 	stw	r4,4(r8)
    7d64:	d8c02015 	stw	r3,128(sp)
    7d68:	d8801f15 	stw	r2,124(sp)
    7d6c:	010001c4 	movi	r4,7
    7d70:	20831a16 	blt	r4,r2,89dc <___svfprintf_internal_r+0x118c>
    7d74:	42000204 	addi	r8,r8,8
    7d78:	da802d17 	ldw	r10,180(sp)
    7d7c:	00802004 	movi	r2,128
    7d80:	50826026 	beq	r10,r2,8704 <___svfprintf_internal_r+0xeb4>
    7d84:	9525c83a 	sub	r18,r18,r20
    7d88:	04802c0e 	bge	zero,r18,7e3c <___svfprintf_internal_r+0x5ec>
    7d8c:	05800404 	movi	r22,16
    7d90:	d8801f17 	ldw	r2,124(sp)
    7d94:	05400074 	movhi	r21,1
    7d98:	ad545984 	addi	r21,r21,20838
    7d9c:	b4801e0e 	bge	r22,r18,7e18 <___svfprintf_internal_r+0x5c8>
    7da0:	dc402c15 	stw	r17,176(sp)
    7da4:	dc002d15 	stw	r16,180(sp)
    7da8:	9023883a 	mov	r17,r18
    7dac:	070001c4 	movi	fp,7
    7db0:	dc003117 	ldw	r16,196(sp)
    7db4:	dc802e17 	ldw	r18,184(sp)
    7db8:	00000306 	br	7dc8 <___svfprintf_internal_r+0x578>
    7dbc:	8c7ffc04 	addi	r17,r17,-16
    7dc0:	42000204 	addi	r8,r8,8
    7dc4:	b440110e 	bge	r22,r17,7e0c <___svfprintf_internal_r+0x5bc>
    7dc8:	18c00404 	addi	r3,r3,16
    7dcc:	10800044 	addi	r2,r2,1
    7dd0:	44c00015 	stw	r19,0(r8)
    7dd4:	45800115 	stw	r22,4(r8)
    7dd8:	d8c02015 	stw	r3,128(sp)
    7ddc:	d8801f15 	stw	r2,124(sp)
    7de0:	e0bff60e 	bge	fp,r2,7dbc <__alt_data_end+0xfe007dbc>
    7de4:	8009883a 	mov	r4,r16
    7de8:	900b883a 	mov	r5,r18
    7dec:	d9801e04 	addi	r6,sp,120
    7df0:	000d7440 	call	d744 <__ssprint_r>
    7df4:	1000881e 	bne	r2,zero,8018 <___svfprintf_internal_r+0x7c8>
    7df8:	8c7ffc04 	addi	r17,r17,-16
    7dfc:	d8c02017 	ldw	r3,128(sp)
    7e00:	d8801f17 	ldw	r2,124(sp)
    7e04:	da000404 	addi	r8,sp,16
    7e08:	b47fef16 	blt	r22,r17,7dc8 <__alt_data_end+0xfe007dc8>
    7e0c:	8825883a 	mov	r18,r17
    7e10:	dc002d17 	ldw	r16,180(sp)
    7e14:	dc402c17 	ldw	r17,176(sp)
    7e18:	1c87883a 	add	r3,r3,r18
    7e1c:	10800044 	addi	r2,r2,1
    7e20:	45400015 	stw	r21,0(r8)
    7e24:	44800115 	stw	r18,4(r8)
    7e28:	d8c02015 	stw	r3,128(sp)
    7e2c:	d8801f15 	stw	r2,124(sp)
    7e30:	010001c4 	movi	r4,7
    7e34:	2082d916 	blt	r4,r2,899c <___svfprintf_internal_r+0x114c>
    7e38:	42000204 	addi	r8,r8,8
    7e3c:	da802a17 	ldw	r10,168(sp)
    7e40:	5080400c 	andi	r2,r10,256
    7e44:	1001e41e 	bne	r2,zero,85d8 <___svfprintf_internal_r+0xd88>
    7e48:	d8801f17 	ldw	r2,124(sp)
    7e4c:	1d07883a 	add	r3,r3,r20
    7e50:	44000015 	stw	r16,0(r8)
    7e54:	10800044 	addi	r2,r2,1
    7e58:	45000115 	stw	r20,4(r8)
    7e5c:	d8c02015 	stw	r3,128(sp)
    7e60:	d8801f15 	stw	r2,124(sp)
    7e64:	010001c4 	movi	r4,7
    7e68:	2081bd16 	blt	r4,r2,8560 <___svfprintf_internal_r+0xd10>
    7e6c:	42000204 	addi	r8,r8,8
    7e70:	da802a17 	ldw	r10,168(sp)
    7e74:	5080010c 	andi	r2,r10,4
    7e78:	10003326 	beq	r2,zero,7f48 <___svfprintf_internal_r+0x6f8>
    7e7c:	da803017 	ldw	r10,192(sp)
    7e80:	d8802b17 	ldw	r2,172(sp)
    7e84:	50a1c83a 	sub	r16,r10,r2
    7e88:	04002f0e 	bge	zero,r16,7f48 <___svfprintf_internal_r+0x6f8>
    7e8c:	02800074 	movhi	r10,1
    7e90:	52945d84 	addi	r10,r10,20854
    7e94:	04400404 	movi	r17,16
    7e98:	da803615 	stw	r10,216(sp)
    7e9c:	d8801f17 	ldw	r2,124(sp)
    7ea0:	8c001a0e 	bge	r17,r16,7f0c <___svfprintf_internal_r+0x6bc>
    7ea4:	048001c4 	movi	r18,7
    7ea8:	dd003117 	ldw	r20,196(sp)
    7eac:	dd402e17 	ldw	r21,184(sp)
    7eb0:	00000306 	br	7ec0 <___svfprintf_internal_r+0x670>
    7eb4:	843ffc04 	addi	r16,r16,-16
    7eb8:	42000204 	addi	r8,r8,8
    7ebc:	8c00130e 	bge	r17,r16,7f0c <___svfprintf_internal_r+0x6bc>
    7ec0:	18c00404 	addi	r3,r3,16
    7ec4:	10800044 	addi	r2,r2,1
    7ec8:	01000074 	movhi	r4,1
    7ecc:	21145d84 	addi	r4,r4,20854
    7ed0:	41000015 	stw	r4,0(r8)
    7ed4:	44400115 	stw	r17,4(r8)
    7ed8:	d8c02015 	stw	r3,128(sp)
    7edc:	d8801f15 	stw	r2,124(sp)
    7ee0:	90bff40e 	bge	r18,r2,7eb4 <__alt_data_end+0xfe007eb4>
    7ee4:	a009883a 	mov	r4,r20
    7ee8:	a80b883a 	mov	r5,r21
    7eec:	d9801e04 	addi	r6,sp,120
    7ef0:	000d7440 	call	d744 <__ssprint_r>
    7ef4:	1000481e 	bne	r2,zero,8018 <___svfprintf_internal_r+0x7c8>
    7ef8:	843ffc04 	addi	r16,r16,-16
    7efc:	d8c02017 	ldw	r3,128(sp)
    7f00:	d8801f17 	ldw	r2,124(sp)
    7f04:	da000404 	addi	r8,sp,16
    7f08:	8c3fed16 	blt	r17,r16,7ec0 <__alt_data_end+0xfe007ec0>
    7f0c:	da803617 	ldw	r10,216(sp)
    7f10:	1c07883a 	add	r3,r3,r16
    7f14:	10800044 	addi	r2,r2,1
    7f18:	42800015 	stw	r10,0(r8)
    7f1c:	44000115 	stw	r16,4(r8)
    7f20:	d8c02015 	stw	r3,128(sp)
    7f24:	d8801f15 	stw	r2,124(sp)
    7f28:	010001c4 	movi	r4,7
    7f2c:	2080060e 	bge	r4,r2,7f48 <___svfprintf_internal_r+0x6f8>
    7f30:	d9003117 	ldw	r4,196(sp)
    7f34:	d9402e17 	ldw	r5,184(sp)
    7f38:	d9801e04 	addi	r6,sp,120
    7f3c:	000d7440 	call	d744 <__ssprint_r>
    7f40:	1000351e 	bne	r2,zero,8018 <___svfprintf_internal_r+0x7c8>
    7f44:	d8c02017 	ldw	r3,128(sp)
    7f48:	d8802b17 	ldw	r2,172(sp)
    7f4c:	da803017 	ldw	r10,192(sp)
    7f50:	1280010e 	bge	r2,r10,7f58 <___svfprintf_internal_r+0x708>
    7f54:	5005883a 	mov	r2,r10
    7f58:	da803217 	ldw	r10,200(sp)
    7f5c:	5095883a 	add	r10,r10,r2
    7f60:	da803215 	stw	r10,200(sp)
    7f64:	18026d1e 	bne	r3,zero,891c <___svfprintf_internal_r+0x10cc>
    7f68:	b8800007 	ldb	r2,0(r23)
    7f6c:	d8001f15 	stw	zero,124(sp)
    7f70:	da000404 	addi	r8,sp,16
    7f74:	103e671e 	bne	r2,zero,7914 <__alt_data_end+0xfe007914>
    7f78:	b821883a 	mov	r16,r23
    7f7c:	003e7d06 	br	7974 <__alt_data_end+0xfe007974>
    7f80:	da802a17 	ldw	r10,168(sp)
    7f84:	52800414 	ori	r10,r10,16
    7f88:	da802a15 	stw	r10,168(sp)
    7f8c:	da802a17 	ldw	r10,168(sp)
    7f90:	5080080c 	andi	r2,r10,32
    7f94:	10003326 	beq	r2,zero,8064 <___svfprintf_internal_r+0x814>
    7f98:	da802f17 	ldw	r10,188(sp)
    7f9c:	0007883a 	mov	r3,zero
    7fa0:	55000017 	ldw	r20,0(r10)
    7fa4:	55400117 	ldw	r21,4(r10)
    7fa8:	52800204 	addi	r10,r10,8
    7fac:	da802f15 	stw	r10,188(sp)
    7fb0:	a544b03a 	or	r2,r20,r21
    7fb4:	d8002785 	stb	zero,158(sp)
    7fb8:	002d883a 	mov	r22,zero
    7fbc:	003eef06 	br	7b7c <__alt_data_end+0xfe007b7c>
    7fc0:	da803017 	ldw	r10,192(sp)
    7fc4:	d8802f15 	stw	r2,188(sp)
    7fc8:	0295c83a 	sub	r10,zero,r10
    7fcc:	da803015 	stw	r10,192(sp)
    7fd0:	da802a17 	ldw	r10,168(sp)
    7fd4:	52800114 	ori	r10,r10,4
    7fd8:	da802a15 	stw	r10,168(sp)
    7fdc:	bc400007 	ldb	r17,0(r23)
    7fe0:	003e7106 	br	79a8 <__alt_data_end+0xfe0079a8>
    7fe4:	d9003117 	ldw	r4,196(sp)
    7fe8:	d9402e17 	ldw	r5,184(sp)
    7fec:	d9801e04 	addi	r6,sp,120
    7ff0:	000d7440 	call	d744 <__ssprint_r>
    7ff4:	1000081e 	bne	r2,zero,8018 <___svfprintf_internal_r+0x7c8>
    7ff8:	da000404 	addi	r8,sp,16
    7ffc:	003e5a06 	br	7968 <__alt_data_end+0xfe007968>
    8000:	d8802017 	ldw	r2,128(sp)
    8004:	10000426 	beq	r2,zero,8018 <___svfprintf_internal_r+0x7c8>
    8008:	d9003117 	ldw	r4,196(sp)
    800c:	d9402e17 	ldw	r5,184(sp)
    8010:	d9801e04 	addi	r6,sp,120
    8014:	000d7440 	call	d744 <__ssprint_r>
    8018:	da802e17 	ldw	r10,184(sp)
    801c:	5080030b 	ldhu	r2,12(r10)
    8020:	1080100c 	andi	r2,r2,64
    8024:	10000d26 	beq	r2,zero,805c <___svfprintf_internal_r+0x80c>
    8028:	00bfffc4 	movi	r2,-1
    802c:	dfc04a17 	ldw	ra,296(sp)
    8030:	df004917 	ldw	fp,292(sp)
    8034:	ddc04817 	ldw	r23,288(sp)
    8038:	dd804717 	ldw	r22,284(sp)
    803c:	dd404617 	ldw	r21,280(sp)
    8040:	dd004517 	ldw	r20,276(sp)
    8044:	dcc04417 	ldw	r19,272(sp)
    8048:	dc804317 	ldw	r18,268(sp)
    804c:	dc404217 	ldw	r17,264(sp)
    8050:	dc004117 	ldw	r16,260(sp)
    8054:	dec04b04 	addi	sp,sp,300
    8058:	f800283a 	ret
    805c:	d8803217 	ldw	r2,200(sp)
    8060:	003ff206 	br	802c <__alt_data_end+0xfe00802c>
    8064:	da802a17 	ldw	r10,168(sp)
    8068:	5080040c 	andi	r2,r10,16
    806c:	10038526 	beq	r2,zero,8e84 <___svfprintf_internal_r+0x1634>
    8070:	da802f17 	ldw	r10,188(sp)
    8074:	55000017 	ldw	r20,0(r10)
    8078:	52800104 	addi	r10,r10,4
    807c:	002b883a 	mov	r21,zero
    8080:	da802f15 	stw	r10,188(sp)
    8084:	0007883a 	mov	r3,zero
    8088:	a005883a 	mov	r2,r20
    808c:	003fc906 	br	7fb4 <__alt_data_end+0xfe007fb4>
    8090:	da802f17 	ldw	r10,188(sp)
    8094:	00c00044 	movi	r3,1
    8098:	55000017 	ldw	r20,0(r10)
    809c:	55400117 	ldw	r21,4(r10)
    80a0:	52800204 	addi	r10,r10,8
    80a4:	da802f15 	stw	r10,188(sp)
    80a8:	a544b03a 	or	r2,r20,r21
    80ac:	003fc106 	br	7fb4 <__alt_data_end+0xfe007fb4>
    80b0:	da802f17 	ldw	r10,188(sp)
    80b4:	d9802785 	stb	r6,158(sp)
    80b8:	04000044 	movi	r16,1
    80bc:	52800017 	ldw	r10,0(r10)
    80c0:	da803715 	stw	r10,220(sp)
    80c4:	da802f17 	ldw	r10,188(sp)
    80c8:	d9003717 	ldw	r4,220(sp)
    80cc:	52800117 	ldw	r10,4(r10)
    80d0:	da004015 	stw	r8,256(sp)
    80d4:	da803815 	stw	r10,224(sp)
    80d8:	da802f17 	ldw	r10,188(sp)
    80dc:	d9403817 	ldw	r5,224(sp)
    80e0:	52800204 	addi	r10,r10,8
    80e4:	da802f15 	stw	r10,188(sp)
    80e8:	00052780 	call	5278 <__fpclassifyd>
    80ec:	da004017 	ldw	r8,256(sp)
    80f0:	d9003717 	ldw	r4,220(sp)
    80f4:	d9403817 	ldw	r5,224(sp)
    80f8:	1403421e 	bne	r2,r16,8e04 <___svfprintf_internal_r+0x15b4>
    80fc:	000d883a 	mov	r6,zero
    8100:	000f883a 	mov	r7,zero
    8104:	0010c640 	call	10c64 <__ledf2>
    8108:	da004017 	ldw	r8,256(sp)
    810c:	1004b216 	blt	r2,zero,93d8 <___svfprintf_internal_r+0x1b88>
    8110:	dd802783 	ldbu	r22,158(sp)
    8114:	008011c4 	movi	r2,71
    8118:	14443f0e 	bge	r2,r17,9218 <___svfprintf_internal_r+0x19c8>
    811c:	04000074 	movhi	r16,1
    8120:	84144a04 	addi	r16,r16,20776
    8124:	da802a17 	ldw	r10,168(sp)
    8128:	00bfdfc4 	movi	r2,-129
    812c:	00c000c4 	movi	r3,3
    8130:	5094703a 	and	r10,r10,r2
    8134:	d8c02b15 	stw	r3,172(sp)
    8138:	da802a15 	stw	r10,168(sp)
    813c:	1829883a 	mov	r20,r3
    8140:	0025883a 	mov	r18,zero
    8144:	d8003315 	stw	zero,204(sp)
    8148:	003ea106 	br	7bd0 <__alt_data_end+0xfe007bd0>
    814c:	da802f17 	ldw	r10,188(sp)
    8150:	00800c04 	movi	r2,48
    8154:	d8802705 	stb	r2,156(sp)
    8158:	55000017 	ldw	r20,0(r10)
    815c:	da802a17 	ldw	r10,168(sp)
    8160:	00801e04 	movi	r2,120
    8164:	d8802745 	stb	r2,157(sp)
    8168:	52800094 	ori	r10,r10,2
    816c:	da802a15 	stw	r10,168(sp)
    8170:	da802f17 	ldw	r10,188(sp)
    8174:	002b883a 	mov	r21,zero
    8178:	00c00084 	movi	r3,2
    817c:	52800104 	addi	r10,r10,4
    8180:	da802f15 	stw	r10,188(sp)
    8184:	02800074 	movhi	r10,1
    8188:	52945204 	addi	r10,r10,20808
    818c:	da803b15 	stw	r10,236(sp)
    8190:	04401e04 	movi	r17,120
    8194:	a005883a 	mov	r2,r20
    8198:	003f8606 	br	7fb4 <__alt_data_end+0xfe007fb4>
    819c:	02800074 	movhi	r10,1
    81a0:	52945204 	addi	r10,r10,20808
    81a4:	da803b15 	stw	r10,236(sp)
    81a8:	da802a17 	ldw	r10,168(sp)
    81ac:	d9802785 	stb	r6,158(sp)
    81b0:	5080080c 	andi	r2,r10,32
    81b4:	10002426 	beq	r2,zero,8248 <___svfprintf_internal_r+0x9f8>
    81b8:	da802f17 	ldw	r10,188(sp)
    81bc:	55000017 	ldw	r20,0(r10)
    81c0:	55400117 	ldw	r21,4(r10)
    81c4:	52800204 	addi	r10,r10,8
    81c8:	da802f15 	stw	r10,188(sp)
    81cc:	da802a17 	ldw	r10,168(sp)
    81d0:	5080004c 	andi	r2,r10,1
    81d4:	10029926 	beq	r2,zero,8c3c <___svfprintf_internal_r+0x13ec>
    81d8:	a544b03a 	or	r2,r20,r21
    81dc:	10031e26 	beq	r2,zero,8e58 <___svfprintf_internal_r+0x1608>
    81e0:	00c00c04 	movi	r3,48
    81e4:	52800094 	ori	r10,r10,2
    81e8:	d8c02705 	stb	r3,156(sp)
    81ec:	dc402745 	stb	r17,157(sp)
    81f0:	da802a15 	stw	r10,168(sp)
    81f4:	00c00084 	movi	r3,2
    81f8:	003f6e06 	br	7fb4 <__alt_data_end+0xfe007fb4>
    81fc:	30803fcc 	andi	r2,r6,255
    8200:	1080201c 	xori	r2,r2,128
    8204:	10bfe004 	addi	r2,r2,-128
    8208:	1003111e 	bne	r2,zero,8e50 <___svfprintf_internal_r+0x1600>
    820c:	01800804 	movi	r6,32
    8210:	bc400007 	ldb	r17,0(r23)
    8214:	003de406 	br	79a8 <__alt_data_end+0xfe0079a8>
    8218:	da802a17 	ldw	r10,168(sp)
    821c:	52800054 	ori	r10,r10,1
    8220:	da802a15 	stw	r10,168(sp)
    8224:	bc400007 	ldb	r17,0(r23)
    8228:	003ddf06 	br	79a8 <__alt_data_end+0xfe0079a8>
    822c:	02800074 	movhi	r10,1
    8230:	52944d04 	addi	r10,r10,20788
    8234:	da803b15 	stw	r10,236(sp)
    8238:	da802a17 	ldw	r10,168(sp)
    823c:	d9802785 	stb	r6,158(sp)
    8240:	5080080c 	andi	r2,r10,32
    8244:	103fdc1e 	bne	r2,zero,81b8 <__alt_data_end+0xfe0081b8>
    8248:	da802a17 	ldw	r10,168(sp)
    824c:	5080040c 	andi	r2,r10,16
    8250:	10030326 	beq	r2,zero,8e60 <___svfprintf_internal_r+0x1610>
    8254:	da802f17 	ldw	r10,188(sp)
    8258:	002b883a 	mov	r21,zero
    825c:	55000017 	ldw	r20,0(r10)
    8260:	52800104 	addi	r10,r10,4
    8264:	da802f15 	stw	r10,188(sp)
    8268:	003fd806 	br	81cc <__alt_data_end+0xfe0081cc>
    826c:	da802f17 	ldw	r10,188(sp)
    8270:	00c00044 	movi	r3,1
    8274:	d8c02b15 	stw	r3,172(sp)
    8278:	50800017 	ldw	r2,0(r10)
    827c:	52800104 	addi	r10,r10,4
    8280:	d8002785 	stb	zero,158(sp)
    8284:	d8801405 	stb	r2,80(sp)
    8288:	da802f15 	stw	r10,188(sp)
    828c:	1829883a 	mov	r20,r3
    8290:	0025883a 	mov	r18,zero
    8294:	d8003315 	stw	zero,204(sp)
    8298:	dc001404 	addi	r16,sp,80
    829c:	0005883a 	mov	r2,zero
    82a0:	003e5206 	br	7bec <__alt_data_end+0xfe007bec>
    82a4:	da802a17 	ldw	r10,168(sp)
    82a8:	d9802785 	stb	r6,158(sp)
    82ac:	5080080c 	andi	r2,r10,32
    82b0:	10002426 	beq	r2,zero,8344 <___svfprintf_internal_r+0xaf4>
    82b4:	da802f17 	ldw	r10,188(sp)
    82b8:	50800117 	ldw	r2,4(r10)
    82bc:	55000017 	ldw	r20,0(r10)
    82c0:	52800204 	addi	r10,r10,8
    82c4:	da802f15 	stw	r10,188(sp)
    82c8:	102b883a 	mov	r21,r2
    82cc:	10002716 	blt	r2,zero,836c <___svfprintf_internal_r+0xb1c>
    82d0:	dd802783 	ldbu	r22,158(sp)
    82d4:	00c00044 	movi	r3,1
    82d8:	a544b03a 	or	r2,r20,r21
    82dc:	003e2706 	br	7b7c <__alt_data_end+0xfe007b7c>
    82e0:	da802a17 	ldw	r10,168(sp)
    82e4:	52801014 	ori	r10,r10,64
    82e8:	da802a15 	stw	r10,168(sp)
    82ec:	bc400007 	ldb	r17,0(r23)
    82f0:	003dad06 	br	79a8 <__alt_data_end+0xfe0079a8>
    82f4:	d8003015 	stw	zero,192(sp)
    82f8:	88bff404 	addi	r2,r17,-48
    82fc:	000b883a 	mov	r5,zero
    8300:	bc400007 	ldb	r17,0(r23)
    8304:	294002a4 	muli	r5,r5,10
    8308:	bdc00044 	addi	r23,r23,1
    830c:	b815883a 	mov	r10,r23
    8310:	288b883a 	add	r5,r5,r2
    8314:	88bff404 	addi	r2,r17,-48
    8318:	20bff92e 	bgeu	r4,r2,8300 <__alt_data_end+0xfe008300>
    831c:	d9403015 	stw	r5,192(sp)
    8320:	502f883a 	mov	r23,r10
    8324:	003da106 	br	79ac <__alt_data_end+0xfe0079ac>
    8328:	da802a17 	ldw	r10,168(sp)
    832c:	d9802785 	stb	r6,158(sp)
    8330:	52800414 	ori	r10,r10,16
    8334:	da802a15 	stw	r10,168(sp)
    8338:	da802a17 	ldw	r10,168(sp)
    833c:	5080080c 	andi	r2,r10,32
    8340:	103fdc1e 	bne	r2,zero,82b4 <__alt_data_end+0xfe0082b4>
    8344:	da802a17 	ldw	r10,168(sp)
    8348:	5080040c 	andi	r2,r10,16
    834c:	1002e726 	beq	r2,zero,8eec <___svfprintf_internal_r+0x169c>
    8350:	da802f17 	ldw	r10,188(sp)
    8354:	55000017 	ldw	r20,0(r10)
    8358:	52800104 	addi	r10,r10,4
    835c:	da802f15 	stw	r10,188(sp)
    8360:	a02bd7fa 	srai	r21,r20,31
    8364:	a805883a 	mov	r2,r21
    8368:	103fd90e 	bge	r2,zero,82d0 <__alt_data_end+0xfe0082d0>
    836c:	0529c83a 	sub	r20,zero,r20
    8370:	a004c03a 	cmpne	r2,r20,zero
    8374:	056bc83a 	sub	r21,zero,r21
    8378:	05800b44 	movi	r22,45
    837c:	a8abc83a 	sub	r21,r21,r2
    8380:	dd802785 	stb	r22,158(sp)
    8384:	00c00044 	movi	r3,1
    8388:	a544b03a 	or	r2,r20,r21
    838c:	003dfb06 	br	7b7c <__alt_data_end+0xfe007b7c>
    8390:	da802a17 	ldw	r10,168(sp)
    8394:	52802014 	ori	r10,r10,128
    8398:	da802a15 	stw	r10,168(sp)
    839c:	bc400007 	ldb	r17,0(r23)
    83a0:	003d8106 	br	79a8 <__alt_data_end+0xfe0079a8>
    83a4:	da802f17 	ldw	r10,188(sp)
    83a8:	d8002785 	stb	zero,158(sp)
    83ac:	54000017 	ldw	r16,0(r10)
    83b0:	55400104 	addi	r21,r10,4
    83b4:	8003df26 	beq	r16,zero,9334 <___svfprintf_internal_r+0x1ae4>
    83b8:	8009883a 	mov	r4,r16
    83bc:	9003b916 	blt	r18,zero,92a4 <___svfprintf_internal_r+0x1a54>
    83c0:	000b883a 	mov	r5,zero
    83c4:	900d883a 	mov	r6,r18
    83c8:	da004015 	stw	r8,256(sp)
    83cc:	00046dc0 	call	46dc <memchr>
    83d0:	da004017 	ldw	r8,256(sp)
    83d4:	10041626 	beq	r2,zero,9430 <___svfprintf_internal_r+0x1be0>
    83d8:	1429c83a 	sub	r20,r2,r16
    83dc:	9500010e 	bge	r18,r20,83e4 <___svfprintf_internal_r+0xb94>
    83e0:	9029883a 	mov	r20,r18
    83e4:	a005883a 	mov	r2,r20
    83e8:	a003b316 	blt	r20,zero,92b8 <___svfprintf_internal_r+0x1a68>
    83ec:	dd802783 	ldbu	r22,158(sp)
    83f0:	d8802b15 	stw	r2,172(sp)
    83f4:	dd402f15 	stw	r21,188(sp)
    83f8:	0025883a 	mov	r18,zero
    83fc:	d8003315 	stw	zero,204(sp)
    8400:	003df306 	br	7bd0 <__alt_data_end+0xfe007bd0>
    8404:	da802a17 	ldw	r10,168(sp)
    8408:	52800214 	ori	r10,r10,8
    840c:	da802a15 	stw	r10,168(sp)
    8410:	bc400007 	ldb	r17,0(r23)
    8414:	003d6406 	br	79a8 <__alt_data_end+0xfe0079a8>
    8418:	da802a17 	ldw	r10,168(sp)
    841c:	52800814 	ori	r10,r10,32
    8420:	da802a15 	stw	r10,168(sp)
    8424:	bc400007 	ldb	r17,0(r23)
    8428:	003d5f06 	br	79a8 <__alt_data_end+0xfe0079a8>
    842c:	da802a17 	ldw	r10,168(sp)
    8430:	d9802785 	stb	r6,158(sp)
    8434:	5080080c 	andi	r2,r10,32
    8438:	10029826 	beq	r2,zero,8e9c <___svfprintf_internal_r+0x164c>
    843c:	da802f17 	ldw	r10,188(sp)
    8440:	50800017 	ldw	r2,0(r10)
    8444:	da803217 	ldw	r10,200(sp)
    8448:	5007d7fa 	srai	r3,r10,31
    844c:	da802f17 	ldw	r10,188(sp)
    8450:	10c00115 	stw	r3,4(r2)
    8454:	52800104 	addi	r10,r10,4
    8458:	da802f15 	stw	r10,188(sp)
    845c:	da803217 	ldw	r10,200(sp)
    8460:	12800015 	stw	r10,0(r2)
    8464:	003d2906 	br	790c <__alt_data_end+0xfe00790c>
    8468:	bc400007 	ldb	r17,0(r23)
    846c:	b805883a 	mov	r2,r23
    8470:	89c30226 	beq	r17,r7,907c <___svfprintf_internal_r+0x182c>
    8474:	da802a17 	ldw	r10,168(sp)
    8478:	52800414 	ori	r10,r10,16
    847c:	da802a15 	stw	r10,168(sp)
    8480:	003d4906 	br	79a8 <__alt_data_end+0xfe0079a8>
    8484:	01800ac4 	movi	r6,43
    8488:	bc400007 	ldb	r17,0(r23)
    848c:	003d4606 	br	79a8 <__alt_data_end+0xfe0079a8>
    8490:	da802f17 	ldw	r10,188(sp)
    8494:	52800017 	ldw	r10,0(r10)
    8498:	da803015 	stw	r10,192(sp)
    849c:	da802f17 	ldw	r10,188(sp)
    84a0:	50800104 	addi	r2,r10,4
    84a4:	da803017 	ldw	r10,192(sp)
    84a8:	503ec516 	blt	r10,zero,7fc0 <__alt_data_end+0xfe007fc0>
    84ac:	d8802f15 	stw	r2,188(sp)
    84b0:	bc400007 	ldb	r17,0(r23)
    84b4:	003d3c06 	br	79a8 <__alt_data_end+0xfe0079a8>
    84b8:	bc400007 	ldb	r17,0(r23)
    84bc:	b9400044 	addi	r5,r23,1
    84c0:	8a447d26 	beq	r17,r9,96b8 <___svfprintf_internal_r+0x1e68>
    84c4:	88bff404 	addi	r2,r17,-48
    84c8:	282f883a 	mov	r23,r5
    84cc:	0025883a 	mov	r18,zero
    84d0:	20bd3636 	bltu	r4,r2,79ac <__alt_data_end+0xfe0079ac>
    84d4:	bc400007 	ldb	r17,0(r23)
    84d8:	948002a4 	muli	r18,r18,10
    84dc:	bdc00044 	addi	r23,r23,1
    84e0:	14a5883a 	add	r18,r2,r18
    84e4:	88bff404 	addi	r2,r17,-48
    84e8:	20bffa2e 	bgeu	r4,r2,84d4 <__alt_data_end+0xfe0084d4>
    84ec:	903d2f0e 	bge	r18,zero,79ac <__alt_data_end+0xfe0079ac>
    84f0:	04bfffc4 	movi	r18,-1
    84f4:	003d2d06 	br	79ac <__alt_data_end+0xfe0079ac>
    84f8:	d9802785 	stb	r6,158(sp)
    84fc:	883ec026 	beq	r17,zero,8000 <__alt_data_end+0xfe008000>
    8500:	00c00044 	movi	r3,1
    8504:	d8c02b15 	stw	r3,172(sp)
    8508:	dc401405 	stb	r17,80(sp)
    850c:	d8002785 	stb	zero,158(sp)
    8510:	003f5e06 	br	828c <__alt_data_end+0xfe00828c>
    8514:	d8c02017 	ldw	r3,128(sp)
    8518:	003dfc06 	br	7d0c <__alt_data_end+0xfe007d0c>
    851c:	d9003117 	ldw	r4,196(sp)
    8520:	d9402e17 	ldw	r5,184(sp)
    8524:	d9801e04 	addi	r6,sp,120
    8528:	000d7440 	call	d744 <__ssprint_r>
    852c:	103eba1e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    8530:	d8c02017 	ldw	r3,128(sp)
    8534:	d8801f17 	ldw	r2,124(sp)
    8538:	da000404 	addi	r8,sp,16
    853c:	da803417 	ldw	r10,208(sp)
    8540:	10800044 	addi	r2,r2,1
    8544:	44000015 	stw	r16,0(r8)
    8548:	50c7883a 	add	r3,r10,r3
    854c:	42800115 	stw	r10,4(r8)
    8550:	d8c02015 	stw	r3,128(sp)
    8554:	d8801f15 	stw	r2,124(sp)
    8558:	010001c4 	movi	r4,7
    855c:	20be430e 	bge	r4,r2,7e6c <__alt_data_end+0xfe007e6c>
    8560:	d9003117 	ldw	r4,196(sp)
    8564:	d9402e17 	ldw	r5,184(sp)
    8568:	d9801e04 	addi	r6,sp,120
    856c:	000d7440 	call	d744 <__ssprint_r>
    8570:	103ea91e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    8574:	d8c02017 	ldw	r3,128(sp)
    8578:	da000404 	addi	r8,sp,16
    857c:	003e3c06 	br	7e70 <__alt_data_end+0xfe007e70>
    8580:	18803fcc 	andi	r2,r3,255
    8584:	00c00044 	movi	r3,1
    8588:	10c11f26 	beq	r2,r3,8a08 <___svfprintf_internal_r+0x11b8>
    858c:	00c00084 	movi	r3,2
    8590:	10c0e81e 	bne	r2,r3,8934 <___svfprintf_internal_r+0x10e4>
    8594:	d9403b17 	ldw	r5,236(sp)
    8598:	d8c01dc4 	addi	r3,sp,119
    859c:	a08003cc 	andi	r2,r20,15
    85a0:	a808973a 	slli	r4,r21,28
    85a4:	2885883a 	add	r2,r5,r2
    85a8:	a028d13a 	srli	r20,r20,4
    85ac:	10800003 	ldbu	r2,0(r2)
    85b0:	a82ad13a 	srli	r21,r21,4
    85b4:	2528b03a 	or	r20,r4,r20
    85b8:	18800005 	stb	r2,0(r3)
    85bc:	a544b03a 	or	r2,r20,r21
    85c0:	1821883a 	mov	r16,r3
    85c4:	18ffffc4 	addi	r3,r3,-1
    85c8:	103ff41e 	bne	r2,zero,859c <__alt_data_end+0xfe00859c>
    85cc:	da802817 	ldw	r10,160(sp)
    85d0:	5429c83a 	sub	r20,r10,r16
    85d4:	003d7906 	br	7bbc <__alt_data_end+0xfe007bbc>
    85d8:	00801944 	movi	r2,101
    85dc:	1440820e 	bge	r2,r17,87e8 <___svfprintf_internal_r+0xf98>
    85e0:	d9003717 	ldw	r4,220(sp)
    85e4:	d9403817 	ldw	r5,224(sp)
    85e8:	000d883a 	mov	r6,zero
    85ec:	000f883a 	mov	r7,zero
    85f0:	d8c03f15 	stw	r3,252(sp)
    85f4:	da004015 	stw	r8,256(sp)
    85f8:	0010b080 	call	10b08 <__eqdf2>
    85fc:	d8c03f17 	ldw	r3,252(sp)
    8600:	da004017 	ldw	r8,256(sp)
    8604:	1001201e 	bne	r2,zero,8a88 <___svfprintf_internal_r+0x1238>
    8608:	d8801f17 	ldw	r2,124(sp)
    860c:	01000074 	movhi	r4,1
    8610:	21145904 	addi	r4,r4,20836
    8614:	18c00044 	addi	r3,r3,1
    8618:	10800044 	addi	r2,r2,1
    861c:	41000015 	stw	r4,0(r8)
    8620:	01000044 	movi	r4,1
    8624:	41000115 	stw	r4,4(r8)
    8628:	d8c02015 	stw	r3,128(sp)
    862c:	d8801f15 	stw	r2,124(sp)
    8630:	010001c4 	movi	r4,7
    8634:	20824b16 	blt	r4,r2,8f64 <___svfprintf_internal_r+0x1714>
    8638:	42000204 	addi	r8,r8,8
    863c:	d8802617 	ldw	r2,152(sp)
    8640:	da803417 	ldw	r10,208(sp)
    8644:	12800316 	blt	r2,r10,8654 <___svfprintf_internal_r+0xe04>
    8648:	da802a17 	ldw	r10,168(sp)
    864c:	5080004c 	andi	r2,r10,1
    8650:	103e0726 	beq	r2,zero,7e70 <__alt_data_end+0xfe007e70>
    8654:	da803917 	ldw	r10,228(sp)
    8658:	d8801f17 	ldw	r2,124(sp)
    865c:	010001c4 	movi	r4,7
    8660:	1a87883a 	add	r3,r3,r10
    8664:	da803517 	ldw	r10,212(sp)
    8668:	10800044 	addi	r2,r2,1
    866c:	d8c02015 	stw	r3,128(sp)
    8670:	42800015 	stw	r10,0(r8)
    8674:	da803917 	ldw	r10,228(sp)
    8678:	d8801f15 	stw	r2,124(sp)
    867c:	42800115 	stw	r10,4(r8)
    8680:	2082dd16 	blt	r4,r2,91f8 <___svfprintf_internal_r+0x19a8>
    8684:	42000204 	addi	r8,r8,8
    8688:	da803417 	ldw	r10,208(sp)
    868c:	543fffc4 	addi	r16,r10,-1
    8690:	043df70e 	bge	zero,r16,7e70 <__alt_data_end+0xfe007e70>
    8694:	04400404 	movi	r17,16
    8698:	d8801f17 	ldw	r2,124(sp)
    869c:	05400074 	movhi	r21,1
    86a0:	ad545984 	addi	r21,r21,20838
    86a4:	8c01680e 	bge	r17,r16,8c48 <___svfprintf_internal_r+0x13f8>
    86a8:	048001c4 	movi	r18,7
    86ac:	dd003117 	ldw	r20,196(sp)
    86b0:	dd802e17 	ldw	r22,184(sp)
    86b4:	00000306 	br	86c4 <___svfprintf_internal_r+0xe74>
    86b8:	42000204 	addi	r8,r8,8
    86bc:	843ffc04 	addi	r16,r16,-16
    86c0:	8c01610e 	bge	r17,r16,8c48 <___svfprintf_internal_r+0x13f8>
    86c4:	18c00404 	addi	r3,r3,16
    86c8:	10800044 	addi	r2,r2,1
    86cc:	44c00015 	stw	r19,0(r8)
    86d0:	44400115 	stw	r17,4(r8)
    86d4:	d8c02015 	stw	r3,128(sp)
    86d8:	d8801f15 	stw	r2,124(sp)
    86dc:	90bff60e 	bge	r18,r2,86b8 <__alt_data_end+0xfe0086b8>
    86e0:	a009883a 	mov	r4,r20
    86e4:	b00b883a 	mov	r5,r22
    86e8:	d9801e04 	addi	r6,sp,120
    86ec:	000d7440 	call	d744 <__ssprint_r>
    86f0:	103e491e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    86f4:	d8c02017 	ldw	r3,128(sp)
    86f8:	d8801f17 	ldw	r2,124(sp)
    86fc:	da000404 	addi	r8,sp,16
    8700:	003fee06 	br	86bc <__alt_data_end+0xfe0086bc>
    8704:	da803017 	ldw	r10,192(sp)
    8708:	d8802b17 	ldw	r2,172(sp)
    870c:	50adc83a 	sub	r22,r10,r2
    8710:	05bd9c0e 	bge	zero,r22,7d84 <__alt_data_end+0xfe007d84>
    8714:	07000404 	movi	fp,16
    8718:	d8801f17 	ldw	r2,124(sp)
    871c:	05400074 	movhi	r21,1
    8720:	ad545984 	addi	r21,r21,20838
    8724:	e580260e 	bge	fp,r22,87c0 <___svfprintf_internal_r+0xf70>
    8728:	dc402c15 	stw	r17,176(sp)
    872c:	dc002d15 	stw	r16,180(sp)
    8730:	b023883a 	mov	r17,r22
    8734:	01c001c4 	movi	r7,7
    8738:	a82d883a 	mov	r22,r21
    873c:	dc003117 	ldw	r16,196(sp)
    8740:	a02b883a 	mov	r21,r20
    8744:	9029883a 	mov	r20,r18
    8748:	dc802e17 	ldw	r18,184(sp)
    874c:	00000306 	br	875c <___svfprintf_internal_r+0xf0c>
    8750:	8c7ffc04 	addi	r17,r17,-16
    8754:	42000204 	addi	r8,r8,8
    8758:	e440130e 	bge	fp,r17,87a8 <___svfprintf_internal_r+0xf58>
    875c:	18c00404 	addi	r3,r3,16
    8760:	10800044 	addi	r2,r2,1
    8764:	44c00015 	stw	r19,0(r8)
    8768:	47000115 	stw	fp,4(r8)
    876c:	d8c02015 	stw	r3,128(sp)
    8770:	d8801f15 	stw	r2,124(sp)
    8774:	38bff60e 	bge	r7,r2,8750 <__alt_data_end+0xfe008750>
    8778:	8009883a 	mov	r4,r16
    877c:	900b883a 	mov	r5,r18
    8780:	d9801e04 	addi	r6,sp,120
    8784:	d9c03f15 	stw	r7,252(sp)
    8788:	000d7440 	call	d744 <__ssprint_r>
    878c:	d9c03f17 	ldw	r7,252(sp)
    8790:	103e211e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    8794:	8c7ffc04 	addi	r17,r17,-16
    8798:	d8c02017 	ldw	r3,128(sp)
    879c:	d8801f17 	ldw	r2,124(sp)
    87a0:	da000404 	addi	r8,sp,16
    87a4:	e47fed16 	blt	fp,r17,875c <__alt_data_end+0xfe00875c>
    87a8:	a025883a 	mov	r18,r20
    87ac:	dc002d17 	ldw	r16,180(sp)
    87b0:	a829883a 	mov	r20,r21
    87b4:	b02b883a 	mov	r21,r22
    87b8:	882d883a 	mov	r22,r17
    87bc:	dc402c17 	ldw	r17,176(sp)
    87c0:	1d87883a 	add	r3,r3,r22
    87c4:	10800044 	addi	r2,r2,1
    87c8:	45400015 	stw	r21,0(r8)
    87cc:	45800115 	stw	r22,4(r8)
    87d0:	d8c02015 	stw	r3,128(sp)
    87d4:	d8801f15 	stw	r2,124(sp)
    87d8:	010001c4 	movi	r4,7
    87dc:	20818116 	blt	r4,r2,8de4 <___svfprintf_internal_r+0x1594>
    87e0:	42000204 	addi	r8,r8,8
    87e4:	003d6706 	br	7d84 <__alt_data_end+0xfe007d84>
    87e8:	da803417 	ldw	r10,208(sp)
    87ec:	00800044 	movi	r2,1
    87f0:	1280350e 	bge	r2,r10,88c8 <___svfprintf_internal_r+0x1078>
    87f4:	dc401f17 	ldw	r17,124(sp)
    87f8:	00800044 	movi	r2,1
    87fc:	18c00044 	addi	r3,r3,1
    8800:	8c400044 	addi	r17,r17,1
    8804:	40800115 	stw	r2,4(r8)
    8808:	44000015 	stw	r16,0(r8)
    880c:	d8c02015 	stw	r3,128(sp)
    8810:	dc401f15 	stw	r17,124(sp)
    8814:	008001c4 	movi	r2,7
    8818:	14416016 	blt	r2,r17,8d9c <___svfprintf_internal_r+0x154c>
    881c:	42000204 	addi	r8,r8,8
    8820:	da803917 	ldw	r10,228(sp)
    8824:	8c400044 	addi	r17,r17,1
    8828:	dc401f15 	stw	r17,124(sp)
    882c:	1aa9883a 	add	r20,r3,r10
    8830:	da803517 	ldw	r10,212(sp)
    8834:	dd002015 	stw	r20,128(sp)
    8838:	008001c4 	movi	r2,7
    883c:	42800015 	stw	r10,0(r8)
    8840:	da803917 	ldw	r10,228(sp)
    8844:	42800115 	stw	r10,4(r8)
    8848:	14415d16 	blt	r2,r17,8dc0 <___svfprintf_internal_r+0x1570>
    884c:	44800204 	addi	r18,r8,8
    8850:	d9003717 	ldw	r4,220(sp)
    8854:	d9403817 	ldw	r5,224(sp)
    8858:	000d883a 	mov	r6,zero
    885c:	000f883a 	mov	r7,zero
    8860:	0010b080 	call	10b08 <__eqdf2>
    8864:	da803417 	ldw	r10,208(sp)
    8868:	1000c726 	beq	r2,zero,8b88 <___svfprintf_internal_r+0x1338>
    886c:	50bfffc4 	addi	r2,r10,-1
    8870:	a0a9883a 	add	r20,r20,r2
    8874:	84000044 	addi	r16,r16,1
    8878:	8c400044 	addi	r17,r17,1
    887c:	90800115 	stw	r2,4(r18)
    8880:	94000015 	stw	r16,0(r18)
    8884:	dd002015 	stw	r20,128(sp)
    8888:	dc401f15 	stw	r17,124(sp)
    888c:	008001c4 	movi	r2,7
    8890:	14401916 	blt	r2,r17,88f8 <___svfprintf_internal_r+0x10a8>
    8894:	94800204 	addi	r18,r18,8
    8898:	da803a17 	ldw	r10,232(sp)
    889c:	d88022c4 	addi	r2,sp,139
    88a0:	8c400044 	addi	r17,r17,1
    88a4:	5507883a 	add	r3,r10,r20
    88a8:	90800015 	stw	r2,0(r18)
    88ac:	92800115 	stw	r10,4(r18)
    88b0:	d8c02015 	stw	r3,128(sp)
    88b4:	dc401f15 	stw	r17,124(sp)
    88b8:	008001c4 	movi	r2,7
    88bc:	147f2816 	blt	r2,r17,8560 <__alt_data_end+0xfe008560>
    88c0:	92000204 	addi	r8,r18,8
    88c4:	003d6a06 	br	7e70 <__alt_data_end+0xfe007e70>
    88c8:	da802a17 	ldw	r10,168(sp)
    88cc:	5088703a 	and	r4,r10,r2
    88d0:	203fc81e 	bne	r4,zero,87f4 <__alt_data_end+0xfe0087f4>
    88d4:	dc401f17 	ldw	r17,124(sp)
    88d8:	1d000044 	addi	r20,r3,1
    88dc:	40800115 	stw	r2,4(r8)
    88e0:	8c400044 	addi	r17,r17,1
    88e4:	44000015 	stw	r16,0(r8)
    88e8:	dd002015 	stw	r20,128(sp)
    88ec:	dc401f15 	stw	r17,124(sp)
    88f0:	008001c4 	movi	r2,7
    88f4:	14424b0e 	bge	r2,r17,9224 <___svfprintf_internal_r+0x19d4>
    88f8:	d9003117 	ldw	r4,196(sp)
    88fc:	d9402e17 	ldw	r5,184(sp)
    8900:	d9801e04 	addi	r6,sp,120
    8904:	000d7440 	call	d744 <__ssprint_r>
    8908:	103dc31e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    890c:	dd002017 	ldw	r20,128(sp)
    8910:	dc401f17 	ldw	r17,124(sp)
    8914:	dc800404 	addi	r18,sp,16
    8918:	003fdf06 	br	8898 <__alt_data_end+0xfe008898>
    891c:	d9003117 	ldw	r4,196(sp)
    8920:	d9402e17 	ldw	r5,184(sp)
    8924:	d9801e04 	addi	r6,sp,120
    8928:	000d7440 	call	d744 <__ssprint_r>
    892c:	103d8e26 	beq	r2,zero,7f68 <__alt_data_end+0xfe007f68>
    8930:	003db906 	br	8018 <__alt_data_end+0xfe008018>
    8934:	d8c01dc4 	addi	r3,sp,119
    8938:	a008d0fa 	srli	r4,r20,3
    893c:	a80a977a 	slli	r5,r21,29
    8940:	a82ad0fa 	srli	r21,r21,3
    8944:	a50001cc 	andi	r20,r20,7
    8948:	a0800c04 	addi	r2,r20,48
    894c:	2928b03a 	or	r20,r5,r4
    8950:	18800005 	stb	r2,0(r3)
    8954:	a548b03a 	or	r4,r20,r21
    8958:	1821883a 	mov	r16,r3
    895c:	18ffffc4 	addi	r3,r3,-1
    8960:	203ff51e 	bne	r4,zero,8938 <__alt_data_end+0xfe008938>
    8964:	da802a17 	ldw	r10,168(sp)
    8968:	800b883a 	mov	r5,r16
    896c:	5100004c 	andi	r4,r10,1
    8970:	203f1626 	beq	r4,zero,85cc <__alt_data_end+0xfe0085cc>
    8974:	10803fcc 	andi	r2,r2,255
    8978:	1080201c 	xori	r2,r2,128
    897c:	10bfe004 	addi	r2,r2,-128
    8980:	01000c04 	movi	r4,48
    8984:	113f1126 	beq	r2,r4,85cc <__alt_data_end+0xfe0085cc>
    8988:	da802817 	ldw	r10,160(sp)
    898c:	1821883a 	mov	r16,r3
    8990:	293fffc5 	stb	r4,-1(r5)
    8994:	5429c83a 	sub	r20,r10,r16
    8998:	003c8806 	br	7bbc <__alt_data_end+0xfe007bbc>
    899c:	d9003117 	ldw	r4,196(sp)
    89a0:	d9402e17 	ldw	r5,184(sp)
    89a4:	d9801e04 	addi	r6,sp,120
    89a8:	000d7440 	call	d744 <__ssprint_r>
    89ac:	103d9a1e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    89b0:	d8c02017 	ldw	r3,128(sp)
    89b4:	da000404 	addi	r8,sp,16
    89b8:	003d2006 	br	7e3c <__alt_data_end+0xfe007e3c>
    89bc:	d9003117 	ldw	r4,196(sp)
    89c0:	d9402e17 	ldw	r5,184(sp)
    89c4:	d9801e04 	addi	r6,sp,120
    89c8:	000d7440 	call	d744 <__ssprint_r>
    89cc:	103d921e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    89d0:	d8c02017 	ldw	r3,128(sp)
    89d4:	da000404 	addi	r8,sp,16
    89d8:	003cd906 	br	7d40 <__alt_data_end+0xfe007d40>
    89dc:	d9003117 	ldw	r4,196(sp)
    89e0:	d9402e17 	ldw	r5,184(sp)
    89e4:	d9801e04 	addi	r6,sp,120
    89e8:	000d7440 	call	d744 <__ssprint_r>
    89ec:	103d8a1e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    89f0:	d8c02017 	ldw	r3,128(sp)
    89f4:	da000404 	addi	r8,sp,16
    89f8:	003cdf06 	br	7d78 <__alt_data_end+0xfe007d78>
    89fc:	0029883a 	mov	r20,zero
    8a00:	dc001e04 	addi	r16,sp,120
    8a04:	003c6d06 	br	7bbc <__alt_data_end+0xfe007bbc>
    8a08:	a800021e 	bne	r21,zero,8a14 <___svfprintf_internal_r+0x11c4>
    8a0c:	00800244 	movi	r2,9
    8a10:	1500182e 	bgeu	r2,r20,8a74 <___svfprintf_internal_r+0x1224>
    8a14:	d8801dc4 	addi	r2,sp,119
    8a18:	4039883a 	mov	fp,r8
    8a1c:	a009883a 	mov	r4,r20
    8a20:	a80b883a 	mov	r5,r21
    8a24:	01800284 	movi	r6,10
    8a28:	000f883a 	mov	r7,zero
    8a2c:	1021883a 	mov	r16,r2
    8a30:	000f1140 	call	f114 <__umoddi3>
    8a34:	10800c04 	addi	r2,r2,48
    8a38:	a009883a 	mov	r4,r20
    8a3c:	a80b883a 	mov	r5,r21
    8a40:	80800005 	stb	r2,0(r16)
    8a44:	01800284 	movi	r6,10
    8a48:	000f883a 	mov	r7,zero
    8a4c:	000eb500 	call	eb50 <__udivdi3>
    8a50:	182b883a 	mov	r21,r3
    8a54:	10c6b03a 	or	r3,r2,r3
    8a58:	1029883a 	mov	r20,r2
    8a5c:	80bfffc4 	addi	r2,r16,-1
    8a60:	183fee1e 	bne	r3,zero,8a1c <__alt_data_end+0xfe008a1c>
    8a64:	da802817 	ldw	r10,160(sp)
    8a68:	e011883a 	mov	r8,fp
    8a6c:	5429c83a 	sub	r20,r10,r16
    8a70:	003c5206 	br	7bbc <__alt_data_end+0xfe007bbc>
    8a74:	a5000c04 	addi	r20,r20,48
    8a78:	dd001dc5 	stb	r20,119(sp)
    8a7c:	dc001dc4 	addi	r16,sp,119
    8a80:	dd003e17 	ldw	r20,248(sp)
    8a84:	003c4d06 	br	7bbc <__alt_data_end+0xfe007bbc>
    8a88:	d8802617 	ldw	r2,152(sp)
    8a8c:	00813d0e 	bge	zero,r2,8f84 <___svfprintf_internal_r+0x1734>
    8a90:	da803417 	ldw	r10,208(sp)
    8a94:	82a3883a 	add	r17,r16,r10
    8a98:	da803317 	ldw	r10,204(sp)
    8a9c:	8c25c83a 	sub	r18,r17,r16
    8aa0:	5480010e 	bge	r10,r18,8aa8 <___svfprintf_internal_r+0x1258>
    8aa4:	5025883a 	mov	r18,r10
    8aa8:	04800a0e 	bge	zero,r18,8ad4 <___svfprintf_internal_r+0x1284>
    8aac:	d8801f17 	ldw	r2,124(sp)
    8ab0:	1c87883a 	add	r3,r3,r18
    8ab4:	44000015 	stw	r16,0(r8)
    8ab8:	10800044 	addi	r2,r2,1
    8abc:	44800115 	stw	r18,4(r8)
    8ac0:	d8c02015 	stw	r3,128(sp)
    8ac4:	d8801f15 	stw	r2,124(sp)
    8ac8:	010001c4 	movi	r4,7
    8acc:	2081fe16 	blt	r4,r2,92c8 <___svfprintf_internal_r+0x1a78>
    8ad0:	42000204 	addi	r8,r8,8
    8ad4:	9001fa16 	blt	r18,zero,92c0 <___svfprintf_internal_r+0x1a70>
    8ad8:	da803317 	ldw	r10,204(sp)
    8adc:	54a5c83a 	sub	r18,r10,r18
    8ae0:	0480690e 	bge	zero,r18,8c88 <___svfprintf_internal_r+0x1438>
    8ae4:	05000404 	movi	r20,16
    8ae8:	d8801f17 	ldw	r2,124(sp)
    8aec:	05400074 	movhi	r21,1
    8af0:	ad545984 	addi	r21,r21,20838
    8af4:	a481110e 	bge	r20,r18,8f3c <___svfprintf_internal_r+0x16ec>
    8af8:	9009883a 	mov	r4,r18
    8afc:	dc002c15 	stw	r16,176(sp)
    8b00:	8825883a 	mov	r18,r17
    8b04:	058001c4 	movi	r22,7
    8b08:	df003117 	ldw	fp,196(sp)
    8b0c:	dc002e17 	ldw	r16,184(sp)
    8b10:	2023883a 	mov	r17,r4
    8b14:	00000306 	br	8b24 <___svfprintf_internal_r+0x12d4>
    8b18:	42000204 	addi	r8,r8,8
    8b1c:	8c7ffc04 	addi	r17,r17,-16
    8b20:	a441020e 	bge	r20,r17,8f2c <___svfprintf_internal_r+0x16dc>
    8b24:	18c00404 	addi	r3,r3,16
    8b28:	10800044 	addi	r2,r2,1
    8b2c:	44c00015 	stw	r19,0(r8)
    8b30:	45000115 	stw	r20,4(r8)
    8b34:	d8c02015 	stw	r3,128(sp)
    8b38:	d8801f15 	stw	r2,124(sp)
    8b3c:	b0bff60e 	bge	r22,r2,8b18 <__alt_data_end+0xfe008b18>
    8b40:	e009883a 	mov	r4,fp
    8b44:	800b883a 	mov	r5,r16
    8b48:	d9801e04 	addi	r6,sp,120
    8b4c:	000d7440 	call	d744 <__ssprint_r>
    8b50:	103d311e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    8b54:	d8c02017 	ldw	r3,128(sp)
    8b58:	d8801f17 	ldw	r2,124(sp)
    8b5c:	da000404 	addi	r8,sp,16
    8b60:	003fee06 	br	8b1c <__alt_data_end+0xfe008b1c>
    8b64:	d9003117 	ldw	r4,196(sp)
    8b68:	d9402e17 	ldw	r5,184(sp)
    8b6c:	d9801e04 	addi	r6,sp,120
    8b70:	000d7440 	call	d744 <__ssprint_r>
    8b74:	103d281e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    8b78:	d8c02017 	ldw	r3,128(sp)
    8b7c:	d8802787 	ldb	r2,158(sp)
    8b80:	da000404 	addi	r8,sp,16
    8b84:	003c6106 	br	7d0c <__alt_data_end+0xfe007d0c>
    8b88:	543fffc4 	addi	r16,r10,-1
    8b8c:	043f420e 	bge	zero,r16,8898 <__alt_data_end+0xfe008898>
    8b90:	05800404 	movi	r22,16
    8b94:	05400074 	movhi	r21,1
    8b98:	ad545984 	addi	r21,r21,20838
    8b9c:	b4001e0e 	bge	r22,r16,8c18 <___svfprintf_internal_r+0x13c8>
    8ba0:	a005883a 	mov	r2,r20
    8ba4:	dd402c15 	stw	r21,176(sp)
    8ba8:	070001c4 	movi	fp,7
    8bac:	802b883a 	mov	r21,r16
    8bb0:	dd002e17 	ldw	r20,184(sp)
    8bb4:	dc003117 	ldw	r16,196(sp)
    8bb8:	00000306 	br	8bc8 <___svfprintf_internal_r+0x1378>
    8bbc:	ad7ffc04 	addi	r21,r21,-16
    8bc0:	94800204 	addi	r18,r18,8
    8bc4:	b540110e 	bge	r22,r21,8c0c <___svfprintf_internal_r+0x13bc>
    8bc8:	10800404 	addi	r2,r2,16
    8bcc:	8c400044 	addi	r17,r17,1
    8bd0:	94c00015 	stw	r19,0(r18)
    8bd4:	95800115 	stw	r22,4(r18)
    8bd8:	d8802015 	stw	r2,128(sp)
    8bdc:	dc401f15 	stw	r17,124(sp)
    8be0:	e47ff60e 	bge	fp,r17,8bbc <__alt_data_end+0xfe008bbc>
    8be4:	8009883a 	mov	r4,r16
    8be8:	a00b883a 	mov	r5,r20
    8bec:	d9801e04 	addi	r6,sp,120
    8bf0:	000d7440 	call	d744 <__ssprint_r>
    8bf4:	103d081e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    8bf8:	ad7ffc04 	addi	r21,r21,-16
    8bfc:	d8802017 	ldw	r2,128(sp)
    8c00:	dc401f17 	ldw	r17,124(sp)
    8c04:	dc800404 	addi	r18,sp,16
    8c08:	b57fef16 	blt	r22,r21,8bc8 <__alt_data_end+0xfe008bc8>
    8c0c:	a821883a 	mov	r16,r21
    8c10:	dd402c17 	ldw	r21,176(sp)
    8c14:	1029883a 	mov	r20,r2
    8c18:	a429883a 	add	r20,r20,r16
    8c1c:	8c400044 	addi	r17,r17,1
    8c20:	95400015 	stw	r21,0(r18)
    8c24:	94000115 	stw	r16,4(r18)
    8c28:	dd002015 	stw	r20,128(sp)
    8c2c:	dc401f15 	stw	r17,124(sp)
    8c30:	008001c4 	movi	r2,7
    8c34:	147f170e 	bge	r2,r17,8894 <__alt_data_end+0xfe008894>
    8c38:	003f2f06 	br	88f8 <__alt_data_end+0xfe0088f8>
    8c3c:	00c00084 	movi	r3,2
    8c40:	a544b03a 	or	r2,r20,r21
    8c44:	003cdb06 	br	7fb4 <__alt_data_end+0xfe007fb4>
    8c48:	45400015 	stw	r21,0(r8)
    8c4c:	44000115 	stw	r16,4(r8)
    8c50:	1c07883a 	add	r3,r3,r16
    8c54:	10800044 	addi	r2,r2,1
    8c58:	d8c02015 	stw	r3,128(sp)
    8c5c:	d8801f15 	stw	r2,124(sp)
    8c60:	010001c4 	movi	r4,7
    8c64:	20bc810e 	bge	r4,r2,7e6c <__alt_data_end+0xfe007e6c>
    8c68:	003e3d06 	br	8560 <__alt_data_end+0xfe008560>
    8c6c:	d9003117 	ldw	r4,196(sp)
    8c70:	d9402e17 	ldw	r5,184(sp)
    8c74:	d9801e04 	addi	r6,sp,120
    8c78:	000d7440 	call	d744 <__ssprint_r>
    8c7c:	103ce61e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    8c80:	d8c02017 	ldw	r3,128(sp)
    8c84:	da000404 	addi	r8,sp,16
    8c88:	da803317 	ldw	r10,204(sp)
    8c8c:	d8802617 	ldw	r2,152(sp)
    8c90:	82a1883a 	add	r16,r16,r10
    8c94:	da803417 	ldw	r10,208(sp)
    8c98:	12800316 	blt	r2,r10,8ca8 <___svfprintf_internal_r+0x1458>
    8c9c:	da802a17 	ldw	r10,168(sp)
    8ca0:	5100004c 	andi	r4,r10,1
    8ca4:	20000d26 	beq	r4,zero,8cdc <___svfprintf_internal_r+0x148c>
    8ca8:	da803917 	ldw	r10,228(sp)
    8cac:	d9001f17 	ldw	r4,124(sp)
    8cb0:	014001c4 	movi	r5,7
    8cb4:	1a87883a 	add	r3,r3,r10
    8cb8:	da803517 	ldw	r10,212(sp)
    8cbc:	21000044 	addi	r4,r4,1
    8cc0:	d8c02015 	stw	r3,128(sp)
    8cc4:	42800015 	stw	r10,0(r8)
    8cc8:	da803917 	ldw	r10,228(sp)
    8ccc:	d9001f15 	stw	r4,124(sp)
    8cd0:	42800115 	stw	r10,4(r8)
    8cd4:	29018e16 	blt	r5,r4,9310 <___svfprintf_internal_r+0x1ac0>
    8cd8:	42000204 	addi	r8,r8,8
    8cdc:	da803417 	ldw	r10,208(sp)
    8ce0:	8c23c83a 	sub	r17,r17,r16
    8ce4:	5085c83a 	sub	r2,r10,r2
    8ce8:	1025883a 	mov	r18,r2
    8cec:	8880010e 	bge	r17,r2,8cf4 <___svfprintf_internal_r+0x14a4>
    8cf0:	8825883a 	mov	r18,r17
    8cf4:	04800a0e 	bge	zero,r18,8d20 <___svfprintf_internal_r+0x14d0>
    8cf8:	d9001f17 	ldw	r4,124(sp)
    8cfc:	1c87883a 	add	r3,r3,r18
    8d00:	44000015 	stw	r16,0(r8)
    8d04:	21000044 	addi	r4,r4,1
    8d08:	44800115 	stw	r18,4(r8)
    8d0c:	d8c02015 	stw	r3,128(sp)
    8d10:	d9001f15 	stw	r4,124(sp)
    8d14:	014001c4 	movi	r5,7
    8d18:	29019416 	blt	r5,r4,936c <___svfprintf_internal_r+0x1b1c>
    8d1c:	42000204 	addi	r8,r8,8
    8d20:	90019d16 	blt	r18,zero,9398 <___svfprintf_internal_r+0x1b48>
    8d24:	14a1c83a 	sub	r16,r2,r18
    8d28:	043c510e 	bge	zero,r16,7e70 <__alt_data_end+0xfe007e70>
    8d2c:	04400404 	movi	r17,16
    8d30:	d8801f17 	ldw	r2,124(sp)
    8d34:	05400074 	movhi	r21,1
    8d38:	ad545984 	addi	r21,r21,20838
    8d3c:	8c3fc20e 	bge	r17,r16,8c48 <__alt_data_end+0xfe008c48>
    8d40:	048001c4 	movi	r18,7
    8d44:	dd003117 	ldw	r20,196(sp)
    8d48:	dd802e17 	ldw	r22,184(sp)
    8d4c:	00000306 	br	8d5c <___svfprintf_internal_r+0x150c>
    8d50:	42000204 	addi	r8,r8,8
    8d54:	843ffc04 	addi	r16,r16,-16
    8d58:	8c3fbb0e 	bge	r17,r16,8c48 <__alt_data_end+0xfe008c48>
    8d5c:	18c00404 	addi	r3,r3,16
    8d60:	10800044 	addi	r2,r2,1
    8d64:	44c00015 	stw	r19,0(r8)
    8d68:	44400115 	stw	r17,4(r8)
    8d6c:	d8c02015 	stw	r3,128(sp)
    8d70:	d8801f15 	stw	r2,124(sp)
    8d74:	90bff60e 	bge	r18,r2,8d50 <__alt_data_end+0xfe008d50>
    8d78:	a009883a 	mov	r4,r20
    8d7c:	b00b883a 	mov	r5,r22
    8d80:	d9801e04 	addi	r6,sp,120
    8d84:	000d7440 	call	d744 <__ssprint_r>
    8d88:	103ca31e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    8d8c:	d8c02017 	ldw	r3,128(sp)
    8d90:	d8801f17 	ldw	r2,124(sp)
    8d94:	da000404 	addi	r8,sp,16
    8d98:	003fee06 	br	8d54 <__alt_data_end+0xfe008d54>
    8d9c:	d9003117 	ldw	r4,196(sp)
    8da0:	d9402e17 	ldw	r5,184(sp)
    8da4:	d9801e04 	addi	r6,sp,120
    8da8:	000d7440 	call	d744 <__ssprint_r>
    8dac:	103c9a1e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    8db0:	d8c02017 	ldw	r3,128(sp)
    8db4:	dc401f17 	ldw	r17,124(sp)
    8db8:	da000404 	addi	r8,sp,16
    8dbc:	003e9806 	br	8820 <__alt_data_end+0xfe008820>
    8dc0:	d9003117 	ldw	r4,196(sp)
    8dc4:	d9402e17 	ldw	r5,184(sp)
    8dc8:	d9801e04 	addi	r6,sp,120
    8dcc:	000d7440 	call	d744 <__ssprint_r>
    8dd0:	103c911e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    8dd4:	dd002017 	ldw	r20,128(sp)
    8dd8:	dc401f17 	ldw	r17,124(sp)
    8ddc:	dc800404 	addi	r18,sp,16
    8de0:	003e9b06 	br	8850 <__alt_data_end+0xfe008850>
    8de4:	d9003117 	ldw	r4,196(sp)
    8de8:	d9402e17 	ldw	r5,184(sp)
    8dec:	d9801e04 	addi	r6,sp,120
    8df0:	000d7440 	call	d744 <__ssprint_r>
    8df4:	103c881e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    8df8:	d8c02017 	ldw	r3,128(sp)
    8dfc:	da000404 	addi	r8,sp,16
    8e00:	003be006 	br	7d84 <__alt_data_end+0xfe007d84>
    8e04:	da004015 	stw	r8,256(sp)
    8e08:	00052780 	call	5278 <__fpclassifyd>
    8e0c:	da004017 	ldw	r8,256(sp)
    8e10:	1000a01e 	bne	r2,zero,9094 <___svfprintf_internal_r+0x1844>
    8e14:	008011c4 	movi	r2,71
    8e18:	14410f16 	blt	r2,r17,9258 <___svfprintf_internal_r+0x1a08>
    8e1c:	04000074 	movhi	r16,1
    8e20:	84144b04 	addi	r16,r16,20780
    8e24:	da802a17 	ldw	r10,168(sp)
    8e28:	00bfdfc4 	movi	r2,-129
    8e2c:	00c000c4 	movi	r3,3
    8e30:	5094703a 	and	r10,r10,r2
    8e34:	d8c02b15 	stw	r3,172(sp)
    8e38:	da802a15 	stw	r10,168(sp)
    8e3c:	dd802783 	ldbu	r22,158(sp)
    8e40:	1829883a 	mov	r20,r3
    8e44:	0025883a 	mov	r18,zero
    8e48:	d8003315 	stw	zero,204(sp)
    8e4c:	003b6006 	br	7bd0 <__alt_data_end+0xfe007bd0>
    8e50:	bc400007 	ldb	r17,0(r23)
    8e54:	003ad406 	br	79a8 <__alt_data_end+0xfe0079a8>
    8e58:	00c00084 	movi	r3,2
    8e5c:	003c5506 	br	7fb4 <__alt_data_end+0xfe007fb4>
    8e60:	da802a17 	ldw	r10,168(sp)
    8e64:	5080100c 	andi	r2,r10,64
    8e68:	da802f17 	ldw	r10,188(sp)
    8e6c:	10010826 	beq	r2,zero,9290 <___svfprintf_internal_r+0x1a40>
    8e70:	5500000b 	ldhu	r20,0(r10)
    8e74:	52800104 	addi	r10,r10,4
    8e78:	002b883a 	mov	r21,zero
    8e7c:	da802f15 	stw	r10,188(sp)
    8e80:	003cd206 	br	81cc <__alt_data_end+0xfe0081cc>
    8e84:	da802a17 	ldw	r10,168(sp)
    8e88:	5080100c 	andi	r2,r10,64
    8e8c:	da802f17 	ldw	r10,188(sp)
    8e90:	103c7826 	beq	r2,zero,8074 <__alt_data_end+0xfe008074>
    8e94:	5500000b 	ldhu	r20,0(r10)
    8e98:	003c7706 	br	8078 <__alt_data_end+0xfe008078>
    8e9c:	da802a17 	ldw	r10,168(sp)
    8ea0:	5080040c 	andi	r2,r10,16
    8ea4:	10000a1e 	bne	r2,zero,8ed0 <___svfprintf_internal_r+0x1680>
    8ea8:	da802a17 	ldw	r10,168(sp)
    8eac:	5080100c 	andi	r2,r10,64
    8eb0:	10000726 	beq	r2,zero,8ed0 <___svfprintf_internal_r+0x1680>
    8eb4:	da802f17 	ldw	r10,188(sp)
    8eb8:	50800017 	ldw	r2,0(r10)
    8ebc:	52800104 	addi	r10,r10,4
    8ec0:	da802f15 	stw	r10,188(sp)
    8ec4:	da803217 	ldw	r10,200(sp)
    8ec8:	1280000d 	sth	r10,0(r2)
    8ecc:	003a8f06 	br	790c <__alt_data_end+0xfe00790c>
    8ed0:	da802f17 	ldw	r10,188(sp)
    8ed4:	50800017 	ldw	r2,0(r10)
    8ed8:	52800104 	addi	r10,r10,4
    8edc:	da802f15 	stw	r10,188(sp)
    8ee0:	da803217 	ldw	r10,200(sp)
    8ee4:	12800015 	stw	r10,0(r2)
    8ee8:	003a8806 	br	790c <__alt_data_end+0xfe00790c>
    8eec:	da802a17 	ldw	r10,168(sp)
    8ef0:	5080100c 	andi	r2,r10,64
    8ef4:	da802f17 	ldw	r10,188(sp)
    8ef8:	103d1626 	beq	r2,zero,8354 <__alt_data_end+0xfe008354>
    8efc:	5500000f 	ldh	r20,0(r10)
    8f00:	52800104 	addi	r10,r10,4
    8f04:	da802f15 	stw	r10,188(sp)
    8f08:	a02bd7fa 	srai	r21,r20,31
    8f0c:	a805883a 	mov	r2,r21
    8f10:	003cee06 	br	82cc <__alt_data_end+0xfe0082cc>
    8f14:	da802a17 	ldw	r10,168(sp)
    8f18:	5080100c 	andi	r2,r10,64
    8f1c:	da802f17 	ldw	r10,188(sp)
    8f20:	103b0e26 	beq	r2,zero,7b5c <__alt_data_end+0xfe007b5c>
    8f24:	5500000b 	ldhu	r20,0(r10)
    8f28:	003b0d06 	br	7b60 <__alt_data_end+0xfe007b60>
    8f2c:	dc002c17 	ldw	r16,176(sp)
    8f30:	8809883a 	mov	r4,r17
    8f34:	9023883a 	mov	r17,r18
    8f38:	2025883a 	mov	r18,r4
    8f3c:	1c87883a 	add	r3,r3,r18
    8f40:	10800044 	addi	r2,r2,1
    8f44:	45400015 	stw	r21,0(r8)
    8f48:	44800115 	stw	r18,4(r8)
    8f4c:	d8c02015 	stw	r3,128(sp)
    8f50:	d8801f15 	stw	r2,124(sp)
    8f54:	010001c4 	movi	r4,7
    8f58:	20bf4416 	blt	r4,r2,8c6c <__alt_data_end+0xfe008c6c>
    8f5c:	42000204 	addi	r8,r8,8
    8f60:	003f4906 	br	8c88 <__alt_data_end+0xfe008c88>
    8f64:	d9003117 	ldw	r4,196(sp)
    8f68:	d9402e17 	ldw	r5,184(sp)
    8f6c:	d9801e04 	addi	r6,sp,120
    8f70:	000d7440 	call	d744 <__ssprint_r>
    8f74:	103c281e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    8f78:	d8c02017 	ldw	r3,128(sp)
    8f7c:	da000404 	addi	r8,sp,16
    8f80:	003dae06 	br	863c <__alt_data_end+0xfe00863c>
    8f84:	d9001f17 	ldw	r4,124(sp)
    8f88:	01400074 	movhi	r5,1
    8f8c:	29545904 	addi	r5,r5,20836
    8f90:	18c00044 	addi	r3,r3,1
    8f94:	21000044 	addi	r4,r4,1
    8f98:	41400015 	stw	r5,0(r8)
    8f9c:	01400044 	movi	r5,1
    8fa0:	41400115 	stw	r5,4(r8)
    8fa4:	d8c02015 	stw	r3,128(sp)
    8fa8:	d9001f15 	stw	r4,124(sp)
    8fac:	014001c4 	movi	r5,7
    8fb0:	2900ac16 	blt	r5,r4,9264 <___svfprintf_internal_r+0x1a14>
    8fb4:	42000204 	addi	r8,r8,8
    8fb8:	1023883a 	mov	r17,r2
    8fbc:	8800051e 	bne	r17,zero,8fd4 <___svfprintf_internal_r+0x1784>
    8fc0:	da803417 	ldw	r10,208(sp)
    8fc4:	5000031e 	bne	r10,zero,8fd4 <___svfprintf_internal_r+0x1784>
    8fc8:	da802a17 	ldw	r10,168(sp)
    8fcc:	5080004c 	andi	r2,r10,1
    8fd0:	103ba726 	beq	r2,zero,7e70 <__alt_data_end+0xfe007e70>
    8fd4:	da803917 	ldw	r10,228(sp)
    8fd8:	d8801f17 	ldw	r2,124(sp)
    8fdc:	010001c4 	movi	r4,7
    8fe0:	1a87883a 	add	r3,r3,r10
    8fe4:	da803517 	ldw	r10,212(sp)
    8fe8:	10800044 	addi	r2,r2,1
    8fec:	d8c02015 	stw	r3,128(sp)
    8ff0:	42800015 	stw	r10,0(r8)
    8ff4:	da803917 	ldw	r10,228(sp)
    8ff8:	d8801f15 	stw	r2,124(sp)
    8ffc:	42800115 	stw	r10,4(r8)
    9000:	20814616 	blt	r4,r2,951c <___svfprintf_internal_r+0x1ccc>
    9004:	42000204 	addi	r8,r8,8
    9008:	0463c83a 	sub	r17,zero,r17
    900c:	047d4b0e 	bge	zero,r17,853c <__alt_data_end+0xfe00853c>
    9010:	04800404 	movi	r18,16
    9014:	05400074 	movhi	r21,1
    9018:	ad545984 	addi	r21,r21,20838
    901c:	9440b20e 	bge	r18,r17,92e8 <___svfprintf_internal_r+0x1a98>
    9020:	050001c4 	movi	r20,7
    9024:	dd803117 	ldw	r22,196(sp)
    9028:	df002e17 	ldw	fp,184(sp)
    902c:	00000306 	br	903c <___svfprintf_internal_r+0x17ec>
    9030:	42000204 	addi	r8,r8,8
    9034:	8c7ffc04 	addi	r17,r17,-16
    9038:	9440ab0e 	bge	r18,r17,92e8 <___svfprintf_internal_r+0x1a98>
    903c:	18c00404 	addi	r3,r3,16
    9040:	10800044 	addi	r2,r2,1
    9044:	44c00015 	stw	r19,0(r8)
    9048:	44800115 	stw	r18,4(r8)
    904c:	d8c02015 	stw	r3,128(sp)
    9050:	d8801f15 	stw	r2,124(sp)
    9054:	a0bff60e 	bge	r20,r2,9030 <__alt_data_end+0xfe009030>
    9058:	b009883a 	mov	r4,r22
    905c:	e00b883a 	mov	r5,fp
    9060:	d9801e04 	addi	r6,sp,120
    9064:	000d7440 	call	d744 <__ssprint_r>
    9068:	103beb1e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    906c:	d8c02017 	ldw	r3,128(sp)
    9070:	d8801f17 	ldw	r2,124(sp)
    9074:	da000404 	addi	r8,sp,16
    9078:	003fee06 	br	9034 <__alt_data_end+0xfe009034>
    907c:	da802a17 	ldw	r10,168(sp)
    9080:	bdc00044 	addi	r23,r23,1
    9084:	14400047 	ldb	r17,1(r2)
    9088:	52800814 	ori	r10,r10,32
    908c:	da802a15 	stw	r10,168(sp)
    9090:	003a4506 	br	79a8 <__alt_data_end+0xfe0079a8>
    9094:	057ff7c4 	movi	r21,-33
    9098:	00bfffc4 	movi	r2,-1
    909c:	8d6a703a 	and	r21,r17,r21
    90a0:	90807926 	beq	r18,r2,9288 <___svfprintf_internal_r+0x1a38>
    90a4:	008011c4 	movi	r2,71
    90a8:	a8812626 	beq	r21,r2,9544 <___svfprintf_internal_r+0x1cf4>
    90ac:	d8c02a17 	ldw	r3,168(sp)
    90b0:	da803817 	ldw	r10,224(sp)
    90b4:	18c04014 	ori	r3,r3,256
    90b8:	d8c02c15 	stw	r3,176(sp)
    90bc:	50012416 	blt	r10,zero,9550 <___svfprintf_internal_r+0x1d00>
    90c0:	dd003817 	ldw	r20,224(sp)
    90c4:	d8002b05 	stb	zero,172(sp)
    90c8:	00801984 	movi	r2,102
    90cc:	8880c726 	beq	r17,r2,93ec <___svfprintf_internal_r+0x1b9c>
    90d0:	00801184 	movi	r2,70
    90d4:	8880c526 	beq	r17,r2,93ec <___svfprintf_internal_r+0x1b9c>
    90d8:	00801144 	movi	r2,69
    90dc:	a8812026 	beq	r21,r2,9560 <___svfprintf_internal_r+0x1d10>
    90e0:	902d883a 	mov	r22,r18
    90e4:	d8802604 	addi	r2,sp,152
    90e8:	d8800115 	stw	r2,4(sp)
    90ec:	d9003117 	ldw	r4,196(sp)
    90f0:	d8802504 	addi	r2,sp,148
    90f4:	d9403717 	ldw	r5,220(sp)
    90f8:	d8800215 	stw	r2,8(sp)
    90fc:	d8802104 	addi	r2,sp,132
    9100:	dd800015 	stw	r22,0(sp)
    9104:	d8800315 	stw	r2,12(sp)
    9108:	a00d883a 	mov	r6,r20
    910c:	01c00084 	movi	r7,2
    9110:	da004015 	stw	r8,256(sp)
    9114:	0009dec0 	call	9dec <_dtoa_r>
    9118:	1021883a 	mov	r16,r2
    911c:	008019c4 	movi	r2,103
    9120:	da004017 	ldw	r8,256(sp)
    9124:	88800226 	beq	r17,r2,9130 <___svfprintf_internal_r+0x18e0>
    9128:	008011c4 	movi	r2,71
    912c:	8880031e 	bne	r17,r2,913c <___svfprintf_internal_r+0x18ec>
    9130:	da802a17 	ldw	r10,168(sp)
    9134:	5080004c 	andi	r2,r10,1
    9138:	10014626 	beq	r2,zero,9654 <___svfprintf_internal_r+0x1e04>
    913c:	00801184 	movi	r2,70
    9140:	85b9883a 	add	fp,r16,r22
    9144:	a880e226 	beq	r21,r2,94d0 <___svfprintf_internal_r+0x1c80>
    9148:	d9003717 	ldw	r4,220(sp)
    914c:	a00b883a 	mov	r5,r20
    9150:	000d883a 	mov	r6,zero
    9154:	000f883a 	mov	r7,zero
    9158:	da004015 	stw	r8,256(sp)
    915c:	0010b080 	call	10b08 <__eqdf2>
    9160:	da004017 	ldw	r8,256(sp)
    9164:	10009f26 	beq	r2,zero,93e4 <___svfprintf_internal_r+0x1b94>
    9168:	d8802117 	ldw	r2,132(sp)
    916c:	1700062e 	bgeu	r2,fp,9188 <___svfprintf_internal_r+0x1938>
    9170:	01000c04 	movi	r4,48
    9174:	10c00044 	addi	r3,r2,1
    9178:	d8c02115 	stw	r3,132(sp)
    917c:	11000005 	stb	r4,0(r2)
    9180:	d8802117 	ldw	r2,132(sp)
    9184:	173ffb36 	bltu	r2,fp,9174 <__alt_data_end+0xfe009174>
    9188:	1405c83a 	sub	r2,r2,r16
    918c:	d8803415 	stw	r2,208(sp)
    9190:	008011c4 	movi	r2,71
    9194:	a8808226 	beq	r21,r2,93a0 <___svfprintf_internal_r+0x1b50>
    9198:	00801944 	movi	r2,101
    919c:	14415a0e 	bge	r2,r17,9708 <___svfprintf_internal_r+0x1eb8>
    91a0:	00801984 	movi	r2,102
    91a4:	88810026 	beq	r17,r2,95a8 <___svfprintf_internal_r+0x1d58>
    91a8:	d8c02617 	ldw	r3,152(sp)
    91ac:	d8c03315 	stw	r3,204(sp)
    91b0:	d8c03317 	ldw	r3,204(sp)
    91b4:	da803417 	ldw	r10,208(sp)
    91b8:	1a80eb16 	blt	r3,r10,9568 <___svfprintf_internal_r+0x1d18>
    91bc:	da802a17 	ldw	r10,168(sp)
    91c0:	5080004c 	andi	r2,r10,1
    91c4:	1000f11e 	bne	r2,zero,958c <___svfprintf_internal_r+0x1d3c>
    91c8:	1805883a 	mov	r2,r3
    91cc:	18014916 	blt	r3,zero,96f4 <___svfprintf_internal_r+0x1ea4>
    91d0:	dd003317 	ldw	r20,204(sp)
    91d4:	044019c4 	movi	r17,103
    91d8:	dd802b07 	ldb	r22,172(sp)
    91dc:	b000761e 	bne	r22,zero,93b8 <___svfprintf_internal_r+0x1b68>
    91e0:	d8c02c17 	ldw	r3,176(sp)
    91e4:	dd802783 	ldbu	r22,158(sp)
    91e8:	d8802b15 	stw	r2,172(sp)
    91ec:	d8c02a15 	stw	r3,168(sp)
    91f0:	0025883a 	mov	r18,zero
    91f4:	003a7606 	br	7bd0 <__alt_data_end+0xfe007bd0>
    91f8:	d9003117 	ldw	r4,196(sp)
    91fc:	d9402e17 	ldw	r5,184(sp)
    9200:	d9801e04 	addi	r6,sp,120
    9204:	000d7440 	call	d744 <__ssprint_r>
    9208:	103b831e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    920c:	d8c02017 	ldw	r3,128(sp)
    9210:	da000404 	addi	r8,sp,16
    9214:	003d1c06 	br	8688 <__alt_data_end+0xfe008688>
    9218:	04000074 	movhi	r16,1
    921c:	84144904 	addi	r16,r16,20772
    9220:	003bc006 	br	8124 <__alt_data_end+0xfe008124>
    9224:	44800204 	addi	r18,r8,8
    9228:	003d9b06 	br	8898 <__alt_data_end+0xfe008898>
    922c:	d9003117 	ldw	r4,196(sp)
    9230:	04001004 	movi	r16,64
    9234:	800b883a 	mov	r5,r16
    9238:	0003cdc0 	call	3cdc <_malloc_r>
    923c:	da802e17 	ldw	r10,184(sp)
    9240:	50800015 	stw	r2,0(r10)
    9244:	50800415 	stw	r2,16(r10)
    9248:	10013326 	beq	r2,zero,9718 <___svfprintf_internal_r+0x1ec8>
    924c:	da802e17 	ldw	r10,184(sp)
    9250:	54000515 	stw	r16,20(r10)
    9254:	00399906 	br	78bc <__alt_data_end+0xfe0078bc>
    9258:	04000074 	movhi	r16,1
    925c:	84144c04 	addi	r16,r16,20784
    9260:	003ef006 	br	8e24 <__alt_data_end+0xfe008e24>
    9264:	d9003117 	ldw	r4,196(sp)
    9268:	d9402e17 	ldw	r5,184(sp)
    926c:	d9801e04 	addi	r6,sp,120
    9270:	000d7440 	call	d744 <__ssprint_r>
    9274:	103b681e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    9278:	dc402617 	ldw	r17,152(sp)
    927c:	d8c02017 	ldw	r3,128(sp)
    9280:	da000404 	addi	r8,sp,16
    9284:	003f4d06 	br	8fbc <__alt_data_end+0xfe008fbc>
    9288:	04800184 	movi	r18,6
    928c:	003f8706 	br	90ac <__alt_data_end+0xfe0090ac>
    9290:	55000017 	ldw	r20,0(r10)
    9294:	52800104 	addi	r10,r10,4
    9298:	002b883a 	mov	r21,zero
    929c:	da802f15 	stw	r10,188(sp)
    92a0:	003bca06 	br	81cc <__alt_data_end+0xfe0081cc>
    92a4:	da004015 	stw	r8,256(sp)
    92a8:	00012640 	call	1264 <strlen>
    92ac:	1029883a 	mov	r20,r2
    92b0:	da004017 	ldw	r8,256(sp)
    92b4:	a03c4d0e 	bge	r20,zero,83ec <__alt_data_end+0xfe0083ec>
    92b8:	0005883a 	mov	r2,zero
    92bc:	003c4b06 	br	83ec <__alt_data_end+0xfe0083ec>
    92c0:	0025883a 	mov	r18,zero
    92c4:	003e0406 	br	8ad8 <__alt_data_end+0xfe008ad8>
    92c8:	d9003117 	ldw	r4,196(sp)
    92cc:	d9402e17 	ldw	r5,184(sp)
    92d0:	d9801e04 	addi	r6,sp,120
    92d4:	000d7440 	call	d744 <__ssprint_r>
    92d8:	103b4f1e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    92dc:	d8c02017 	ldw	r3,128(sp)
    92e0:	da000404 	addi	r8,sp,16
    92e4:	003dfb06 	br	8ad4 <__alt_data_end+0xfe008ad4>
    92e8:	1c47883a 	add	r3,r3,r17
    92ec:	10800044 	addi	r2,r2,1
    92f0:	45400015 	stw	r21,0(r8)
    92f4:	44400115 	stw	r17,4(r8)
    92f8:	d8c02015 	stw	r3,128(sp)
    92fc:	d8801f15 	stw	r2,124(sp)
    9300:	010001c4 	movi	r4,7
    9304:	20bc8516 	blt	r4,r2,851c <__alt_data_end+0xfe00851c>
    9308:	42000204 	addi	r8,r8,8
    930c:	003c8b06 	br	853c <__alt_data_end+0xfe00853c>
    9310:	d9003117 	ldw	r4,196(sp)
    9314:	d9402e17 	ldw	r5,184(sp)
    9318:	d9801e04 	addi	r6,sp,120
    931c:	000d7440 	call	d744 <__ssprint_r>
    9320:	103b3d1e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    9324:	d8802617 	ldw	r2,152(sp)
    9328:	d8c02017 	ldw	r3,128(sp)
    932c:	da000404 	addi	r8,sp,16
    9330:	003e6a06 	br	8cdc <__alt_data_end+0xfe008cdc>
    9334:	00800184 	movi	r2,6
    9338:	1480012e 	bgeu	r2,r18,9340 <___svfprintf_internal_r+0x1af0>
    933c:	1025883a 	mov	r18,r2
    9340:	9029883a 	mov	r20,r18
    9344:	9005883a 	mov	r2,r18
    9348:	9000cb16 	blt	r18,zero,9678 <___svfprintf_internal_r+0x1e28>
    934c:	d8802b15 	stw	r2,172(sp)
    9350:	dd402f15 	stw	r21,188(sp)
    9354:	0025883a 	mov	r18,zero
    9358:	d8003315 	stw	zero,204(sp)
    935c:	04000074 	movhi	r16,1
    9360:	84145704 	addi	r16,r16,20828
    9364:	0005883a 	mov	r2,zero
    9368:	003a2006 	br	7bec <__alt_data_end+0xfe007bec>
    936c:	d9003117 	ldw	r4,196(sp)
    9370:	d9402e17 	ldw	r5,184(sp)
    9374:	d9801e04 	addi	r6,sp,120
    9378:	000d7440 	call	d744 <__ssprint_r>
    937c:	103b261e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    9380:	d8802617 	ldw	r2,152(sp)
    9384:	da803417 	ldw	r10,208(sp)
    9388:	d8c02017 	ldw	r3,128(sp)
    938c:	da000404 	addi	r8,sp,16
    9390:	5085c83a 	sub	r2,r10,r2
    9394:	003e6206 	br	8d20 <__alt_data_end+0xfe008d20>
    9398:	0025883a 	mov	r18,zero
    939c:	003e6106 	br	8d24 <__alt_data_end+0xfe008d24>
    93a0:	d8802617 	ldw	r2,152(sp)
    93a4:	00ffff44 	movi	r3,-3
    93a8:	10c02816 	blt	r2,r3,944c <___svfprintf_internal_r+0x1bfc>
    93ac:	90802716 	blt	r18,r2,944c <___svfprintf_internal_r+0x1bfc>
    93b0:	d8803315 	stw	r2,204(sp)
    93b4:	003f7e06 	br	91b0 <__alt_data_end+0xfe0091b0>
    93b8:	da802c17 	ldw	r10,176(sp)
    93bc:	00c00b44 	movi	r3,45
    93c0:	d8802b15 	stw	r2,172(sp)
    93c4:	d8c02785 	stb	r3,158(sp)
    93c8:	da802a15 	stw	r10,168(sp)
    93cc:	0025883a 	mov	r18,zero
    93d0:	00800b44 	movi	r2,45
    93d4:	003a0206 	br	7be0 <__alt_data_end+0xfe007be0>
    93d8:	05800b44 	movi	r22,45
    93dc:	dd802785 	stb	r22,158(sp)
    93e0:	003b4c06 	br	8114 <__alt_data_end+0xfe008114>
    93e4:	e005883a 	mov	r2,fp
    93e8:	003f6706 	br	9188 <__alt_data_end+0xfe009188>
    93ec:	d8802604 	addi	r2,sp,152
    93f0:	d8800115 	stw	r2,4(sp)
    93f4:	d9003117 	ldw	r4,196(sp)
    93f8:	d8802504 	addi	r2,sp,148
    93fc:	d9403717 	ldw	r5,220(sp)
    9400:	d8800215 	stw	r2,8(sp)
    9404:	d8802104 	addi	r2,sp,132
    9408:	dc800015 	stw	r18,0(sp)
    940c:	d8800315 	stw	r2,12(sp)
    9410:	a00d883a 	mov	r6,r20
    9414:	01c000c4 	movi	r7,3
    9418:	da004015 	stw	r8,256(sp)
    941c:	0009dec0 	call	9dec <_dtoa_r>
    9420:	1021883a 	mov	r16,r2
    9424:	902d883a 	mov	r22,r18
    9428:	da004017 	ldw	r8,256(sp)
    942c:	003f4306 	br	913c <__alt_data_end+0xfe00913c>
    9430:	dc802b15 	stw	r18,172(sp)
    9434:	9029883a 	mov	r20,r18
    9438:	dd802783 	ldbu	r22,158(sp)
    943c:	dd402f15 	stw	r21,188(sp)
    9440:	0025883a 	mov	r18,zero
    9444:	d8003315 	stw	zero,204(sp)
    9448:	0039e106 	br	7bd0 <__alt_data_end+0xfe007bd0>
    944c:	8c7fff84 	addi	r17,r17,-2
    9450:	153fffc4 	addi	r20,r2,-1
    9454:	dd002615 	stw	r20,152(sp)
    9458:	dc4022c5 	stb	r17,139(sp)
    945c:	a0008b16 	blt	r20,zero,968c <___svfprintf_internal_r+0x1e3c>
    9460:	00800ac4 	movi	r2,43
    9464:	d8802305 	stb	r2,140(sp)
    9468:	04800244 	movi	r18,9
    946c:	95005916 	blt	r18,r20,95d4 <___svfprintf_internal_r+0x1d84>
    9470:	00800c04 	movi	r2,48
    9474:	a5000c04 	addi	r20,r20,48
    9478:	d8802345 	stb	r2,141(sp)
    947c:	dd002385 	stb	r20,142(sp)
    9480:	d8c023c4 	addi	r3,sp,143
    9484:	d88022c4 	addi	r2,sp,139
    9488:	da803417 	ldw	r10,208(sp)
    948c:	1885c83a 	sub	r2,r3,r2
    9490:	d8803a15 	stw	r2,232(sp)
    9494:	50a9883a 	add	r20,r10,r2
    9498:	00800044 	movi	r2,1
    949c:	1280080e 	bge	r2,r10,94c0 <___svfprintf_internal_r+0x1c70>
    94a0:	a5000044 	addi	r20,r20,1
    94a4:	a005883a 	mov	r2,r20
    94a8:	a0000216 	blt	r20,zero,94b4 <___svfprintf_internal_r+0x1c64>
    94ac:	d8003315 	stw	zero,204(sp)
    94b0:	003f4906 	br	91d8 <__alt_data_end+0xfe0091d8>
    94b4:	0005883a 	mov	r2,zero
    94b8:	d8003315 	stw	zero,204(sp)
    94bc:	003f4606 	br	91d8 <__alt_data_end+0xfe0091d8>
    94c0:	da802a17 	ldw	r10,168(sp)
    94c4:	5084703a 	and	r2,r10,r2
    94c8:	103ff51e 	bne	r2,zero,94a0 <__alt_data_end+0xfe0094a0>
    94cc:	003ff506 	br	94a4 <__alt_data_end+0xfe0094a4>
    94d0:	81000007 	ldb	r4,0(r16)
    94d4:	00800c04 	movi	r2,48
    94d8:	20800326 	beq	r4,r2,94e8 <___svfprintf_internal_r+0x1c98>
    94dc:	d8c02617 	ldw	r3,152(sp)
    94e0:	e0f9883a 	add	fp,fp,r3
    94e4:	003f1806 	br	9148 <__alt_data_end+0xfe009148>
    94e8:	d9003717 	ldw	r4,220(sp)
    94ec:	a00b883a 	mov	r5,r20
    94f0:	000d883a 	mov	r6,zero
    94f4:	000f883a 	mov	r7,zero
    94f8:	da004015 	stw	r8,256(sp)
    94fc:	0010b080 	call	10b08 <__eqdf2>
    9500:	da004017 	ldw	r8,256(sp)
    9504:	103ff526 	beq	r2,zero,94dc <__alt_data_end+0xfe0094dc>
    9508:	00800044 	movi	r2,1
    950c:	1587c83a 	sub	r3,r2,r22
    9510:	d8c02615 	stw	r3,152(sp)
    9514:	e0f9883a 	add	fp,fp,r3
    9518:	003f0b06 	br	9148 <__alt_data_end+0xfe009148>
    951c:	d9003117 	ldw	r4,196(sp)
    9520:	d9402e17 	ldw	r5,184(sp)
    9524:	d9801e04 	addi	r6,sp,120
    9528:	000d7440 	call	d744 <__ssprint_r>
    952c:	103aba1e 	bne	r2,zero,8018 <__alt_data_end+0xfe008018>
    9530:	dc402617 	ldw	r17,152(sp)
    9534:	d8c02017 	ldw	r3,128(sp)
    9538:	d8801f17 	ldw	r2,124(sp)
    953c:	da000404 	addi	r8,sp,16
    9540:	003eb106 	br	9008 <__alt_data_end+0xfe009008>
    9544:	903ed91e 	bne	r18,zero,90ac <__alt_data_end+0xfe0090ac>
    9548:	8025883a 	mov	r18,r16
    954c:	003ed706 	br	90ac <__alt_data_end+0xfe0090ac>
    9550:	00c00b44 	movi	r3,45
    9554:	5520003c 	xorhi	r20,r10,32768
    9558:	d8c02b05 	stb	r3,172(sp)
    955c:	003eda06 	br	90c8 <__alt_data_end+0xfe0090c8>
    9560:	95800044 	addi	r22,r18,1
    9564:	003edf06 	br	90e4 <__alt_data_end+0xfe0090e4>
    9568:	da803317 	ldw	r10,204(sp)
    956c:	0280440e 	bge	zero,r10,9680 <___svfprintf_internal_r+0x1e30>
    9570:	05000044 	movi	r20,1
    9574:	da803417 	ldw	r10,208(sp)
    9578:	a2a9883a 	add	r20,r20,r10
    957c:	a005883a 	mov	r2,r20
    9580:	a0000616 	blt	r20,zero,959c <___svfprintf_internal_r+0x1d4c>
    9584:	044019c4 	movi	r17,103
    9588:	003f1306 	br	91d8 <__alt_data_end+0xfe0091d8>
    958c:	d8c03317 	ldw	r3,204(sp)
    9590:	1d000044 	addi	r20,r3,1
    9594:	a005883a 	mov	r2,r20
    9598:	a03ffa0e 	bge	r20,zero,9584 <__alt_data_end+0xfe009584>
    959c:	0005883a 	mov	r2,zero
    95a0:	044019c4 	movi	r17,103
    95a4:	003f0c06 	br	91d8 <__alt_data_end+0xfe0091d8>
    95a8:	da802617 	ldw	r10,152(sp)
    95ac:	da803315 	stw	r10,204(sp)
    95b0:	02803a0e 	bge	zero,r10,969c <___svfprintf_internal_r+0x1e4c>
    95b4:	9000291e 	bne	r18,zero,965c <___svfprintf_internal_r+0x1e0c>
    95b8:	da802a17 	ldw	r10,168(sp)
    95bc:	5080004c 	andi	r2,r10,1
    95c0:	1000261e 	bne	r2,zero,965c <___svfprintf_internal_r+0x1e0c>
    95c4:	d8803317 	ldw	r2,204(sp)
    95c8:	10004c16 	blt	r2,zero,96fc <___svfprintf_internal_r+0x1eac>
    95cc:	dd003317 	ldw	r20,204(sp)
    95d0:	003f0106 	br	91d8 <__alt_data_end+0xfe0091d8>
    95d4:	d8c02284 	addi	r3,sp,138
    95d8:	402d883a 	mov	r22,r8
    95dc:	a009883a 	mov	r4,r20
    95e0:	01400284 	movi	r5,10
    95e4:	182b883a 	mov	r21,r3
    95e8:	000f7640 	call	f764 <__modsi3>
    95ec:	10800c04 	addi	r2,r2,48
    95f0:	a009883a 	mov	r4,r20
    95f4:	a8800005 	stb	r2,0(r21)
    95f8:	01400284 	movi	r5,10
    95fc:	000f71c0 	call	f71c <__divsi3>
    9600:	1029883a 	mov	r20,r2
    9604:	a8ffffc4 	addi	r3,r21,-1
    9608:	90bff416 	blt	r18,r2,95dc <__alt_data_end+0xfe0095dc>
    960c:	11400c04 	addi	r5,r2,48
    9610:	a97fffc5 	stb	r5,-1(r21)
    9614:	d88022c4 	addi	r2,sp,139
    9618:	b011883a 	mov	r8,r22
    961c:	18803c2e 	bgeu	r3,r2,9710 <___svfprintf_internal_r+0x1ec0>
    9620:	d9002344 	addi	r4,sp,141
    9624:	a807883a 	mov	r3,r21
    9628:	00000206 	br	9634 <___svfprintf_internal_r+0x1de4>
    962c:	19400003 	ldbu	r5,0(r3)
    9630:	18c00044 	addi	r3,r3,1
    9634:	21400005 	stb	r5,0(r4)
    9638:	21000044 	addi	r4,r4,1
    963c:	10fffb1e 	bne	r2,r3,962c <__alt_data_end+0xfe00962c>
    9640:	d8c02304 	addi	r3,sp,140
    9644:	1d47c83a 	sub	r3,r3,r21
    9648:	d9002344 	addi	r4,sp,141
    964c:	20c7883a 	add	r3,r4,r3
    9650:	003f8d06 	br	9488 <__alt_data_end+0xfe009488>
    9654:	d8802117 	ldw	r2,132(sp)
    9658:	003ecb06 	br	9188 <__alt_data_end+0xfe009188>
    965c:	d8c03317 	ldw	r3,204(sp)
    9660:	94800044 	addi	r18,r18,1
    9664:	1ca9883a 	add	r20,r3,r18
    9668:	a005883a 	mov	r2,r20
    966c:	a03eda0e 	bge	r20,zero,91d8 <__alt_data_end+0xfe0091d8>
    9670:	0005883a 	mov	r2,zero
    9674:	003ed806 	br	91d8 <__alt_data_end+0xfe0091d8>
    9678:	0005883a 	mov	r2,zero
    967c:	003f3306 	br	934c <__alt_data_end+0xfe00934c>
    9680:	05000084 	movi	r20,2
    9684:	a2a9c83a 	sub	r20,r20,r10
    9688:	003fba06 	br	9574 <__alt_data_end+0xfe009574>
    968c:	00800b44 	movi	r2,45
    9690:	0529c83a 	sub	r20,zero,r20
    9694:	d8802305 	stb	r2,140(sp)
    9698:	003f7306 	br	9468 <__alt_data_end+0xfe009468>
    969c:	9000111e 	bne	r18,zero,96e4 <___svfprintf_internal_r+0x1e94>
    96a0:	da802a17 	ldw	r10,168(sp)
    96a4:	5080004c 	andi	r2,r10,1
    96a8:	10000e1e 	bne	r2,zero,96e4 <___svfprintf_internal_r+0x1e94>
    96ac:	00800044 	movi	r2,1
    96b0:	1029883a 	mov	r20,r2
    96b4:	003ec806 	br	91d8 <__alt_data_end+0xfe0091d8>
    96b8:	da802f17 	ldw	r10,188(sp)
    96bc:	bc400043 	ldbu	r17,1(r23)
    96c0:	282f883a 	mov	r23,r5
    96c4:	54800017 	ldw	r18,0(r10)
    96c8:	50800104 	addi	r2,r10,4
    96cc:	d8802f15 	stw	r2,188(sp)
    96d0:	90001616 	blt	r18,zero,972c <___svfprintf_internal_r+0x1edc>
    96d4:	8c403fcc 	andi	r17,r17,255
    96d8:	8c40201c 	xori	r17,r17,128
    96dc:	8c7fe004 	addi	r17,r17,-128
    96e0:	0038b106 	br	79a8 <__alt_data_end+0xfe0079a8>
    96e4:	95000084 	addi	r20,r18,2
    96e8:	a005883a 	mov	r2,r20
    96ec:	a03eba0e 	bge	r20,zero,91d8 <__alt_data_end+0xfe0091d8>
    96f0:	003fdf06 	br	9670 <__alt_data_end+0xfe009670>
    96f4:	0005883a 	mov	r2,zero
    96f8:	003eb506 	br	91d0 <__alt_data_end+0xfe0091d0>
    96fc:	0005883a 	mov	r2,zero
    9700:	dd003317 	ldw	r20,204(sp)
    9704:	003eb406 	br	91d8 <__alt_data_end+0xfe0091d8>
    9708:	d8802617 	ldw	r2,152(sp)
    970c:	003f5006 	br	9450 <__alt_data_end+0xfe009450>
    9710:	d8c02344 	addi	r3,sp,141
    9714:	003f5c06 	br	9488 <__alt_data_end+0xfe009488>
    9718:	da803117 	ldw	r10,196(sp)
    971c:	00800304 	movi	r2,12
    9720:	50800015 	stw	r2,0(r10)
    9724:	00bfffc4 	movi	r2,-1
    9728:	003a4006 	br	802c <__alt_data_end+0xfe00802c>
    972c:	8c403fcc 	andi	r17,r17,255
    9730:	8c40201c 	xori	r17,r17,128
    9734:	04bfffc4 	movi	r18,-1
    9738:	8c7fe004 	addi	r17,r17,-128
    973c:	00389a06 	br	79a8 <__alt_data_end+0xfe0079a8>

00009740 <__submore>:
    9740:	defffa04 	addi	sp,sp,-24
    9744:	dc000015 	stw	r16,0(sp)
    9748:	2821883a 	mov	r16,r5
    974c:	29400c17 	ldw	r5,48(r5)
    9750:	dfc00515 	stw	ra,20(sp)
    9754:	dd000415 	stw	r20,16(sp)
    9758:	dcc00315 	stw	r19,12(sp)
    975c:	dc800215 	stw	r18,8(sp)
    9760:	dc400115 	stw	r17,4(sp)
    9764:	80801004 	addi	r2,r16,64
    9768:	28801726 	beq	r5,r2,97c8 <__submore+0x88>
    976c:	84400d17 	ldw	r17,52(r16)
    9770:	8c67883a 	add	r19,r17,r17
    9774:	980d883a 	mov	r6,r19
    9778:	0004b200 	call	4b20 <_realloc_r>
    977c:	1025883a 	mov	r18,r2
    9780:	10002926 	beq	r2,zero,9828 <__submore+0xe8>
    9784:	1469883a 	add	r20,r2,r17
    9788:	a009883a 	mov	r4,r20
    978c:	100b883a 	mov	r5,r2
    9790:	880d883a 	mov	r6,r17
    9794:	00047c40 	call	47c4 <memcpy>
    9798:	0005883a 	mov	r2,zero
    979c:	85000015 	stw	r20,0(r16)
    97a0:	84800c15 	stw	r18,48(r16)
    97a4:	84c00d15 	stw	r19,52(r16)
    97a8:	dfc00517 	ldw	ra,20(sp)
    97ac:	dd000417 	ldw	r20,16(sp)
    97b0:	dcc00317 	ldw	r19,12(sp)
    97b4:	dc800217 	ldw	r18,8(sp)
    97b8:	dc400117 	ldw	r17,4(sp)
    97bc:	dc000017 	ldw	r16,0(sp)
    97c0:	dec00604 	addi	sp,sp,24
    97c4:	f800283a 	ret
    97c8:	04410004 	movi	r17,1024
    97cc:	880b883a 	mov	r5,r17
    97d0:	0003cdc0 	call	3cdc <_malloc_r>
    97d4:	1007883a 	mov	r3,r2
    97d8:	10001326 	beq	r2,zero,9828 <__submore+0xe8>
    97dc:	80801083 	ldbu	r2,66(r16)
    97e0:	80c00c15 	stw	r3,48(r16)
    97e4:	84400d15 	stw	r17,52(r16)
    97e8:	1880ffc5 	stb	r2,1023(r3)
    97ec:	81401043 	ldbu	r5,65(r16)
    97f0:	1900ff44 	addi	r4,r3,1021
    97f4:	0005883a 	mov	r2,zero
    97f8:	1940ff85 	stb	r5,1022(r3)
    97fc:	81401003 	ldbu	r5,64(r16)
    9800:	1940ff45 	stb	r5,1021(r3)
    9804:	81000015 	stw	r4,0(r16)
    9808:	dfc00517 	ldw	ra,20(sp)
    980c:	dd000417 	ldw	r20,16(sp)
    9810:	dcc00317 	ldw	r19,12(sp)
    9814:	dc800217 	ldw	r18,8(sp)
    9818:	dc400117 	ldw	r17,4(sp)
    981c:	dc000017 	ldw	r16,0(sp)
    9820:	dec00604 	addi	sp,sp,24
    9824:	f800283a 	ret
    9828:	00bfffc4 	movi	r2,-1
    982c:	003fde06 	br	97a8 <__alt_data_end+0xfe0097a8>

00009830 <_ungetc_r>:
    9830:	defffc04 	addi	sp,sp,-16
    9834:	dc800215 	stw	r18,8(sp)
    9838:	dfc00315 	stw	ra,12(sp)
    983c:	dc400115 	stw	r17,4(sp)
    9840:	dc000015 	stw	r16,0(sp)
    9844:	00bfffc4 	movi	r2,-1
    9848:	2825883a 	mov	r18,r5
    984c:	28803026 	beq	r5,r2,9910 <_ungetc_r+0xe0>
    9850:	2023883a 	mov	r17,r4
    9854:	3021883a 	mov	r16,r6
    9858:	20000226 	beq	r4,zero,9864 <_ungetc_r+0x34>
    985c:	20800e17 	ldw	r2,56(r4)
    9860:	10002d26 	beq	r2,zero,9918 <_ungetc_r+0xe8>
    9864:	8080030b 	ldhu	r2,12(r16)
    9868:	10c8000c 	andi	r3,r2,8192
    986c:	1800051e 	bne	r3,zero,9884 <_ungetc_r+0x54>
    9870:	81001917 	ldw	r4,100(r16)
    9874:	00f7ffc4 	movi	r3,-8193
    9878:	10880014 	ori	r2,r2,8192
    987c:	20c6703a 	and	r3,r4,r3
    9880:	80c01915 	stw	r3,100(r16)
    9884:	00fff7c4 	movi	r3,-33
    9888:	10c6703a 	and	r3,r2,r3
    988c:	80c0030d 	sth	r3,12(r16)
    9890:	1100010c 	andi	r4,r2,4
    9894:	2000061e 	bne	r4,zero,98b0 <_ungetc_r+0x80>
    9898:	1100040c 	andi	r4,r2,16
    989c:	20001c26 	beq	r4,zero,9910 <_ungetc_r+0xe0>
    98a0:	1080020c 	andi	r2,r2,8
    98a4:	1000371e 	bne	r2,zero,9984 <_ungetc_r+0x154>
    98a8:	18c00114 	ori	r3,r3,4
    98ac:	80c0030d 	sth	r3,12(r16)
    98b0:	80800c17 	ldw	r2,48(r16)
    98b4:	94803fcc 	andi	r18,r18,255
    98b8:	10001926 	beq	r2,zero,9920 <_ungetc_r+0xf0>
    98bc:	80c00117 	ldw	r3,4(r16)
    98c0:	80800d17 	ldw	r2,52(r16)
    98c4:	18800e0e 	bge	r3,r2,9900 <_ungetc_r+0xd0>
    98c8:	80c00017 	ldw	r3,0(r16)
    98cc:	9005883a 	mov	r2,r18
    98d0:	193fffc4 	addi	r4,r3,-1
    98d4:	81000015 	stw	r4,0(r16)
    98d8:	1cbfffc5 	stb	r18,-1(r3)
    98dc:	80c00117 	ldw	r3,4(r16)
    98e0:	18c00044 	addi	r3,r3,1
    98e4:	80c00115 	stw	r3,4(r16)
    98e8:	dfc00317 	ldw	ra,12(sp)
    98ec:	dc800217 	ldw	r18,8(sp)
    98f0:	dc400117 	ldw	r17,4(sp)
    98f4:	dc000017 	ldw	r16,0(sp)
    98f8:	dec00404 	addi	sp,sp,16
    98fc:	f800283a 	ret
    9900:	8809883a 	mov	r4,r17
    9904:	800b883a 	mov	r5,r16
    9908:	00097400 	call	9740 <__submore>
    990c:	103fee26 	beq	r2,zero,98c8 <__alt_data_end+0xfe0098c8>
    9910:	00bfffc4 	movi	r2,-1
    9914:	003ff406 	br	98e8 <__alt_data_end+0xfe0098e8>
    9918:	0002c480 	call	2c48 <__sinit>
    991c:	003fd106 	br	9864 <__alt_data_end+0xfe009864>
    9920:	80800417 	ldw	r2,16(r16)
    9924:	80c00017 	ldw	r3,0(r16)
    9928:	10000326 	beq	r2,zero,9938 <_ungetc_r+0x108>
    992c:	10c0022e 	bgeu	r2,r3,9938 <_ungetc_r+0x108>
    9930:	18bfffc3 	ldbu	r2,-1(r3)
    9934:	14801d26 	beq	r2,r18,99ac <_ungetc_r+0x17c>
    9938:	81400117 	ldw	r5,4(r16)
    993c:	80801084 	addi	r2,r16,66
    9940:	80800015 	stw	r2,0(r16)
    9944:	00800044 	movi	r2,1
    9948:	81001004 	addi	r4,r16,64
    994c:	80c00e15 	stw	r3,56(r16)
    9950:	80800115 	stw	r2,4(r16)
    9954:	00c000c4 	movi	r3,3
    9958:	9005883a 	mov	r2,r18
    995c:	81400f15 	stw	r5,60(r16)
    9960:	81000c15 	stw	r4,48(r16)
    9964:	80c00d15 	stw	r3,52(r16)
    9968:	84801085 	stb	r18,66(r16)
    996c:	dfc00317 	ldw	ra,12(sp)
    9970:	dc800217 	ldw	r18,8(sp)
    9974:	dc400117 	ldw	r17,4(sp)
    9978:	dc000017 	ldw	r16,0(sp)
    997c:	dec00404 	addi	sp,sp,16
    9980:	f800283a 	ret
    9984:	8809883a 	mov	r4,r17
    9988:	800b883a 	mov	r5,r16
    998c:	000b5640 	call	b564 <_fflush_r>
    9990:	103fdf1e 	bne	r2,zero,9910 <__alt_data_end+0xfe009910>
    9994:	8080030b 	ldhu	r2,12(r16)
    9998:	00fffdc4 	movi	r3,-9
    999c:	80000215 	stw	zero,8(r16)
    99a0:	1886703a 	and	r3,r3,r2
    99a4:	80000615 	stw	zero,24(r16)
    99a8:	003fbf06 	br	98a8 <__alt_data_end+0xfe0098a8>
    99ac:	81000117 	ldw	r4,4(r16)
    99b0:	18ffffc4 	addi	r3,r3,-1
    99b4:	80c00015 	stw	r3,0(r16)
    99b8:	20c00044 	addi	r3,r4,1
    99bc:	80c00115 	stw	r3,4(r16)
    99c0:	003fc906 	br	98e8 <__alt_data_end+0xfe0098e8>

000099c4 <ungetc>:
    99c4:	00c00074 	movhi	r3,1
    99c8:	18dbce04 	addi	r3,r3,28472
    99cc:	2005883a 	mov	r2,r4
    99d0:	19000017 	ldw	r4,0(r3)
    99d4:	280d883a 	mov	r6,r5
    99d8:	100b883a 	mov	r5,r2
    99dc:	00098301 	jmpi	9830 <_ungetc_r>

000099e0 <_write_r>:
    99e0:	defffd04 	addi	sp,sp,-12
    99e4:	dc400115 	stw	r17,4(sp)
    99e8:	dc000015 	stw	r16,0(sp)
    99ec:	2023883a 	mov	r17,r4
    99f0:	040000b4 	movhi	r16,2
    99f4:	8422d804 	addi	r16,r16,-29856
    99f8:	2809883a 	mov	r4,r5
    99fc:	300b883a 	mov	r5,r6
    9a00:	380d883a 	mov	r6,r7
    9a04:	dfc00215 	stw	ra,8(sp)
    9a08:	80000015 	stw	zero,0(r16)
    9a0c:	00129d80 	call	129d8 <write>
    9a10:	00ffffc4 	movi	r3,-1
    9a14:	10c00526 	beq	r2,r3,9a2c <_write_r+0x4c>
    9a18:	dfc00217 	ldw	ra,8(sp)
    9a1c:	dc400117 	ldw	r17,4(sp)
    9a20:	dc000017 	ldw	r16,0(sp)
    9a24:	dec00304 	addi	sp,sp,12
    9a28:	f800283a 	ret
    9a2c:	80c00017 	ldw	r3,0(r16)
    9a30:	183ff926 	beq	r3,zero,9a18 <__alt_data_end+0xfe009a18>
    9a34:	88c00015 	stw	r3,0(r17)
    9a38:	dfc00217 	ldw	ra,8(sp)
    9a3c:	dc400117 	ldw	r17,4(sp)
    9a40:	dc000017 	ldw	r16,0(sp)
    9a44:	dec00304 	addi	sp,sp,12
    9a48:	f800283a 	ret

00009a4c <__swsetup_r>:
    9a4c:	00800074 	movhi	r2,1
    9a50:	109bce04 	addi	r2,r2,28472
    9a54:	10800017 	ldw	r2,0(r2)
    9a58:	defffd04 	addi	sp,sp,-12
    9a5c:	dc400115 	stw	r17,4(sp)
    9a60:	dc000015 	stw	r16,0(sp)
    9a64:	dfc00215 	stw	ra,8(sp)
    9a68:	2023883a 	mov	r17,r4
    9a6c:	2821883a 	mov	r16,r5
    9a70:	10000226 	beq	r2,zero,9a7c <__swsetup_r+0x30>
    9a74:	10c00e17 	ldw	r3,56(r2)
    9a78:	18002e26 	beq	r3,zero,9b34 <__swsetup_r+0xe8>
    9a7c:	8080030b 	ldhu	r2,12(r16)
    9a80:	10c0020c 	andi	r3,r2,8
    9a84:	100d883a 	mov	r6,r2
    9a88:	18000f26 	beq	r3,zero,9ac8 <__swsetup_r+0x7c>
    9a8c:	80c00417 	ldw	r3,16(r16)
    9a90:	18001526 	beq	r3,zero,9ae8 <__swsetup_r+0x9c>
    9a94:	1100004c 	andi	r4,r2,1
    9a98:	20001c1e 	bne	r4,zero,9b0c <__swsetup_r+0xc0>
    9a9c:	1080008c 	andi	r2,r2,2
    9aa0:	1000271e 	bne	r2,zero,9b40 <__swsetup_r+0xf4>
    9aa4:	80800517 	ldw	r2,20(r16)
    9aa8:	80800215 	stw	r2,8(r16)
    9aac:	18001c26 	beq	r3,zero,9b20 <__swsetup_r+0xd4>
    9ab0:	0005883a 	mov	r2,zero
    9ab4:	dfc00217 	ldw	ra,8(sp)
    9ab8:	dc400117 	ldw	r17,4(sp)
    9abc:	dc000017 	ldw	r16,0(sp)
    9ac0:	dec00304 	addi	sp,sp,12
    9ac4:	f800283a 	ret
    9ac8:	3080040c 	andi	r2,r6,16
    9acc:	10001726 	beq	r2,zero,9b2c <__swsetup_r+0xe0>
    9ad0:	3080010c 	andi	r2,r6,4
    9ad4:	10001d1e 	bne	r2,zero,9b4c <__swsetup_r+0x100>
    9ad8:	80c00417 	ldw	r3,16(r16)
    9adc:	30800214 	ori	r2,r6,8
    9ae0:	8080030d 	sth	r2,12(r16)
    9ae4:	183feb1e 	bne	r3,zero,9a94 <__alt_data_end+0xfe009a94>
    9ae8:	1140a00c 	andi	r5,r2,640
    9aec:	01008004 	movi	r4,512
    9af0:	293fe826 	beq	r5,r4,9a94 <__alt_data_end+0xfe009a94>
    9af4:	8809883a 	mov	r4,r17
    9af8:	800b883a 	mov	r5,r16
    9afc:	000c4b00 	call	c4b0 <__smakebuf_r>
    9b00:	8080030b 	ldhu	r2,12(r16)
    9b04:	80c00417 	ldw	r3,16(r16)
    9b08:	003fe206 	br	9a94 <__alt_data_end+0xfe009a94>
    9b0c:	80800517 	ldw	r2,20(r16)
    9b10:	80000215 	stw	zero,8(r16)
    9b14:	0085c83a 	sub	r2,zero,r2
    9b18:	80800615 	stw	r2,24(r16)
    9b1c:	183fe41e 	bne	r3,zero,9ab0 <__alt_data_end+0xfe009ab0>
    9b20:	8080030b 	ldhu	r2,12(r16)
    9b24:	1080200c 	andi	r2,r2,128
    9b28:	103fe226 	beq	r2,zero,9ab4 <__alt_data_end+0xfe009ab4>
    9b2c:	00bfffc4 	movi	r2,-1
    9b30:	003fe006 	br	9ab4 <__alt_data_end+0xfe009ab4>
    9b34:	1009883a 	mov	r4,r2
    9b38:	0002c480 	call	2c48 <__sinit>
    9b3c:	003fcf06 	br	9a7c <__alt_data_end+0xfe009a7c>
    9b40:	0005883a 	mov	r2,zero
    9b44:	80800215 	stw	r2,8(r16)
    9b48:	003fd806 	br	9aac <__alt_data_end+0xfe009aac>
    9b4c:	81400c17 	ldw	r5,48(r16)
    9b50:	28000626 	beq	r5,zero,9b6c <__swsetup_r+0x120>
    9b54:	80801004 	addi	r2,r16,64
    9b58:	28800326 	beq	r5,r2,9b68 <__swsetup_r+0x11c>
    9b5c:	8809883a 	mov	r4,r17
    9b60:	00032fc0 	call	32fc <_free_r>
    9b64:	8180030b 	ldhu	r6,12(r16)
    9b68:	80000c15 	stw	zero,48(r16)
    9b6c:	80c00417 	ldw	r3,16(r16)
    9b70:	00bff6c4 	movi	r2,-37
    9b74:	118c703a 	and	r6,r2,r6
    9b78:	80000115 	stw	zero,4(r16)
    9b7c:	80c00015 	stw	r3,0(r16)
    9b80:	003fd606 	br	9adc <__alt_data_end+0xfe009adc>

00009b84 <_close_r>:
    9b84:	defffd04 	addi	sp,sp,-12
    9b88:	dc400115 	stw	r17,4(sp)
    9b8c:	dc000015 	stw	r16,0(sp)
    9b90:	2023883a 	mov	r17,r4
    9b94:	040000b4 	movhi	r16,2
    9b98:	8422d804 	addi	r16,r16,-29856
    9b9c:	2809883a 	mov	r4,r5
    9ba0:	dfc00215 	stw	ra,8(sp)
    9ba4:	80000015 	stw	zero,0(r16)
    9ba8:	001216c0 	call	1216c <close>
    9bac:	00ffffc4 	movi	r3,-1
    9bb0:	10c00526 	beq	r2,r3,9bc8 <_close_r+0x44>
    9bb4:	dfc00217 	ldw	ra,8(sp)
    9bb8:	dc400117 	ldw	r17,4(sp)
    9bbc:	dc000017 	ldw	r16,0(sp)
    9bc0:	dec00304 	addi	sp,sp,12
    9bc4:	f800283a 	ret
    9bc8:	80c00017 	ldw	r3,0(r16)
    9bcc:	183ff926 	beq	r3,zero,9bb4 <__alt_data_end+0xfe009bb4>
    9bd0:	88c00015 	stw	r3,0(r17)
    9bd4:	dfc00217 	ldw	ra,8(sp)
    9bd8:	dc400117 	ldw	r17,4(sp)
    9bdc:	dc000017 	ldw	r16,0(sp)
    9be0:	dec00304 	addi	sp,sp,12
    9be4:	f800283a 	ret

00009be8 <quorem>:
    9be8:	defff704 	addi	sp,sp,-36
    9bec:	dc000015 	stw	r16,0(sp)
    9bf0:	20800417 	ldw	r2,16(r4)
    9bf4:	2c000417 	ldw	r16,16(r5)
    9bf8:	dd800615 	stw	r22,24(sp)
    9bfc:	dd400515 	stw	r21,20(sp)
    9c00:	dfc00815 	stw	ra,32(sp)
    9c04:	ddc00715 	stw	r23,28(sp)
    9c08:	dd000415 	stw	r20,16(sp)
    9c0c:	dcc00315 	stw	r19,12(sp)
    9c10:	dc800215 	stw	r18,8(sp)
    9c14:	dc400115 	stw	r17,4(sp)
    9c18:	202b883a 	mov	r21,r4
    9c1c:	282d883a 	mov	r22,r5
    9c20:	14007016 	blt	r2,r16,9de4 <quorem+0x1fc>
    9c24:	843fffc4 	addi	r16,r16,-1
    9c28:	842f883a 	add	r23,r16,r16
    9c2c:	bdef883a 	add	r23,r23,r23
    9c30:	2c400504 	addi	r17,r5,20
    9c34:	8de5883a 	add	r18,r17,r23
    9c38:	25000504 	addi	r20,r4,20
    9c3c:	a5ef883a 	add	r23,r20,r23
    9c40:	91400017 	ldw	r5,0(r18)
    9c44:	b9000017 	ldw	r4,0(r23)
    9c48:	29400044 	addi	r5,r5,1
    9c4c:	000f7b00 	call	f7b0 <__udivsi3>
    9c50:	1027883a 	mov	r19,r2
    9c54:	10002c26 	beq	r2,zero,9d08 <quorem+0x120>
    9c58:	a00f883a 	mov	r7,r20
    9c5c:	880d883a 	mov	r6,r17
    9c60:	0013883a 	mov	r9,zero
    9c64:	0011883a 	mov	r8,zero
    9c68:	30800017 	ldw	r2,0(r6)
    9c6c:	3ac00017 	ldw	r11,0(r7)
    9c70:	31800104 	addi	r6,r6,4
    9c74:	10ffffcc 	andi	r3,r2,65535
    9c78:	1cc7383a 	mul	r3,r3,r19
    9c7c:	1004d43a 	srli	r2,r2,16
    9c80:	5abfffcc 	andi	r10,r11,65535
    9c84:	48c7883a 	add	r3,r9,r3
    9c88:	1812d43a 	srli	r9,r3,16
    9c8c:	14c5383a 	mul	r2,r2,r19
    9c90:	5211883a 	add	r8,r10,r8
    9c94:	18ffffcc 	andi	r3,r3,65535
    9c98:	40d5c83a 	sub	r10,r8,r3
    9c9c:	5810d43a 	srli	r8,r11,16
    9ca0:	4893883a 	add	r9,r9,r2
    9ca4:	5005d43a 	srai	r2,r10,16
    9ca8:	48ffffcc 	andi	r3,r9,65535
    9cac:	40d1c83a 	sub	r8,r8,r3
    9cb0:	4091883a 	add	r8,r8,r2
    9cb4:	4004943a 	slli	r2,r8,16
    9cb8:	52bfffcc 	andi	r10,r10,65535
    9cbc:	4812d43a 	srli	r9,r9,16
    9cc0:	1294b03a 	or	r10,r2,r10
    9cc4:	3a800015 	stw	r10,0(r7)
    9cc8:	4011d43a 	srai	r8,r8,16
    9ccc:	39c00104 	addi	r7,r7,4
    9cd0:	91bfe52e 	bgeu	r18,r6,9c68 <__alt_data_end+0xfe009c68>
    9cd4:	b8800017 	ldw	r2,0(r23)
    9cd8:	10000b1e 	bne	r2,zero,9d08 <quorem+0x120>
    9cdc:	b8bfff04 	addi	r2,r23,-4
    9ce0:	a080082e 	bgeu	r20,r2,9d04 <quorem+0x11c>
    9ce4:	b8ffff17 	ldw	r3,-4(r23)
    9ce8:	18000326 	beq	r3,zero,9cf8 <quorem+0x110>
    9cec:	00000506 	br	9d04 <quorem+0x11c>
    9cf0:	10c00017 	ldw	r3,0(r2)
    9cf4:	1800031e 	bne	r3,zero,9d04 <quorem+0x11c>
    9cf8:	10bfff04 	addi	r2,r2,-4
    9cfc:	843fffc4 	addi	r16,r16,-1
    9d00:	a0bffb36 	bltu	r20,r2,9cf0 <__alt_data_end+0xfe009cf0>
    9d04:	ac000415 	stw	r16,16(r21)
    9d08:	a809883a 	mov	r4,r21
    9d0c:	b00b883a 	mov	r5,r22
    9d10:	000cf240 	call	cf24 <__mcmp>
    9d14:	10002716 	blt	r2,zero,9db4 <quorem+0x1cc>
    9d18:	9cc00044 	addi	r19,r19,1
    9d1c:	a00b883a 	mov	r5,r20
    9d20:	8807883a 	mov	r3,r17
    9d24:	000d883a 	mov	r6,zero
    9d28:	2a400017 	ldw	r9,0(r5)
    9d2c:	1a000017 	ldw	r8,0(r3)
    9d30:	29400104 	addi	r5,r5,4
    9d34:	49ffffcc 	andi	r7,r9,65535
    9d38:	40bfffcc 	andi	r2,r8,65535
    9d3c:	398d883a 	add	r6,r7,r6
    9d40:	308fc83a 	sub	r7,r6,r2
    9d44:	4010d43a 	srli	r8,r8,16
    9d48:	480cd43a 	srli	r6,r9,16
    9d4c:	3805d43a 	srai	r2,r7,16
    9d50:	39ffffcc 	andi	r7,r7,65535
    9d54:	320dc83a 	sub	r6,r6,r8
    9d58:	308d883a 	add	r6,r6,r2
    9d5c:	3004943a 	slli	r2,r6,16
    9d60:	18c00104 	addi	r3,r3,4
    9d64:	300dd43a 	srai	r6,r6,16
    9d68:	11ceb03a 	or	r7,r2,r7
    9d6c:	29ffff15 	stw	r7,-4(r5)
    9d70:	90ffed2e 	bgeu	r18,r3,9d28 <__alt_data_end+0xfe009d28>
    9d74:	8405883a 	add	r2,r16,r16
    9d78:	1085883a 	add	r2,r2,r2
    9d7c:	a087883a 	add	r3,r20,r2
    9d80:	18800017 	ldw	r2,0(r3)
    9d84:	10000b1e 	bne	r2,zero,9db4 <quorem+0x1cc>
    9d88:	18bfff04 	addi	r2,r3,-4
    9d8c:	a080082e 	bgeu	r20,r2,9db0 <quorem+0x1c8>
    9d90:	18ffff17 	ldw	r3,-4(r3)
    9d94:	18000326 	beq	r3,zero,9da4 <quorem+0x1bc>
    9d98:	00000506 	br	9db0 <quorem+0x1c8>
    9d9c:	10c00017 	ldw	r3,0(r2)
    9da0:	1800031e 	bne	r3,zero,9db0 <quorem+0x1c8>
    9da4:	10bfff04 	addi	r2,r2,-4
    9da8:	843fffc4 	addi	r16,r16,-1
    9dac:	a0bffb36 	bltu	r20,r2,9d9c <__alt_data_end+0xfe009d9c>
    9db0:	ac000415 	stw	r16,16(r21)
    9db4:	9805883a 	mov	r2,r19
    9db8:	dfc00817 	ldw	ra,32(sp)
    9dbc:	ddc00717 	ldw	r23,28(sp)
    9dc0:	dd800617 	ldw	r22,24(sp)
    9dc4:	dd400517 	ldw	r21,20(sp)
    9dc8:	dd000417 	ldw	r20,16(sp)
    9dcc:	dcc00317 	ldw	r19,12(sp)
    9dd0:	dc800217 	ldw	r18,8(sp)
    9dd4:	dc400117 	ldw	r17,4(sp)
    9dd8:	dc000017 	ldw	r16,0(sp)
    9ddc:	dec00904 	addi	sp,sp,36
    9de0:	f800283a 	ret
    9de4:	0005883a 	mov	r2,zero
    9de8:	003ff306 	br	9db8 <__alt_data_end+0xfe009db8>

00009dec <_dtoa_r>:
    9dec:	20801017 	ldw	r2,64(r4)
    9df0:	deffdf04 	addi	sp,sp,-132
    9df4:	dcc01a15 	stw	r19,104(sp)
    9df8:	dc801915 	stw	r18,100(sp)
    9dfc:	dc401815 	stw	r17,96(sp)
    9e00:	dc001715 	stw	r16,92(sp)
    9e04:	dfc02015 	stw	ra,128(sp)
    9e08:	df001f15 	stw	fp,124(sp)
    9e0c:	ddc01e15 	stw	r23,120(sp)
    9e10:	dd801d15 	stw	r22,116(sp)
    9e14:	dd401c15 	stw	r21,112(sp)
    9e18:	dd001b15 	stw	r20,108(sp)
    9e1c:	d9400315 	stw	r5,12(sp)
    9e20:	d9c00415 	stw	r7,16(sp)
    9e24:	2021883a 	mov	r16,r4
    9e28:	3023883a 	mov	r17,r6
    9e2c:	dcc02317 	ldw	r19,140(sp)
    9e30:	3025883a 	mov	r18,r6
    9e34:	10000826 	beq	r2,zero,9e58 <_dtoa_r+0x6c>
    9e38:	20c01117 	ldw	r3,68(r4)
    9e3c:	01800044 	movi	r6,1
    9e40:	100b883a 	mov	r5,r2
    9e44:	30cc983a 	sll	r6,r6,r3
    9e48:	10c00115 	stw	r3,4(r2)
    9e4c:	11800215 	stw	r6,8(r2)
    9e50:	000c70c0 	call	c70c <_Bfree>
    9e54:	80001015 	stw	zero,64(r16)
    9e58:	88002e16 	blt	r17,zero,9f14 <_dtoa_r+0x128>
    9e5c:	98000015 	stw	zero,0(r19)
    9e60:	88dffc2c 	andhi	r3,r17,32752
    9e64:	009ffc34 	movhi	r2,32752
    9e68:	18801b26 	beq	r3,r2,9ed8 <_dtoa_r+0xec>
    9e6c:	d9000317 	ldw	r4,12(sp)
    9e70:	900b883a 	mov	r5,r18
    9e74:	000d883a 	mov	r6,zero
    9e78:	000f883a 	mov	r7,zero
    9e7c:	0010b080 	call	10b08 <__eqdf2>
    9e80:	10002b1e 	bne	r2,zero,9f30 <_dtoa_r+0x144>
    9e84:	d8c02217 	ldw	r3,136(sp)
    9e88:	d9002417 	ldw	r4,144(sp)
    9e8c:	00800044 	movi	r2,1
    9e90:	18800015 	stw	r2,0(r3)
    9e94:	2001a026 	beq	r4,zero,a518 <_dtoa_r+0x72c>
    9e98:	00800074 	movhi	r2,1
    9e9c:	10945944 	addi	r2,r2,20837
    9ea0:	20800015 	stw	r2,0(r4)
    9ea4:	10bfffc4 	addi	r2,r2,-1
    9ea8:	dfc02017 	ldw	ra,128(sp)
    9eac:	df001f17 	ldw	fp,124(sp)
    9eb0:	ddc01e17 	ldw	r23,120(sp)
    9eb4:	dd801d17 	ldw	r22,116(sp)
    9eb8:	dd401c17 	ldw	r21,112(sp)
    9ebc:	dd001b17 	ldw	r20,108(sp)
    9ec0:	dcc01a17 	ldw	r19,104(sp)
    9ec4:	dc801917 	ldw	r18,100(sp)
    9ec8:	dc401817 	ldw	r17,96(sp)
    9ecc:	dc001717 	ldw	r16,92(sp)
    9ed0:	dec02104 	addi	sp,sp,132
    9ed4:	f800283a 	ret
    9ed8:	d8c02217 	ldw	r3,136(sp)
    9edc:	d9000317 	ldw	r4,12(sp)
    9ee0:	0089c3c4 	movi	r2,9999
    9ee4:	18800015 	stw	r2,0(r3)
    9ee8:	20017926 	beq	r4,zero,a4d0 <_dtoa_r+0x6e4>
    9eec:	00800074 	movhi	r2,1
    9ef0:	10946504 	addi	r2,r2,20884
    9ef4:	d9802417 	ldw	r6,144(sp)
    9ef8:	303feb26 	beq	r6,zero,9ea8 <__alt_data_end+0xfe009ea8>
    9efc:	10c000c7 	ldb	r3,3(r2)
    9f00:	18017a1e 	bne	r3,zero,a4ec <_dtoa_r+0x700>
    9f04:	10c000c4 	addi	r3,r2,3
    9f08:	d9c02417 	ldw	r7,144(sp)
    9f0c:	38c00015 	stw	r3,0(r7)
    9f10:	003fe506 	br	9ea8 <__alt_data_end+0xfe009ea8>
    9f14:	04a00034 	movhi	r18,32768
    9f18:	94bfffc4 	addi	r18,r18,-1
    9f1c:	8ca4703a 	and	r18,r17,r18
    9f20:	00800044 	movi	r2,1
    9f24:	98800015 	stw	r2,0(r19)
    9f28:	9023883a 	mov	r17,r18
    9f2c:	003fcc06 	br	9e60 <__alt_data_end+0xfe009e60>
    9f30:	d9400317 	ldw	r5,12(sp)
    9f34:	d8800204 	addi	r2,sp,8
    9f38:	8828d53a 	srli	r20,r17,20
    9f3c:	d8800015 	stw	r2,0(sp)
    9f40:	8009883a 	mov	r4,r16
    9f44:	900d883a 	mov	r6,r18
    9f48:	d9c00104 	addi	r7,sp,4
    9f4c:	000d2840 	call	d284 <__d2b>
    9f50:	1039883a 	mov	fp,r2
    9f54:	a001671e 	bne	r20,zero,a4f4 <_dtoa_r+0x708>
    9f58:	dd400217 	ldw	r21,8(sp)
    9f5c:	dd000117 	ldw	r20,4(sp)
    9f60:	00befbc4 	movi	r2,-1041
    9f64:	ad29883a 	add	r20,r21,r20
    9f68:	a082d616 	blt	r20,r2,aac4 <_dtoa_r+0xcd8>
    9f6c:	d9800317 	ldw	r6,12(sp)
    9f70:	013f0384 	movi	r4,-1010
    9f74:	2509c83a 	sub	r4,r4,r20
    9f78:	a0810484 	addi	r2,r20,1042
    9f7c:	8922983a 	sll	r17,r17,r4
    9f80:	3084d83a 	srl	r2,r6,r2
    9f84:	8888b03a 	or	r4,r17,r2
    9f88:	0011e140 	call	11e14 <__floatunsidf>
    9f8c:	1009883a 	mov	r4,r2
    9f90:	017f8434 	movhi	r5,65040
    9f94:	00800044 	movi	r2,1
    9f98:	194b883a 	add	r5,r3,r5
    9f9c:	a53fffc4 	addi	r20,r20,-1
    9fa0:	d8800f15 	stw	r2,60(sp)
    9fa4:	000d883a 	mov	r6,zero
    9fa8:	01cffe34 	movhi	r7,16376
    9fac:	001143c0 	call	1143c <__subdf3>
    9fb0:	1009883a 	mov	r4,r2
    9fb4:	180b883a 	mov	r5,r3
    9fb8:	0198dbf4 	movhi	r6,25455
    9fbc:	3190d844 	addi	r6,r6,17249
    9fc0:	01cff4f4 	movhi	r7,16339
    9fc4:	39e1e9c4 	addi	r7,r7,-30809
    9fc8:	0010d500 	call	10d50 <__muldf3>
    9fcc:	180b883a 	mov	r5,r3
    9fd0:	01a2d874 	movhi	r6,35681
    9fd4:	31b22cc4 	addi	r6,r6,-14157
    9fd8:	01cff1f4 	movhi	r7,16327
    9fdc:	39e28a04 	addi	r7,r7,-30168
    9fe0:	1009883a 	mov	r4,r2
    9fe4:	000f9b80 	call	f9b8 <__adddf3>
    9fe8:	a009883a 	mov	r4,r20
    9fec:	1027883a 	mov	r19,r2
    9ff0:	1823883a 	mov	r17,r3
    9ff4:	0011d440 	call	11d44 <__floatsidf>
    9ff8:	1009883a 	mov	r4,r2
    9ffc:	180b883a 	mov	r5,r3
    a000:	019427f4 	movhi	r6,20639
    a004:	319e7ec4 	addi	r6,r6,31227
    a008:	01cff4f4 	movhi	r7,16339
    a00c:	39d104c4 	addi	r7,r7,17427
    a010:	0010d500 	call	10d50 <__muldf3>
    a014:	9809883a 	mov	r4,r19
    a018:	880b883a 	mov	r5,r17
    a01c:	100d883a 	mov	r6,r2
    a020:	180f883a 	mov	r7,r3
    a024:	000f9b80 	call	f9b8 <__adddf3>
    a028:	1009883a 	mov	r4,r2
    a02c:	180b883a 	mov	r5,r3
    a030:	1027883a 	mov	r19,r2
    a034:	1823883a 	mov	r17,r3
    a038:	0011cc40 	call	11cc4 <__fixdfsi>
    a03c:	9809883a 	mov	r4,r19
    a040:	880b883a 	mov	r5,r17
    a044:	000d883a 	mov	r6,zero
    a048:	000f883a 	mov	r7,zero
    a04c:	d8800615 	stw	r2,24(sp)
    a050:	0010c640 	call	10c64 <__ledf2>
    a054:	10028416 	blt	r2,zero,aa68 <_dtoa_r+0xc7c>
    a058:	d9000617 	ldw	r4,24(sp)
    a05c:	00800584 	movi	r2,22
    a060:	11027236 	bltu	r2,r4,aa2c <_dtoa_r+0xc40>
    a064:	200490fa 	slli	r2,r4,3
    a068:	00c00074 	movhi	r3,1
    a06c:	18d48404 	addi	r3,r3,21008
    a070:	d9800317 	ldw	r6,12(sp)
    a074:	1885883a 	add	r2,r3,r2
    a078:	11000017 	ldw	r4,0(r2)
    a07c:	11400117 	ldw	r5,4(r2)
    a080:	900f883a 	mov	r7,r18
    a084:	0010b8c0 	call	10b8c <__gedf2>
    a088:	0082930e 	bge	zero,r2,aad8 <_dtoa_r+0xcec>
    a08c:	d9800617 	ldw	r6,24(sp)
    a090:	d8000e15 	stw	zero,56(sp)
    a094:	31bfffc4 	addi	r6,r6,-1
    a098:	d9800615 	stw	r6,24(sp)
    a09c:	ad2bc83a 	sub	r21,r21,r20
    a0a0:	ad7fffc4 	addi	r21,r21,-1
    a0a4:	a8026c16 	blt	r21,zero,aa58 <_dtoa_r+0xc6c>
    a0a8:	d8000815 	stw	zero,32(sp)
    a0ac:	d8800617 	ldw	r2,24(sp)
    a0b0:	10026116 	blt	r2,zero,aa38 <_dtoa_r+0xc4c>
    a0b4:	a8ab883a 	add	r21,r21,r2
    a0b8:	d8800b15 	stw	r2,44(sp)
    a0bc:	d8000a15 	stw	zero,40(sp)
    a0c0:	d9c00417 	ldw	r7,16(sp)
    a0c4:	00800244 	movi	r2,9
    a0c8:	11c11636 	bltu	r2,r7,a524 <_dtoa_r+0x738>
    a0cc:	00800144 	movi	r2,5
    a0d0:	11c4cc0e 	bge	r2,r7,b404 <_dtoa_r+0x1618>
    a0d4:	39ffff04 	addi	r7,r7,-4
    a0d8:	d9c00415 	stw	r7,16(sp)
    a0dc:	0027883a 	mov	r19,zero
    a0e0:	d8c00417 	ldw	r3,16(sp)
    a0e4:	008000c4 	movi	r2,3
    a0e8:	1883aa26 	beq	r3,r2,af94 <_dtoa_r+0x11a8>
    a0ec:	10c35b0e 	bge	r2,r3,ae5c <_dtoa_r+0x1070>
    a0f0:	d9000417 	ldw	r4,16(sp)
    a0f4:	00800104 	movi	r2,4
    a0f8:	2082da26 	beq	r4,r2,ac64 <_dtoa_r+0xe78>
    a0fc:	00800144 	movi	r2,5
    a100:	2081091e 	bne	r4,r2,a528 <_dtoa_r+0x73c>
    a104:	01c00044 	movi	r7,1
    a108:	d9c00c15 	stw	r7,48(sp)
    a10c:	d8c02117 	ldw	r3,132(sp)
    a110:	d9000617 	ldw	r4,24(sp)
    a114:	1907883a 	add	r3,r3,r4
    a118:	19800044 	addi	r6,r3,1
    a11c:	d8c00d15 	stw	r3,52(sp)
    a120:	d9800915 	stw	r6,36(sp)
    a124:	0183a90e 	bge	zero,r6,afcc <_dtoa_r+0x11e0>
    a128:	d9800917 	ldw	r6,36(sp)
    a12c:	80001115 	stw	zero,68(r16)
    a130:	008005c4 	movi	r2,23
    a134:	1184b52e 	bgeu	r2,r6,b40c <_dtoa_r+0x1620>
    a138:	00c00044 	movi	r3,1
    a13c:	00800104 	movi	r2,4
    a140:	1085883a 	add	r2,r2,r2
    a144:	11000504 	addi	r4,r2,20
    a148:	180b883a 	mov	r5,r3
    a14c:	18c00044 	addi	r3,r3,1
    a150:	313ffb2e 	bgeu	r6,r4,a140 <__alt_data_end+0xfe00a140>
    a154:	81401115 	stw	r5,68(r16)
    a158:	3023883a 	mov	r17,r6
    a15c:	8009883a 	mov	r4,r16
    a160:	000c6640 	call	c664 <_Balloc>
    a164:	d8800715 	stw	r2,28(sp)
    a168:	80801015 	stw	r2,64(r16)
    a16c:	00800384 	movi	r2,14
    a170:	1440f936 	bltu	r2,r17,a558 <_dtoa_r+0x76c>
    a174:	9800f826 	beq	r19,zero,a558 <_dtoa_r+0x76c>
    a178:	d9c00617 	ldw	r7,24(sp)
    a17c:	01c39c0e 	bge	zero,r7,aff0 <_dtoa_r+0x1204>
    a180:	388003cc 	andi	r2,r7,15
    a184:	100490fa 	slli	r2,r2,3
    a188:	382dd13a 	srai	r22,r7,4
    a18c:	00c00074 	movhi	r3,1
    a190:	18d48404 	addi	r3,r3,21008
    a194:	1885883a 	add	r2,r3,r2
    a198:	b0c0040c 	andi	r3,r22,16
    a19c:	12800017 	ldw	r10,0(r2)
    a1a0:	12400117 	ldw	r9,4(r2)
    a1a4:	18038526 	beq	r3,zero,afbc <_dtoa_r+0x11d0>
    a1a8:	00800074 	movhi	r2,1
    a1ac:	10947a04 	addi	r2,r2,20968
    a1b0:	11800817 	ldw	r6,32(r2)
    a1b4:	11c00917 	ldw	r7,36(r2)
    a1b8:	d9000317 	ldw	r4,12(sp)
    a1bc:	900b883a 	mov	r5,r18
    a1c0:	da401515 	stw	r9,84(sp)
    a1c4:	da801615 	stw	r10,88(sp)
    a1c8:	00102340 	call	10234 <__divdf3>
    a1cc:	da401517 	ldw	r9,84(sp)
    a1d0:	da801617 	ldw	r10,88(sp)
    a1d4:	1027883a 	mov	r19,r2
    a1d8:	1829883a 	mov	r20,r3
    a1dc:	b58003cc 	andi	r22,r22,15
    a1e0:	044000c4 	movi	r17,3
    a1e4:	b0001126 	beq	r22,zero,a22c <_dtoa_r+0x440>
    a1e8:	05c00074 	movhi	r23,1
    a1ec:	bdd47a04 	addi	r23,r23,20968
    a1f0:	5005883a 	mov	r2,r10
    a1f4:	4807883a 	mov	r3,r9
    a1f8:	b180004c 	andi	r6,r22,1
    a1fc:	1009883a 	mov	r4,r2
    a200:	b02dd07a 	srai	r22,r22,1
    a204:	180b883a 	mov	r5,r3
    a208:	30000426 	beq	r6,zero,a21c <_dtoa_r+0x430>
    a20c:	b9800017 	ldw	r6,0(r23)
    a210:	b9c00117 	ldw	r7,4(r23)
    a214:	8c400044 	addi	r17,r17,1
    a218:	0010d500 	call	10d50 <__muldf3>
    a21c:	bdc00204 	addi	r23,r23,8
    a220:	b03ff51e 	bne	r22,zero,a1f8 <__alt_data_end+0xfe00a1f8>
    a224:	1015883a 	mov	r10,r2
    a228:	1813883a 	mov	r9,r3
    a22c:	9809883a 	mov	r4,r19
    a230:	a00b883a 	mov	r5,r20
    a234:	500d883a 	mov	r6,r10
    a238:	480f883a 	mov	r7,r9
    a23c:	00102340 	call	10234 <__divdf3>
    a240:	1027883a 	mov	r19,r2
    a244:	1829883a 	mov	r20,r3
    a248:	d8c00e17 	ldw	r3,56(sp)
    a24c:	18000626 	beq	r3,zero,a268 <_dtoa_r+0x47c>
    a250:	9809883a 	mov	r4,r19
    a254:	a00b883a 	mov	r5,r20
    a258:	000d883a 	mov	r6,zero
    a25c:	01cffc34 	movhi	r7,16368
    a260:	0010c640 	call	10c64 <__ledf2>
    a264:	10041516 	blt	r2,zero,b2bc <_dtoa_r+0x14d0>
    a268:	8809883a 	mov	r4,r17
    a26c:	0011d440 	call	11d44 <__floatsidf>
    a270:	1009883a 	mov	r4,r2
    a274:	180b883a 	mov	r5,r3
    a278:	980d883a 	mov	r6,r19
    a27c:	a00f883a 	mov	r7,r20
    a280:	0010d500 	call	10d50 <__muldf3>
    a284:	1009883a 	mov	r4,r2
    a288:	180b883a 	mov	r5,r3
    a28c:	000d883a 	mov	r6,zero
    a290:	01d00734 	movhi	r7,16412
    a294:	000f9b80 	call	f9b8 <__adddf3>
    a298:	1023883a 	mov	r17,r2
    a29c:	d8800917 	ldw	r2,36(sp)
    a2a0:	05bf3034 	movhi	r22,64704
    a2a4:	1daf883a 	add	r23,r3,r22
    a2a8:	10031e26 	beq	r2,zero,af24 <_dtoa_r+0x1138>
    a2ac:	d8c00617 	ldw	r3,24(sp)
    a2b0:	dac00917 	ldw	r11,36(sp)
    a2b4:	d8c01315 	stw	r3,76(sp)
    a2b8:	d9000c17 	ldw	r4,48(sp)
    a2bc:	20039626 	beq	r4,zero,b118 <_dtoa_r+0x132c>
    a2c0:	58bfffc4 	addi	r2,r11,-1
    a2c4:	100490fa 	slli	r2,r2,3
    a2c8:	00c00074 	movhi	r3,1
    a2cc:	18d48404 	addi	r3,r3,21008
    a2d0:	0009883a 	mov	r4,zero
    a2d4:	1885883a 	add	r2,r3,r2
    a2d8:	11800017 	ldw	r6,0(r2)
    a2dc:	11c00117 	ldw	r7,4(r2)
    a2e0:	d8800717 	ldw	r2,28(sp)
    a2e4:	014ff834 	movhi	r5,16352
    a2e8:	dac01615 	stw	r11,88(sp)
    a2ec:	15800044 	addi	r22,r2,1
    a2f0:	00102340 	call	10234 <__divdf3>
    a2f4:	880d883a 	mov	r6,r17
    a2f8:	b80f883a 	mov	r7,r23
    a2fc:	1009883a 	mov	r4,r2
    a300:	180b883a 	mov	r5,r3
    a304:	001143c0 	call	1143c <__subdf3>
    a308:	a00b883a 	mov	r5,r20
    a30c:	9809883a 	mov	r4,r19
    a310:	102f883a 	mov	r23,r2
    a314:	d8c01015 	stw	r3,64(sp)
    a318:	0011cc40 	call	11cc4 <__fixdfsi>
    a31c:	1009883a 	mov	r4,r2
    a320:	d8801515 	stw	r2,84(sp)
    a324:	0011d440 	call	11d44 <__floatsidf>
    a328:	9809883a 	mov	r4,r19
    a32c:	a00b883a 	mov	r5,r20
    a330:	100d883a 	mov	r6,r2
    a334:	180f883a 	mov	r7,r3
    a338:	001143c0 	call	1143c <__subdf3>
    a33c:	da401517 	ldw	r9,84(sp)
    a340:	1827883a 	mov	r19,r3
    a344:	d8c00717 	ldw	r3,28(sp)
    a348:	d9401017 	ldw	r5,64(sp)
    a34c:	4a400c04 	addi	r9,r9,48
    a350:	1023883a 	mov	r17,r2
    a354:	1a400005 	stb	r9,0(r3)
    a358:	b809883a 	mov	r4,r23
    a35c:	880d883a 	mov	r6,r17
    a360:	980f883a 	mov	r7,r19
    a364:	4829883a 	mov	r20,r9
    a368:	0010b8c0 	call	10b8c <__gedf2>
    a36c:	00842216 	blt	zero,r2,b3f8 <_dtoa_r+0x160c>
    a370:	0009883a 	mov	r4,zero
    a374:	014ffc34 	movhi	r5,16368
    a378:	880d883a 	mov	r6,r17
    a37c:	980f883a 	mov	r7,r19
    a380:	001143c0 	call	1143c <__subdf3>
    a384:	d9401017 	ldw	r5,64(sp)
    a388:	b809883a 	mov	r4,r23
    a38c:	100d883a 	mov	r6,r2
    a390:	180f883a 	mov	r7,r3
    a394:	0010b8c0 	call	10b8c <__gedf2>
    a398:	dac01617 	ldw	r11,88(sp)
    a39c:	00841316 	blt	zero,r2,b3ec <_dtoa_r+0x1600>
    a3a0:	00800044 	movi	r2,1
    a3a4:	12c06c0e 	bge	r2,r11,a558 <_dtoa_r+0x76c>
    a3a8:	d9000717 	ldw	r4,28(sp)
    a3ac:	dd401215 	stw	r21,72(sp)
    a3b0:	dc001115 	stw	r16,68(sp)
    a3b4:	22d7883a 	add	r11,r4,r11
    a3b8:	dc801415 	stw	r18,80(sp)
    a3bc:	582b883a 	mov	r21,r11
    a3c0:	b021883a 	mov	r16,r22
    a3c4:	dc801017 	ldw	r18,64(sp)
    a3c8:	00000906 	br	a3f0 <_dtoa_r+0x604>
    a3cc:	001143c0 	call	1143c <__subdf3>
    a3d0:	1009883a 	mov	r4,r2
    a3d4:	180b883a 	mov	r5,r3
    a3d8:	b80d883a 	mov	r6,r23
    a3dc:	900f883a 	mov	r7,r18
    a3e0:	0010c640 	call	10c64 <__ledf2>
    a3e4:	1003ea16 	blt	r2,zero,b390 <_dtoa_r+0x15a4>
    a3e8:	b543ed26 	beq	r22,r21,b3a0 <_dtoa_r+0x15b4>
    a3ec:	b021883a 	mov	r16,r22
    a3f0:	b809883a 	mov	r4,r23
    a3f4:	900b883a 	mov	r5,r18
    a3f8:	000d883a 	mov	r6,zero
    a3fc:	01d00934 	movhi	r7,16420
    a400:	0010d500 	call	10d50 <__muldf3>
    a404:	000d883a 	mov	r6,zero
    a408:	01d00934 	movhi	r7,16420
    a40c:	8809883a 	mov	r4,r17
    a410:	980b883a 	mov	r5,r19
    a414:	102f883a 	mov	r23,r2
    a418:	1825883a 	mov	r18,r3
    a41c:	0010d500 	call	10d50 <__muldf3>
    a420:	180b883a 	mov	r5,r3
    a424:	1009883a 	mov	r4,r2
    a428:	1823883a 	mov	r17,r3
    a42c:	1027883a 	mov	r19,r2
    a430:	0011cc40 	call	11cc4 <__fixdfsi>
    a434:	1009883a 	mov	r4,r2
    a438:	1029883a 	mov	r20,r2
    a43c:	0011d440 	call	11d44 <__floatsidf>
    a440:	9809883a 	mov	r4,r19
    a444:	880b883a 	mov	r5,r17
    a448:	100d883a 	mov	r6,r2
    a44c:	180f883a 	mov	r7,r3
    a450:	001143c0 	call	1143c <__subdf3>
    a454:	a5000c04 	addi	r20,r20,48
    a458:	1009883a 	mov	r4,r2
    a45c:	180b883a 	mov	r5,r3
    a460:	b80d883a 	mov	r6,r23
    a464:	900f883a 	mov	r7,r18
    a468:	85000005 	stb	r20,0(r16)
    a46c:	1023883a 	mov	r17,r2
    a470:	1827883a 	mov	r19,r3
    a474:	0010c640 	call	10c64 <__ledf2>
    a478:	b5800044 	addi	r22,r22,1
    a47c:	0009883a 	mov	r4,zero
    a480:	014ffc34 	movhi	r5,16368
    a484:	880d883a 	mov	r6,r17
    a488:	980f883a 	mov	r7,r19
    a48c:	103fcf0e 	bge	r2,zero,a3cc <__alt_data_end+0xfe00a3cc>
    a490:	d8c01317 	ldw	r3,76(sp)
    a494:	dc001117 	ldw	r16,68(sp)
    a498:	d8c00615 	stw	r3,24(sp)
    a49c:	8009883a 	mov	r4,r16
    a4a0:	e00b883a 	mov	r5,fp
    a4a4:	000c70c0 	call	c70c <_Bfree>
    a4a8:	d9800617 	ldw	r6,24(sp)
    a4ac:	d9c02217 	ldw	r7,136(sp)
    a4b0:	b0000005 	stb	zero,0(r22)
    a4b4:	30800044 	addi	r2,r6,1
    a4b8:	38800015 	stw	r2,0(r7)
    a4bc:	d8802417 	ldw	r2,144(sp)
    a4c0:	10026426 	beq	r2,zero,ae54 <_dtoa_r+0x1068>
    a4c4:	15800015 	stw	r22,0(r2)
    a4c8:	d8800717 	ldw	r2,28(sp)
    a4cc:	003e7606 	br	9ea8 <__alt_data_end+0xfe009ea8>
    a4d0:	00800434 	movhi	r2,16
    a4d4:	10bfffc4 	addi	r2,r2,-1
    a4d8:	88a2703a 	and	r17,r17,r2
    a4dc:	883e831e 	bne	r17,zero,9eec <__alt_data_end+0xfe009eec>
    a4e0:	00800074 	movhi	r2,1
    a4e4:	10946204 	addi	r2,r2,20872
    a4e8:	003e8206 	br	9ef4 <__alt_data_end+0xfe009ef4>
    a4ec:	10c00204 	addi	r3,r2,8
    a4f0:	003e8506 	br	9f08 <__alt_data_end+0xfe009f08>
    a4f4:	01400434 	movhi	r5,16
    a4f8:	297fffc4 	addi	r5,r5,-1
    a4fc:	914a703a 	and	r5,r18,r5
    a500:	d9000317 	ldw	r4,12(sp)
    a504:	294ffc34 	orhi	r5,r5,16368
    a508:	a53f0044 	addi	r20,r20,-1023
    a50c:	dd400217 	ldw	r21,8(sp)
    a510:	d8000f15 	stw	zero,60(sp)
    a514:	003ea306 	br	9fa4 <__alt_data_end+0xfe009fa4>
    a518:	00800074 	movhi	r2,1
    a51c:	10945904 	addi	r2,r2,20836
    a520:	003e6106 	br	9ea8 <__alt_data_end+0xfe009ea8>
    a524:	d8000415 	stw	zero,16(sp)
    a528:	8009883a 	mov	r4,r16
    a52c:	80001115 	stw	zero,68(r16)
    a530:	000b883a 	mov	r5,zero
    a534:	000c6640 	call	c664 <_Balloc>
    a538:	00ffffc4 	movi	r3,-1
    a53c:	01000044 	movi	r4,1
    a540:	d8800715 	stw	r2,28(sp)
    a544:	d8c00d15 	stw	r3,52(sp)
    a548:	80801015 	stw	r2,64(r16)
    a54c:	d8002115 	stw	zero,132(sp)
    a550:	d8c00915 	stw	r3,36(sp)
    a554:	d9000c15 	stw	r4,48(sp)
    a558:	d8800117 	ldw	r2,4(sp)
    a55c:	10008e16 	blt	r2,zero,a798 <_dtoa_r+0x9ac>
    a560:	d9000617 	ldw	r4,24(sp)
    a564:	00c00384 	movi	r3,14
    a568:	19008b16 	blt	r3,r4,a798 <_dtoa_r+0x9ac>
    a56c:	200490fa 	slli	r2,r4,3
    a570:	d9802117 	ldw	r6,132(sp)
    a574:	00c00074 	movhi	r3,1
    a578:	18d48404 	addi	r3,r3,21008
    a57c:	1885883a 	add	r2,r3,r2
    a580:	14400017 	ldw	r17,0(r2)
    a584:	14c00117 	ldw	r19,4(r2)
    a588:	3001be16 	blt	r6,zero,ac84 <_dtoa_r+0xe98>
    a58c:	d9000317 	ldw	r4,12(sp)
    a590:	880d883a 	mov	r6,r17
    a594:	980f883a 	mov	r7,r19
    a598:	900b883a 	mov	r5,r18
    a59c:	00102340 	call	10234 <__divdf3>
    a5a0:	180b883a 	mov	r5,r3
    a5a4:	1009883a 	mov	r4,r2
    a5a8:	0011cc40 	call	11cc4 <__fixdfsi>
    a5ac:	1009883a 	mov	r4,r2
    a5b0:	102f883a 	mov	r23,r2
    a5b4:	0011d440 	call	11d44 <__floatsidf>
    a5b8:	1009883a 	mov	r4,r2
    a5bc:	180b883a 	mov	r5,r3
    a5c0:	880d883a 	mov	r6,r17
    a5c4:	980f883a 	mov	r7,r19
    a5c8:	0010d500 	call	10d50 <__muldf3>
    a5cc:	d9000317 	ldw	r4,12(sp)
    a5d0:	900b883a 	mov	r5,r18
    a5d4:	100d883a 	mov	r6,r2
    a5d8:	180f883a 	mov	r7,r3
    a5dc:	001143c0 	call	1143c <__subdf3>
    a5e0:	d9c00717 	ldw	r7,28(sp)
    a5e4:	1009883a 	mov	r4,r2
    a5e8:	b8800c04 	addi	r2,r23,48
    a5ec:	38800005 	stb	r2,0(r7)
    a5f0:	3d800044 	addi	r22,r7,1
    a5f4:	d9c00917 	ldw	r7,36(sp)
    a5f8:	01800044 	movi	r6,1
    a5fc:	180b883a 	mov	r5,r3
    a600:	2005883a 	mov	r2,r4
    a604:	39803e26 	beq	r7,r6,a700 <_dtoa_r+0x914>
    a608:	000d883a 	mov	r6,zero
    a60c:	01d00934 	movhi	r7,16420
    a610:	0010d500 	call	10d50 <__muldf3>
    a614:	1009883a 	mov	r4,r2
    a618:	180b883a 	mov	r5,r3
    a61c:	000d883a 	mov	r6,zero
    a620:	000f883a 	mov	r7,zero
    a624:	1029883a 	mov	r20,r2
    a628:	182b883a 	mov	r21,r3
    a62c:	0010b080 	call	10b08 <__eqdf2>
    a630:	103f9a26 	beq	r2,zero,a49c <__alt_data_end+0xfe00a49c>
    a634:	d8c00717 	ldw	r3,28(sp)
    a638:	d9000917 	ldw	r4,36(sp)
    a63c:	b025883a 	mov	r18,r22
    a640:	df000415 	stw	fp,16(sp)
    a644:	1905883a 	add	r2,r3,r4
    a648:	15ffffc4 	addi	r23,r2,-1
    a64c:	dc000315 	stw	r16,12(sp)
    a650:	00000a06 	br	a67c <_dtoa_r+0x890>
    a654:	0010d500 	call	10d50 <__muldf3>
    a658:	1009883a 	mov	r4,r2
    a65c:	180b883a 	mov	r5,r3
    a660:	000d883a 	mov	r6,zero
    a664:	000f883a 	mov	r7,zero
    a668:	1029883a 	mov	r20,r2
    a66c:	182b883a 	mov	r21,r3
    a670:	0010b080 	call	10b08 <__eqdf2>
    a674:	10021926 	beq	r2,zero,aedc <_dtoa_r+0x10f0>
    a678:	e025883a 	mov	r18,fp
    a67c:	880d883a 	mov	r6,r17
    a680:	980f883a 	mov	r7,r19
    a684:	a009883a 	mov	r4,r20
    a688:	a80b883a 	mov	r5,r21
    a68c:	00102340 	call	10234 <__divdf3>
    a690:	180b883a 	mov	r5,r3
    a694:	1009883a 	mov	r4,r2
    a698:	0011cc40 	call	11cc4 <__fixdfsi>
    a69c:	1009883a 	mov	r4,r2
    a6a0:	1021883a 	mov	r16,r2
    a6a4:	0011d440 	call	11d44 <__floatsidf>
    a6a8:	1009883a 	mov	r4,r2
    a6ac:	180b883a 	mov	r5,r3
    a6b0:	880d883a 	mov	r6,r17
    a6b4:	980f883a 	mov	r7,r19
    a6b8:	0010d500 	call	10d50 <__muldf3>
    a6bc:	a009883a 	mov	r4,r20
    a6c0:	a80b883a 	mov	r5,r21
    a6c4:	100d883a 	mov	r6,r2
    a6c8:	180f883a 	mov	r7,r3
    a6cc:	001143c0 	call	1143c <__subdf3>
    a6d0:	82800c04 	addi	r10,r16,48
    a6d4:	97000044 	addi	fp,r18,1
    a6d8:	92800005 	stb	r10,0(r18)
    a6dc:	000d883a 	mov	r6,zero
    a6e0:	01d00934 	movhi	r7,16420
    a6e4:	1009883a 	mov	r4,r2
    a6e8:	180b883a 	mov	r5,r3
    a6ec:	e02d883a 	mov	r22,fp
    a6f0:	95ffd81e 	bne	r18,r23,a654 <__alt_data_end+0xfe00a654>
    a6f4:	802f883a 	mov	r23,r16
    a6f8:	df000417 	ldw	fp,16(sp)
    a6fc:	dc000317 	ldw	r16,12(sp)
    a700:	1009883a 	mov	r4,r2
    a704:	180b883a 	mov	r5,r3
    a708:	100d883a 	mov	r6,r2
    a70c:	180f883a 	mov	r7,r3
    a710:	000f9b80 	call	f9b8 <__adddf3>
    a714:	8809883a 	mov	r4,r17
    a718:	980b883a 	mov	r5,r19
    a71c:	100d883a 	mov	r6,r2
    a720:	180f883a 	mov	r7,r3
    a724:	1025883a 	mov	r18,r2
    a728:	1829883a 	mov	r20,r3
    a72c:	0010c640 	call	10c64 <__ledf2>
    a730:	10000816 	blt	r2,zero,a754 <_dtoa_r+0x968>
    a734:	8809883a 	mov	r4,r17
    a738:	980b883a 	mov	r5,r19
    a73c:	900d883a 	mov	r6,r18
    a740:	a00f883a 	mov	r7,r20
    a744:	0010b080 	call	10b08 <__eqdf2>
    a748:	103f541e 	bne	r2,zero,a49c <__alt_data_end+0xfe00a49c>
    a74c:	bdc0004c 	andi	r23,r23,1
    a750:	b83f5226 	beq	r23,zero,a49c <__alt_data_end+0xfe00a49c>
    a754:	b53fffc3 	ldbu	r20,-1(r22)
    a758:	b0ffff84 	addi	r3,r22,-2
    a75c:	01400e44 	movi	r5,57
    a760:	d9800717 	ldw	r6,28(sp)
    a764:	00000406 	br	a778 <_dtoa_r+0x98c>
    a768:	30824326 	beq	r6,r2,b078 <_dtoa_r+0x128c>
    a76c:	1d000003 	ldbu	r20,0(r3)
    a770:	102d883a 	mov	r22,r2
    a774:	18ffffc4 	addi	r3,r3,-1
    a778:	a1003fcc 	andi	r4,r20,255
    a77c:	2100201c 	xori	r4,r4,128
    a780:	213fe004 	addi	r4,r4,-128
    a784:	b0bfffc4 	addi	r2,r22,-1
    a788:	217ff726 	beq	r4,r5,a768 <__alt_data_end+0xfe00a768>
    a78c:	a2400044 	addi	r9,r20,1
    a790:	12400005 	stb	r9,0(r2)
    a794:	003f4106 	br	a49c <__alt_data_end+0xfe00a49c>
    a798:	d9000c17 	ldw	r4,48(sp)
    a79c:	2000be26 	beq	r4,zero,aa98 <_dtoa_r+0xcac>
    a7a0:	d9800417 	ldw	r6,16(sp)
    a7a4:	00c00044 	movi	r3,1
    a7a8:	19815e0e 	bge	r3,r6,ad24 <_dtoa_r+0xf38>
    a7ac:	d8800917 	ldw	r2,36(sp)
    a7b0:	d8c00a17 	ldw	r3,40(sp)
    a7b4:	153fffc4 	addi	r20,r2,-1
    a7b8:	1d01f816 	blt	r3,r20,af9c <_dtoa_r+0x11b0>
    a7bc:	1d29c83a 	sub	r20,r3,r20
    a7c0:	d9c00917 	ldw	r7,36(sp)
    a7c4:	3802ad16 	blt	r7,zero,b27c <_dtoa_r+0x1490>
    a7c8:	dcc00817 	ldw	r19,32(sp)
    a7cc:	d8800917 	ldw	r2,36(sp)
    a7d0:	d8c00817 	ldw	r3,32(sp)
    a7d4:	8009883a 	mov	r4,r16
    a7d8:	01400044 	movi	r5,1
    a7dc:	1887883a 	add	r3,r3,r2
    a7e0:	d8c00815 	stw	r3,32(sp)
    a7e4:	a8ab883a 	add	r21,r21,r2
    a7e8:	000ca640 	call	ca64 <__i2b>
    a7ec:	1023883a 	mov	r17,r2
    a7f0:	98000826 	beq	r19,zero,a814 <_dtoa_r+0xa28>
    a7f4:	0540070e 	bge	zero,r21,a814 <_dtoa_r+0xa28>
    a7f8:	a805883a 	mov	r2,r21
    a7fc:	9d411716 	blt	r19,r21,ac5c <_dtoa_r+0xe70>
    a800:	d9000817 	ldw	r4,32(sp)
    a804:	98a7c83a 	sub	r19,r19,r2
    a808:	a8abc83a 	sub	r21,r21,r2
    a80c:	2089c83a 	sub	r4,r4,r2
    a810:	d9000815 	stw	r4,32(sp)
    a814:	d9800a17 	ldw	r6,40(sp)
    a818:	0180140e 	bge	zero,r6,a86c <_dtoa_r+0xa80>
    a81c:	d9c00c17 	ldw	r7,48(sp)
    a820:	3801d626 	beq	r7,zero,af7c <_dtoa_r+0x1190>
    a824:	05000e0e 	bge	zero,r20,a860 <_dtoa_r+0xa74>
    a828:	880b883a 	mov	r5,r17
    a82c:	8009883a 	mov	r4,r16
    a830:	a00d883a 	mov	r6,r20
    a834:	000cc8c0 	call	cc8c <__pow5mult>
    a838:	e00d883a 	mov	r6,fp
    a83c:	8009883a 	mov	r4,r16
    a840:	100b883a 	mov	r5,r2
    a844:	1023883a 	mov	r17,r2
    a848:	000caa00 	call	caa0 <__multiply>
    a84c:	102d883a 	mov	r22,r2
    a850:	e00b883a 	mov	r5,fp
    a854:	8009883a 	mov	r4,r16
    a858:	000c70c0 	call	c70c <_Bfree>
    a85c:	b039883a 	mov	fp,r22
    a860:	d8800a17 	ldw	r2,40(sp)
    a864:	150dc83a 	sub	r6,r2,r20
    a868:	30011f1e 	bne	r6,zero,ace8 <_dtoa_r+0xefc>
    a86c:	8009883a 	mov	r4,r16
    a870:	01400044 	movi	r5,1
    a874:	000ca640 	call	ca64 <__i2b>
    a878:	d8c00b17 	ldw	r3,44(sp)
    a87c:	1029883a 	mov	r20,r2
    a880:	00c0050e 	bge	zero,r3,a898 <_dtoa_r+0xaac>
    a884:	8009883a 	mov	r4,r16
    a888:	100b883a 	mov	r5,r2
    a88c:	180d883a 	mov	r6,r3
    a890:	000cc8c0 	call	cc8c <__pow5mult>
    a894:	1029883a 	mov	r20,r2
    a898:	d9000417 	ldw	r4,16(sp)
    a89c:	00800044 	movi	r2,1
    a8a0:	1100e00e 	bge	r2,r4,ac24 <_dtoa_r+0xe38>
    a8a4:	0025883a 	mov	r18,zero
    a8a8:	d8800b17 	ldw	r2,44(sp)
    a8ac:	10015f1e 	bne	r2,zero,ae2c <_dtoa_r+0x1040>
    a8b0:	00800044 	movi	r2,1
    a8b4:	1545883a 	add	r2,r2,r21
    a8b8:	108007cc 	andi	r2,r2,31
    a8bc:	10007a26 	beq	r2,zero,aaa8 <_dtoa_r+0xcbc>
    a8c0:	01000804 	movi	r4,32
    a8c4:	2089c83a 	sub	r4,r4,r2
    a8c8:	00c00104 	movi	r3,4
    a8cc:	1902d20e 	bge	r3,r4,b418 <_dtoa_r+0x162c>
    a8d0:	00c00704 	movi	r3,28
    a8d4:	1885c83a 	sub	r2,r3,r2
    a8d8:	d8c00817 	ldw	r3,32(sp)
    a8dc:	98a7883a 	add	r19,r19,r2
    a8e0:	a8ab883a 	add	r21,r21,r2
    a8e4:	1887883a 	add	r3,r3,r2
    a8e8:	d8c00815 	stw	r3,32(sp)
    a8ec:	d9800817 	ldw	r6,32(sp)
    a8f0:	0180040e 	bge	zero,r6,a904 <_dtoa_r+0xb18>
    a8f4:	e00b883a 	mov	r5,fp
    a8f8:	8009883a 	mov	r4,r16
    a8fc:	000cdd40 	call	cdd4 <__lshift>
    a900:	1039883a 	mov	fp,r2
    a904:	0540050e 	bge	zero,r21,a91c <_dtoa_r+0xb30>
    a908:	a00b883a 	mov	r5,r20
    a90c:	8009883a 	mov	r4,r16
    a910:	a80d883a 	mov	r6,r21
    a914:	000cdd40 	call	cdd4 <__lshift>
    a918:	1029883a 	mov	r20,r2
    a91c:	d9c00e17 	ldw	r7,56(sp)
    a920:	3801301e 	bne	r7,zero,ade4 <_dtoa_r+0xff8>
    a924:	d9c00917 	ldw	r7,36(sp)
    a928:	01c1500e 	bge	zero,r7,ae6c <_dtoa_r+0x1080>
    a92c:	d8800c17 	ldw	r2,48(sp)
    a930:	10006b1e 	bne	r2,zero,aae0 <_dtoa_r+0xcf4>
    a934:	dc800717 	ldw	r18,28(sp)
    a938:	dcc00917 	ldw	r19,36(sp)
    a93c:	902b883a 	mov	r21,r18
    a940:	00000206 	br	a94c <_dtoa_r+0xb60>
    a944:	000c7340 	call	c734 <__multadd>
    a948:	1039883a 	mov	fp,r2
    a94c:	e009883a 	mov	r4,fp
    a950:	a00b883a 	mov	r5,r20
    a954:	0009be80 	call	9be8 <quorem>
    a958:	10800c04 	addi	r2,r2,48
    a95c:	90800005 	stb	r2,0(r18)
    a960:	94800044 	addi	r18,r18,1
    a964:	9547c83a 	sub	r3,r18,r21
    a968:	8009883a 	mov	r4,r16
    a96c:	e00b883a 	mov	r5,fp
    a970:	01800284 	movi	r6,10
    a974:	000f883a 	mov	r7,zero
    a978:	1cfff216 	blt	r3,r19,a944 <__alt_data_end+0xfe00a944>
    a97c:	102f883a 	mov	r23,r2
    a980:	d8800917 	ldw	r2,36(sp)
    a984:	0082410e 	bge	zero,r2,b28c <_dtoa_r+0x14a0>
    a988:	d9000717 	ldw	r4,28(sp)
    a98c:	002b883a 	mov	r21,zero
    a990:	20ad883a 	add	r22,r4,r2
    a994:	e00b883a 	mov	r5,fp
    a998:	8009883a 	mov	r4,r16
    a99c:	01800044 	movi	r6,1
    a9a0:	000cdd40 	call	cdd4 <__lshift>
    a9a4:	1009883a 	mov	r4,r2
    a9a8:	a00b883a 	mov	r5,r20
    a9ac:	1039883a 	mov	fp,r2
    a9b0:	000cf240 	call	cf24 <__mcmp>
    a9b4:	0080d10e 	bge	zero,r2,acfc <_dtoa_r+0xf10>
    a9b8:	b13fffc3 	ldbu	r4,-1(r22)
    a9bc:	b0ffff84 	addi	r3,r22,-2
    a9c0:	01800e44 	movi	r6,57
    a9c4:	d9c00717 	ldw	r7,28(sp)
    a9c8:	00000406 	br	a9dc <_dtoa_r+0xbf0>
    a9cc:	38813c26 	beq	r7,r2,aec0 <_dtoa_r+0x10d4>
    a9d0:	19000003 	ldbu	r4,0(r3)
    a9d4:	102d883a 	mov	r22,r2
    a9d8:	18ffffc4 	addi	r3,r3,-1
    a9dc:	21403fcc 	andi	r5,r4,255
    a9e0:	2940201c 	xori	r5,r5,128
    a9e4:	297fe004 	addi	r5,r5,-128
    a9e8:	b0bfffc4 	addi	r2,r22,-1
    a9ec:	29bff726 	beq	r5,r6,a9cc <__alt_data_end+0xfe00a9cc>
    a9f0:	21000044 	addi	r4,r4,1
    a9f4:	11000005 	stb	r4,0(r2)
    a9f8:	8009883a 	mov	r4,r16
    a9fc:	a00b883a 	mov	r5,r20
    aa00:	000c70c0 	call	c70c <_Bfree>
    aa04:	883ea526 	beq	r17,zero,a49c <__alt_data_end+0xfe00a49c>
    aa08:	a8000426 	beq	r21,zero,aa1c <_dtoa_r+0xc30>
    aa0c:	ac400326 	beq	r21,r17,aa1c <_dtoa_r+0xc30>
    aa10:	8009883a 	mov	r4,r16
    aa14:	a80b883a 	mov	r5,r21
    aa18:	000c70c0 	call	c70c <_Bfree>
    aa1c:	8009883a 	mov	r4,r16
    aa20:	880b883a 	mov	r5,r17
    aa24:	000c70c0 	call	c70c <_Bfree>
    aa28:	003e9c06 	br	a49c <__alt_data_end+0xfe00a49c>
    aa2c:	01c00044 	movi	r7,1
    aa30:	d9c00e15 	stw	r7,56(sp)
    aa34:	003d9906 	br	a09c <__alt_data_end+0xfe00a09c>
    aa38:	d8c00817 	ldw	r3,32(sp)
    aa3c:	d9000617 	ldw	r4,24(sp)
    aa40:	d8000b15 	stw	zero,44(sp)
    aa44:	1907c83a 	sub	r3,r3,r4
    aa48:	010dc83a 	sub	r6,zero,r4
    aa4c:	d8c00815 	stw	r3,32(sp)
    aa50:	d9800a15 	stw	r6,40(sp)
    aa54:	003d9a06 	br	a0c0 <__alt_data_end+0xfe00a0c0>
    aa58:	056bc83a 	sub	r21,zero,r21
    aa5c:	dd400815 	stw	r21,32(sp)
    aa60:	002b883a 	mov	r21,zero
    aa64:	003d9106 	br	a0ac <__alt_data_end+0xfe00a0ac>
    aa68:	d9000617 	ldw	r4,24(sp)
    aa6c:	0011d440 	call	11d44 <__floatsidf>
    aa70:	1009883a 	mov	r4,r2
    aa74:	180b883a 	mov	r5,r3
    aa78:	980d883a 	mov	r6,r19
    aa7c:	880f883a 	mov	r7,r17
    aa80:	0010b080 	call	10b08 <__eqdf2>
    aa84:	103d7426 	beq	r2,zero,a058 <__alt_data_end+0xfe00a058>
    aa88:	d8c00617 	ldw	r3,24(sp)
    aa8c:	18ffffc4 	addi	r3,r3,-1
    aa90:	d8c00615 	stw	r3,24(sp)
    aa94:	003d7006 	br	a058 <__alt_data_end+0xfe00a058>
    aa98:	dd000a17 	ldw	r20,40(sp)
    aa9c:	dcc00817 	ldw	r19,32(sp)
    aaa0:	0023883a 	mov	r17,zero
    aaa4:	003f5206 	br	a7f0 <__alt_data_end+0xfe00a7f0>
    aaa8:	00800704 	movi	r2,28
    aaac:	d9000817 	ldw	r4,32(sp)
    aab0:	98a7883a 	add	r19,r19,r2
    aab4:	a8ab883a 	add	r21,r21,r2
    aab8:	2089883a 	add	r4,r4,r2
    aabc:	d9000815 	stw	r4,32(sp)
    aac0:	003f8a06 	br	a8ec <__alt_data_end+0xfe00a8ec>
    aac4:	d9c00317 	ldw	r7,12(sp)
    aac8:	013efb84 	movi	r4,-1042
    aacc:	2509c83a 	sub	r4,r4,r20
    aad0:	3908983a 	sll	r4,r7,r4
    aad4:	003d2c06 	br	9f88 <__alt_data_end+0xfe009f88>
    aad8:	d8000e15 	stw	zero,56(sp)
    aadc:	003d6f06 	br	a09c <__alt_data_end+0xfe00a09c>
    aae0:	04c0050e 	bge	zero,r19,aaf8 <_dtoa_r+0xd0c>
    aae4:	880b883a 	mov	r5,r17
    aae8:	8009883a 	mov	r4,r16
    aaec:	980d883a 	mov	r6,r19
    aaf0:	000cdd40 	call	cdd4 <__lshift>
    aaf4:	1023883a 	mov	r17,r2
    aaf8:	9001681e 	bne	r18,zero,b09c <_dtoa_r+0x12b0>
    aafc:	8827883a 	mov	r19,r17
    ab00:	d8c00717 	ldw	r3,28(sp)
    ab04:	d9000917 	ldw	r4,36(sp)
    ab08:	1dffffc4 	addi	r23,r3,-1
    ab0c:	1825883a 	mov	r18,r3
    ab10:	d8c00317 	ldw	r3,12(sp)
    ab14:	b92f883a 	add	r23,r23,r4
    ab18:	ddc00515 	stw	r23,20(sp)
    ab1c:	18c0004c 	andi	r3,r3,1
    ab20:	d8c00315 	stw	r3,12(sp)
    ab24:	e009883a 	mov	r4,fp
    ab28:	a00b883a 	mov	r5,r20
    ab2c:	0009be80 	call	9be8 <quorem>
    ab30:	e009883a 	mov	r4,fp
    ab34:	880b883a 	mov	r5,r17
    ab38:	102d883a 	mov	r22,r2
    ab3c:	000cf240 	call	cf24 <__mcmp>
    ab40:	8009883a 	mov	r4,r16
    ab44:	a00b883a 	mov	r5,r20
    ab48:	980d883a 	mov	r6,r19
    ab4c:	102b883a 	mov	r21,r2
    ab50:	000cf840 	call	cf84 <__mdiff>
    ab54:	1007883a 	mov	r3,r2
    ab58:	10800317 	ldw	r2,12(r2)
    ab5c:	b5c00c04 	addi	r23,r22,48
    ab60:	10009b1e 	bne	r2,zero,add0 <_dtoa_r+0xfe4>
    ab64:	180b883a 	mov	r5,r3
    ab68:	e009883a 	mov	r4,fp
    ab6c:	d8c01515 	stw	r3,84(sp)
    ab70:	000cf240 	call	cf24 <__mcmp>
    ab74:	d8c01517 	ldw	r3,84(sp)
    ab78:	8009883a 	mov	r4,r16
    ab7c:	d8801515 	stw	r2,84(sp)
    ab80:	180b883a 	mov	r5,r3
    ab84:	000c70c0 	call	c70c <_Bfree>
    ab88:	d8801517 	ldw	r2,84(sp)
    ab8c:	1000041e 	bne	r2,zero,aba0 <_dtoa_r+0xdb4>
    ab90:	d9000417 	ldw	r4,16(sp)
    ab94:	2000021e 	bne	r4,zero,aba0 <_dtoa_r+0xdb4>
    ab98:	d8c00317 	ldw	r3,12(sp)
    ab9c:	18007926 	beq	r3,zero,ad84 <_dtoa_r+0xf98>
    aba0:	a8006616 	blt	r21,zero,ad3c <_dtoa_r+0xf50>
    aba4:	a800041e 	bne	r21,zero,abb8 <_dtoa_r+0xdcc>
    aba8:	d9000417 	ldw	r4,16(sp)
    abac:	2000021e 	bne	r4,zero,abb8 <_dtoa_r+0xdcc>
    abb0:	d8c00317 	ldw	r3,12(sp)
    abb4:	18006126 	beq	r3,zero,ad3c <_dtoa_r+0xf50>
    abb8:	00814916 	blt	zero,r2,b0e0 <_dtoa_r+0x12f4>
    abbc:	d8c00517 	ldw	r3,20(sp)
    abc0:	95400044 	addi	r21,r18,1
    abc4:	95c00005 	stb	r23,0(r18)
    abc8:	a82d883a 	mov	r22,r21
    abcc:	90c14c26 	beq	r18,r3,b100 <_dtoa_r+0x1314>
    abd0:	e00b883a 	mov	r5,fp
    abd4:	8009883a 	mov	r4,r16
    abd8:	01800284 	movi	r6,10
    abdc:	000f883a 	mov	r7,zero
    abe0:	000c7340 	call	c734 <__multadd>
    abe4:	1039883a 	mov	fp,r2
    abe8:	8cc07026 	beq	r17,r19,adac <_dtoa_r+0xfc0>
    abec:	880b883a 	mov	r5,r17
    abf0:	01800284 	movi	r6,10
    abf4:	000f883a 	mov	r7,zero
    abf8:	8009883a 	mov	r4,r16
    abfc:	000c7340 	call	c734 <__multadd>
    ac00:	980b883a 	mov	r5,r19
    ac04:	8009883a 	mov	r4,r16
    ac08:	01800284 	movi	r6,10
    ac0c:	000f883a 	mov	r7,zero
    ac10:	1023883a 	mov	r17,r2
    ac14:	000c7340 	call	c734 <__multadd>
    ac18:	1027883a 	mov	r19,r2
    ac1c:	a825883a 	mov	r18,r21
    ac20:	003fc006 	br	ab24 <__alt_data_end+0xfe00ab24>
    ac24:	d9800317 	ldw	r6,12(sp)
    ac28:	303f1e1e 	bne	r6,zero,a8a4 <__alt_data_end+0xfe00a8a4>
    ac2c:	00c00434 	movhi	r3,16
    ac30:	18ffffc4 	addi	r3,r3,-1
    ac34:	90c6703a 	and	r3,r18,r3
    ac38:	183f1a1e 	bne	r3,zero,a8a4 <__alt_data_end+0xfe00a8a4>
    ac3c:	949ffc2c 	andhi	r18,r18,32752
    ac40:	903f1826 	beq	r18,zero,a8a4 <__alt_data_end+0xfe00a8a4>
    ac44:	d9c00817 	ldw	r7,32(sp)
    ac48:	a8ab883a 	add	r21,r21,r2
    ac4c:	1025883a 	mov	r18,r2
    ac50:	388f883a 	add	r7,r7,r2
    ac54:	d9c00815 	stw	r7,32(sp)
    ac58:	003f1306 	br	a8a8 <__alt_data_end+0xfe00a8a8>
    ac5c:	9805883a 	mov	r2,r19
    ac60:	003ee706 	br	a800 <__alt_data_end+0xfe00a800>
    ac64:	01800044 	movi	r6,1
    ac68:	d9800c15 	stw	r6,48(sp)
    ac6c:	d8802117 	ldw	r2,132(sp)
    ac70:	0080da0e 	bge	zero,r2,afdc <_dtoa_r+0x11f0>
    ac74:	100d883a 	mov	r6,r2
    ac78:	d8800d15 	stw	r2,52(sp)
    ac7c:	d8800915 	stw	r2,36(sp)
    ac80:	003d2a06 	br	a12c <__alt_data_end+0xfe00a12c>
    ac84:	d8800917 	ldw	r2,36(sp)
    ac88:	00be4016 	blt	zero,r2,a58c <__alt_data_end+0xfe00a58c>
    ac8c:	1000b81e 	bne	r2,zero,af70 <_dtoa_r+0x1184>
    ac90:	8809883a 	mov	r4,r17
    ac94:	980b883a 	mov	r5,r19
    ac98:	000d883a 	mov	r6,zero
    ac9c:	01d00534 	movhi	r7,16404
    aca0:	0010d500 	call	10d50 <__muldf3>
    aca4:	d9800317 	ldw	r6,12(sp)
    aca8:	1009883a 	mov	r4,r2
    acac:	180b883a 	mov	r5,r3
    acb0:	900f883a 	mov	r7,r18
    acb4:	0010b8c0 	call	10b8c <__gedf2>
    acb8:	0029883a 	mov	r20,zero
    acbc:	0023883a 	mov	r17,zero
    acc0:	10007716 	blt	r2,zero,aea0 <_dtoa_r+0x10b4>
    acc4:	d9002117 	ldw	r4,132(sp)
    acc8:	dd800717 	ldw	r22,28(sp)
    accc:	0108303a 	nor	r4,zero,r4
    acd0:	d9000615 	stw	r4,24(sp)
    acd4:	8009883a 	mov	r4,r16
    acd8:	a00b883a 	mov	r5,r20
    acdc:	000c70c0 	call	c70c <_Bfree>
    ace0:	883f4e1e 	bne	r17,zero,aa1c <__alt_data_end+0xfe00aa1c>
    ace4:	003ded06 	br	a49c <__alt_data_end+0xfe00a49c>
    ace8:	e00b883a 	mov	r5,fp
    acec:	8009883a 	mov	r4,r16
    acf0:	000cc8c0 	call	cc8c <__pow5mult>
    acf4:	1039883a 	mov	fp,r2
    acf8:	003edc06 	br	a86c <__alt_data_end+0xfe00a86c>
    acfc:	1000021e 	bne	r2,zero,ad08 <_dtoa_r+0xf1c>
    ad00:	ba40004c 	andi	r9,r23,1
    ad04:	483f2c1e 	bne	r9,zero,a9b8 <__alt_data_end+0xfe00a9b8>
    ad08:	01000c04 	movi	r4,48
    ad0c:	00000106 	br	ad14 <_dtoa_r+0xf28>
    ad10:	102d883a 	mov	r22,r2
    ad14:	b0bfffc4 	addi	r2,r22,-1
    ad18:	10c00007 	ldb	r3,0(r2)
    ad1c:	193ffc26 	beq	r3,r4,ad10 <__alt_data_end+0xfe00ad10>
    ad20:	003f3506 	br	a9f8 <__alt_data_end+0xfe00a9f8>
    ad24:	d9c00f17 	ldw	r7,60(sp)
    ad28:	38015a26 	beq	r7,zero,b294 <_dtoa_r+0x14a8>
    ad2c:	10810cc4 	addi	r2,r2,1075
    ad30:	dd000a17 	ldw	r20,40(sp)
    ad34:	dcc00817 	ldw	r19,32(sp)
    ad38:	003ea506 	br	a7d0 <__alt_data_end+0xfe00a7d0>
    ad3c:	00800c0e 	bge	zero,r2,ad70 <_dtoa_r+0xf84>
    ad40:	e00b883a 	mov	r5,fp
    ad44:	8009883a 	mov	r4,r16
    ad48:	01800044 	movi	r6,1
    ad4c:	000cdd40 	call	cdd4 <__lshift>
    ad50:	1009883a 	mov	r4,r2
    ad54:	a00b883a 	mov	r5,r20
    ad58:	1039883a 	mov	fp,r2
    ad5c:	000cf240 	call	cf24 <__mcmp>
    ad60:	0081930e 	bge	zero,r2,b3b0 <_dtoa_r+0x15c4>
    ad64:	00800e44 	movi	r2,57
    ad68:	b8800a26 	beq	r23,r2,ad94 <_dtoa_r+0xfa8>
    ad6c:	b5c00c44 	addi	r23,r22,49
    ad70:	882b883a 	mov	r21,r17
    ad74:	95800044 	addi	r22,r18,1
    ad78:	95c00005 	stb	r23,0(r18)
    ad7c:	9823883a 	mov	r17,r19
    ad80:	003f1d06 	br	a9f8 <__alt_data_end+0xfe00a9f8>
    ad84:	00800e44 	movi	r2,57
    ad88:	b8800226 	beq	r23,r2,ad94 <_dtoa_r+0xfa8>
    ad8c:	057ff716 	blt	zero,r21,ad6c <__alt_data_end+0xfe00ad6c>
    ad90:	003ff706 	br	ad70 <__alt_data_end+0xfe00ad70>
    ad94:	01000e44 	movi	r4,57
    ad98:	882b883a 	mov	r21,r17
    ad9c:	95800044 	addi	r22,r18,1
    ada0:	91000005 	stb	r4,0(r18)
    ada4:	9823883a 	mov	r17,r19
    ada8:	003f0406 	br	a9bc <__alt_data_end+0xfe00a9bc>
    adac:	880b883a 	mov	r5,r17
    adb0:	8009883a 	mov	r4,r16
    adb4:	01800284 	movi	r6,10
    adb8:	000f883a 	mov	r7,zero
    adbc:	000c7340 	call	c734 <__multadd>
    adc0:	1023883a 	mov	r17,r2
    adc4:	1027883a 	mov	r19,r2
    adc8:	a825883a 	mov	r18,r21
    adcc:	003f5506 	br	ab24 <__alt_data_end+0xfe00ab24>
    add0:	8009883a 	mov	r4,r16
    add4:	180b883a 	mov	r5,r3
    add8:	000c70c0 	call	c70c <_Bfree>
    addc:	00800044 	movi	r2,1
    ade0:	003f6f06 	br	aba0 <__alt_data_end+0xfe00aba0>
    ade4:	e009883a 	mov	r4,fp
    ade8:	a00b883a 	mov	r5,r20
    adec:	000cf240 	call	cf24 <__mcmp>
    adf0:	103ecc0e 	bge	r2,zero,a924 <__alt_data_end+0xfe00a924>
    adf4:	e00b883a 	mov	r5,fp
    adf8:	8009883a 	mov	r4,r16
    adfc:	01800284 	movi	r6,10
    ae00:	000f883a 	mov	r7,zero
    ae04:	000c7340 	call	c734 <__multadd>
    ae08:	1039883a 	mov	fp,r2
    ae0c:	d8800617 	ldw	r2,24(sp)
    ae10:	d8c00c17 	ldw	r3,48(sp)
    ae14:	10bfffc4 	addi	r2,r2,-1
    ae18:	d8800615 	stw	r2,24(sp)
    ae1c:	1801681e 	bne	r3,zero,b3c0 <_dtoa_r+0x15d4>
    ae20:	d9800d17 	ldw	r6,52(sp)
    ae24:	d9800915 	stw	r6,36(sp)
    ae28:	003ebe06 	br	a924 <__alt_data_end+0xfe00a924>
    ae2c:	a0800417 	ldw	r2,16(r20)
    ae30:	10800104 	addi	r2,r2,4
    ae34:	1085883a 	add	r2,r2,r2
    ae38:	1085883a 	add	r2,r2,r2
    ae3c:	a085883a 	add	r2,r20,r2
    ae40:	11000017 	ldw	r4,0(r2)
    ae44:	000c94c0 	call	c94c <__hi0bits>
    ae48:	00c00804 	movi	r3,32
    ae4c:	1885c83a 	sub	r2,r3,r2
    ae50:	003e9806 	br	a8b4 <__alt_data_end+0xfe00a8b4>
    ae54:	d8800717 	ldw	r2,28(sp)
    ae58:	003c1306 	br	9ea8 <__alt_data_end+0xfe009ea8>
    ae5c:	00800084 	movi	r2,2
    ae60:	18bdb11e 	bne	r3,r2,a528 <__alt_data_end+0xfe00a528>
    ae64:	d8000c15 	stw	zero,48(sp)
    ae68:	003f8006 	br	ac6c <__alt_data_end+0xfe00ac6c>
    ae6c:	d8c00417 	ldw	r3,16(sp)
    ae70:	00800084 	movi	r2,2
    ae74:	10fead0e 	bge	r2,r3,a92c <__alt_data_end+0xfe00a92c>
    ae78:	383f921e 	bne	r7,zero,acc4 <__alt_data_end+0xfe00acc4>
    ae7c:	a00b883a 	mov	r5,r20
    ae80:	8009883a 	mov	r4,r16
    ae84:	01800144 	movi	r6,5
    ae88:	000c7340 	call	c734 <__multadd>
    ae8c:	e009883a 	mov	r4,fp
    ae90:	100b883a 	mov	r5,r2
    ae94:	1029883a 	mov	r20,r2
    ae98:	000cf240 	call	cf24 <__mcmp>
    ae9c:	00bf890e 	bge	zero,r2,acc4 <__alt_data_end+0xfe00acc4>
    aea0:	d9c00617 	ldw	r7,24(sp)
    aea4:	d9800717 	ldw	r6,28(sp)
    aea8:	00800c44 	movi	r2,49
    aeac:	39c00044 	addi	r7,r7,1
    aeb0:	35800044 	addi	r22,r6,1
    aeb4:	30800005 	stb	r2,0(r6)
    aeb8:	d9c00615 	stw	r7,24(sp)
    aebc:	003f8506 	br	acd4 <__alt_data_end+0xfe00acd4>
    aec0:	d9800617 	ldw	r6,24(sp)
    aec4:	d9c00717 	ldw	r7,28(sp)
    aec8:	00800c44 	movi	r2,49
    aecc:	31800044 	addi	r6,r6,1
    aed0:	d9800615 	stw	r6,24(sp)
    aed4:	38800005 	stb	r2,0(r7)
    aed8:	003ec706 	br	a9f8 <__alt_data_end+0xfe00a9f8>
    aedc:	df000417 	ldw	fp,16(sp)
    aee0:	dc000317 	ldw	r16,12(sp)
    aee4:	003d6d06 	br	a49c <__alt_data_end+0xfe00a49c>
    aee8:	8809883a 	mov	r4,r17
    aeec:	0011d440 	call	11d44 <__floatsidf>
    aef0:	9809883a 	mov	r4,r19
    aef4:	a00b883a 	mov	r5,r20
    aef8:	100d883a 	mov	r6,r2
    aefc:	180f883a 	mov	r7,r3
    af00:	0010d500 	call	10d50 <__muldf3>
    af04:	1009883a 	mov	r4,r2
    af08:	180b883a 	mov	r5,r3
    af0c:	000d883a 	mov	r6,zero
    af10:	01d00734 	movhi	r7,16412
    af14:	000f9b80 	call	f9b8 <__adddf3>
    af18:	05bf3034 	movhi	r22,64704
    af1c:	1023883a 	mov	r17,r2
    af20:	1daf883a 	add	r23,r3,r22
    af24:	9809883a 	mov	r4,r19
    af28:	a00b883a 	mov	r5,r20
    af2c:	000d883a 	mov	r6,zero
    af30:	01d00534 	movhi	r7,16404
    af34:	001143c0 	call	1143c <__subdf3>
    af38:	1009883a 	mov	r4,r2
    af3c:	180b883a 	mov	r5,r3
    af40:	880d883a 	mov	r6,r17
    af44:	b80f883a 	mov	r7,r23
    af48:	1027883a 	mov	r19,r2
    af4c:	1829883a 	mov	r20,r3
    af50:	0010b8c0 	call	10b8c <__gedf2>
    af54:	00806d16 	blt	zero,r2,b10c <_dtoa_r+0x1320>
    af58:	b9e0003c 	xorhi	r7,r23,32768
    af5c:	9809883a 	mov	r4,r19
    af60:	a00b883a 	mov	r5,r20
    af64:	880d883a 	mov	r6,r17
    af68:	0010c640 	call	10c64 <__ledf2>
    af6c:	103d7a0e 	bge	r2,zero,a558 <__alt_data_end+0xfe00a558>
    af70:	0029883a 	mov	r20,zero
    af74:	0023883a 	mov	r17,zero
    af78:	003f5206 	br	acc4 <__alt_data_end+0xfe00acc4>
    af7c:	d9800a17 	ldw	r6,40(sp)
    af80:	e00b883a 	mov	r5,fp
    af84:	8009883a 	mov	r4,r16
    af88:	000cc8c0 	call	cc8c <__pow5mult>
    af8c:	1039883a 	mov	fp,r2
    af90:	003e3606 	br	a86c <__alt_data_end+0xfe00a86c>
    af94:	d8000c15 	stw	zero,48(sp)
    af98:	003c5c06 	br	a10c <__alt_data_end+0xfe00a10c>
    af9c:	d9000a17 	ldw	r4,40(sp)
    afa0:	d9800b17 	ldw	r6,44(sp)
    afa4:	dd000a15 	stw	r20,40(sp)
    afa8:	a105c83a 	sub	r2,r20,r4
    afac:	308d883a 	add	r6,r6,r2
    afb0:	d9800b15 	stw	r6,44(sp)
    afb4:	0029883a 	mov	r20,zero
    afb8:	003e0106 	br	a7c0 <__alt_data_end+0xfe00a7c0>
    afbc:	dcc00317 	ldw	r19,12(sp)
    afc0:	9029883a 	mov	r20,r18
    afc4:	04400084 	movi	r17,2
    afc8:	003c8606 	br	a1e4 <__alt_data_end+0xfe00a1e4>
    afcc:	3023883a 	mov	r17,r6
    afd0:	80001115 	stw	zero,68(r16)
    afd4:	000b883a 	mov	r5,zero
    afd8:	003c6006 	br	a15c <__alt_data_end+0xfe00a15c>
    afdc:	04400044 	movi	r17,1
    afe0:	dc400d15 	stw	r17,52(sp)
    afe4:	dc400915 	stw	r17,36(sp)
    afe8:	dc402115 	stw	r17,132(sp)
    afec:	003ff806 	br	afd0 <__alt_data_end+0xfe00afd0>
    aff0:	d8800617 	ldw	r2,24(sp)
    aff4:	00adc83a 	sub	r22,zero,r2
    aff8:	b000ac26 	beq	r22,zero,b2ac <_dtoa_r+0x14c0>
    affc:	b08003cc 	andi	r2,r22,15
    b000:	100490fa 	slli	r2,r2,3
    b004:	00c00074 	movhi	r3,1
    b008:	18d48404 	addi	r3,r3,21008
    b00c:	d9000317 	ldw	r4,12(sp)
    b010:	1885883a 	add	r2,r3,r2
    b014:	11800017 	ldw	r6,0(r2)
    b018:	11c00117 	ldw	r7,4(r2)
    b01c:	b02dd13a 	srai	r22,r22,4
    b020:	900b883a 	mov	r5,r18
    b024:	0010d500 	call	10d50 <__muldf3>
    b028:	1027883a 	mov	r19,r2
    b02c:	1829883a 	mov	r20,r3
    b030:	b000ec26 	beq	r22,zero,b3e4 <_dtoa_r+0x15f8>
    b034:	05c00074 	movhi	r23,1
    b038:	bdd47a04 	addi	r23,r23,20968
    b03c:	04400084 	movi	r17,2
    b040:	b180004c 	andi	r6,r22,1
    b044:	1009883a 	mov	r4,r2
    b048:	b02dd07a 	srai	r22,r22,1
    b04c:	180b883a 	mov	r5,r3
    b050:	30000426 	beq	r6,zero,b064 <_dtoa_r+0x1278>
    b054:	b9800017 	ldw	r6,0(r23)
    b058:	b9c00117 	ldw	r7,4(r23)
    b05c:	8c400044 	addi	r17,r17,1
    b060:	0010d500 	call	10d50 <__muldf3>
    b064:	bdc00204 	addi	r23,r23,8
    b068:	b03ff51e 	bne	r22,zero,b040 <__alt_data_end+0xfe00b040>
    b06c:	1027883a 	mov	r19,r2
    b070:	1829883a 	mov	r20,r3
    b074:	003c7406 	br	a248 <__alt_data_end+0xfe00a248>
    b078:	d9800617 	ldw	r6,24(sp)
    b07c:	d9c00717 	ldw	r7,28(sp)
    b080:	00c00c04 	movi	r3,48
    b084:	31800044 	addi	r6,r6,1
    b088:	38c00005 	stb	r3,0(r7)
    b08c:	02400c44 	movi	r9,49
    b090:	d9800615 	stw	r6,24(sp)
    b094:	12400005 	stb	r9,0(r2)
    b098:	003d0006 	br	a49c <__alt_data_end+0xfe00a49c>
    b09c:	89400117 	ldw	r5,4(r17)
    b0a0:	8009883a 	mov	r4,r16
    b0a4:	000c6640 	call	c664 <_Balloc>
    b0a8:	89800417 	ldw	r6,16(r17)
    b0ac:	11000304 	addi	r4,r2,12
    b0b0:	89400304 	addi	r5,r17,12
    b0b4:	31800084 	addi	r6,r6,2
    b0b8:	318d883a 	add	r6,r6,r6
    b0bc:	318d883a 	add	r6,r6,r6
    b0c0:	1025883a 	mov	r18,r2
    b0c4:	00047c40 	call	47c4 <memcpy>
    b0c8:	8009883a 	mov	r4,r16
    b0cc:	900b883a 	mov	r5,r18
    b0d0:	01800044 	movi	r6,1
    b0d4:	000cdd40 	call	cdd4 <__lshift>
    b0d8:	1027883a 	mov	r19,r2
    b0dc:	003e8806 	br	ab00 <__alt_data_end+0xfe00ab00>
    b0e0:	00800e44 	movi	r2,57
    b0e4:	b8bf2b26 	beq	r23,r2,ad94 <__alt_data_end+0xfe00ad94>
    b0e8:	ba400044 	addi	r9,r23,1
    b0ec:	882b883a 	mov	r21,r17
    b0f0:	95800044 	addi	r22,r18,1
    b0f4:	92400005 	stb	r9,0(r18)
    b0f8:	9823883a 	mov	r17,r19
    b0fc:	003e3e06 	br	a9f8 <__alt_data_end+0xfe00a9f8>
    b100:	882b883a 	mov	r21,r17
    b104:	9823883a 	mov	r17,r19
    b108:	003e2206 	br	a994 <__alt_data_end+0xfe00a994>
    b10c:	0029883a 	mov	r20,zero
    b110:	0023883a 	mov	r17,zero
    b114:	003f6206 	br	aea0 <__alt_data_end+0xfe00aea0>
    b118:	59bfffc4 	addi	r6,r11,-1
    b11c:	300490fa 	slli	r2,r6,3
    b120:	00c00074 	movhi	r3,1
    b124:	18d48404 	addi	r3,r3,21008
    b128:	b80f883a 	mov	r7,r23
    b12c:	1885883a 	add	r2,r3,r2
    b130:	11000017 	ldw	r4,0(r2)
    b134:	11400117 	ldw	r5,4(r2)
    b138:	d8800717 	ldw	r2,28(sp)
    b13c:	d9801015 	stw	r6,64(sp)
    b140:	880d883a 	mov	r6,r17
    b144:	dac01615 	stw	r11,88(sp)
    b148:	15800044 	addi	r22,r2,1
    b14c:	0010d500 	call	10d50 <__muldf3>
    b150:	a00b883a 	mov	r5,r20
    b154:	9809883a 	mov	r4,r19
    b158:	d8c01215 	stw	r3,72(sp)
    b15c:	d8801115 	stw	r2,68(sp)
    b160:	0011cc40 	call	11cc4 <__fixdfsi>
    b164:	1009883a 	mov	r4,r2
    b168:	1023883a 	mov	r17,r2
    b16c:	0011d440 	call	11d44 <__floatsidf>
    b170:	9809883a 	mov	r4,r19
    b174:	a00b883a 	mov	r5,r20
    b178:	100d883a 	mov	r6,r2
    b17c:	180f883a 	mov	r7,r3
    b180:	001143c0 	call	1143c <__subdf3>
    b184:	1815883a 	mov	r10,r3
    b188:	d8c00717 	ldw	r3,28(sp)
    b18c:	8c400c04 	addi	r17,r17,48
    b190:	102f883a 	mov	r23,r2
    b194:	1c400005 	stb	r17,0(r3)
    b198:	dac01617 	ldw	r11,88(sp)
    b19c:	00800044 	movi	r2,1
    b1a0:	58802426 	beq	r11,r2,b234 <_dtoa_r+0x1448>
    b1a4:	d9800717 	ldw	r6,28(sp)
    b1a8:	dc001415 	stw	r16,80(sp)
    b1ac:	b805883a 	mov	r2,r23
    b1b0:	32d7883a 	add	r11,r6,r11
    b1b4:	b027883a 	mov	r19,r22
    b1b8:	5821883a 	mov	r16,r11
    b1bc:	5007883a 	mov	r3,r10
    b1c0:	902f883a 	mov	r23,r18
    b1c4:	000d883a 	mov	r6,zero
    b1c8:	01d00934 	movhi	r7,16420
    b1cc:	1009883a 	mov	r4,r2
    b1d0:	180b883a 	mov	r5,r3
    b1d4:	0010d500 	call	10d50 <__muldf3>
    b1d8:	180b883a 	mov	r5,r3
    b1dc:	1009883a 	mov	r4,r2
    b1e0:	1829883a 	mov	r20,r3
    b1e4:	1025883a 	mov	r18,r2
    b1e8:	0011cc40 	call	11cc4 <__fixdfsi>
    b1ec:	1009883a 	mov	r4,r2
    b1f0:	1023883a 	mov	r17,r2
    b1f4:	0011d440 	call	11d44 <__floatsidf>
    b1f8:	9009883a 	mov	r4,r18
    b1fc:	a00b883a 	mov	r5,r20
    b200:	100d883a 	mov	r6,r2
    b204:	180f883a 	mov	r7,r3
    b208:	8c400c04 	addi	r17,r17,48
    b20c:	001143c0 	call	1143c <__subdf3>
    b210:	9cc00044 	addi	r19,r19,1
    b214:	9c7fffc5 	stb	r17,-1(r19)
    b218:	9c3fea1e 	bne	r19,r16,b1c4 <__alt_data_end+0xfe00b1c4>
    b21c:	d9c01017 	ldw	r7,64(sp)
    b220:	dc001417 	ldw	r16,80(sp)
    b224:	b825883a 	mov	r18,r23
    b228:	1815883a 	mov	r10,r3
    b22c:	102f883a 	mov	r23,r2
    b230:	b1ed883a 	add	r22,r22,r7
    b234:	d9001117 	ldw	r4,68(sp)
    b238:	d9401217 	ldw	r5,72(sp)
    b23c:	000d883a 	mov	r6,zero
    b240:	01cff834 	movhi	r7,16352
    b244:	da801615 	stw	r10,88(sp)
    b248:	000f9b80 	call	f9b8 <__adddf3>
    b24c:	da801617 	ldw	r10,88(sp)
    b250:	1009883a 	mov	r4,r2
    b254:	180b883a 	mov	r5,r3
    b258:	500f883a 	mov	r7,r10
    b25c:	b80d883a 	mov	r6,r23
    b260:	0010c640 	call	10c64 <__ledf2>
    b264:	da801617 	ldw	r10,88(sp)
    b268:	1000330e 	bge	r2,zero,b338 <_dtoa_r+0x154c>
    b26c:	d9001317 	ldw	r4,76(sp)
    b270:	b53fffc3 	ldbu	r20,-1(r22)
    b274:	d9000615 	stw	r4,24(sp)
    b278:	003d3706 	br	a758 <__alt_data_end+0xfe00a758>
    b27c:	d8800817 	ldw	r2,32(sp)
    b280:	11e7c83a 	sub	r19,r2,r7
    b284:	0005883a 	mov	r2,zero
    b288:	003d5106 	br	a7d0 <__alt_data_end+0xfe00a7d0>
    b28c:	00800044 	movi	r2,1
    b290:	003dbd06 	br	a988 <__alt_data_end+0xfe00a988>
    b294:	d8800217 	ldw	r2,8(sp)
    b298:	00c00d84 	movi	r3,54
    b29c:	dd000a17 	ldw	r20,40(sp)
    b2a0:	1885c83a 	sub	r2,r3,r2
    b2a4:	dcc00817 	ldw	r19,32(sp)
    b2a8:	003d4906 	br	a7d0 <__alt_data_end+0xfe00a7d0>
    b2ac:	dcc00317 	ldw	r19,12(sp)
    b2b0:	9029883a 	mov	r20,r18
    b2b4:	04400084 	movi	r17,2
    b2b8:	003be306 	br	a248 <__alt_data_end+0xfe00a248>
    b2bc:	d9000917 	ldw	r4,36(sp)
    b2c0:	203f0926 	beq	r4,zero,aee8 <__alt_data_end+0xfe00aee8>
    b2c4:	d9800d17 	ldw	r6,52(sp)
    b2c8:	01bca30e 	bge	zero,r6,a558 <__alt_data_end+0xfe00a558>
    b2cc:	a00b883a 	mov	r5,r20
    b2d0:	9809883a 	mov	r4,r19
    b2d4:	000d883a 	mov	r6,zero
    b2d8:	01d00934 	movhi	r7,16420
    b2dc:	0010d500 	call	10d50 <__muldf3>
    b2e0:	89000044 	addi	r4,r17,1
    b2e4:	1027883a 	mov	r19,r2
    b2e8:	1829883a 	mov	r20,r3
    b2ec:	0011d440 	call	11d44 <__floatsidf>
    b2f0:	9809883a 	mov	r4,r19
    b2f4:	a00b883a 	mov	r5,r20
    b2f8:	100d883a 	mov	r6,r2
    b2fc:	180f883a 	mov	r7,r3
    b300:	0010d500 	call	10d50 <__muldf3>
    b304:	01d00734 	movhi	r7,16412
    b308:	1009883a 	mov	r4,r2
    b30c:	180b883a 	mov	r5,r3
    b310:	000d883a 	mov	r6,zero
    b314:	000f9b80 	call	f9b8 <__adddf3>
    b318:	d9c00617 	ldw	r7,24(sp)
    b31c:	05bf3034 	movhi	r22,64704
    b320:	1023883a 	mov	r17,r2
    b324:	39ffffc4 	addi	r7,r7,-1
    b328:	d9c01315 	stw	r7,76(sp)
    b32c:	1daf883a 	add	r23,r3,r22
    b330:	dac00d17 	ldw	r11,52(sp)
    b334:	003be006 	br	a2b8 <__alt_data_end+0xfe00a2b8>
    b338:	d9801117 	ldw	r6,68(sp)
    b33c:	d9c01217 	ldw	r7,72(sp)
    b340:	0009883a 	mov	r4,zero
    b344:	014ff834 	movhi	r5,16352
    b348:	da801615 	stw	r10,88(sp)
    b34c:	001143c0 	call	1143c <__subdf3>
    b350:	da801617 	ldw	r10,88(sp)
    b354:	1009883a 	mov	r4,r2
    b358:	180b883a 	mov	r5,r3
    b35c:	b80d883a 	mov	r6,r23
    b360:	500f883a 	mov	r7,r10
    b364:	0010b8c0 	call	10b8c <__gedf2>
    b368:	00bc7b0e 	bge	zero,r2,a558 <__alt_data_end+0xfe00a558>
    b36c:	01000c04 	movi	r4,48
    b370:	00000106 	br	b378 <_dtoa_r+0x158c>
    b374:	102d883a 	mov	r22,r2
    b378:	b0bfffc4 	addi	r2,r22,-1
    b37c:	10c00007 	ldb	r3,0(r2)
    b380:	193ffc26 	beq	r3,r4,b374 <__alt_data_end+0xfe00b374>
    b384:	d9001317 	ldw	r4,76(sp)
    b388:	d9000615 	stw	r4,24(sp)
    b38c:	003c4306 	br	a49c <__alt_data_end+0xfe00a49c>
    b390:	d8c01317 	ldw	r3,76(sp)
    b394:	dc001117 	ldw	r16,68(sp)
    b398:	d8c00615 	stw	r3,24(sp)
    b39c:	003cee06 	br	a758 <__alt_data_end+0xfe00a758>
    b3a0:	dd401217 	ldw	r21,72(sp)
    b3a4:	dc001117 	ldw	r16,68(sp)
    b3a8:	dc801417 	ldw	r18,80(sp)
    b3ac:	003c6a06 	br	a558 <__alt_data_end+0xfe00a558>
    b3b0:	103e6f1e 	bne	r2,zero,ad70 <__alt_data_end+0xfe00ad70>
    b3b4:	b880004c 	andi	r2,r23,1
    b3b8:	103e6d26 	beq	r2,zero,ad70 <__alt_data_end+0xfe00ad70>
    b3bc:	003e6906 	br	ad64 <__alt_data_end+0xfe00ad64>
    b3c0:	8009883a 	mov	r4,r16
    b3c4:	880b883a 	mov	r5,r17
    b3c8:	01800284 	movi	r6,10
    b3cc:	000f883a 	mov	r7,zero
    b3d0:	000c7340 	call	c734 <__multadd>
    b3d4:	d9000d17 	ldw	r4,52(sp)
    b3d8:	1023883a 	mov	r17,r2
    b3dc:	d9000915 	stw	r4,36(sp)
    b3e0:	003d5006 	br	a924 <__alt_data_end+0xfe00a924>
    b3e4:	04400084 	movi	r17,2
    b3e8:	003b9706 	br	a248 <__alt_data_end+0xfe00a248>
    b3ec:	d8801317 	ldw	r2,76(sp)
    b3f0:	d8800615 	stw	r2,24(sp)
    b3f4:	003cd806 	br	a758 <__alt_data_end+0xfe00a758>
    b3f8:	d8801317 	ldw	r2,76(sp)
    b3fc:	d8800615 	stw	r2,24(sp)
    b400:	003c2606 	br	a49c <__alt_data_end+0xfe00a49c>
    b404:	04c00044 	movi	r19,1
    b408:	003b3506 	br	a0e0 <__alt_data_end+0xfe00a0e0>
    b40c:	3023883a 	mov	r17,r6
    b410:	000b883a 	mov	r5,zero
    b414:	003b5106 	br	a15c <__alt_data_end+0xfe00a15c>
    b418:	20fd3426 	beq	r4,r3,a8ec <__alt_data_end+0xfe00a8ec>
    b41c:	00c00f04 	movi	r3,60
    b420:	1885c83a 	sub	r2,r3,r2
    b424:	003da106 	br	aaac <__alt_data_end+0xfe00aaac>

0000b428 <_fclose_r>:
    b428:	defffc04 	addi	sp,sp,-16
    b42c:	dc000015 	stw	r16,0(sp)
    b430:	dfc00315 	stw	ra,12(sp)
    b434:	dc800215 	stw	r18,8(sp)
    b438:	dc400115 	stw	r17,4(sp)
    b43c:	2821883a 	mov	r16,r5
    b440:	28003126 	beq	r5,zero,b508 <_fclose_r+0xe0>
    b444:	2023883a 	mov	r17,r4
    b448:	0002f000 	call	2f00 <__sfp_lock_acquire>
    b44c:	88000226 	beq	r17,zero,b458 <_fclose_r+0x30>
    b450:	88800e17 	ldw	r2,56(r17)
    b454:	10003326 	beq	r2,zero,b524 <_fclose_r+0xfc>
    b458:	8080030f 	ldh	r2,12(r16)
    b45c:	10002226 	beq	r2,zero,b4e8 <_fclose_r+0xc0>
    b460:	8809883a 	mov	r4,r17
    b464:	800b883a 	mov	r5,r16
    b468:	000b5640 	call	b564 <_fflush_r>
    b46c:	80c00b17 	ldw	r3,44(r16)
    b470:	1025883a 	mov	r18,r2
    b474:	18000426 	beq	r3,zero,b488 <_fclose_r+0x60>
    b478:	81400717 	ldw	r5,28(r16)
    b47c:	8809883a 	mov	r4,r17
    b480:	183ee83a 	callr	r3
    b484:	10003016 	blt	r2,zero,b548 <_fclose_r+0x120>
    b488:	8080030b 	ldhu	r2,12(r16)
    b48c:	1080200c 	andi	r2,r2,128
    b490:	1000291e 	bne	r2,zero,b538 <_fclose_r+0x110>
    b494:	81400c17 	ldw	r5,48(r16)
    b498:	28000526 	beq	r5,zero,b4b0 <_fclose_r+0x88>
    b49c:	80801004 	addi	r2,r16,64
    b4a0:	28800226 	beq	r5,r2,b4ac <_fclose_r+0x84>
    b4a4:	8809883a 	mov	r4,r17
    b4a8:	00032fc0 	call	32fc <_free_r>
    b4ac:	80000c15 	stw	zero,48(r16)
    b4b0:	81401117 	ldw	r5,68(r16)
    b4b4:	28000326 	beq	r5,zero,b4c4 <_fclose_r+0x9c>
    b4b8:	8809883a 	mov	r4,r17
    b4bc:	00032fc0 	call	32fc <_free_r>
    b4c0:	80001115 	stw	zero,68(r16)
    b4c4:	8000030d 	sth	zero,12(r16)
    b4c8:	0002f040 	call	2f04 <__sfp_lock_release>
    b4cc:	9005883a 	mov	r2,r18
    b4d0:	dfc00317 	ldw	ra,12(sp)
    b4d4:	dc800217 	ldw	r18,8(sp)
    b4d8:	dc400117 	ldw	r17,4(sp)
    b4dc:	dc000017 	ldw	r16,0(sp)
    b4e0:	dec00404 	addi	sp,sp,16
    b4e4:	f800283a 	ret
    b4e8:	0002f040 	call	2f04 <__sfp_lock_release>
    b4ec:	0005883a 	mov	r2,zero
    b4f0:	dfc00317 	ldw	ra,12(sp)
    b4f4:	dc800217 	ldw	r18,8(sp)
    b4f8:	dc400117 	ldw	r17,4(sp)
    b4fc:	dc000017 	ldw	r16,0(sp)
    b500:	dec00404 	addi	sp,sp,16
    b504:	f800283a 	ret
    b508:	0005883a 	mov	r2,zero
    b50c:	dfc00317 	ldw	ra,12(sp)
    b510:	dc800217 	ldw	r18,8(sp)
    b514:	dc400117 	ldw	r17,4(sp)
    b518:	dc000017 	ldw	r16,0(sp)
    b51c:	dec00404 	addi	sp,sp,16
    b520:	f800283a 	ret
    b524:	8809883a 	mov	r4,r17
    b528:	0002c480 	call	2c48 <__sinit>
    b52c:	8080030f 	ldh	r2,12(r16)
    b530:	103fcb1e 	bne	r2,zero,b460 <__alt_data_end+0xfe00b460>
    b534:	003fec06 	br	b4e8 <__alt_data_end+0xfe00b4e8>
    b538:	81400417 	ldw	r5,16(r16)
    b53c:	8809883a 	mov	r4,r17
    b540:	00032fc0 	call	32fc <_free_r>
    b544:	003fd306 	br	b494 <__alt_data_end+0xfe00b494>
    b548:	04bfffc4 	movi	r18,-1
    b54c:	003fce06 	br	b488 <__alt_data_end+0xfe00b488>

0000b550 <fclose>:
    b550:	00800074 	movhi	r2,1
    b554:	109bce04 	addi	r2,r2,28472
    b558:	200b883a 	mov	r5,r4
    b55c:	11000017 	ldw	r4,0(r2)
    b560:	000b4281 	jmpi	b428 <_fclose_r>

0000b564 <_fflush_r>:
    b564:	defffb04 	addi	sp,sp,-20
    b568:	dcc00315 	stw	r19,12(sp)
    b56c:	dc400115 	stw	r17,4(sp)
    b570:	dfc00415 	stw	ra,16(sp)
    b574:	dc800215 	stw	r18,8(sp)
    b578:	dc000015 	stw	r16,0(sp)
    b57c:	2027883a 	mov	r19,r4
    b580:	2823883a 	mov	r17,r5
    b584:	20000226 	beq	r4,zero,b590 <_fflush_r+0x2c>
    b588:	20800e17 	ldw	r2,56(r4)
    b58c:	10005826 	beq	r2,zero,b6f0 <_fflush_r+0x18c>
    b590:	8880030b 	ldhu	r2,12(r17)
    b594:	10ffffcc 	andi	r3,r2,65535
    b598:	18e0001c 	xori	r3,r3,32768
    b59c:	18e00004 	addi	r3,r3,-32768
    b5a0:	18002b26 	beq	r3,zero,b650 <_fflush_r+0xec>
    b5a4:	10c0020c 	andi	r3,r2,8
    b5a8:	1800311e 	bne	r3,zero,b670 <_fflush_r+0x10c>
    b5ac:	88c00117 	ldw	r3,4(r17)
    b5b0:	10820014 	ori	r2,r2,2048
    b5b4:	8880030d 	sth	r2,12(r17)
    b5b8:	00c05c0e 	bge	zero,r3,b72c <_fflush_r+0x1c8>
    b5bc:	88c00a17 	ldw	r3,40(r17)
    b5c0:	18002326 	beq	r3,zero,b650 <_fflush_r+0xec>
    b5c4:	9c000017 	ldw	r16,0(r19)
    b5c8:	1104000c 	andi	r4,r2,4096
    b5cc:	98000015 	stw	zero,0(r19)
    b5d0:	20004b26 	beq	r4,zero,b700 <_fflush_r+0x19c>
    b5d4:	89801417 	ldw	r6,80(r17)
    b5d8:	1080010c 	andi	r2,r2,4
    b5dc:	10000626 	beq	r2,zero,b5f8 <_fflush_r+0x94>
    b5e0:	89000117 	ldw	r4,4(r17)
    b5e4:	88800c17 	ldw	r2,48(r17)
    b5e8:	310dc83a 	sub	r6,r6,r4
    b5ec:	10000226 	beq	r2,zero,b5f8 <_fflush_r+0x94>
    b5f0:	88800f17 	ldw	r2,60(r17)
    b5f4:	308dc83a 	sub	r6,r6,r2
    b5f8:	89400717 	ldw	r5,28(r17)
    b5fc:	9809883a 	mov	r4,r19
    b600:	000f883a 	mov	r7,zero
    b604:	183ee83a 	callr	r3
    b608:	00ffffc4 	movi	r3,-1
    b60c:	10c04a26 	beq	r2,r3,b738 <_fflush_r+0x1d4>
    b610:	88c0030b 	ldhu	r3,12(r17)
    b614:	89000417 	ldw	r4,16(r17)
    b618:	88000115 	stw	zero,4(r17)
    b61c:	197dffcc 	andi	r5,r3,63487
    b620:	8940030d 	sth	r5,12(r17)
    b624:	89000015 	stw	r4,0(r17)
    b628:	18c4000c 	andi	r3,r3,4096
    b62c:	1800581e 	bne	r3,zero,b790 <_fflush_r+0x22c>
    b630:	89400c17 	ldw	r5,48(r17)
    b634:	9c000015 	stw	r16,0(r19)
    b638:	28000526 	beq	r5,zero,b650 <_fflush_r+0xec>
    b63c:	88801004 	addi	r2,r17,64
    b640:	28800226 	beq	r5,r2,b64c <_fflush_r+0xe8>
    b644:	9809883a 	mov	r4,r19
    b648:	00032fc0 	call	32fc <_free_r>
    b64c:	88000c15 	stw	zero,48(r17)
    b650:	0005883a 	mov	r2,zero
    b654:	dfc00417 	ldw	ra,16(sp)
    b658:	dcc00317 	ldw	r19,12(sp)
    b65c:	dc800217 	ldw	r18,8(sp)
    b660:	dc400117 	ldw	r17,4(sp)
    b664:	dc000017 	ldw	r16,0(sp)
    b668:	dec00504 	addi	sp,sp,20
    b66c:	f800283a 	ret
    b670:	8c800417 	ldw	r18,16(r17)
    b674:	903ff626 	beq	r18,zero,b650 <__alt_data_end+0xfe00b650>
    b678:	8c000017 	ldw	r16,0(r17)
    b67c:	108000cc 	andi	r2,r2,3
    b680:	8c800015 	stw	r18,0(r17)
    b684:	84a1c83a 	sub	r16,r16,r18
    b688:	10001b26 	beq	r2,zero,b6f8 <_fflush_r+0x194>
    b68c:	0005883a 	mov	r2,zero
    b690:	88800215 	stw	r2,8(r17)
    b694:	04000316 	blt	zero,r16,b6a4 <_fflush_r+0x140>
    b698:	003fed06 	br	b650 <__alt_data_end+0xfe00b650>
    b69c:	90a5883a 	add	r18,r18,r2
    b6a0:	043feb0e 	bge	zero,r16,b650 <__alt_data_end+0xfe00b650>
    b6a4:	88800917 	ldw	r2,36(r17)
    b6a8:	89400717 	ldw	r5,28(r17)
    b6ac:	800f883a 	mov	r7,r16
    b6b0:	900d883a 	mov	r6,r18
    b6b4:	9809883a 	mov	r4,r19
    b6b8:	103ee83a 	callr	r2
    b6bc:	80a1c83a 	sub	r16,r16,r2
    b6c0:	00bff616 	blt	zero,r2,b69c <__alt_data_end+0xfe00b69c>
    b6c4:	88c0030b 	ldhu	r3,12(r17)
    b6c8:	00bfffc4 	movi	r2,-1
    b6cc:	18c01014 	ori	r3,r3,64
    b6d0:	88c0030d 	sth	r3,12(r17)
    b6d4:	dfc00417 	ldw	ra,16(sp)
    b6d8:	dcc00317 	ldw	r19,12(sp)
    b6dc:	dc800217 	ldw	r18,8(sp)
    b6e0:	dc400117 	ldw	r17,4(sp)
    b6e4:	dc000017 	ldw	r16,0(sp)
    b6e8:	dec00504 	addi	sp,sp,20
    b6ec:	f800283a 	ret
    b6f0:	0002c480 	call	2c48 <__sinit>
    b6f4:	003fa606 	br	b590 <__alt_data_end+0xfe00b590>
    b6f8:	88800517 	ldw	r2,20(r17)
    b6fc:	003fe406 	br	b690 <__alt_data_end+0xfe00b690>
    b700:	89400717 	ldw	r5,28(r17)
    b704:	000d883a 	mov	r6,zero
    b708:	9809883a 	mov	r4,r19
    b70c:	01c00044 	movi	r7,1
    b710:	183ee83a 	callr	r3
    b714:	100d883a 	mov	r6,r2
    b718:	00bfffc4 	movi	r2,-1
    b71c:	30801326 	beq	r6,r2,b76c <_fflush_r+0x208>
    b720:	8880030b 	ldhu	r2,12(r17)
    b724:	88c00a17 	ldw	r3,40(r17)
    b728:	003fab06 	br	b5d8 <__alt_data_end+0xfe00b5d8>
    b72c:	88c00f17 	ldw	r3,60(r17)
    b730:	00ffa216 	blt	zero,r3,b5bc <__alt_data_end+0xfe00b5bc>
    b734:	003fc606 	br	b650 <__alt_data_end+0xfe00b650>
    b738:	98c00017 	ldw	r3,0(r19)
    b73c:	183fb426 	beq	r3,zero,b610 <__alt_data_end+0xfe00b610>
    b740:	01000744 	movi	r4,29
    b744:	19000226 	beq	r3,r4,b750 <_fflush_r+0x1ec>
    b748:	01000584 	movi	r4,22
    b74c:	1900121e 	bne	r3,r4,b798 <_fflush_r+0x234>
    b750:	88c0030b 	ldhu	r3,12(r17)
    b754:	88800417 	ldw	r2,16(r17)
    b758:	88000115 	stw	zero,4(r17)
    b75c:	18fdffcc 	andi	r3,r3,63487
    b760:	88c0030d 	sth	r3,12(r17)
    b764:	88800015 	stw	r2,0(r17)
    b768:	003fb106 	br	b630 <__alt_data_end+0xfe00b630>
    b76c:	98800017 	ldw	r2,0(r19)
    b770:	103feb26 	beq	r2,zero,b720 <__alt_data_end+0xfe00b720>
    b774:	00c00744 	movi	r3,29
    b778:	10c00226 	beq	r2,r3,b784 <_fflush_r+0x220>
    b77c:	00c00584 	movi	r3,22
    b780:	10ffd01e 	bne	r2,r3,b6c4 <__alt_data_end+0xfe00b6c4>
    b784:	9c000015 	stw	r16,0(r19)
    b788:	0005883a 	mov	r2,zero
    b78c:	003fb106 	br	b654 <__alt_data_end+0xfe00b654>
    b790:	88801415 	stw	r2,80(r17)
    b794:	003fa606 	br	b630 <__alt_data_end+0xfe00b630>
    b798:	88c0030b 	ldhu	r3,12(r17)
    b79c:	18c01014 	ori	r3,r3,64
    b7a0:	88c0030d 	sth	r3,12(r17)
    b7a4:	003fab06 	br	b654 <__alt_data_end+0xfe00b654>

0000b7a8 <fflush>:
    b7a8:	200b883a 	mov	r5,r4
    b7ac:	20000426 	beq	r4,zero,b7c0 <fflush+0x18>
    b7b0:	00800074 	movhi	r2,1
    b7b4:	109bce04 	addi	r2,r2,28472
    b7b8:	11000017 	ldw	r4,0(r2)
    b7bc:	000b5641 	jmpi	b564 <_fflush_r>
    b7c0:	00800074 	movhi	r2,1
    b7c4:	109bcd04 	addi	r2,r2,28468
    b7c8:	11000017 	ldw	r4,0(r2)
    b7cc:	01400074 	movhi	r5,1
    b7d0:	296d5904 	addi	r5,r5,-19100
    b7d4:	0003b201 	jmpi	3b20 <_fwalk_reent>

0000b7d8 <rshift>:
    b7d8:	2805d17a 	srai	r2,r5,5
    b7dc:	21c00417 	ldw	r7,16(r4)
    b7e0:	20c00504 	addi	r3,r4,20
    b7e4:	11c0250e 	bge	r2,r7,b87c <rshift+0xa4>
    b7e8:	39cf883a 	add	r7,r7,r7
    b7ec:	1085883a 	add	r2,r2,r2
    b7f0:	39cf883a 	add	r7,r7,r7
    b7f4:	1085883a 	add	r2,r2,r2
    b7f8:	294007cc 	andi	r5,r5,31
    b7fc:	19cf883a 	add	r7,r3,r7
    b800:	1897883a 	add	r11,r3,r2
    b804:	28002026 	beq	r5,zero,b888 <rshift+0xb0>
    b808:	5a000017 	ldw	r8,0(r11)
    b80c:	02800804 	movi	r10,32
    b810:	58800104 	addi	r2,r11,4
    b814:	5155c83a 	sub	r10,r10,r5
    b818:	4150d83a 	srl	r8,r8,r5
    b81c:	11c02b2e 	bgeu	r2,r7,b8cc <rshift+0xf4>
    b820:	180d883a 	mov	r6,r3
    b824:	12400017 	ldw	r9,0(r2)
    b828:	31800104 	addi	r6,r6,4
    b82c:	10800104 	addi	r2,r2,4
    b830:	4a92983a 	sll	r9,r9,r10
    b834:	4250b03a 	or	r8,r8,r9
    b838:	323fff15 	stw	r8,-4(r6)
    b83c:	123fff17 	ldw	r8,-4(r2)
    b840:	4150d83a 	srl	r8,r8,r5
    b844:	11fff736 	bltu	r2,r7,b824 <__alt_data_end+0xfe00b824>
    b848:	3ac5c83a 	sub	r2,r7,r11
    b84c:	10bffec4 	addi	r2,r2,-5
    b850:	1004d0ba 	srli	r2,r2,2
    b854:	10800044 	addi	r2,r2,1
    b858:	1085883a 	add	r2,r2,r2
    b85c:	1085883a 	add	r2,r2,r2
    b860:	1885883a 	add	r2,r3,r2
    b864:	12000015 	stw	r8,0(r2)
    b868:	40000126 	beq	r8,zero,b870 <rshift+0x98>
    b86c:	10800104 	addi	r2,r2,4
    b870:	10c7c83a 	sub	r3,r2,r3
    b874:	1807d0ba 	srai	r3,r3,2
    b878:	00001106 	br	b8c0 <rshift+0xe8>
    b87c:	20000415 	stw	zero,16(r4)
    b880:	20000515 	stw	zero,20(r4)
    b884:	f800283a 	ret
    b888:	5805883a 	mov	r2,r11
    b88c:	59fffb2e 	bgeu	r11,r7,b87c <__alt_data_end+0xfe00b87c>
    b890:	11400017 	ldw	r5,0(r2)
    b894:	18c00104 	addi	r3,r3,4
    b898:	10800104 	addi	r2,r2,4
    b89c:	197fff15 	stw	r5,-4(r3)
    b8a0:	11fffb36 	bltu	r2,r7,b890 <__alt_data_end+0xfe00b890>
    b8a4:	02c6303a 	nor	r3,zero,r11
    b8a8:	19c7883a 	add	r3,r3,r7
    b8ac:	1806d0ba 	srli	r3,r3,2
    b8b0:	18c00044 	addi	r3,r3,1
    b8b4:	18c7883a 	add	r3,r3,r3
    b8b8:	18c7883a 	add	r3,r3,r3
    b8bc:	1807d0ba 	srai	r3,r3,2
    b8c0:	20c00415 	stw	r3,16(r4)
    b8c4:	183fee26 	beq	r3,zero,b880 <__alt_data_end+0xfe00b880>
    b8c8:	f800283a 	ret
    b8cc:	1805883a 	mov	r2,r3
    b8d0:	003fe406 	br	b864 <__alt_data_end+0xfe00b864>

0000b8d4 <__hexdig_init>:
    b8d4:	01400074 	movhi	r5,1
    b8d8:	29546a44 	addi	r5,r5,20905
    b8dc:	01000404 	movi	r4,16
    b8e0:	00c00c04 	movi	r3,48
    b8e4:	008000b4 	movhi	r2,2
    b8e8:	10a2e904 	addi	r2,r2,-29788
    b8ec:	29800003 	ldbu	r6,0(r5)
    b8f0:	10c7883a 	add	r3,r2,r3
    b8f4:	19000005 	stb	r4,0(r3)
    b8f8:	29400044 	addi	r5,r5,1
    b8fc:	3007883a 	mov	r3,r6
    b900:	21000044 	addi	r4,r4,1
    b904:	303ff91e 	bne	r6,zero,b8ec <__alt_data_end+0xfe00b8ec>
    b908:	01400074 	movhi	r5,1
    b90c:	29546844 	addi	r5,r5,20897
    b910:	01000684 	movi	r4,26
    b914:	00c01844 	movi	r3,97
    b918:	29800003 	ldbu	r6,0(r5)
    b91c:	10c7883a 	add	r3,r2,r3
    b920:	19000005 	stb	r4,0(r3)
    b924:	29400044 	addi	r5,r5,1
    b928:	3007883a 	mov	r3,r6
    b92c:	21000044 	addi	r4,r4,1
    b930:	303ff91e 	bne	r6,zero,b918 <__alt_data_end+0xfe00b918>
    b934:	01400074 	movhi	r5,1
    b938:	29546644 	addi	r5,r5,20889
    b93c:	01000684 	movi	r4,26
    b940:	00c01044 	movi	r3,65
    b944:	29800003 	ldbu	r6,0(r5)
    b948:	10c7883a 	add	r3,r2,r3
    b94c:	19000005 	stb	r4,0(r3)
    b950:	29400044 	addi	r5,r5,1
    b954:	3007883a 	mov	r3,r6
    b958:	21000044 	addi	r4,r4,1
    b95c:	303ff91e 	bne	r6,zero,b944 <__alt_data_end+0xfe00b944>
    b960:	f800283a 	ret

0000b964 <__gethex>:
    b964:	deffeb04 	addi	sp,sp,-84
    b968:	dfc01415 	stw	ra,80(sp)
    b96c:	dd401015 	stw	r21,64(sp)
    b970:	dd000f15 	stw	r20,60(sp)
    b974:	dcc00e15 	stw	r19,56(sp)
    b978:	dc800d15 	stw	r18,52(sp)
    b97c:	dc400c15 	stw	r17,48(sp)
    b980:	d9000015 	stw	r4,0(sp)
    b984:	2827883a 	mov	r19,r5
    b988:	3029883a 	mov	r20,r6
    b98c:	d9c00315 	stw	r7,12(sp)
    b990:	df001315 	stw	fp,76(sp)
    b994:	ddc01215 	stw	r23,72(sp)
    b998:	dd801115 	stw	r22,68(sp)
    b99c:	dc000b15 	stw	r16,44(sp)
    b9a0:	0003ca80 	call	3ca8 <_localeconv_r>
    b9a4:	14400017 	ldw	r17,0(r2)
    b9a8:	054000b4 	movhi	r21,2
    b9ac:	ad62e904 	addi	r21,r21,-29788
    b9b0:	8809883a 	mov	r4,r17
    b9b4:	00012640 	call	1264 <strlen>
    b9b8:	1025883a 	mov	r18,r2
    b9bc:	8c87883a 	add	r3,r17,r18
    b9c0:	18ffffc3 	ldbu	r3,-1(r3)
    b9c4:	a8800c03 	ldbu	r2,48(r21)
    b9c8:	d8c00205 	stb	r3,8(sp)
    b9cc:	1000ef26 	beq	r2,zero,bd8c <__gethex+0x428>
    b9d0:	99000017 	ldw	r4,0(r19)
    b9d4:	00c00c04 	movi	r3,48
    b9d8:	20800083 	ldbu	r2,2(r4)
    b9dc:	25c00084 	addi	r23,r4,2
    b9e0:	10c17f1e 	bne	r2,r3,bfe0 <__gethex+0x67c>
    b9e4:	017fff84 	movi	r5,-2
    b9e8:	20c000c4 	addi	r3,r4,3
    b9ec:	290bc83a 	sub	r5,r5,r4
    b9f0:	1009883a 	mov	r4,r2
    b9f4:	28ed883a 	add	r22,r5,r3
    b9f8:	182f883a 	mov	r23,r3
    b9fc:	18c00044 	addi	r3,r3,1
    ba00:	18bfffc3 	ldbu	r2,-1(r3)
    ba04:	113ffb26 	beq	r2,r4,b9f4 <__alt_data_end+0xfe00b9f4>
    ba08:	a885883a 	add	r2,r21,r2
    ba0c:	10800003 	ldbu	r2,0(r2)
    ba10:	00c000b4 	movhi	r3,2
    ba14:	18e2e904 	addi	r3,r3,-29788
    ba18:	1000c226 	beq	r2,zero,bd24 <__gethex+0x3c0>
    ba1c:	b8800003 	ldbu	r2,0(r23)
    ba20:	0015883a 	mov	r10,zero
    ba24:	0039883a 	mov	fp,zero
    ba28:	1887883a 	add	r3,r3,r2
    ba2c:	18c00003 	ldbu	r3,0(r3)
    ba30:	b821883a 	mov	r16,r23
    ba34:	18000526 	beq	r3,zero,ba4c <__gethex+0xe8>
    ba38:	84000044 	addi	r16,r16,1
    ba3c:	80800003 	ldbu	r2,0(r16)
    ba40:	a885883a 	add	r2,r21,r2
    ba44:	10800003 	ldbu	r2,0(r2)
    ba48:	103ffb1e 	bne	r2,zero,ba38 <__alt_data_end+0xfe00ba38>
    ba4c:	8009883a 	mov	r4,r16
    ba50:	880b883a 	mov	r5,r17
    ba54:	900d883a 	mov	r6,r18
    ba58:	da800a15 	stw	r10,40(sp)
    ba5c:	000d6480 	call	d648 <strncmp>
    ba60:	da800a17 	ldw	r10,40(sp)
    ba64:	10001c26 	beq	r2,zero,bad8 <__gethex+0x174>
    ba68:	80800003 	ldbu	r2,0(r16)
    ba6c:	e0000426 	beq	fp,zero,ba80 <__gethex+0x11c>
    ba70:	8739c83a 	sub	fp,r16,fp
    ba74:	e739883a 	add	fp,fp,fp
    ba78:	e739883a 	add	fp,fp,fp
    ba7c:	0739c83a 	sub	fp,zero,fp
    ba80:	10803fcc 	andi	r2,r2,255
    ba84:	00c01404 	movi	r3,80
    ba88:	10c01626 	beq	r2,r3,bae4 <__gethex+0x180>
    ba8c:	00c01c04 	movi	r3,112
    ba90:	10c01426 	beq	r2,r3,bae4 <__gethex+0x180>
    ba94:	8005883a 	mov	r2,r16
    ba98:	98800015 	stw	r2,0(r19)
    ba9c:	50003c26 	beq	r10,zero,bb90 <__gethex+0x22c>
    baa0:	b001241e 	bne	r22,zero,bf34 <__gethex+0x5d0>
    baa4:	00800184 	movi	r2,6
    baa8:	dfc01417 	ldw	ra,80(sp)
    baac:	df001317 	ldw	fp,76(sp)
    bab0:	ddc01217 	ldw	r23,72(sp)
    bab4:	dd801117 	ldw	r22,68(sp)
    bab8:	dd401017 	ldw	r21,64(sp)
    babc:	dd000f17 	ldw	r20,60(sp)
    bac0:	dcc00e17 	ldw	r19,56(sp)
    bac4:	dc800d17 	ldw	r18,52(sp)
    bac8:	dc400c17 	ldw	r17,48(sp)
    bacc:	dc000b17 	ldw	r16,44(sp)
    bad0:	dec01504 	addi	sp,sp,84
    bad4:	f800283a 	ret
    bad8:	e0014826 	beq	fp,zero,bffc <__gethex+0x698>
    badc:	80800003 	ldbu	r2,0(r16)
    bae0:	003fe306 	br	ba70 <__alt_data_end+0xfe00ba70>
    bae4:	80c00043 	ldbu	r3,1(r16)
    bae8:	01000ac4 	movi	r4,43
    baec:	18803fcc 	andi	r2,r3,255
    baf0:	11011226 	beq	r2,r4,bf3c <__gethex+0x5d8>
    baf4:	01000b44 	movi	r4,45
    baf8:	1100f626 	beq	r2,r4,bed4 <__gethex+0x570>
    bafc:	80800044 	addi	r2,r16,1
    bb00:	0019883a 	mov	r12,zero
    bb04:	18c03fcc 	andi	r3,r3,255
    bb08:	a8c7883a 	add	r3,r21,r3
    bb0c:	18c00003 	ldbu	r3,0(r3)
    bb10:	02c00604 	movi	r11,24
    bb14:	193fffc4 	addi	r4,r3,-1
    bb18:	21003fcc 	andi	r4,r4,255
    bb1c:	593fdd36 	bltu	r11,r4,ba94 <__alt_data_end+0xfe00ba94>
    bb20:	11400043 	ldbu	r5,1(r2)
    bb24:	18c03fcc 	andi	r3,r3,255
    bb28:	193ffc04 	addi	r4,r3,-16
    bb2c:	00c000b4 	movhi	r3,2
    bb30:	18e2e904 	addi	r3,r3,-29788
    bb34:	1947883a 	add	r3,r3,r5
    bb38:	19400003 	ldbu	r5,0(r3)
    bb3c:	10800044 	addi	r2,r2,1
    bb40:	28ffffc4 	addi	r3,r5,-1
    bb44:	18c03fcc 	andi	r3,r3,255
    bb48:	29403fcc 	andi	r5,r5,255
    bb4c:	58c00b36 	bltu	r11,r3,bb7c <__gethex+0x218>
    bb50:	10800044 	addi	r2,r2,1
    bb54:	10c00003 	ldbu	r3,0(r2)
    bb58:	210002a4 	muli	r4,r4,10
    bb5c:	a8c7883a 	add	r3,r21,r3
    bb60:	18c00003 	ldbu	r3,0(r3)
    bb64:	2149883a 	add	r4,r4,r5
    bb68:	213ffc04 	addi	r4,r4,-16
    bb6c:	19bfffc4 	addi	r6,r3,-1
    bb70:	31803fcc 	andi	r6,r6,255
    bb74:	19403fcc 	andi	r5,r3,255
    bb78:	59bff52e 	bgeu	r11,r6,bb50 <__alt_data_end+0xfe00bb50>
    bb7c:	60000126 	beq	r12,zero,bb84 <__gethex+0x220>
    bb80:	0109c83a 	sub	r4,zero,r4
    bb84:	98800015 	stw	r2,0(r19)
    bb88:	e139883a 	add	fp,fp,r4
    bb8c:	503fc41e 	bne	r10,zero,baa0 <__alt_data_end+0xfe00baa0>
    bb90:	85c5c83a 	sub	r2,r16,r23
    bb94:	10bfffc4 	addi	r2,r2,-1
    bb98:	00c001c4 	movi	r3,7
    bb9c:	000b883a 	mov	r5,zero
    bba0:	1880030e 	bge	r3,r2,bbb0 <__gethex+0x24c>
    bba4:	1005d07a 	srai	r2,r2,1
    bba8:	29400044 	addi	r5,r5,1
    bbac:	18bffd16 	blt	r3,r2,bba4 <__alt_data_end+0xfe00bba4>
    bbb0:	d9000017 	ldw	r4,0(sp)
    bbb4:	000c6640 	call	c664 <_Balloc>
    bbb8:	10c00504 	addi	r3,r2,20
    bbbc:	d8c00115 	stw	r3,4(sp)
    bbc0:	1027883a 	mov	r19,r2
    bbc4:	bc012b2e 	bgeu	r23,r16,c074 <__gethex+0x710>
    bbc8:	dac00203 	ldbu	r11,8(sp)
    bbcc:	81bfffc3 	ldbu	r6,-1(r16)
    bbd0:	03800044 	movi	r14,1
    bbd4:	1815883a 	mov	r10,r3
    bbd8:	0013883a 	mov	r9,zero
    bbdc:	0007883a 	mov	r3,zero
    bbe0:	749dc83a 	sub	r14,r14,r18
    bbe4:	03000804 	movi	r12,32
    bbe8:	85bfffc4 	addi	r22,r16,-1
    bbec:	32c00e26 	beq	r6,r11,bc28 <__gethex+0x2c4>
    bbf0:	1b004626 	beq	r3,r12,bd0c <__gethex+0x3a8>
    bbf4:	1809883a 	mov	r4,r3
    bbf8:	18c00104 	addi	r3,r3,4
    bbfc:	80bfffc3 	ldbu	r2,-1(r16)
    bc00:	a885883a 	add	r2,r21,r2
    bc04:	10800003 	ldbu	r2,0(r2)
    bc08:	108003cc 	andi	r2,r2,15
    bc0c:	1104983a 	sll	r2,r2,r4
    bc10:	4892b03a 	or	r9,r9,r2
    bc14:	bd801b2e 	bgeu	r23,r22,bc84 <__gethex+0x320>
    bc18:	b021883a 	mov	r16,r22
    bc1c:	81bfffc3 	ldbu	r6,-1(r16)
    bc20:	85bfffc4 	addi	r22,r16,-1
    bc24:	32fff21e 	bne	r6,r11,bbf0 <__alt_data_end+0xfe00bbf0>
    bc28:	b39f883a 	add	r15,r22,r14
    bc2c:	7dfff036 	bltu	r15,r23,bbf0 <__alt_data_end+0xfe00bbf0>
    bc30:	7809883a 	mov	r4,r15
    bc34:	880b883a 	mov	r5,r17
    bc38:	900d883a 	mov	r6,r18
    bc3c:	d8c00915 	stw	r3,36(sp)
    bc40:	da400515 	stw	r9,20(sp)
    bc44:	da800a15 	stw	r10,40(sp)
    bc48:	dac00615 	stw	r11,24(sp)
    bc4c:	db000815 	stw	r12,32(sp)
    bc50:	db800715 	stw	r14,28(sp)
    bc54:	dbc00415 	stw	r15,16(sp)
    bc58:	000d6480 	call	d648 <strncmp>
    bc5c:	d8c00917 	ldw	r3,36(sp)
    bc60:	da400517 	ldw	r9,20(sp)
    bc64:	da800a17 	ldw	r10,40(sp)
    bc68:	dac00617 	ldw	r11,24(sp)
    bc6c:	db000817 	ldw	r12,32(sp)
    bc70:	db800717 	ldw	r14,28(sp)
    bc74:	dbc00417 	ldw	r15,16(sp)
    bc78:	103fdd1e 	bne	r2,zero,bbf0 <__alt_data_end+0xfe00bbf0>
    bc7c:	782d883a 	mov	r22,r15
    bc80:	bdbfe536 	bltu	r23,r22,bc18 <__alt_data_end+0xfe00bc18>
    bc84:	d9000117 	ldw	r4,4(sp)
    bc88:	50c00104 	addi	r3,r10,4
    bc8c:	52400015 	stw	r9,0(r10)
    bc90:	1907c83a 	sub	r3,r3,r4
    bc94:	1807d0ba 	srai	r3,r3,2
    bc98:	4809883a 	mov	r4,r9
    bc9c:	1822917a 	slli	r17,r3,5
    bca0:	98c00415 	stw	r3,16(r19)
    bca4:	000c94c0 	call	c94c <__hi0bits>
    bca8:	a4000017 	ldw	r16,0(r20)
    bcac:	8885c83a 	sub	r2,r17,r2
    bcb0:	8080a416 	blt	r16,r2,bf44 <__gethex+0x5e0>
    bcb4:	1400bf16 	blt	r2,r16,bfb4 <__gethex+0x650>
    bcb8:	0019883a 	mov	r12,zero
    bcbc:	a0c00217 	ldw	r3,8(r20)
    bcc0:	1f007d16 	blt	r3,fp,beb8 <__gethex+0x554>
    bcc4:	a0800117 	ldw	r2,4(r20)
    bcc8:	e0808b0e 	bge	fp,r2,bef8 <__gethex+0x594>
    bccc:	1739c83a 	sub	fp,r2,fp
    bcd0:	e4003016 	blt	fp,r16,bd94 <__gethex+0x430>
    bcd4:	a0c00317 	ldw	r3,12(r20)
    bcd8:	01000084 	movi	r4,2
    bcdc:	1900f226 	beq	r3,r4,c0a8 <__gethex+0x744>
    bce0:	010000c4 	movi	r4,3
    bce4:	1900d526 	beq	r3,r4,c03c <__gethex+0x6d8>
    bce8:	01000044 	movi	r4,1
    bcec:	1900e626 	beq	r3,r4,c088 <__gethex+0x724>
    bcf0:	d9000017 	ldw	r4,0(sp)
    bcf4:	980b883a 	mov	r5,r19
    bcf8:	000c70c0 	call	c70c <_Bfree>
    bcfc:	d9401517 	ldw	r5,84(sp)
    bd00:	00801404 	movi	r2,80
    bd04:	28000015 	stw	zero,0(r5)
    bd08:	003f6706 	br	baa8 <__alt_data_end+0xfe00baa8>
    bd0c:	00c00104 	movi	r3,4
    bd10:	52400015 	stw	r9,0(r10)
    bd14:	0009883a 	mov	r4,zero
    bd18:	50d5883a 	add	r10,r10,r3
    bd1c:	0013883a 	mov	r9,zero
    bd20:	003fb606 	br	bbfc <__alt_data_end+0xfe00bbfc>
    bd24:	b809883a 	mov	r4,r23
    bd28:	880b883a 	mov	r5,r17
    bd2c:	900d883a 	mov	r6,r18
    bd30:	d8c00915 	stw	r3,36(sp)
    bd34:	000d6480 	call	d648 <strncmp>
    bd38:	d8c00917 	ldw	r3,36(sp)
    bd3c:	1000691e 	bne	r2,zero,bee4 <__gethex+0x580>
    bd40:	bca1883a 	add	r16,r23,r18
    bd44:	80800003 	ldbu	r2,0(r16)
    bd48:	11003fcc 	andi	r4,r2,255
    bd4c:	1907883a 	add	r3,r3,r4
    bd50:	18c00003 	ldbu	r3,0(r3)
    bd54:	1800a426 	beq	r3,zero,bfe8 <__gethex+0x684>
    bd58:	00800c04 	movi	r2,48
    bd5c:	802f883a 	mov	r23,r16
    bd60:	2080061e 	bne	r4,r2,bd7c <__gethex+0x418>
    bd64:	2007883a 	mov	r3,r4
    bd68:	bdc00044 	addi	r23,r23,1
    bd6c:	b8800003 	ldbu	r2,0(r23)
    bd70:	10fffd26 	beq	r2,r3,bd68 <__alt_data_end+0xfe00bd68>
    bd74:	a885883a 	add	r2,r21,r2
    bd78:	10c00003 	ldbu	r3,0(r2)
    bd7c:	1815003a 	cmpeq	r10,r3,zero
    bd80:	8039883a 	mov	fp,r16
    bd84:	05800044 	movi	r22,1
    bd88:	003f2906 	br	ba30 <__alt_data_end+0xfe00ba30>
    bd8c:	000b8d40 	call	b8d4 <__hexdig_init>
    bd90:	003f0f06 	br	b9d0 <__alt_data_end+0xfe00b9d0>
    bd94:	e47fffc4 	addi	r17,fp,-1
    bd98:	6000a61e 	bne	r12,zero,c034 <__gethex+0x6d0>
    bd9c:	0440040e 	bge	zero,r17,bdb0 <__gethex+0x44c>
    bda0:	9809883a 	mov	r4,r19
    bda4:	880b883a 	mov	r5,r17
    bda8:	000d5540 	call	d554 <__any_on>
    bdac:	1019883a 	mov	r12,r2
    bdb0:	8805d17a 	srai	r2,r17,5
    bdb4:	d8c00117 	ldw	r3,4(sp)
    bdb8:	8c4007cc 	andi	r17,r17,31
    bdbc:	1085883a 	add	r2,r2,r2
    bdc0:	1085883a 	add	r2,r2,r2
    bdc4:	1885883a 	add	r2,r3,r2
    bdc8:	00c00044 	movi	r3,1
    bdcc:	1c46983a 	sll	r3,r3,r17
    bdd0:	10800017 	ldw	r2,0(r2)
    bdd4:	1884703a 	and	r2,r3,r2
    bdd8:	10000126 	beq	r2,zero,bde0 <__gethex+0x47c>
    bddc:	63000094 	ori	r12,r12,2
    bde0:	e00b883a 	mov	r5,fp
    bde4:	9809883a 	mov	r4,r19
    bde8:	000b7d80 	call	b7d8 <rshift>
    bdec:	8721c83a 	sub	r16,r16,fp
    bdf0:	a7000117 	ldw	fp,4(r20)
    bdf4:	04400084 	movi	r17,2
    bdf8:	60004826 	beq	r12,zero,bf1c <__gethex+0x5b8>
    bdfc:	a0800317 	ldw	r2,12(r20)
    be00:	00c00084 	movi	r3,2
    be04:	10c03e26 	beq	r2,r3,bf00 <__gethex+0x59c>
    be08:	00c000c4 	movi	r3,3
    be0c:	10c04026 	beq	r2,r3,bf10 <__gethex+0x5ac>
    be10:	00c00044 	movi	r3,1
    be14:	10c0401e 	bne	r2,r3,bf18 <__gethex+0x5b4>
    be18:	6080008c 	andi	r2,r12,2
    be1c:	10003e26 	beq	r2,zero,bf18 <__gethex+0x5b4>
    be20:	d8c00117 	ldw	r3,4(sp)
    be24:	18800017 	ldw	r2,0(r3)
    be28:	6084b03a 	or	r2,r12,r2
    be2c:	1080004c 	andi	r2,r2,1
    be30:	10003926 	beq	r2,zero,bf18 <__gethex+0x5b4>
    be34:	9c800417 	ldw	r18,16(r19)
    be38:	d8c00117 	ldw	r3,4(sp)
    be3c:	00bfffc4 	movi	r2,-1
    be40:	9489883a 	add	r4,r18,r18
    be44:	212d883a 	add	r22,r4,r4
    be48:	1d8b883a 	add	r5,r3,r22
    be4c:	00000306 	br	be5c <__gethex+0x4f8>
    be50:	18000015 	stw	zero,0(r3)
    be54:	18c00104 	addi	r3,r3,4
    be58:	1940962e 	bgeu	r3,r5,c0b4 <__gethex+0x750>
    be5c:	19000017 	ldw	r4,0(r3)
    be60:	20bffb26 	beq	r4,r2,be50 <__alt_data_end+0xfe00be50>
    be64:	21000044 	addi	r4,r4,1
    be68:	19000015 	stw	r4,0(r3)
    be6c:	d9000117 	ldw	r4,4(sp)
    be70:	00800084 	movi	r2,2
    be74:	88809c26 	beq	r17,r2,c0e8 <__gethex+0x784>
    be78:	98800417 	ldw	r2,16(r19)
    be7c:	90800816 	blt	r18,r2,bea0 <__gethex+0x53c>
    be80:	840007cc 	andi	r16,r16,31
    be84:	80007926 	beq	r16,zero,c06c <__gethex+0x708>
    be88:	2585883a 	add	r2,r4,r22
    be8c:	113fff17 	ldw	r4,-4(r2)
    be90:	000c94c0 	call	c94c <__hi0bits>
    be94:	00c00804 	movi	r3,32
    be98:	1c21c83a 	sub	r16,r3,r16
    be9c:	1400730e 	bge	r2,r16,c06c <__gethex+0x708>
    bea0:	9809883a 	mov	r4,r19
    bea4:	01400044 	movi	r5,1
    bea8:	000b7d80 	call	b7d8 <rshift>
    beac:	a0800217 	ldw	r2,8(r20)
    beb0:	e7000044 	addi	fp,fp,1
    beb4:	17006d0e 	bge	r2,fp,c06c <__gethex+0x708>
    beb8:	d9000017 	ldw	r4,0(sp)
    bebc:	980b883a 	mov	r5,r19
    bec0:	000c70c0 	call	c70c <_Bfree>
    bec4:	d9001517 	ldw	r4,84(sp)
    bec8:	008028c4 	movi	r2,163
    becc:	20000015 	stw	zero,0(r4)
    bed0:	003ef506 	br	baa8 <__alt_data_end+0xfe00baa8>
    bed4:	03000044 	movi	r12,1
    bed8:	80c00083 	ldbu	r3,2(r16)
    bedc:	80800084 	addi	r2,r16,2
    bee0:	003f0806 	br	bb04 <__alt_data_end+0xfe00bb04>
    bee4:	b8800003 	ldbu	r2,0(r23)
    bee8:	b821883a 	mov	r16,r23
    beec:	0039883a 	mov	fp,zero
    bef0:	02800044 	movi	r10,1
    bef4:	003ee206 	br	ba80 <__alt_data_end+0xfe00ba80>
    bef8:	04400044 	movi	r17,1
    befc:	003fbe06 	br	bdf8 <__alt_data_end+0xfe00bdf8>
    bf00:	d9001617 	ldw	r4,88(sp)
    bf04:	00800044 	movi	r2,1
    bf08:	1109c83a 	sub	r4,r2,r4
    bf0c:	d9001615 	stw	r4,88(sp)
    bf10:	d9401617 	ldw	r5,88(sp)
    bf14:	283fc71e 	bne	r5,zero,be34 <__alt_data_end+0xfe00be34>
    bf18:	8c400414 	ori	r17,r17,16
    bf1c:	d8801517 	ldw	r2,84(sp)
    bf20:	d8c00317 	ldw	r3,12(sp)
    bf24:	14c00015 	stw	r19,0(r2)
    bf28:	1f000015 	stw	fp,0(r3)
    bf2c:	8805883a 	mov	r2,r17
    bf30:	003edd06 	br	baa8 <__alt_data_end+0xfe00baa8>
    bf34:	0005883a 	mov	r2,zero
    bf38:	003edb06 	br	baa8 <__alt_data_end+0xfe00baa8>
    bf3c:	0019883a 	mov	r12,zero
    bf40:	003fe506 	br	bed8 <__alt_data_end+0xfe00bed8>
    bf44:	1423c83a 	sub	r17,r2,r16
    bf48:	9809883a 	mov	r4,r19
    bf4c:	880b883a 	mov	r5,r17
    bf50:	000d5540 	call	d554 <__any_on>
    bf54:	10002726 	beq	r2,zero,bff4 <__gethex+0x690>
    bf58:	88bfffc4 	addi	r2,r17,-1
    bf5c:	1007d17a 	srai	r3,r2,5
    bf60:	d9400117 	ldw	r5,4(sp)
    bf64:	110007cc 	andi	r4,r2,31
    bf68:	18c7883a 	add	r3,r3,r3
    bf6c:	18c7883a 	add	r3,r3,r3
    bf70:	03000044 	movi	r12,1
    bf74:	28c7883a 	add	r3,r5,r3
    bf78:	6108983a 	sll	r4,r12,r4
    bf7c:	18c00017 	ldw	r3,0(r3)
    bf80:	20c6703a 	and	r3,r4,r3
    bf84:	18000626 	beq	r3,zero,bfa0 <__gethex+0x63c>
    bf88:	60803d0e 	bge	r12,r2,c080 <__gethex+0x71c>
    bf8c:	9809883a 	mov	r4,r19
    bf90:	897fff84 	addi	r5,r17,-2
    bf94:	000d5540 	call	d554 <__any_on>
    bf98:	10003926 	beq	r2,zero,c080 <__gethex+0x71c>
    bf9c:	030000c4 	movi	r12,3
    bfa0:	9809883a 	mov	r4,r19
    bfa4:	880b883a 	mov	r5,r17
    bfa8:	000b7d80 	call	b7d8 <rshift>
    bfac:	e479883a 	add	fp,fp,r17
    bfb0:	003f4206 	br	bcbc <__alt_data_end+0xfe00bcbc>
    bfb4:	d9000017 	ldw	r4,0(sp)
    bfb8:	80a3c83a 	sub	r17,r16,r2
    bfbc:	980b883a 	mov	r5,r19
    bfc0:	880d883a 	mov	r6,r17
    bfc4:	000cdd40 	call	cdd4 <__lshift>
    bfc8:	10c00504 	addi	r3,r2,20
    bfcc:	1027883a 	mov	r19,r2
    bfd0:	e479c83a 	sub	fp,fp,r17
    bfd4:	d8c00115 	stw	r3,4(sp)
    bfd8:	0019883a 	mov	r12,zero
    bfdc:	003f3706 	br	bcbc <__alt_data_end+0xfe00bcbc>
    bfe0:	002d883a 	mov	r22,zero
    bfe4:	003e8806 	br	ba08 <__alt_data_end+0xfe00ba08>
    bfe8:	0039883a 	mov	fp,zero
    bfec:	02800044 	movi	r10,1
    bff0:	003ea306 	br	ba80 <__alt_data_end+0xfe00ba80>
    bff4:	0019883a 	mov	r12,zero
    bff8:	003fe906 	br	bfa0 <__alt_data_end+0xfe00bfa0>
    bffc:	84b9883a 	add	fp,r16,r18
    c000:	e0800003 	ldbu	r2,0(fp)
    c004:	e021883a 	mov	r16,fp
    c008:	10c03fcc 	andi	r3,r2,255
    c00c:	a8c7883a 	add	r3,r21,r3
    c010:	18c00003 	ldbu	r3,0(r3)
    c014:	183e9626 	beq	r3,zero,ba70 <__alt_data_end+0xfe00ba70>
    c018:	84000044 	addi	r16,r16,1
    c01c:	80800003 	ldbu	r2,0(r16)
    c020:	10c03fcc 	andi	r3,r2,255
    c024:	a8c7883a 	add	r3,r21,r3
    c028:	18c00003 	ldbu	r3,0(r3)
    c02c:	183ffa1e 	bne	r3,zero,c018 <__alt_data_end+0xfe00c018>
    c030:	003e8f06 	br	ba70 <__alt_data_end+0xfe00ba70>
    c034:	03000044 	movi	r12,1
    c038:	003f5d06 	br	bdb0 <__alt_data_end+0xfe00bdb0>
    c03c:	d8c01617 	ldw	r3,88(sp)
    c040:	183f2b26 	beq	r3,zero,bcf0 <__alt_data_end+0xfe00bcf0>
    c044:	d8c00317 	ldw	r3,12(sp)
    c048:	d9001517 	ldw	r4,84(sp)
    c04c:	18800015 	stw	r2,0(r3)
    c050:	d8c00117 	ldw	r3,4(sp)
    c054:	00800044 	movi	r2,1
    c058:	98800415 	stw	r2,16(r19)
    c05c:	18800015 	stw	r2,0(r3)
    c060:	24c00015 	stw	r19,0(r4)
    c064:	00801884 	movi	r2,98
    c068:	003e8f06 	br	baa8 <__alt_data_end+0xfe00baa8>
    c06c:	04400844 	movi	r17,33
    c070:	003faa06 	br	bf1c <__alt_data_end+0xfe00bf1c>
    c074:	da800117 	ldw	r10,4(sp)
    c078:	0013883a 	mov	r9,zero
    c07c:	003f0106 	br	bc84 <__alt_data_end+0xfe00bc84>
    c080:	03000084 	movi	r12,2
    c084:	003fc606 	br	bfa0 <__alt_data_end+0xfe00bfa0>
    c088:	e43f191e 	bne	fp,r16,bcf0 <__alt_data_end+0xfe00bcf0>
    c08c:	1c3fed0e 	bge	r3,r16,c044 <__alt_data_end+0xfe00c044>
    c090:	9809883a 	mov	r4,r19
    c094:	817fffc4 	addi	r5,r16,-1
    c098:	000d5540 	call	d554 <__any_on>
    c09c:	103f1426 	beq	r2,zero,bcf0 <__alt_data_end+0xfe00bcf0>
    c0a0:	a0800117 	ldw	r2,4(r20)
    c0a4:	003fe706 	br	c044 <__alt_data_end+0xfe00c044>
    c0a8:	d9401617 	ldw	r5,88(sp)
    c0ac:	283fe526 	beq	r5,zero,c044 <__alt_data_end+0xfe00c044>
    c0b0:	003f0f06 	br	bcf0 <__alt_data_end+0xfe00bcf0>
    c0b4:	98800217 	ldw	r2,8(r19)
    c0b8:	9080100e 	bge	r18,r2,c0fc <__gethex+0x798>
    c0bc:	d9000117 	ldw	r4,4(sp)
    c0c0:	9005883a 	mov	r2,r18
    c0c4:	10c00144 	addi	r3,r2,5
    c0c8:	18c7883a 	add	r3,r3,r3
    c0cc:	10800044 	addi	r2,r2,1
    c0d0:	18c7883a 	add	r3,r3,r3
    c0d4:	98800415 	stw	r2,16(r19)
    c0d8:	98c5883a 	add	r2,r19,r3
    c0dc:	00c00044 	movi	r3,1
    c0e0:	10c00015 	stw	r3,0(r2)
    c0e4:	003f6206 	br	be70 <__alt_data_end+0xfe00be70>
    c0e8:	a0800017 	ldw	r2,0(r20)
    c0ec:	10bfffc4 	addi	r2,r2,-1
    c0f0:	14001526 	beq	r2,r16,c148 <__gethex+0x7e4>
    c0f4:	04400884 	movi	r17,34
    c0f8:	003f8806 	br	bf1c <__alt_data_end+0xfe00bf1c>
    c0fc:	99400117 	ldw	r5,4(r19)
    c100:	d9000017 	ldw	r4,0(sp)
    c104:	29400044 	addi	r5,r5,1
    c108:	000c6640 	call	c664 <_Balloc>
    c10c:	99800417 	ldw	r6,16(r19)
    c110:	99400304 	addi	r5,r19,12
    c114:	11000304 	addi	r4,r2,12
    c118:	31800084 	addi	r6,r6,2
    c11c:	318d883a 	add	r6,r6,r6
    c120:	318d883a 	add	r6,r6,r6
    c124:	102b883a 	mov	r21,r2
    c128:	00047c40 	call	47c4 <memcpy>
    c12c:	d9000017 	ldw	r4,0(sp)
    c130:	980b883a 	mov	r5,r19
    c134:	a827883a 	mov	r19,r21
    c138:	000c70c0 	call	c70c <_Bfree>
    c13c:	a8800417 	ldw	r2,16(r21)
    c140:	a9000504 	addi	r4,r21,20
    c144:	003fdf06 	br	c0c4 <__alt_data_end+0xfe00c0c4>
    c148:	8005d17a 	srai	r2,r16,5
    c14c:	04400044 	movi	r17,1
    c150:	840007cc 	andi	r16,r16,31
    c154:	1085883a 	add	r2,r2,r2
    c158:	1085883a 	add	r2,r2,r2
    c15c:	2085883a 	add	r2,r4,r2
    c160:	10800017 	ldw	r2,0(r2)
    c164:	8c22983a 	sll	r17,r17,r16
    c168:	88a2703a 	and	r17,r17,r2
    c16c:	8822c03a 	cmpne	r17,r17,zero
    c170:	00800884 	movi	r2,34
    c174:	1463c83a 	sub	r17,r2,r17
    c178:	003f6806 	br	bf1c <__alt_data_end+0xfe00bf1c>

0000c17c <__hexnan>:
    c17c:	defff704 	addi	sp,sp,-36
    c180:	dc000315 	stw	r16,12(sp)
    c184:	040000b4 	movhi	r16,2
    c188:	8422e904 	addi	r16,r16,-29788
    c18c:	80800c03 	ldbu	r2,48(r16)
    c190:	dfc00815 	stw	ra,32(sp)
    c194:	dd000715 	stw	r20,28(sp)
    c198:	dcc00615 	stw	r19,24(sp)
    c19c:	dc800515 	stw	r18,20(sp)
    c1a0:	dc400415 	stw	r17,16(sp)
    c1a4:	10007426 	beq	r2,zero,c378 <__hexnan+0x1fc>
    c1a8:	2c800017 	ldw	r18,0(r5)
    c1ac:	903fd17a 	srai	ra,r18,5
    c1b0:	948007cc 	andi	r18,r18,31
    c1b4:	ffff883a 	add	ra,ra,ra
    c1b8:	ffff883a 	add	ra,ra,ra
    c1bc:	37ff883a 	add	ra,r6,ra
    c1c0:	90000126 	beq	r18,zero,c1c8 <__hexnan+0x4c>
    c1c4:	ffc00104 	addi	ra,ra,4
    c1c8:	20c00017 	ldw	r3,0(r4)
    c1cc:	f83fff15 	stw	zero,-4(ra)
    c1d0:	fa7fff04 	addi	r9,ra,-4
    c1d4:	18800043 	ldbu	r2,1(r3)
    c1d8:	4819883a 	mov	r12,r9
    c1dc:	480b883a 	mov	r5,r9
    c1e0:	0011883a 	mov	r8,zero
    c1e4:	001b883a 	mov	r13,zero
    c1e8:	0017883a 	mov	r11,zero
    c1ec:	03c00204 	movi	r15,8
    c1f0:	03800804 	movi	r14,32
    c1f4:	044001c4 	movi	r17,7
    c1f8:	10001d26 	beq	r2,zero,c270 <__hexnan+0xf4>
    c1fc:	808f883a 	add	r7,r16,r2
    c200:	39c00003 	ldbu	r7,0(r7)
    c204:	3a803fcc 	andi	r10,r7,255
    c208:	5000391e 	bne	r10,zero,c2f0 <__hexnan+0x174>
    c20c:	70804f36 	bltu	r14,r2,c34c <__hexnan+0x1d0>
    c210:	6ac0140e 	bge	r13,r11,c264 <__hexnan+0xe8>
    c214:	2b00112e 	bgeu	r5,r12,c25c <__hexnan+0xe0>
    c218:	8a001016 	blt	r17,r8,c25c <__hexnan+0xe0>
    c21c:	7a27c83a 	sub	r19,r15,r8
    c220:	9ce7883a 	add	r19,r19,r19
    c224:	9ce7883a 	add	r19,r19,r19
    c228:	2a800017 	ldw	r10,0(r5)
    c22c:	74e9c83a 	sub	r20,r14,r19
    c230:	2805883a 	mov	r2,r5
    c234:	00000106 	br	c23c <__hexnan+0xc0>
    c238:	3815883a 	mov	r10,r7
    c23c:	11c00117 	ldw	r7,4(r2)
    c240:	10800104 	addi	r2,r2,4
    c244:	3d10983a 	sll	r8,r7,r20
    c248:	3cced83a 	srl	r7,r7,r19
    c24c:	5214b03a 	or	r10,r10,r8
    c250:	12bfff15 	stw	r10,-4(r2)
    c254:	11c00015 	stw	r7,0(r2)
    c258:	133ff736 	bltu	r2,r12,c238 <__alt_data_end+0xfe00c238>
    c25c:	31403436 	bltu	r6,r5,c330 <__hexnan+0x1b4>
    c260:	02000204 	movi	r8,8
    c264:	18c00044 	addi	r3,r3,1
    c268:	18800043 	ldbu	r2,1(r3)
    c26c:	103fe31e 	bne	r2,zero,c1fc <__alt_data_end+0xfe00c1fc>
    c270:	2807883a 	mov	r3,r5
    c274:	58003726 	beq	r11,zero,c354 <__hexnan+0x1d8>
    c278:	2b00022e 	bgeu	r5,r12,c284 <__hexnan+0x108>
    c27c:	008001c4 	movi	r2,7
    c280:	12005e0e 	bge	r2,r8,c3fc <__hexnan+0x280>
    c284:	30c0442e 	bgeu	r6,r3,c398 <__hexnan+0x21c>
    c288:	3009883a 	mov	r4,r6
    c28c:	00000106 	br	c294 <__hexnan+0x118>
    c290:	1009883a 	mov	r4,r2
    c294:	19400017 	ldw	r5,0(r3)
    c298:	18c00104 	addi	r3,r3,4
    c29c:	20800104 	addi	r2,r4,4
    c2a0:	21400015 	stw	r5,0(r4)
    c2a4:	48fffa2e 	bgeu	r9,r3,c290 <__alt_data_end+0xfe00c290>
    c2a8:	10000015 	stw	zero,0(r2)
    c2ac:	10800104 	addi	r2,r2,4
    c2b0:	48bffd2e 	bgeu	r9,r2,c2a8 <__alt_data_end+0xfe00c2a8>
    c2b4:	f8bfff17 	ldw	r2,-4(ra)
    c2b8:	1000041e 	bne	r2,zero,c2cc <__hexnan+0x150>
    c2bc:	32403f26 	beq	r6,r9,c3bc <__hexnan+0x240>
    c2c0:	4a7fff04 	addi	r9,r9,-4
    c2c4:	48800017 	ldw	r2,0(r9)
    c2c8:	103ffc26 	beq	r2,zero,c2bc <__alt_data_end+0xfe00c2bc>
    c2cc:	00800144 	movi	r2,5
    c2d0:	dfc00817 	ldw	ra,32(sp)
    c2d4:	dd000717 	ldw	r20,28(sp)
    c2d8:	dcc00617 	ldw	r19,24(sp)
    c2dc:	dc800517 	ldw	r18,20(sp)
    c2e0:	dc400417 	ldw	r17,16(sp)
    c2e4:	dc000317 	ldw	r16,12(sp)
    c2e8:	dec00904 	addi	sp,sp,36
    c2ec:	f800283a 	ret
    c2f0:	42000044 	addi	r8,r8,1
    c2f4:	5ac00044 	addi	r11,r11,1
    c2f8:	7a000716 	blt	r15,r8,c318 <__hexnan+0x19c>
    c2fc:	28800017 	ldw	r2,0(r5)
    c300:	1004913a 	slli	r2,r2,4
    c304:	39c003cc 	andi	r7,r7,15
    c308:	11ceb03a 	or	r7,r2,r7
    c30c:	29c00015 	stw	r7,0(r5)
    c310:	18c00044 	addi	r3,r3,1
    c314:	003fd406 	br	c268 <__alt_data_end+0xfe00c268>
    c318:	317fd22e 	bgeu	r6,r5,c264 <__alt_data_end+0xfe00c264>
    c31c:	283fff15 	stw	zero,-4(r5)
    c320:	0005883a 	mov	r2,zero
    c324:	297fff04 	addi	r5,r5,-4
    c328:	02000044 	movi	r8,1
    c32c:	003ff506 	br	c304 <__alt_data_end+0xfe00c304>
    c330:	2b3fff04 	addi	r12,r5,-4
    c334:	283fff15 	stw	zero,-4(r5)
    c338:	581b883a 	mov	r13,r11
    c33c:	600b883a 	mov	r5,r12
    c340:	0011883a 	mov	r8,zero
    c344:	18c00044 	addi	r3,r3,1
    c348:	003fc706 	br	c268 <__alt_data_end+0xfe00c268>
    c34c:	01c00a44 	movi	r7,41
    c350:	11c02526 	beq	r2,r7,c3e8 <__hexnan+0x26c>
    c354:	00800104 	movi	r2,4
    c358:	dfc00817 	ldw	ra,32(sp)
    c35c:	dd000717 	ldw	r20,28(sp)
    c360:	dcc00617 	ldw	r19,24(sp)
    c364:	dc800517 	ldw	r18,20(sp)
    c368:	dc400417 	ldw	r17,16(sp)
    c36c:	dc000317 	ldw	r16,12(sp)
    c370:	dec00904 	addi	sp,sp,36
    c374:	f800283a 	ret
    c378:	d9000015 	stw	r4,0(sp)
    c37c:	d9400115 	stw	r5,4(sp)
    c380:	d9800215 	stw	r6,8(sp)
    c384:	000b8d40 	call	b8d4 <__hexdig_init>
    c388:	d9800217 	ldw	r6,8(sp)
    c38c:	d9400117 	ldw	r5,4(sp)
    c390:	d9000017 	ldw	r4,0(sp)
    c394:	003f8406 	br	c1a8 <__alt_data_end+0xfe00c1a8>
    c398:	903fc626 	beq	r18,zero,c2b4 <__alt_data_end+0xfe00c2b4>
    c39c:	00800804 	movi	r2,32
    c3a0:	14a5c83a 	sub	r18,r2,r18
    c3a4:	00ffffc4 	movi	r3,-1
    c3a8:	f8bfff17 	ldw	r2,-4(ra)
    c3ac:	1c86d83a 	srl	r3,r3,r18
    c3b0:	1884703a 	and	r2,r3,r2
    c3b4:	f8bfff15 	stw	r2,-4(ra)
    c3b8:	003fbf06 	br	c2b8 <__alt_data_end+0xfe00c2b8>
    c3bc:	00800044 	movi	r2,1
    c3c0:	48800015 	stw	r2,0(r9)
    c3c4:	00800144 	movi	r2,5
    c3c8:	dfc00817 	ldw	ra,32(sp)
    c3cc:	dd000717 	ldw	r20,28(sp)
    c3d0:	dcc00617 	ldw	r19,24(sp)
    c3d4:	dc800517 	ldw	r18,20(sp)
    c3d8:	dc400417 	ldw	r17,16(sp)
    c3dc:	dc000317 	ldw	r16,12(sp)
    c3e0:	dec00904 	addi	sp,sp,36
    c3e4:	f800283a 	ret
    c3e8:	18c00084 	addi	r3,r3,2
    c3ec:	20c00015 	stw	r3,0(r4)
    c3f0:	2807883a 	mov	r3,r5
    c3f4:	583fa01e 	bne	r11,zero,c278 <__alt_data_end+0xfe00c278>
    c3f8:	003fd606 	br	c354 <__alt_data_end+0xfe00c354>
    c3fc:	00800204 	movi	r2,8
    c400:	1211c83a 	sub	r8,r2,r8
    c404:	4211883a 	add	r8,r8,r8
    c408:	4211883a 	add	r8,r8,r8
    c40c:	02800804 	movi	r10,32
    c410:	29c00017 	ldw	r7,0(r5)
    c414:	5215c83a 	sub	r10,r10,r8
    c418:	00000106 	br	c420 <__hexnan+0x2a4>
    c41c:	100f883a 	mov	r7,r2
    c420:	28800117 	ldw	r2,4(r5)
    c424:	29400104 	addi	r5,r5,4
    c428:	1288983a 	sll	r4,r2,r10
    c42c:	1204d83a 	srl	r2,r2,r8
    c430:	3908b03a 	or	r4,r7,r4
    c434:	293fff15 	stw	r4,-4(r5)
    c438:	28800015 	stw	r2,0(r5)
    c43c:	2b3ff736 	bltu	r5,r12,c41c <__alt_data_end+0xfe00c41c>
    c440:	003f9006 	br	c284 <__alt_data_end+0xfe00c284>

0000c444 <_lseek_r>:
    c444:	defffd04 	addi	sp,sp,-12
    c448:	dc400115 	stw	r17,4(sp)
    c44c:	dc000015 	stw	r16,0(sp)
    c450:	2023883a 	mov	r17,r4
    c454:	040000b4 	movhi	r16,2
    c458:	8422d804 	addi	r16,r16,-29856
    c45c:	2809883a 	mov	r4,r5
    c460:	300b883a 	mov	r5,r6
    c464:	380d883a 	mov	r6,r7
    c468:	dfc00215 	stw	ra,8(sp)
    c46c:	80000015 	stw	zero,0(r16)
    c470:	00125800 	call	12580 <lseek>
    c474:	00ffffc4 	movi	r3,-1
    c478:	10c00526 	beq	r2,r3,c490 <_lseek_r+0x4c>
    c47c:	dfc00217 	ldw	ra,8(sp)
    c480:	dc400117 	ldw	r17,4(sp)
    c484:	dc000017 	ldw	r16,0(sp)
    c488:	dec00304 	addi	sp,sp,12
    c48c:	f800283a 	ret
    c490:	80c00017 	ldw	r3,0(r16)
    c494:	183ff926 	beq	r3,zero,c47c <__alt_data_end+0xfe00c47c>
    c498:	88c00015 	stw	r3,0(r17)
    c49c:	dfc00217 	ldw	ra,8(sp)
    c4a0:	dc400117 	ldw	r17,4(sp)
    c4a4:	dc000017 	ldw	r16,0(sp)
    c4a8:	dec00304 	addi	sp,sp,12
    c4ac:	f800283a 	ret

0000c4b0 <__smakebuf_r>:
    c4b0:	2880030b 	ldhu	r2,12(r5)
    c4b4:	deffec04 	addi	sp,sp,-80
    c4b8:	dc000f15 	stw	r16,60(sp)
    c4bc:	dfc01315 	stw	ra,76(sp)
    c4c0:	dcc01215 	stw	r19,72(sp)
    c4c4:	dc801115 	stw	r18,68(sp)
    c4c8:	dc401015 	stw	r17,64(sp)
    c4cc:	10c0008c 	andi	r3,r2,2
    c4d0:	2821883a 	mov	r16,r5
    c4d4:	18003a1e 	bne	r3,zero,c5c0 <__smakebuf_r+0x110>
    c4d8:	2940038f 	ldh	r5,14(r5)
    c4dc:	2023883a 	mov	r17,r4
    c4e0:	28001b16 	blt	r5,zero,c550 <__smakebuf_r+0xa0>
    c4e4:	d80d883a 	mov	r6,sp
    c4e8:	000e9a00 	call	e9a0 <_fstat_r>
    c4ec:	10001716 	blt	r2,zero,c54c <__smakebuf_r+0x9c>
    c4f0:	d8800117 	ldw	r2,4(sp)
    c4f4:	00e00014 	movui	r3,32768
    c4f8:	10bc000c 	andi	r2,r2,61440
    c4fc:	10c03e26 	beq	r2,r3,c5f8 <__smakebuf_r+0x148>
    c500:	80c0030b 	ldhu	r3,12(r16)
    c504:	18c20014 	ori	r3,r3,2048
    c508:	80c0030d 	sth	r3,12(r16)
    c50c:	00c80004 	movi	r3,8192
    c510:	10c0431e 	bne	r2,r3,c620 <__smakebuf_r+0x170>
    c514:	8140038f 	ldh	r5,14(r16)
    c518:	8809883a 	mov	r4,r17
    c51c:	000ea080 	call	ea08 <_isatty_r>
    c520:	10004d26 	beq	r2,zero,c658 <__smakebuf_r+0x1a8>
    c524:	80c0030b 	ldhu	r3,12(r16)
    c528:	04c00044 	movi	r19,1
    c52c:	808010c4 	addi	r2,r16,67
    c530:	1cc6b03a 	or	r3,r3,r19
    c534:	80c0030d 	sth	r3,12(r16)
    c538:	80800015 	stw	r2,0(r16)
    c53c:	80800415 	stw	r2,16(r16)
    c540:	84c00515 	stw	r19,20(r16)
    c544:	04810004 	movi	r18,1024
    c548:	00000706 	br	c568 <__smakebuf_r+0xb8>
    c54c:	8080030b 	ldhu	r2,12(r16)
    c550:	10c0200c 	andi	r3,r2,128
    c554:	1800261e 	bne	r3,zero,c5f0 <__smakebuf_r+0x140>
    c558:	04810004 	movi	r18,1024
    c55c:	10820014 	ori	r2,r2,2048
    c560:	8080030d 	sth	r2,12(r16)
    c564:	0027883a 	mov	r19,zero
    c568:	8809883a 	mov	r4,r17
    c56c:	900b883a 	mov	r5,r18
    c570:	0003cdc0 	call	3cdc <_malloc_r>
    c574:	10002d26 	beq	r2,zero,c62c <__smakebuf_r+0x17c>
    c578:	80c0030b 	ldhu	r3,12(r16)
    c57c:	01000034 	movhi	r4,0
    c580:	210af004 	addi	r4,r4,11200
    c584:	89000f15 	stw	r4,60(r17)
    c588:	18c02014 	ori	r3,r3,128
    c58c:	80c0030d 	sth	r3,12(r16)
    c590:	80800015 	stw	r2,0(r16)
    c594:	80800415 	stw	r2,16(r16)
    c598:	84800515 	stw	r18,20(r16)
    c59c:	98000d26 	beq	r19,zero,c5d4 <__smakebuf_r+0x124>
    c5a0:	8140038f 	ldh	r5,14(r16)
    c5a4:	8809883a 	mov	r4,r17
    c5a8:	000ea080 	call	ea08 <_isatty_r>
    c5ac:	10000926 	beq	r2,zero,c5d4 <__smakebuf_r+0x124>
    c5b0:	8080030b 	ldhu	r2,12(r16)
    c5b4:	10800054 	ori	r2,r2,1
    c5b8:	8080030d 	sth	r2,12(r16)
    c5bc:	00000506 	br	c5d4 <__smakebuf_r+0x124>
    c5c0:	288010c4 	addi	r2,r5,67
    c5c4:	28800015 	stw	r2,0(r5)
    c5c8:	28800415 	stw	r2,16(r5)
    c5cc:	00800044 	movi	r2,1
    c5d0:	28800515 	stw	r2,20(r5)
    c5d4:	dfc01317 	ldw	ra,76(sp)
    c5d8:	dcc01217 	ldw	r19,72(sp)
    c5dc:	dc801117 	ldw	r18,68(sp)
    c5e0:	dc401017 	ldw	r17,64(sp)
    c5e4:	dc000f17 	ldw	r16,60(sp)
    c5e8:	dec01404 	addi	sp,sp,80
    c5ec:	f800283a 	ret
    c5f0:	04801004 	movi	r18,64
    c5f4:	003fd906 	br	c55c <__alt_data_end+0xfe00c55c>
    c5f8:	81000a17 	ldw	r4,40(r16)
    c5fc:	00c00034 	movhi	r3,0
    c600:	18d56b04 	addi	r3,r3,21932
    c604:	20ffbe1e 	bne	r4,r3,c500 <__alt_data_end+0xfe00c500>
    c608:	80c0030b 	ldhu	r3,12(r16)
    c60c:	01010004 	movi	r4,1024
    c610:	81001315 	stw	r4,76(r16)
    c614:	1906b03a 	or	r3,r3,r4
    c618:	80c0030d 	sth	r3,12(r16)
    c61c:	003fbb06 	br	c50c <__alt_data_end+0xfe00c50c>
    c620:	0027883a 	mov	r19,zero
    c624:	04810004 	movi	r18,1024
    c628:	003fcf06 	br	c568 <__alt_data_end+0xfe00c568>
    c62c:	8080030b 	ldhu	r2,12(r16)
    c630:	10c0800c 	andi	r3,r2,512
    c634:	183fe71e 	bne	r3,zero,c5d4 <__alt_data_end+0xfe00c5d4>
    c638:	10800094 	ori	r2,r2,2
    c63c:	80c010c4 	addi	r3,r16,67
    c640:	8080030d 	sth	r2,12(r16)
    c644:	00800044 	movi	r2,1
    c648:	80c00015 	stw	r3,0(r16)
    c64c:	80c00415 	stw	r3,16(r16)
    c650:	80800515 	stw	r2,20(r16)
    c654:	003fdf06 	br	c5d4 <__alt_data_end+0xfe00c5d4>
    c658:	04c00044 	movi	r19,1
    c65c:	04810004 	movi	r18,1024
    c660:	003fc106 	br	c568 <__alt_data_end+0xfe00c568>

0000c664 <_Balloc>:
    c664:	20801317 	ldw	r2,76(r4)
    c668:	defffc04 	addi	sp,sp,-16
    c66c:	dc400115 	stw	r17,4(sp)
    c670:	dc000015 	stw	r16,0(sp)
    c674:	dfc00315 	stw	ra,12(sp)
    c678:	dc800215 	stw	r18,8(sp)
    c67c:	2023883a 	mov	r17,r4
    c680:	2821883a 	mov	r16,r5
    c684:	10000f26 	beq	r2,zero,c6c4 <_Balloc+0x60>
    c688:	8407883a 	add	r3,r16,r16
    c68c:	18c7883a 	add	r3,r3,r3
    c690:	10c7883a 	add	r3,r2,r3
    c694:	18800017 	ldw	r2,0(r3)
    c698:	10001126 	beq	r2,zero,c6e0 <_Balloc+0x7c>
    c69c:	11000017 	ldw	r4,0(r2)
    c6a0:	19000015 	stw	r4,0(r3)
    c6a4:	10000415 	stw	zero,16(r2)
    c6a8:	10000315 	stw	zero,12(r2)
    c6ac:	dfc00317 	ldw	ra,12(sp)
    c6b0:	dc800217 	ldw	r18,8(sp)
    c6b4:	dc400117 	ldw	r17,4(sp)
    c6b8:	dc000017 	ldw	r16,0(sp)
    c6bc:	dec00404 	addi	sp,sp,16
    c6c0:	f800283a 	ret
    c6c4:	01400104 	movi	r5,4
    c6c8:	01800844 	movi	r6,33
    c6cc:	000e8dc0 	call	e8dc <_calloc_r>
    c6d0:	88801315 	stw	r2,76(r17)
    c6d4:	103fec1e 	bne	r2,zero,c688 <__alt_data_end+0xfe00c688>
    c6d8:	0005883a 	mov	r2,zero
    c6dc:	003ff306 	br	c6ac <__alt_data_end+0xfe00c6ac>
    c6e0:	01400044 	movi	r5,1
    c6e4:	2c24983a 	sll	r18,r5,r16
    c6e8:	8809883a 	mov	r4,r17
    c6ec:	91800144 	addi	r6,r18,5
    c6f0:	318d883a 	add	r6,r6,r6
    c6f4:	318d883a 	add	r6,r6,r6
    c6f8:	000e8dc0 	call	e8dc <_calloc_r>
    c6fc:	103ff626 	beq	r2,zero,c6d8 <__alt_data_end+0xfe00c6d8>
    c700:	14000115 	stw	r16,4(r2)
    c704:	14800215 	stw	r18,8(r2)
    c708:	003fe606 	br	c6a4 <__alt_data_end+0xfe00c6a4>

0000c70c <_Bfree>:
    c70c:	28000826 	beq	r5,zero,c730 <_Bfree+0x24>
    c710:	28c00117 	ldw	r3,4(r5)
    c714:	20801317 	ldw	r2,76(r4)
    c718:	18c7883a 	add	r3,r3,r3
    c71c:	18c7883a 	add	r3,r3,r3
    c720:	10c5883a 	add	r2,r2,r3
    c724:	10c00017 	ldw	r3,0(r2)
    c728:	28c00015 	stw	r3,0(r5)
    c72c:	11400015 	stw	r5,0(r2)
    c730:	f800283a 	ret

0000c734 <__multadd>:
    c734:	defffa04 	addi	sp,sp,-24
    c738:	dc000115 	stw	r16,4(sp)
    c73c:	2c000417 	ldw	r16,16(r5)
    c740:	dc800315 	stw	r18,12(sp)
    c744:	dc400215 	stw	r17,8(sp)
    c748:	dfc00515 	stw	ra,20(sp)
    c74c:	dcc00415 	stw	r19,16(sp)
    c750:	2823883a 	mov	r17,r5
    c754:	2025883a 	mov	r18,r4
    c758:	28c00504 	addi	r3,r5,20
    c75c:	0011883a 	mov	r8,zero
    c760:	1a800017 	ldw	r10,0(r3)
    c764:	18c00104 	addi	r3,r3,4
    c768:	42000044 	addi	r8,r8,1
    c76c:	527fffcc 	andi	r9,r10,65535
    c770:	4993383a 	mul	r9,r9,r6
    c774:	5014d43a 	srli	r10,r10,16
    c778:	49d3883a 	add	r9,r9,r7
    c77c:	480ed43a 	srli	r7,r9,16
    c780:	5195383a 	mul	r10,r10,r6
    c784:	4a7fffcc 	andi	r9,r9,65535
    c788:	3a8f883a 	add	r7,r7,r10
    c78c:	3814943a 	slli	r10,r7,16
    c790:	380ed43a 	srli	r7,r7,16
    c794:	5253883a 	add	r9,r10,r9
    c798:	1a7fff15 	stw	r9,-4(r3)
    c79c:	443ff016 	blt	r8,r16,c760 <__alt_data_end+0xfe00c760>
    c7a0:	38000926 	beq	r7,zero,c7c8 <__multadd+0x94>
    c7a4:	88800217 	ldw	r2,8(r17)
    c7a8:	80800f0e 	bge	r16,r2,c7e8 <__multadd+0xb4>
    c7ac:	80800144 	addi	r2,r16,5
    c7b0:	1085883a 	add	r2,r2,r2
    c7b4:	1085883a 	add	r2,r2,r2
    c7b8:	8885883a 	add	r2,r17,r2
    c7bc:	11c00015 	stw	r7,0(r2)
    c7c0:	84000044 	addi	r16,r16,1
    c7c4:	8c000415 	stw	r16,16(r17)
    c7c8:	8805883a 	mov	r2,r17
    c7cc:	dfc00517 	ldw	ra,20(sp)
    c7d0:	dcc00417 	ldw	r19,16(sp)
    c7d4:	dc800317 	ldw	r18,12(sp)
    c7d8:	dc400217 	ldw	r17,8(sp)
    c7dc:	dc000117 	ldw	r16,4(sp)
    c7e0:	dec00604 	addi	sp,sp,24
    c7e4:	f800283a 	ret
    c7e8:	89400117 	ldw	r5,4(r17)
    c7ec:	9009883a 	mov	r4,r18
    c7f0:	d9c00015 	stw	r7,0(sp)
    c7f4:	29400044 	addi	r5,r5,1
    c7f8:	000c6640 	call	c664 <_Balloc>
    c7fc:	89800417 	ldw	r6,16(r17)
    c800:	89400304 	addi	r5,r17,12
    c804:	11000304 	addi	r4,r2,12
    c808:	31800084 	addi	r6,r6,2
    c80c:	318d883a 	add	r6,r6,r6
    c810:	318d883a 	add	r6,r6,r6
    c814:	1027883a 	mov	r19,r2
    c818:	00047c40 	call	47c4 <memcpy>
    c81c:	88c00117 	ldw	r3,4(r17)
    c820:	90801317 	ldw	r2,76(r18)
    c824:	d9c00017 	ldw	r7,0(sp)
    c828:	18c7883a 	add	r3,r3,r3
    c82c:	18c7883a 	add	r3,r3,r3
    c830:	10c5883a 	add	r2,r2,r3
    c834:	10c00017 	ldw	r3,0(r2)
    c838:	88c00015 	stw	r3,0(r17)
    c83c:	14400015 	stw	r17,0(r2)
    c840:	9823883a 	mov	r17,r19
    c844:	003fd906 	br	c7ac <__alt_data_end+0xfe00c7ac>

0000c848 <__s2b>:
    c848:	defff904 	addi	sp,sp,-28
    c84c:	dd000415 	stw	r20,16(sp)
    c850:	dc400115 	stw	r17,4(sp)
    c854:	2829883a 	mov	r20,r5
    c858:	2023883a 	mov	r17,r4
    c85c:	01400244 	movi	r5,9
    c860:	39000204 	addi	r4,r7,8
    c864:	dcc00315 	stw	r19,12(sp)
    c868:	dc800215 	stw	r18,8(sp)
    c86c:	dfc00615 	stw	ra,24(sp)
    c870:	dd400515 	stw	r21,20(sp)
    c874:	dc000015 	stw	r16,0(sp)
    c878:	3827883a 	mov	r19,r7
    c87c:	3025883a 	mov	r18,r6
    c880:	000f71c0 	call	f71c <__divsi3>
    c884:	00c00044 	movi	r3,1
    c888:	000b883a 	mov	r5,zero
    c88c:	1880030e 	bge	r3,r2,c89c <__s2b+0x54>
    c890:	18c7883a 	add	r3,r3,r3
    c894:	29400044 	addi	r5,r5,1
    c898:	18bffd16 	blt	r3,r2,c890 <__alt_data_end+0xfe00c890>
    c89c:	8809883a 	mov	r4,r17
    c8a0:	000c6640 	call	c664 <_Balloc>
    c8a4:	d8c00717 	ldw	r3,28(sp)
    c8a8:	10c00515 	stw	r3,20(r2)
    c8ac:	00c00044 	movi	r3,1
    c8b0:	10c00415 	stw	r3,16(r2)
    c8b4:	00c00244 	movi	r3,9
    c8b8:	1c80210e 	bge	r3,r18,c940 <__s2b+0xf8>
    c8bc:	a0eb883a 	add	r21,r20,r3
    c8c0:	a821883a 	mov	r16,r21
    c8c4:	a4a9883a 	add	r20,r20,r18
    c8c8:	81c00007 	ldb	r7,0(r16)
    c8cc:	8809883a 	mov	r4,r17
    c8d0:	84000044 	addi	r16,r16,1
    c8d4:	100b883a 	mov	r5,r2
    c8d8:	01800284 	movi	r6,10
    c8dc:	39fff404 	addi	r7,r7,-48
    c8e0:	000c7340 	call	c734 <__multadd>
    c8e4:	853ff81e 	bne	r16,r20,c8c8 <__alt_data_end+0xfe00c8c8>
    c8e8:	aca1883a 	add	r16,r21,r18
    c8ec:	843ffe04 	addi	r16,r16,-8
    c8f0:	94c00a0e 	bge	r18,r19,c91c <__s2b+0xd4>
    c8f4:	84e7883a 	add	r19,r16,r19
    c8f8:	9ca5c83a 	sub	r18,r19,r18
    c8fc:	81c00007 	ldb	r7,0(r16)
    c900:	8809883a 	mov	r4,r17
    c904:	84000044 	addi	r16,r16,1
    c908:	100b883a 	mov	r5,r2
    c90c:	01800284 	movi	r6,10
    c910:	39fff404 	addi	r7,r7,-48
    c914:	000c7340 	call	c734 <__multadd>
    c918:	84bff81e 	bne	r16,r18,c8fc <__alt_data_end+0xfe00c8fc>
    c91c:	dfc00617 	ldw	ra,24(sp)
    c920:	dd400517 	ldw	r21,20(sp)
    c924:	dd000417 	ldw	r20,16(sp)
    c928:	dcc00317 	ldw	r19,12(sp)
    c92c:	dc800217 	ldw	r18,8(sp)
    c930:	dc400117 	ldw	r17,4(sp)
    c934:	dc000017 	ldw	r16,0(sp)
    c938:	dec00704 	addi	sp,sp,28
    c93c:	f800283a 	ret
    c940:	a4000284 	addi	r16,r20,10
    c944:	1825883a 	mov	r18,r3
    c948:	003fe906 	br	c8f0 <__alt_data_end+0xfe00c8f0>

0000c94c <__hi0bits>:
    c94c:	20bfffec 	andhi	r2,r4,65535
    c950:	1000141e 	bne	r2,zero,c9a4 <__hi0bits+0x58>
    c954:	2008943a 	slli	r4,r4,16
    c958:	00800404 	movi	r2,16
    c95c:	20ffc02c 	andhi	r3,r4,65280
    c960:	1800021e 	bne	r3,zero,c96c <__hi0bits+0x20>
    c964:	2008923a 	slli	r4,r4,8
    c968:	10800204 	addi	r2,r2,8
    c96c:	20fc002c 	andhi	r3,r4,61440
    c970:	1800021e 	bne	r3,zero,c97c <__hi0bits+0x30>
    c974:	2008913a 	slli	r4,r4,4
    c978:	10800104 	addi	r2,r2,4
    c97c:	20f0002c 	andhi	r3,r4,49152
    c980:	1800031e 	bne	r3,zero,c990 <__hi0bits+0x44>
    c984:	2109883a 	add	r4,r4,r4
    c988:	10800084 	addi	r2,r2,2
    c98c:	2109883a 	add	r4,r4,r4
    c990:	20000316 	blt	r4,zero,c9a0 <__hi0bits+0x54>
    c994:	2110002c 	andhi	r4,r4,16384
    c998:	2000041e 	bne	r4,zero,c9ac <__hi0bits+0x60>
    c99c:	00800804 	movi	r2,32
    c9a0:	f800283a 	ret
    c9a4:	0005883a 	mov	r2,zero
    c9a8:	003fec06 	br	c95c <__alt_data_end+0xfe00c95c>
    c9ac:	10800044 	addi	r2,r2,1
    c9b0:	f800283a 	ret

0000c9b4 <__lo0bits>:
    c9b4:	20c00017 	ldw	r3,0(r4)
    c9b8:	188001cc 	andi	r2,r3,7
    c9bc:	10000826 	beq	r2,zero,c9e0 <__lo0bits+0x2c>
    c9c0:	1880004c 	andi	r2,r3,1
    c9c4:	1000211e 	bne	r2,zero,ca4c <__lo0bits+0x98>
    c9c8:	1880008c 	andi	r2,r3,2
    c9cc:	1000211e 	bne	r2,zero,ca54 <__lo0bits+0xa0>
    c9d0:	1806d0ba 	srli	r3,r3,2
    c9d4:	00800084 	movi	r2,2
    c9d8:	20c00015 	stw	r3,0(r4)
    c9dc:	f800283a 	ret
    c9e0:	18bfffcc 	andi	r2,r3,65535
    c9e4:	10001326 	beq	r2,zero,ca34 <__lo0bits+0x80>
    c9e8:	0005883a 	mov	r2,zero
    c9ec:	19403fcc 	andi	r5,r3,255
    c9f0:	2800021e 	bne	r5,zero,c9fc <__lo0bits+0x48>
    c9f4:	1806d23a 	srli	r3,r3,8
    c9f8:	10800204 	addi	r2,r2,8
    c9fc:	194003cc 	andi	r5,r3,15
    ca00:	2800021e 	bne	r5,zero,ca0c <__lo0bits+0x58>
    ca04:	1806d13a 	srli	r3,r3,4
    ca08:	10800104 	addi	r2,r2,4
    ca0c:	194000cc 	andi	r5,r3,3
    ca10:	2800021e 	bne	r5,zero,ca1c <__lo0bits+0x68>
    ca14:	1806d0ba 	srli	r3,r3,2
    ca18:	10800084 	addi	r2,r2,2
    ca1c:	1940004c 	andi	r5,r3,1
    ca20:	2800081e 	bne	r5,zero,ca44 <__lo0bits+0x90>
    ca24:	1806d07a 	srli	r3,r3,1
    ca28:	1800051e 	bne	r3,zero,ca40 <__lo0bits+0x8c>
    ca2c:	00800804 	movi	r2,32
    ca30:	f800283a 	ret
    ca34:	1806d43a 	srli	r3,r3,16
    ca38:	00800404 	movi	r2,16
    ca3c:	003feb06 	br	c9ec <__alt_data_end+0xfe00c9ec>
    ca40:	10800044 	addi	r2,r2,1
    ca44:	20c00015 	stw	r3,0(r4)
    ca48:	f800283a 	ret
    ca4c:	0005883a 	mov	r2,zero
    ca50:	f800283a 	ret
    ca54:	1806d07a 	srli	r3,r3,1
    ca58:	00800044 	movi	r2,1
    ca5c:	20c00015 	stw	r3,0(r4)
    ca60:	f800283a 	ret

0000ca64 <__i2b>:
    ca64:	defffd04 	addi	sp,sp,-12
    ca68:	dc000015 	stw	r16,0(sp)
    ca6c:	04000044 	movi	r16,1
    ca70:	dc400115 	stw	r17,4(sp)
    ca74:	2823883a 	mov	r17,r5
    ca78:	800b883a 	mov	r5,r16
    ca7c:	dfc00215 	stw	ra,8(sp)
    ca80:	000c6640 	call	c664 <_Balloc>
    ca84:	14400515 	stw	r17,20(r2)
    ca88:	14000415 	stw	r16,16(r2)
    ca8c:	dfc00217 	ldw	ra,8(sp)
    ca90:	dc400117 	ldw	r17,4(sp)
    ca94:	dc000017 	ldw	r16,0(sp)
    ca98:	dec00304 	addi	sp,sp,12
    ca9c:	f800283a 	ret

0000caa0 <__multiply>:
    caa0:	defffa04 	addi	sp,sp,-24
    caa4:	dcc00315 	stw	r19,12(sp)
    caa8:	dc800215 	stw	r18,8(sp)
    caac:	34c00417 	ldw	r19,16(r6)
    cab0:	2c800417 	ldw	r18,16(r5)
    cab4:	dd000415 	stw	r20,16(sp)
    cab8:	dc400115 	stw	r17,4(sp)
    cabc:	dfc00515 	stw	ra,20(sp)
    cac0:	dc000015 	stw	r16,0(sp)
    cac4:	2823883a 	mov	r17,r5
    cac8:	3029883a 	mov	r20,r6
    cacc:	94c0050e 	bge	r18,r19,cae4 <__multiply+0x44>
    cad0:	9007883a 	mov	r3,r18
    cad4:	3023883a 	mov	r17,r6
    cad8:	9825883a 	mov	r18,r19
    cadc:	2829883a 	mov	r20,r5
    cae0:	1827883a 	mov	r19,r3
    cae4:	88800217 	ldw	r2,8(r17)
    cae8:	94e1883a 	add	r16,r18,r19
    caec:	89400117 	ldw	r5,4(r17)
    caf0:	1400010e 	bge	r2,r16,caf8 <__multiply+0x58>
    caf4:	29400044 	addi	r5,r5,1
    caf8:	000c6640 	call	c664 <_Balloc>
    cafc:	841b883a 	add	r13,r16,r16
    cb00:	13000504 	addi	r12,r2,20
    cb04:	6b5b883a 	add	r13,r13,r13
    cb08:	635b883a 	add	r13,r12,r13
    cb0c:	6007883a 	mov	r3,r12
    cb10:	6340032e 	bgeu	r12,r13,cb20 <__multiply+0x80>
    cb14:	18000015 	stw	zero,0(r3)
    cb18:	18c00104 	addi	r3,r3,4
    cb1c:	1b7ffd36 	bltu	r3,r13,cb14 <__alt_data_end+0xfe00cb14>
    cb20:	9ce7883a 	add	r19,r19,r19
    cb24:	94a5883a 	add	r18,r18,r18
    cb28:	a2c00504 	addi	r11,r20,20
    cb2c:	9ce7883a 	add	r19,r19,r19
    cb30:	8bc00504 	addi	r15,r17,20
    cb34:	94a5883a 	add	r18,r18,r18
    cb38:	5cdd883a 	add	r14,r11,r19
    cb3c:	7c95883a 	add	r10,r15,r18
    cb40:	5b803f2e 	bgeu	r11,r14,cc40 <__multiply+0x1a0>
    cb44:	5a000017 	ldw	r8,0(r11)
    cb48:	427fffcc 	andi	r9,r8,65535
    cb4c:	48001b26 	beq	r9,zero,cbbc <__multiply+0x11c>
    cb50:	6007883a 	mov	r3,r12
    cb54:	7809883a 	mov	r4,r15
    cb58:	000b883a 	mov	r5,zero
    cb5c:	22000017 	ldw	r8,0(r4)
    cb60:	19c00017 	ldw	r7,0(r3)
    cb64:	21000104 	addi	r4,r4,4
    cb68:	41bfffcc 	andi	r6,r8,65535
    cb6c:	324d383a 	mul	r6,r6,r9
    cb70:	4010d43a 	srli	r8,r8,16
    cb74:	3fffffcc 	andi	ra,r7,65535
    cb78:	f98d883a 	add	r6,ra,r6
    cb7c:	314d883a 	add	r6,r6,r5
    cb80:	380ed43a 	srli	r7,r7,16
    cb84:	4251383a 	mul	r8,r8,r9
    cb88:	303ed43a 	srli	ra,r6,16
    cb8c:	31bfffcc 	andi	r6,r6,65535
    cb90:	3a0b883a 	add	r5,r7,r8
    cb94:	2fcb883a 	add	r5,r5,ra
    cb98:	280e943a 	slli	r7,r5,16
    cb9c:	1811883a 	mov	r8,r3
    cba0:	280ad43a 	srli	r5,r5,16
    cba4:	398cb03a 	or	r6,r7,r6
    cba8:	19800015 	stw	r6,0(r3)
    cbac:	18c00104 	addi	r3,r3,4
    cbb0:	22bfea36 	bltu	r4,r10,cb5c <__alt_data_end+0xfe00cb5c>
    cbb4:	41400115 	stw	r5,4(r8)
    cbb8:	5a000017 	ldw	r8,0(r11)
    cbbc:	4010d43a 	srli	r8,r8,16
    cbc0:	40001c26 	beq	r8,zero,cc34 <__multiply+0x194>
    cbc4:	61400017 	ldw	r5,0(r12)
    cbc8:	7809883a 	mov	r4,r15
    cbcc:	6007883a 	mov	r3,r12
    cbd0:	280d883a 	mov	r6,r5
    cbd4:	0013883a 	mov	r9,zero
    cbd8:	21c0000b 	ldhu	r7,0(r4)
    cbdc:	303ed43a 	srli	ra,r6,16
    cbe0:	297fffcc 	andi	r5,r5,65535
    cbe4:	3a0f383a 	mul	r7,r7,r8
    cbe8:	21000104 	addi	r4,r4,4
    cbec:	19800117 	ldw	r6,4(r3)
    cbf0:	3fcf883a 	add	r7,r7,ra
    cbf4:	3a4f883a 	add	r7,r7,r9
    cbf8:	383e943a 	slli	ra,r7,16
    cbfc:	380ed43a 	srli	r7,r7,16
    cc00:	327fffcc 	andi	r9,r6,65535
    cc04:	f94ab03a 	or	r5,ra,r5
    cc08:	19400015 	stw	r5,0(r3)
    cc0c:	217fff17 	ldw	r5,-4(r4)
    cc10:	183f883a 	mov	ra,r3
    cc14:	18c00104 	addi	r3,r3,4
    cc18:	280ad43a 	srli	r5,r5,16
    cc1c:	2a0b383a 	mul	r5,r5,r8
    cc20:	2a4b883a 	add	r5,r5,r9
    cc24:	29cb883a 	add	r5,r5,r7
    cc28:	2812d43a 	srli	r9,r5,16
    cc2c:	22bfea36 	bltu	r4,r10,cbd8 <__alt_data_end+0xfe00cbd8>
    cc30:	f9400115 	stw	r5,4(ra)
    cc34:	5ac00104 	addi	r11,r11,4
    cc38:	63000104 	addi	r12,r12,4
    cc3c:	5bbfc136 	bltu	r11,r14,cb44 <__alt_data_end+0xfe00cb44>
    cc40:	0400090e 	bge	zero,r16,cc68 <__multiply+0x1c8>
    cc44:	68ffff17 	ldw	r3,-4(r13)
    cc48:	6b7fff04 	addi	r13,r13,-4
    cc4c:	18000326 	beq	r3,zero,cc5c <__multiply+0x1bc>
    cc50:	00000506 	br	cc68 <__multiply+0x1c8>
    cc54:	68c00017 	ldw	r3,0(r13)
    cc58:	1800031e 	bne	r3,zero,cc68 <__multiply+0x1c8>
    cc5c:	843fffc4 	addi	r16,r16,-1
    cc60:	6b7fff04 	addi	r13,r13,-4
    cc64:	803ffb1e 	bne	r16,zero,cc54 <__alt_data_end+0xfe00cc54>
    cc68:	14000415 	stw	r16,16(r2)
    cc6c:	dfc00517 	ldw	ra,20(sp)
    cc70:	dd000417 	ldw	r20,16(sp)
    cc74:	dcc00317 	ldw	r19,12(sp)
    cc78:	dc800217 	ldw	r18,8(sp)
    cc7c:	dc400117 	ldw	r17,4(sp)
    cc80:	dc000017 	ldw	r16,0(sp)
    cc84:	dec00604 	addi	sp,sp,24
    cc88:	f800283a 	ret

0000cc8c <__pow5mult>:
    cc8c:	defffa04 	addi	sp,sp,-24
    cc90:	dcc00315 	stw	r19,12(sp)
    cc94:	dc800215 	stw	r18,8(sp)
    cc98:	dc000015 	stw	r16,0(sp)
    cc9c:	dfc00515 	stw	ra,20(sp)
    cca0:	dd000415 	stw	r20,16(sp)
    cca4:	dc400115 	stw	r17,4(sp)
    cca8:	308000cc 	andi	r2,r6,3
    ccac:	3021883a 	mov	r16,r6
    ccb0:	2027883a 	mov	r19,r4
    ccb4:	2825883a 	mov	r18,r5
    ccb8:	1000301e 	bne	r2,zero,cd7c <__pow5mult+0xf0>
    ccbc:	8021d0ba 	srai	r16,r16,2
    ccc0:	80001b26 	beq	r16,zero,cd30 <__pow5mult+0xa4>
    ccc4:	9c401217 	ldw	r17,72(r19)
    ccc8:	88003726 	beq	r17,zero,cda8 <__pow5mult+0x11c>
    cccc:	80c0004c 	andi	r3,r16,1
    ccd0:	1800071e 	bne	r3,zero,ccf0 <__pow5mult+0x64>
    ccd4:	8021d07a 	srai	r16,r16,1
    ccd8:	80001526 	beq	r16,zero,cd30 <__pow5mult+0xa4>
    ccdc:	88800017 	ldw	r2,0(r17)
    cce0:	10001c26 	beq	r2,zero,cd54 <__pow5mult+0xc8>
    cce4:	1023883a 	mov	r17,r2
    cce8:	80c0004c 	andi	r3,r16,1
    ccec:	183ff926 	beq	r3,zero,ccd4 <__alt_data_end+0xfe00ccd4>
    ccf0:	900b883a 	mov	r5,r18
    ccf4:	880d883a 	mov	r6,r17
    ccf8:	9809883a 	mov	r4,r19
    ccfc:	000caa00 	call	caa0 <__multiply>
    cd00:	90001c26 	beq	r18,zero,cd74 <__pow5mult+0xe8>
    cd04:	91000117 	ldw	r4,4(r18)
    cd08:	98c01317 	ldw	r3,76(r19)
    cd0c:	8021d07a 	srai	r16,r16,1
    cd10:	2109883a 	add	r4,r4,r4
    cd14:	2109883a 	add	r4,r4,r4
    cd18:	1907883a 	add	r3,r3,r4
    cd1c:	19000017 	ldw	r4,0(r3)
    cd20:	91000015 	stw	r4,0(r18)
    cd24:	1c800015 	stw	r18,0(r3)
    cd28:	1025883a 	mov	r18,r2
    cd2c:	803feb1e 	bne	r16,zero,ccdc <__alt_data_end+0xfe00ccdc>
    cd30:	9005883a 	mov	r2,r18
    cd34:	dfc00517 	ldw	ra,20(sp)
    cd38:	dd000417 	ldw	r20,16(sp)
    cd3c:	dcc00317 	ldw	r19,12(sp)
    cd40:	dc800217 	ldw	r18,8(sp)
    cd44:	dc400117 	ldw	r17,4(sp)
    cd48:	dc000017 	ldw	r16,0(sp)
    cd4c:	dec00604 	addi	sp,sp,24
    cd50:	f800283a 	ret
    cd54:	880b883a 	mov	r5,r17
    cd58:	880d883a 	mov	r6,r17
    cd5c:	9809883a 	mov	r4,r19
    cd60:	000caa00 	call	caa0 <__multiply>
    cd64:	88800015 	stw	r2,0(r17)
    cd68:	10000015 	stw	zero,0(r2)
    cd6c:	1023883a 	mov	r17,r2
    cd70:	003fdd06 	br	cce8 <__alt_data_end+0xfe00cce8>
    cd74:	1025883a 	mov	r18,r2
    cd78:	003fd606 	br	ccd4 <__alt_data_end+0xfe00ccd4>
    cd7c:	10bfffc4 	addi	r2,r2,-1
    cd80:	1085883a 	add	r2,r2,r2
    cd84:	00c00074 	movhi	r3,1
    cd88:	18d46d04 	addi	r3,r3,20916
    cd8c:	1085883a 	add	r2,r2,r2
    cd90:	1885883a 	add	r2,r3,r2
    cd94:	11800017 	ldw	r6,0(r2)
    cd98:	000f883a 	mov	r7,zero
    cd9c:	000c7340 	call	c734 <__multadd>
    cda0:	1025883a 	mov	r18,r2
    cda4:	003fc506 	br	ccbc <__alt_data_end+0xfe00ccbc>
    cda8:	05000044 	movi	r20,1
    cdac:	9809883a 	mov	r4,r19
    cdb0:	a00b883a 	mov	r5,r20
    cdb4:	000c6640 	call	c664 <_Balloc>
    cdb8:	1023883a 	mov	r17,r2
    cdbc:	00809c44 	movi	r2,625
    cdc0:	88800515 	stw	r2,20(r17)
    cdc4:	8d000415 	stw	r20,16(r17)
    cdc8:	9c401215 	stw	r17,72(r19)
    cdcc:	88000015 	stw	zero,0(r17)
    cdd0:	003fbe06 	br	cccc <__alt_data_end+0xfe00cccc>

0000cdd4 <__lshift>:
    cdd4:	defff904 	addi	sp,sp,-28
    cdd8:	dd000415 	stw	r20,16(sp)
    cddc:	dc400115 	stw	r17,4(sp)
    cde0:	2d000417 	ldw	r20,16(r5)
    cde4:	3023d17a 	srai	r17,r6,5
    cde8:	28800217 	ldw	r2,8(r5)
    cdec:	dd400515 	stw	r21,20(sp)
    cdf0:	8d29883a 	add	r20,r17,r20
    cdf4:	dcc00315 	stw	r19,12(sp)
    cdf8:	dc800215 	stw	r18,8(sp)
    cdfc:	dc000015 	stw	r16,0(sp)
    ce00:	dfc00615 	stw	ra,24(sp)
    ce04:	a4000044 	addi	r16,r20,1
    ce08:	2825883a 	mov	r18,r5
    ce0c:	302b883a 	mov	r21,r6
    ce10:	2027883a 	mov	r19,r4
    ce14:	29400117 	ldw	r5,4(r5)
    ce18:	1400030e 	bge	r2,r16,ce28 <__lshift+0x54>
    ce1c:	1085883a 	add	r2,r2,r2
    ce20:	29400044 	addi	r5,r5,1
    ce24:	143ffd16 	blt	r2,r16,ce1c <__alt_data_end+0xfe00ce1c>
    ce28:	9809883a 	mov	r4,r19
    ce2c:	000c6640 	call	c664 <_Balloc>
    ce30:	11000504 	addi	r4,r2,20
    ce34:	0440090e 	bge	zero,r17,ce5c <__lshift+0x88>
    ce38:	200f883a 	mov	r7,r4
    ce3c:	0007883a 	mov	r3,zero
    ce40:	38000015 	stw	zero,0(r7)
    ce44:	18c00044 	addi	r3,r3,1
    ce48:	39c00104 	addi	r7,r7,4
    ce4c:	1c7ffc1e 	bne	r3,r17,ce40 <__alt_data_end+0xfe00ce40>
    ce50:	18c7883a 	add	r3,r3,r3
    ce54:	18c7883a 	add	r3,r3,r3
    ce58:	20c9883a 	add	r4,r4,r3
    ce5c:	92400417 	ldw	r9,16(r18)
    ce60:	90c00504 	addi	r3,r18,20
    ce64:	a98007cc 	andi	r6,r21,31
    ce68:	4a53883a 	add	r9,r9,r9
    ce6c:	4a53883a 	add	r9,r9,r9
    ce70:	1a53883a 	add	r9,r3,r9
    ce74:	30002426 	beq	r6,zero,cf08 <__lshift+0x134>
    ce78:	01400804 	movi	r5,32
    ce7c:	298bc83a 	sub	r5,r5,r6
    ce80:	200f883a 	mov	r7,r4
    ce84:	0011883a 	mov	r8,zero
    ce88:	1a800017 	ldw	r10,0(r3)
    ce8c:	3809883a 	mov	r4,r7
    ce90:	39c00104 	addi	r7,r7,4
    ce94:	5194983a 	sll	r10,r10,r6
    ce98:	18c00104 	addi	r3,r3,4
    ce9c:	4290b03a 	or	r8,r8,r10
    cea0:	3a3fff15 	stw	r8,-4(r7)
    cea4:	1a3fff17 	ldw	r8,-4(r3)
    cea8:	4150d83a 	srl	r8,r8,r5
    ceac:	1a7ff636 	bltu	r3,r9,ce88 <__alt_data_end+0xfe00ce88>
    ceb0:	22000115 	stw	r8,4(r4)
    ceb4:	40000126 	beq	r8,zero,cebc <__lshift+0xe8>
    ceb8:	a4000084 	addi	r16,r20,2
    cebc:	91000117 	ldw	r4,4(r18)
    cec0:	98c01317 	ldw	r3,76(r19)
    cec4:	843fffc4 	addi	r16,r16,-1
    cec8:	2109883a 	add	r4,r4,r4
    cecc:	2109883a 	add	r4,r4,r4
    ced0:	1907883a 	add	r3,r3,r4
    ced4:	19000017 	ldw	r4,0(r3)
    ced8:	14000415 	stw	r16,16(r2)
    cedc:	91000015 	stw	r4,0(r18)
    cee0:	1c800015 	stw	r18,0(r3)
    cee4:	dfc00617 	ldw	ra,24(sp)
    cee8:	dd400517 	ldw	r21,20(sp)
    ceec:	dd000417 	ldw	r20,16(sp)
    cef0:	dcc00317 	ldw	r19,12(sp)
    cef4:	dc800217 	ldw	r18,8(sp)
    cef8:	dc400117 	ldw	r17,4(sp)
    cefc:	dc000017 	ldw	r16,0(sp)
    cf00:	dec00704 	addi	sp,sp,28
    cf04:	f800283a 	ret
    cf08:	200f883a 	mov	r7,r4
    cf0c:	19800017 	ldw	r6,0(r3)
    cf10:	39c00104 	addi	r7,r7,4
    cf14:	18c00104 	addi	r3,r3,4
    cf18:	39bfff15 	stw	r6,-4(r7)
    cf1c:	1a7ffb36 	bltu	r3,r9,cf0c <__alt_data_end+0xfe00cf0c>
    cf20:	003fe606 	br	cebc <__alt_data_end+0xfe00cebc>

0000cf24 <__mcmp>:
    cf24:	20800417 	ldw	r2,16(r4)
    cf28:	28c00417 	ldw	r3,16(r5)
    cf2c:	10c5c83a 	sub	r2,r2,r3
    cf30:	1000111e 	bne	r2,zero,cf78 <__mcmp+0x54>
    cf34:	18c7883a 	add	r3,r3,r3
    cf38:	18c7883a 	add	r3,r3,r3
    cf3c:	21000504 	addi	r4,r4,20
    cf40:	29400504 	addi	r5,r5,20
    cf44:	20c5883a 	add	r2,r4,r3
    cf48:	28cb883a 	add	r5,r5,r3
    cf4c:	00000106 	br	cf54 <__mcmp+0x30>
    cf50:	2080082e 	bgeu	r4,r2,cf74 <__mcmp+0x50>
    cf54:	10bfff04 	addi	r2,r2,-4
    cf58:	297fff04 	addi	r5,r5,-4
    cf5c:	11800017 	ldw	r6,0(r2)
    cf60:	28c00017 	ldw	r3,0(r5)
    cf64:	30fffa26 	beq	r6,r3,cf50 <__alt_data_end+0xfe00cf50>
    cf68:	30c00436 	bltu	r6,r3,cf7c <__mcmp+0x58>
    cf6c:	00800044 	movi	r2,1
    cf70:	f800283a 	ret
    cf74:	0005883a 	mov	r2,zero
    cf78:	f800283a 	ret
    cf7c:	00bfffc4 	movi	r2,-1
    cf80:	f800283a 	ret

0000cf84 <__mdiff>:
    cf84:	defffc04 	addi	sp,sp,-16
    cf88:	dc000015 	stw	r16,0(sp)
    cf8c:	2821883a 	mov	r16,r5
    cf90:	200f883a 	mov	r7,r4
    cf94:	300b883a 	mov	r5,r6
    cf98:	8009883a 	mov	r4,r16
    cf9c:	dc400115 	stw	r17,4(sp)
    cfa0:	dfc00315 	stw	ra,12(sp)
    cfa4:	dc800215 	stw	r18,8(sp)
    cfa8:	3023883a 	mov	r17,r6
    cfac:	000cf240 	call	cf24 <__mcmp>
    cfb0:	10005226 	beq	r2,zero,d0fc <__mdiff+0x178>
    cfb4:	10004c16 	blt	r2,zero,d0e8 <__mdiff+0x164>
    cfb8:	0025883a 	mov	r18,zero
    cfbc:	81400117 	ldw	r5,4(r16)
    cfc0:	3809883a 	mov	r4,r7
    cfc4:	000c6640 	call	c664 <_Balloc>
    cfc8:	82800417 	ldw	r10,16(r16)
    cfcc:	8b400417 	ldw	r13,16(r17)
    cfd0:	81000504 	addi	r4,r16,20
    cfd4:	5299883a 	add	r12,r10,r10
    cfd8:	6b5b883a 	add	r13,r13,r13
    cfdc:	6319883a 	add	r12,r12,r12
    cfe0:	89800504 	addi	r6,r17,20
    cfe4:	6b5b883a 	add	r13,r13,r13
    cfe8:	14800315 	stw	r18,12(r2)
    cfec:	2319883a 	add	r12,r4,r12
    cff0:	335b883a 	add	r13,r6,r13
    cff4:	11400504 	addi	r5,r2,20
    cff8:	0007883a 	mov	r3,zero
    cffc:	00000106 	br	d004 <__mdiff+0x80>
    d000:	400b883a 	mov	r5,r8
    d004:	22400017 	ldw	r9,0(r4)
    d008:	32000017 	ldw	r8,0(r6)
    d00c:	31800104 	addi	r6,r6,4
    d010:	49ffffcc 	andi	r7,r9,65535
    d014:	42ffffcc 	andi	r11,r8,65535
    d018:	38c7883a 	add	r3,r7,r3
    d01c:	1acfc83a 	sub	r7,r3,r11
    d020:	4010d43a 	srli	r8,r8,16
    d024:	4806d43a 	srli	r3,r9,16
    d028:	3817d43a 	srai	r11,r7,16
    d02c:	39ffffcc 	andi	r7,r7,65535
    d030:	1a07c83a 	sub	r3,r3,r8
    d034:	1ac7883a 	add	r3,r3,r11
    d038:	1812943a 	slli	r9,r3,16
    d03c:	2a000104 	addi	r8,r5,4
    d040:	21000104 	addi	r4,r4,4
    d044:	49ceb03a 	or	r7,r9,r7
    d048:	29c00015 	stw	r7,0(r5)
    d04c:	1807d43a 	srai	r3,r3,16
    d050:	337feb36 	bltu	r6,r13,d000 <__alt_data_end+0xfe00d000>
    d054:	2013883a 	mov	r9,r4
    d058:	2300342e 	bgeu	r4,r12,d12c <__mdiff+0x1a8>
    d05c:	400b883a 	mov	r5,r8
    d060:	21c00017 	ldw	r7,0(r4)
    d064:	29400104 	addi	r5,r5,4
    d068:	21000104 	addi	r4,r4,4
    d06c:	39bfffcc 	andi	r6,r7,65535
    d070:	30cd883a 	add	r6,r6,r3
    d074:	3007d43a 	srai	r3,r6,16
    d078:	380ed43a 	srli	r7,r7,16
    d07c:	31bfffcc 	andi	r6,r6,65535
    d080:	19c7883a 	add	r3,r3,r7
    d084:	180e943a 	slli	r7,r3,16
    d088:	1807d43a 	srai	r3,r3,16
    d08c:	398cb03a 	or	r6,r7,r6
    d090:	29bfff15 	stw	r6,-4(r5)
    d094:	233ff236 	bltu	r4,r12,d060 <__alt_data_end+0xfe00d060>
    d098:	0248303a 	nor	r4,zero,r9
    d09c:	2309883a 	add	r4,r4,r12
    d0a0:	2008d0ba 	srli	r4,r4,2
    d0a4:	21000044 	addi	r4,r4,1
    d0a8:	2109883a 	add	r4,r4,r4
    d0ac:	2109883a 	add	r4,r4,r4
    d0b0:	4111883a 	add	r8,r8,r4
    d0b4:	413fff04 	addi	r4,r8,-4
    d0b8:	3000041e 	bne	r6,zero,d0cc <__mdiff+0x148>
    d0bc:	213fff04 	addi	r4,r4,-4
    d0c0:	20c00017 	ldw	r3,0(r4)
    d0c4:	52bfffc4 	addi	r10,r10,-1
    d0c8:	183ffc26 	beq	r3,zero,d0bc <__alt_data_end+0xfe00d0bc>
    d0cc:	12800415 	stw	r10,16(r2)
    d0d0:	dfc00317 	ldw	ra,12(sp)
    d0d4:	dc800217 	ldw	r18,8(sp)
    d0d8:	dc400117 	ldw	r17,4(sp)
    d0dc:	dc000017 	ldw	r16,0(sp)
    d0e0:	dec00404 	addi	sp,sp,16
    d0e4:	f800283a 	ret
    d0e8:	8005883a 	mov	r2,r16
    d0ec:	04800044 	movi	r18,1
    d0f0:	8821883a 	mov	r16,r17
    d0f4:	1023883a 	mov	r17,r2
    d0f8:	003fb006 	br	cfbc <__alt_data_end+0xfe00cfbc>
    d0fc:	3809883a 	mov	r4,r7
    d100:	000b883a 	mov	r5,zero
    d104:	000c6640 	call	c664 <_Balloc>
    d108:	00c00044 	movi	r3,1
    d10c:	10c00415 	stw	r3,16(r2)
    d110:	10000515 	stw	zero,20(r2)
    d114:	dfc00317 	ldw	ra,12(sp)
    d118:	dc800217 	ldw	r18,8(sp)
    d11c:	dc400117 	ldw	r17,4(sp)
    d120:	dc000017 	ldw	r16,0(sp)
    d124:	dec00404 	addi	sp,sp,16
    d128:	f800283a 	ret
    d12c:	380d883a 	mov	r6,r7
    d130:	003fe006 	br	d0b4 <__alt_data_end+0xfe00d0b4>

0000d134 <__ulp>:
    d134:	295ffc2c 	andhi	r5,r5,32752
    d138:	00bf3034 	movhi	r2,64704
    d13c:	2887883a 	add	r3,r5,r2
    d140:	00c0020e 	bge	zero,r3,d14c <__ulp+0x18>
    d144:	0005883a 	mov	r2,zero
    d148:	f800283a 	ret
    d14c:	00c7c83a 	sub	r3,zero,r3
    d150:	1805d53a 	srai	r2,r3,20
    d154:	00c004c4 	movi	r3,19
    d158:	18800a0e 	bge	r3,r2,d184 <__ulp+0x50>
    d15c:	01000c84 	movi	r4,50
    d160:	0007883a 	mov	r3,zero
    d164:	20800516 	blt	r4,r2,d17c <__ulp+0x48>
    d168:	01000cc4 	movi	r4,51
    d16c:	2085c83a 	sub	r2,r4,r2
    d170:	01000044 	movi	r4,1
    d174:	2084983a 	sll	r2,r4,r2
    d178:	f800283a 	ret
    d17c:	00800044 	movi	r2,1
    d180:	f800283a 	ret
    d184:	00c00234 	movhi	r3,8
    d188:	1887d83a 	sra	r3,r3,r2
    d18c:	0005883a 	mov	r2,zero
    d190:	f800283a 	ret

0000d194 <__b2d>:
    d194:	21800417 	ldw	r6,16(r4)
    d198:	22000504 	addi	r8,r4,20
    d19c:	deffff04 	addi	sp,sp,-4
    d1a0:	318d883a 	add	r6,r6,r6
    d1a4:	318d883a 	add	r6,r6,r6
    d1a8:	418d883a 	add	r6,r8,r6
    d1ac:	31ffff17 	ldw	r7,-4(r6)
    d1b0:	327fff04 	addi	r9,r6,-4
    d1b4:	dfc00015 	stw	ra,0(sp)
    d1b8:	3809883a 	mov	r4,r7
    d1bc:	000c94c0 	call	c94c <__hi0bits>
    d1c0:	00c00804 	movi	r3,32
    d1c4:	1887c83a 	sub	r3,r3,r2
    d1c8:	28c00015 	stw	r3,0(r5)
    d1cc:	00c00284 	movi	r3,10
    d1d0:	18800d16 	blt	r3,r2,d208 <__b2d+0x74>
    d1d4:	010002c4 	movi	r4,11
    d1d8:	2089c83a 	sub	r4,r4,r2
    d1dc:	3906d83a 	srl	r3,r7,r4
    d1e0:	18cffc34 	orhi	r3,r3,16368
    d1e4:	4240232e 	bgeu	r8,r9,d274 <__b2d+0xe0>
    d1e8:	317ffe17 	ldw	r5,-8(r6)
    d1ec:	2908d83a 	srl	r4,r5,r4
    d1f0:	10800544 	addi	r2,r2,21
    d1f4:	388e983a 	sll	r7,r7,r2
    d1f8:	21c4b03a 	or	r2,r4,r7
    d1fc:	dfc00017 	ldw	ra,0(sp)
    d200:	dec00104 	addi	sp,sp,4
    d204:	f800283a 	ret
    d208:	42401136 	bltu	r8,r9,d250 <__b2d+0xbc>
    d20c:	113ffd44 	addi	r4,r2,-11
    d210:	000b883a 	mov	r5,zero
    d214:	20001226 	beq	r4,zero,d260 <__b2d+0xcc>
    d218:	00c00ac4 	movi	r3,43
    d21c:	1885c83a 	sub	r2,r3,r2
    d220:	3906983a 	sll	r3,r7,r4
    d224:	288cd83a 	srl	r6,r5,r2
    d228:	18cffc34 	orhi	r3,r3,16368
    d22c:	1986b03a 	or	r3,r3,r6
    d230:	4240122e 	bgeu	r8,r9,d27c <__b2d+0xe8>
    d234:	49bfff17 	ldw	r6,-4(r9)
    d238:	3084d83a 	srl	r2,r6,r2
    d23c:	2908983a 	sll	r4,r5,r4
    d240:	1104b03a 	or	r2,r2,r4
    d244:	dfc00017 	ldw	ra,0(sp)
    d248:	dec00104 	addi	sp,sp,4
    d24c:	f800283a 	ret
    d250:	113ffd44 	addi	r4,r2,-11
    d254:	327ffe04 	addi	r9,r6,-8
    d258:	317ffe17 	ldw	r5,-8(r6)
    d25c:	203fee1e 	bne	r4,zero,d218 <__alt_data_end+0xfe00d218>
    d260:	38cffc34 	orhi	r3,r7,16368
    d264:	2805883a 	mov	r2,r5
    d268:	dfc00017 	ldw	ra,0(sp)
    d26c:	dec00104 	addi	sp,sp,4
    d270:	f800283a 	ret
    d274:	0009883a 	mov	r4,zero
    d278:	003fdd06 	br	d1f0 <__alt_data_end+0xfe00d1f0>
    d27c:	0005883a 	mov	r2,zero
    d280:	003fee06 	br	d23c <__alt_data_end+0xfe00d23c>

0000d284 <__d2b>:
    d284:	defffa04 	addi	sp,sp,-24
    d288:	dc400315 	stw	r17,12(sp)
    d28c:	2823883a 	mov	r17,r5
    d290:	01400044 	movi	r5,1
    d294:	dc800415 	stw	r18,16(sp)
    d298:	dc000215 	stw	r16,8(sp)
    d29c:	dfc00515 	stw	ra,20(sp)
    d2a0:	3021883a 	mov	r16,r6
    d2a4:	3825883a 	mov	r18,r7
    d2a8:	000c6640 	call	c664 <_Balloc>
    d2ac:	8012907a 	slli	r9,r16,1
    d2b0:	1011883a 	mov	r8,r2
    d2b4:	00800434 	movhi	r2,16
    d2b8:	10bfffc4 	addi	r2,r2,-1
    d2bc:	4812d57a 	srli	r9,r9,21
    d2c0:	80a0703a 	and	r16,r16,r2
    d2c4:	48000126 	beq	r9,zero,d2cc <__d2b+0x48>
    d2c8:	84000434 	orhi	r16,r16,16
    d2cc:	dc000015 	stw	r16,0(sp)
    d2d0:	88001e26 	beq	r17,zero,d34c <__d2b+0xc8>
    d2d4:	d9000104 	addi	r4,sp,4
    d2d8:	dc400115 	stw	r17,4(sp)
    d2dc:	000c9b40 	call	c9b4 <__lo0bits>
    d2e0:	d8c00017 	ldw	r3,0(sp)
    d2e4:	10002f1e 	bne	r2,zero,d3a4 <__d2b+0x120>
    d2e8:	d9000117 	ldw	r4,4(sp)
    d2ec:	41000515 	stw	r4,20(r8)
    d2f0:	180b003a 	cmpeq	r5,r3,zero
    d2f4:	01000084 	movi	r4,2
    d2f8:	214bc83a 	sub	r5,r4,r5
    d2fc:	40c00615 	stw	r3,24(r8)
    d300:	41400415 	stw	r5,16(r8)
    d304:	4800191e 	bne	r9,zero,d36c <__d2b+0xe8>
    d308:	280690ba 	slli	r3,r5,2
    d30c:	10bef384 	addi	r2,r2,-1074
    d310:	90800015 	stw	r2,0(r18)
    d314:	40c5883a 	add	r2,r8,r3
    d318:	11000417 	ldw	r4,16(r2)
    d31c:	000c94c0 	call	c94c <__hi0bits>
    d320:	280a917a 	slli	r5,r5,5
    d324:	d8c00617 	ldw	r3,24(sp)
    d328:	2885c83a 	sub	r2,r5,r2
    d32c:	18800015 	stw	r2,0(r3)
    d330:	4005883a 	mov	r2,r8
    d334:	dfc00517 	ldw	ra,20(sp)
    d338:	dc800417 	ldw	r18,16(sp)
    d33c:	dc400317 	ldw	r17,12(sp)
    d340:	dc000217 	ldw	r16,8(sp)
    d344:	dec00604 	addi	sp,sp,24
    d348:	f800283a 	ret
    d34c:	d809883a 	mov	r4,sp
    d350:	000c9b40 	call	c9b4 <__lo0bits>
    d354:	d8c00017 	ldw	r3,0(sp)
    d358:	01400044 	movi	r5,1
    d35c:	41400415 	stw	r5,16(r8)
    d360:	40c00515 	stw	r3,20(r8)
    d364:	10800804 	addi	r2,r2,32
    d368:	483fe726 	beq	r9,zero,d308 <__alt_data_end+0xfe00d308>
    d36c:	00c00d44 	movi	r3,53
    d370:	4a7ef344 	addi	r9,r9,-1075
    d374:	4893883a 	add	r9,r9,r2
    d378:	1885c83a 	sub	r2,r3,r2
    d37c:	d8c00617 	ldw	r3,24(sp)
    d380:	92400015 	stw	r9,0(r18)
    d384:	18800015 	stw	r2,0(r3)
    d388:	4005883a 	mov	r2,r8
    d38c:	dfc00517 	ldw	ra,20(sp)
    d390:	dc800417 	ldw	r18,16(sp)
    d394:	dc400317 	ldw	r17,12(sp)
    d398:	dc000217 	ldw	r16,8(sp)
    d39c:	dec00604 	addi	sp,sp,24
    d3a0:	f800283a 	ret
    d3a4:	01000804 	movi	r4,32
    d3a8:	2089c83a 	sub	r4,r4,r2
    d3ac:	1908983a 	sll	r4,r3,r4
    d3b0:	d9400117 	ldw	r5,4(sp)
    d3b4:	1886d83a 	srl	r3,r3,r2
    d3b8:	2148b03a 	or	r4,r4,r5
    d3bc:	41000515 	stw	r4,20(r8)
    d3c0:	d8c00015 	stw	r3,0(sp)
    d3c4:	003fca06 	br	d2f0 <__alt_data_end+0xfe00d2f0>

0000d3c8 <__ratio>:
    d3c8:	defffd04 	addi	sp,sp,-12
    d3cc:	2817883a 	mov	r11,r5
    d3d0:	201b883a 	mov	r13,r4
    d3d4:	d9400104 	addi	r5,sp,4
    d3d8:	dfc00215 	stw	ra,8(sp)
    d3dc:	000d1940 	call	d194 <__b2d>
    d3e0:	5809883a 	mov	r4,r11
    d3e4:	d80b883a 	mov	r5,sp
    d3e8:	1019883a 	mov	r12,r2
    d3ec:	1815883a 	mov	r10,r3
    d3f0:	000d1940 	call	d194 <__b2d>
    d3f4:	69400417 	ldw	r5,16(r13)
    d3f8:	59000417 	ldw	r4,16(r11)
    d3fc:	d9800117 	ldw	r6,4(sp)
    d400:	2909c83a 	sub	r4,r5,r4
    d404:	d9400017 	ldw	r5,0(sp)
    d408:	2008917a 	slli	r4,r4,5
    d40c:	314bc83a 	sub	r5,r6,r5
    d410:	290b883a 	add	r5,r5,r4
    d414:	01400a0e 	bge	zero,r5,d440 <__ratio+0x78>
    d418:	280a953a 	slli	r5,r5,20
    d41c:	6009883a 	mov	r4,r12
    d420:	100d883a 	mov	r6,r2
    d424:	2a95883a 	add	r10,r5,r10
    d428:	500b883a 	mov	r5,r10
    d42c:	180f883a 	mov	r7,r3
    d430:	00102340 	call	10234 <__divdf3>
    d434:	dfc00217 	ldw	ra,8(sp)
    d438:	dec00304 	addi	sp,sp,12
    d43c:	f800283a 	ret
    d440:	280a953a 	slli	r5,r5,20
    d444:	6009883a 	mov	r4,r12
    d448:	100d883a 	mov	r6,r2
    d44c:	1947c83a 	sub	r3,r3,r5
    d450:	180f883a 	mov	r7,r3
    d454:	500b883a 	mov	r5,r10
    d458:	00102340 	call	10234 <__divdf3>
    d45c:	dfc00217 	ldw	ra,8(sp)
    d460:	dec00304 	addi	sp,sp,12
    d464:	f800283a 	ret

0000d468 <_mprec_log10>:
    d468:	defffe04 	addi	sp,sp,-8
    d46c:	dc000015 	stw	r16,0(sp)
    d470:	dfc00115 	stw	ra,4(sp)
    d474:	008005c4 	movi	r2,23
    d478:	2021883a 	mov	r16,r4
    d47c:	11000d0e 	bge	r2,r4,d4b4 <_mprec_log10+0x4c>
    d480:	0005883a 	mov	r2,zero
    d484:	00cffc34 	movhi	r3,16368
    d488:	843fffc4 	addi	r16,r16,-1
    d48c:	1009883a 	mov	r4,r2
    d490:	180b883a 	mov	r5,r3
    d494:	000d883a 	mov	r6,zero
    d498:	01d00934 	movhi	r7,16420
    d49c:	0010d500 	call	10d50 <__muldf3>
    d4a0:	803ff91e 	bne	r16,zero,d488 <__alt_data_end+0xfe00d488>
    d4a4:	dfc00117 	ldw	ra,4(sp)
    d4a8:	dc000017 	ldw	r16,0(sp)
    d4ac:	dec00204 	addi	sp,sp,8
    d4b0:	f800283a 	ret
    d4b4:	202090fa 	slli	r16,r4,3
    d4b8:	00800074 	movhi	r2,1
    d4bc:	10948404 	addi	r2,r2,21008
    d4c0:	1421883a 	add	r16,r2,r16
    d4c4:	80800017 	ldw	r2,0(r16)
    d4c8:	80c00117 	ldw	r3,4(r16)
    d4cc:	dfc00117 	ldw	ra,4(sp)
    d4d0:	dc000017 	ldw	r16,0(sp)
    d4d4:	dec00204 	addi	sp,sp,8
    d4d8:	f800283a 	ret

0000d4dc <__copybits>:
    d4dc:	297fffc4 	addi	r5,r5,-1
    d4e0:	2811d17a 	srai	r8,r5,5
    d4e4:	31c00417 	ldw	r7,16(r6)
    d4e8:	30800504 	addi	r2,r6,20
    d4ec:	42000044 	addi	r8,r8,1
    d4f0:	39cf883a 	add	r7,r7,r7
    d4f4:	4211883a 	add	r8,r8,r8
    d4f8:	39cf883a 	add	r7,r7,r7
    d4fc:	4211883a 	add	r8,r8,r8
    d500:	11cf883a 	add	r7,r2,r7
    d504:	2211883a 	add	r8,r4,r8
    d508:	11c00d2e 	bgeu	r2,r7,d540 <__copybits+0x64>
    d50c:	2007883a 	mov	r3,r4
    d510:	11400017 	ldw	r5,0(r2)
    d514:	18c00104 	addi	r3,r3,4
    d518:	10800104 	addi	r2,r2,4
    d51c:	197fff15 	stw	r5,-4(r3)
    d520:	11fffb36 	bltu	r2,r7,d510 <__alt_data_end+0xfe00d510>
    d524:	3985c83a 	sub	r2,r7,r6
    d528:	10bffac4 	addi	r2,r2,-21
    d52c:	1004d0ba 	srli	r2,r2,2
    d530:	10800044 	addi	r2,r2,1
    d534:	1085883a 	add	r2,r2,r2
    d538:	1085883a 	add	r2,r2,r2
    d53c:	2089883a 	add	r4,r4,r2
    d540:	2200032e 	bgeu	r4,r8,d550 <__copybits+0x74>
    d544:	20000015 	stw	zero,0(r4)
    d548:	21000104 	addi	r4,r4,4
    d54c:	223ffd36 	bltu	r4,r8,d544 <__alt_data_end+0xfe00d544>
    d550:	f800283a 	ret

0000d554 <__any_on>:
    d554:	20800417 	ldw	r2,16(r4)
    d558:	2807d17a 	srai	r3,r5,5
    d55c:	21000504 	addi	r4,r4,20
    d560:	10c00d0e 	bge	r2,r3,d598 <__any_on+0x44>
    d564:	1085883a 	add	r2,r2,r2
    d568:	1085883a 	add	r2,r2,r2
    d56c:	2085883a 	add	r2,r4,r2
    d570:	2080182e 	bgeu	r4,r2,d5d4 <__any_on+0x80>
    d574:	10ffff17 	ldw	r3,-4(r2)
    d578:	10bfff04 	addi	r2,r2,-4
    d57c:	1800041e 	bne	r3,zero,d590 <__any_on+0x3c>
    d580:	2080142e 	bgeu	r4,r2,d5d4 <__any_on+0x80>
    d584:	10bfff04 	addi	r2,r2,-4
    d588:	10c00017 	ldw	r3,0(r2)
    d58c:	183ffc26 	beq	r3,zero,d580 <__alt_data_end+0xfe00d580>
    d590:	00800044 	movi	r2,1
    d594:	f800283a 	ret
    d598:	18800a0e 	bge	r3,r2,d5c4 <__any_on+0x70>
    d59c:	18c7883a 	add	r3,r3,r3
    d5a0:	18c7883a 	add	r3,r3,r3
    d5a4:	294007cc 	andi	r5,r5,31
    d5a8:	20c5883a 	add	r2,r4,r3
    d5ac:	283ff026 	beq	r5,zero,d570 <__alt_data_end+0xfe00d570>
    d5b0:	10c00017 	ldw	r3,0(r2)
    d5b4:	194cd83a 	srl	r6,r3,r5
    d5b8:	314a983a 	sll	r5,r6,r5
    d5bc:	28fff41e 	bne	r5,r3,d590 <__alt_data_end+0xfe00d590>
    d5c0:	003feb06 	br	d570 <__alt_data_end+0xfe00d570>
    d5c4:	18c7883a 	add	r3,r3,r3
    d5c8:	18c7883a 	add	r3,r3,r3
    d5cc:	20c5883a 	add	r2,r4,r3
    d5d0:	003fe706 	br	d570 <__alt_data_end+0xfe00d570>
    d5d4:	0005883a 	mov	r2,zero
    d5d8:	f800283a 	ret

0000d5dc <_read_r>:
    d5dc:	defffd04 	addi	sp,sp,-12
    d5e0:	dc400115 	stw	r17,4(sp)
    d5e4:	dc000015 	stw	r16,0(sp)
    d5e8:	2023883a 	mov	r17,r4
    d5ec:	040000b4 	movhi	r16,2
    d5f0:	8422d804 	addi	r16,r16,-29856
    d5f4:	2809883a 	mov	r4,r5
    d5f8:	300b883a 	mov	r5,r6
    d5fc:	380d883a 	mov	r6,r7
    d600:	dfc00215 	stw	ra,8(sp)
    d604:	80000015 	stw	zero,0(r16)
    d608:	00127580 	call	12758 <read>
    d60c:	00ffffc4 	movi	r3,-1
    d610:	10c00526 	beq	r2,r3,d628 <_read_r+0x4c>
    d614:	dfc00217 	ldw	ra,8(sp)
    d618:	dc400117 	ldw	r17,4(sp)
    d61c:	dc000017 	ldw	r16,0(sp)
    d620:	dec00304 	addi	sp,sp,12
    d624:	f800283a 	ret
    d628:	80c00017 	ldw	r3,0(r16)
    d62c:	183ff926 	beq	r3,zero,d614 <__alt_data_end+0xfe00d614>
    d630:	88c00015 	stw	r3,0(r17)
    d634:	dfc00217 	ldw	ra,8(sp)
    d638:	dc400117 	ldw	r17,4(sp)
    d63c:	dc000017 	ldw	r16,0(sp)
    d640:	dec00304 	addi	sp,sp,12
    d644:	f800283a 	ret

0000d648 <strncmp>:
    d648:	30001826 	beq	r6,zero,d6ac <strncmp+0x64>
    d64c:	2144b03a 	or	r2,r4,r5
    d650:	108000cc 	andi	r2,r2,3
    d654:	10001726 	beq	r2,zero,d6b4 <strncmp+0x6c>
    d658:	31bfffc4 	addi	r6,r6,-1
    d65c:	20c00007 	ldb	r3,0(r4)
    d660:	28800007 	ldb	r2,0(r5)
    d664:	1880331e 	bne	r3,r2,d734 <strncmp+0xec>
    d668:	30001026 	beq	r6,zero,d6ac <strncmp+0x64>
    d66c:	18000f26 	beq	r3,zero,d6ac <strncmp+0x64>
    d670:	20800044 	addi	r2,r4,1
    d674:	29400044 	addi	r5,r5,1
    d678:	2189883a 	add	r4,r4,r6
    d67c:	00000406 	br	d690 <strncmp+0x48>
    d680:	11000a26 	beq	r2,r4,d6ac <strncmp+0x64>
    d684:	18000926 	beq	r3,zero,d6ac <strncmp+0x64>
    d688:	10800044 	addi	r2,r2,1
    d68c:	29400044 	addi	r5,r5,1
    d690:	10c00007 	ldb	r3,0(r2)
    d694:	29800007 	ldb	r6,0(r5)
    d698:	19bff926 	beq	r3,r6,d680 <__alt_data_end+0xfe00d680>
    d69c:	10c00003 	ldbu	r3,0(r2)
    d6a0:	28800003 	ldbu	r2,0(r5)
    d6a4:	1885c83a 	sub	r2,r3,r2
    d6a8:	f800283a 	ret
    d6ac:	0005883a 	mov	r2,zero
    d6b0:	f800283a 	ret
    d6b4:	024000c4 	movi	r9,3
    d6b8:	49bfe72e 	bgeu	r9,r6,d658 <__alt_data_end+0xfe00d658>
    d6bc:	20c00017 	ldw	r3,0(r4)
    d6c0:	28800017 	ldw	r2,0(r5)
    d6c4:	18bfe41e 	bne	r3,r2,d658 <__alt_data_end+0xfe00d658>
    d6c8:	30bfff04 	addi	r2,r6,-4
    d6cc:	103ff726 	beq	r2,zero,d6ac <__alt_data_end+0xfe00d6ac>
    d6d0:	02ffbff4 	movhi	r11,65279
    d6d4:	5affbfc4 	addi	r11,r11,-257
    d6d8:	1acd883a 	add	r6,r3,r11
    d6dc:	00c6303a 	nor	r3,zero,r3
    d6e0:	30c6703a 	and	r3,r6,r3
    d6e4:	02a02074 	movhi	r10,32897
    d6e8:	52a02004 	addi	r10,r10,-32640
    d6ec:	1a86703a 	and	r3,r3,r10
    d6f0:	18000b26 	beq	r3,zero,d720 <strncmp+0xd8>
    d6f4:	003fed06 	br	d6ac <__alt_data_end+0xfe00d6ac>
    d6f8:	20c00017 	ldw	r3,0(r4)
    d6fc:	29800017 	ldw	r6,0(r5)
    d700:	1ad1883a 	add	r8,r3,r11
    d704:	00ce303a 	nor	r7,zero,r3
    d708:	41ce703a 	and	r7,r8,r7
    d70c:	3a8e703a 	and	r7,r7,r10
    d710:	19800a1e 	bne	r3,r6,d73c <strncmp+0xf4>
    d714:	10bfff04 	addi	r2,r2,-4
    d718:	103fe426 	beq	r2,zero,d6ac <__alt_data_end+0xfe00d6ac>
    d71c:	383fe31e 	bne	r7,zero,d6ac <__alt_data_end+0xfe00d6ac>
    d720:	21000104 	addi	r4,r4,4
    d724:	29400104 	addi	r5,r5,4
    d728:	48bff336 	bltu	r9,r2,d6f8 <__alt_data_end+0xfe00d6f8>
    d72c:	11bfffc4 	addi	r6,r2,-1
    d730:	103fca1e 	bne	r2,zero,d65c <__alt_data_end+0xfe00d65c>
    d734:	2005883a 	mov	r2,r4
    d738:	003fd806 	br	d69c <__alt_data_end+0xfe00d69c>
    d73c:	11bfffc4 	addi	r6,r2,-1
    d740:	003fc606 	br	d65c <__alt_data_end+0xfe00d65c>

0000d744 <__ssprint_r>:
    d744:	30800217 	ldw	r2,8(r6)
    d748:	defff604 	addi	sp,sp,-40
    d74c:	dd000415 	stw	r20,16(sp)
    d750:	dc800215 	stw	r18,8(sp)
    d754:	dfc00915 	stw	ra,36(sp)
    d758:	df000815 	stw	fp,32(sp)
    d75c:	ddc00715 	stw	r23,28(sp)
    d760:	dd800615 	stw	r22,24(sp)
    d764:	dd400515 	stw	r21,20(sp)
    d768:	dcc00315 	stw	r19,12(sp)
    d76c:	dc400115 	stw	r17,4(sp)
    d770:	dc000015 	stw	r16,0(sp)
    d774:	3029883a 	mov	r20,r6
    d778:	34800017 	ldw	r18,0(r6)
    d77c:	10005726 	beq	r2,zero,d8dc <__ssprint_r+0x198>
    d780:	202b883a 	mov	r21,r4
    d784:	28c00217 	ldw	r3,8(r5)
    d788:	29000017 	ldw	r4,0(r5)
    d78c:	2823883a 	mov	r17,r5
    d790:	0039883a 	mov	fp,zero
    d794:	0021883a 	mov	r16,zero
    d798:	80001326 	beq	r16,zero,d7e8 <__ssprint_r+0xa4>
    d79c:	1827883a 	mov	r19,r3
    d7a0:	80c01536 	bltu	r16,r3,d7f8 <__ssprint_r+0xb4>
    d7a4:	8880030b 	ldhu	r2,12(r17)
    d7a8:	10c1200c 	andi	r3,r2,1152
    d7ac:	1800151e 	bne	r3,zero,d804 <__ssprint_r+0xc0>
    d7b0:	982f883a 	mov	r23,r19
    d7b4:	e00b883a 	mov	r5,fp
    d7b8:	b80d883a 	mov	r6,r23
    d7bc:	00048d00 	call	48d0 <memmove>
    d7c0:	88c00217 	ldw	r3,8(r17)
    d7c4:	89000017 	ldw	r4,0(r17)
    d7c8:	a0800217 	ldw	r2,8(r20)
    d7cc:	1cc7c83a 	sub	r3,r3,r19
    d7d0:	25c9883a 	add	r4,r4,r23
    d7d4:	88c00215 	stw	r3,8(r17)
    d7d8:	89000015 	stw	r4,0(r17)
    d7dc:	1405c83a 	sub	r2,r2,r16
    d7e0:	a0800215 	stw	r2,8(r20)
    d7e4:	10003d26 	beq	r2,zero,d8dc <__ssprint_r+0x198>
    d7e8:	97000017 	ldw	fp,0(r18)
    d7ec:	94000117 	ldw	r16,4(r18)
    d7f0:	94800204 	addi	r18,r18,8
    d7f4:	003fe806 	br	d798 <__alt_data_end+0xfe00d798>
    d7f8:	8027883a 	mov	r19,r16
    d7fc:	802f883a 	mov	r23,r16
    d800:	003fec06 	br	d7b4 <__alt_data_end+0xfe00d7b4>
    d804:	88c00517 	ldw	r3,20(r17)
    d808:	89400417 	ldw	r5,16(r17)
    d80c:	81800044 	addi	r6,r16,1
    d810:	18e7883a 	add	r19,r3,r3
    d814:	98c7883a 	add	r3,r19,r3
    d818:	1826d7fa 	srli	r19,r3,31
    d81c:	216fc83a 	sub	r23,r4,r5
    d820:	35cd883a 	add	r6,r6,r23
    d824:	98c7883a 	add	r3,r19,r3
    d828:	1827d07a 	srai	r19,r3,1
    d82c:	99801a2e 	bgeu	r19,r6,d898 <__ssprint_r+0x154>
    d830:	1081000c 	andi	r2,r2,1024
    d834:	3027883a 	mov	r19,r6
    d838:	a809883a 	mov	r4,r21
    d83c:	10001a26 	beq	r2,zero,d8a8 <__ssprint_r+0x164>
    d840:	300b883a 	mov	r5,r6
    d844:	0003cdc0 	call	3cdc <_malloc_r>
    d848:	102d883a 	mov	r22,r2
    d84c:	10001c26 	beq	r2,zero,d8c0 <__ssprint_r+0x17c>
    d850:	89400417 	ldw	r5,16(r17)
    d854:	1009883a 	mov	r4,r2
    d858:	b80d883a 	mov	r6,r23
    d85c:	00047c40 	call	47c4 <memcpy>
    d860:	8880030b 	ldhu	r2,12(r17)
    d864:	00fedfc4 	movi	r3,-1153
    d868:	10c4703a 	and	r2,r2,r3
    d86c:	10802014 	ori	r2,r2,128
    d870:	8880030d 	sth	r2,12(r17)
    d874:	b5c9883a 	add	r4,r22,r23
    d878:	9defc83a 	sub	r23,r19,r23
    d87c:	8cc00515 	stw	r19,20(r17)
    d880:	8dc00215 	stw	r23,8(r17)
    d884:	8d800415 	stw	r22,16(r17)
    d888:	89000015 	stw	r4,0(r17)
    d88c:	8027883a 	mov	r19,r16
    d890:	802f883a 	mov	r23,r16
    d894:	003fc706 	br	d7b4 <__alt_data_end+0xfe00d7b4>
    d898:	1081000c 	andi	r2,r2,1024
    d89c:	980d883a 	mov	r6,r19
    d8a0:	a809883a 	mov	r4,r21
    d8a4:	103fe61e 	bne	r2,zero,d840 <__alt_data_end+0xfe00d840>
    d8a8:	0004b200 	call	4b20 <_realloc_r>
    d8ac:	102d883a 	mov	r22,r2
    d8b0:	103ff01e 	bne	r2,zero,d874 <__alt_data_end+0xfe00d874>
    d8b4:	89400417 	ldw	r5,16(r17)
    d8b8:	a809883a 	mov	r4,r21
    d8bc:	00032fc0 	call	32fc <_free_r>
    d8c0:	88c0030b 	ldhu	r3,12(r17)
    d8c4:	00800304 	movi	r2,12
    d8c8:	a8800015 	stw	r2,0(r21)
    d8cc:	18c01014 	ori	r3,r3,64
    d8d0:	88c0030d 	sth	r3,12(r17)
    d8d4:	00bfffc4 	movi	r2,-1
    d8d8:	a0000215 	stw	zero,8(r20)
    d8dc:	a0000115 	stw	zero,4(r20)
    d8e0:	dfc00917 	ldw	ra,36(sp)
    d8e4:	df000817 	ldw	fp,32(sp)
    d8e8:	ddc00717 	ldw	r23,28(sp)
    d8ec:	dd800617 	ldw	r22,24(sp)
    d8f0:	dd400517 	ldw	r21,20(sp)
    d8f4:	dd000417 	ldw	r20,16(sp)
    d8f8:	dcc00317 	ldw	r19,12(sp)
    d8fc:	dc800217 	ldw	r18,8(sp)
    d900:	dc400117 	ldw	r17,4(sp)
    d904:	dc000017 	ldw	r16,0(sp)
    d908:	dec00a04 	addi	sp,sp,40
    d90c:	f800283a 	ret

0000d910 <___svfiprintf_internal_r>:
    d910:	2880030b 	ldhu	r2,12(r5)
    d914:	deffc904 	addi	sp,sp,-220
    d918:	dcc03015 	stw	r19,192(sp)
    d91c:	dfc03615 	stw	ra,216(sp)
    d920:	df003515 	stw	fp,212(sp)
    d924:	ddc03415 	stw	r23,208(sp)
    d928:	dd803315 	stw	r22,204(sp)
    d92c:	dd403215 	stw	r21,200(sp)
    d930:	dd003115 	stw	r20,196(sp)
    d934:	dc802f15 	stw	r18,188(sp)
    d938:	dc402e15 	stw	r17,184(sp)
    d93c:	dc002d15 	stw	r16,180(sp)
    d940:	d9402715 	stw	r5,156(sp)
    d944:	d9002915 	stw	r4,164(sp)
    d948:	1080200c 	andi	r2,r2,128
    d94c:	d9c02415 	stw	r7,144(sp)
    d950:	3027883a 	mov	r19,r6
    d954:	10000226 	beq	r2,zero,d960 <___svfiprintf_internal_r+0x50>
    d958:	28800417 	ldw	r2,16(r5)
    d95c:	1003b926 	beq	r2,zero,e844 <___svfiprintf_internal_r+0xf34>
    d960:	da801a04 	addi	r10,sp,104
    d964:	da801e15 	stw	r10,120(sp)
    d968:	d8801e17 	ldw	r2,120(sp)
    d96c:	da8019c4 	addi	r10,sp,103
    d970:	dc802917 	ldw	r18,164(sp)
    d974:	dd802717 	ldw	r22,156(sp)
    d978:	da801f15 	stw	r10,124(sp)
    d97c:	1295c83a 	sub	r10,r2,r10
    d980:	dec01a15 	stw	sp,104(sp)
    d984:	d8001c15 	stw	zero,112(sp)
    d988:	d8001b15 	stw	zero,108(sp)
    d98c:	d8002a15 	stw	zero,168(sp)
    d990:	d8002515 	stw	zero,148(sp)
    d994:	d811883a 	mov	r8,sp
    d998:	05000074 	movhi	r20,1
    d99c:	a514b604 	addi	r20,r20,21208
    d9a0:	da802b15 	stw	r10,172(sp)
    d9a4:	98800007 	ldb	r2,0(r19)
    d9a8:	10024f26 	beq	r2,zero,e2e8 <___svfiprintf_internal_r+0x9d8>
    d9ac:	00c00944 	movi	r3,37
    d9b0:	9821883a 	mov	r16,r19
    d9b4:	10c0021e 	bne	r2,r3,d9c0 <___svfiprintf_internal_r+0xb0>
    d9b8:	00001406 	br	da0c <___svfiprintf_internal_r+0xfc>
    d9bc:	10c00326 	beq	r2,r3,d9cc <___svfiprintf_internal_r+0xbc>
    d9c0:	84000044 	addi	r16,r16,1
    d9c4:	80800007 	ldb	r2,0(r16)
    d9c8:	103ffc1e 	bne	r2,zero,d9bc <__alt_data_end+0xfe00d9bc>
    d9cc:	84e3c83a 	sub	r17,r16,r19
    d9d0:	88000e26 	beq	r17,zero,da0c <___svfiprintf_internal_r+0xfc>
    d9d4:	d8c01c17 	ldw	r3,112(sp)
    d9d8:	d8801b17 	ldw	r2,108(sp)
    d9dc:	44c00015 	stw	r19,0(r8)
    d9e0:	1c47883a 	add	r3,r3,r17
    d9e4:	10800044 	addi	r2,r2,1
    d9e8:	d8c01c15 	stw	r3,112(sp)
    d9ec:	44400115 	stw	r17,4(r8)
    d9f0:	d8801b15 	stw	r2,108(sp)
    d9f4:	00c001c4 	movi	r3,7
    d9f8:	1882c016 	blt	r3,r2,e4fc <___svfiprintf_internal_r+0xbec>
    d9fc:	42000204 	addi	r8,r8,8
    da00:	da802517 	ldw	r10,148(sp)
    da04:	5455883a 	add	r10,r10,r17
    da08:	da802515 	stw	r10,148(sp)
    da0c:	80800007 	ldb	r2,0(r16)
    da10:	10024d26 	beq	r2,zero,e348 <___svfiprintf_internal_r+0xa38>
    da14:	80c00047 	ldb	r3,1(r16)
    da18:	84c00044 	addi	r19,r16,1
    da1c:	d8001d85 	stb	zero,118(sp)
    da20:	000d883a 	mov	r6,zero
    da24:	057fffc4 	movi	r21,-1
    da28:	d8002215 	stw	zero,136(sp)
    da2c:	0023883a 	mov	r17,zero
    da30:	01001604 	movi	r4,88
    da34:	01400244 	movi	r5,9
    da38:	02400a84 	movi	r9,42
    da3c:	01c01b04 	movi	r7,108
    da40:	9cc00044 	addi	r19,r19,1
    da44:	18bff804 	addi	r2,r3,-32
    da48:	20817d36 	bltu	r4,r2,e040 <___svfiprintf_internal_r+0x730>
    da4c:	1085883a 	add	r2,r2,r2
    da50:	1085883a 	add	r2,r2,r2
    da54:	02800074 	movhi	r10,1
    da58:	52b69a04 	addi	r10,r10,-9624
    da5c:	1285883a 	add	r2,r2,r10
    da60:	10800017 	ldw	r2,0(r2)
    da64:	1000683a 	jmp	r2
    da68:	0000df50 	cmplti	zero,zero,893
    da6c:	0000e040 	call	e04 <LCD_Init+0x5e0>
    da70:	0000e040 	call	e04 <LCD_Init+0x5e0>
    da74:	0000df44 	movi	zero,893
    da78:	0000e040 	call	e04 <LCD_Init+0x5e0>
    da7c:	0000e040 	call	e04 <LCD_Init+0x5e0>
    da80:	0000e040 	call	e04 <LCD_Init+0x5e0>
    da84:	0000e040 	call	e04 <LCD_Init+0x5e0>
    da88:	0000e040 	call	e04 <LCD_Init+0x5e0>
    da8c:	0000e040 	call	e04 <LCD_Init+0x5e0>
    da90:	0000dc84 	movi	zero,882
    da94:	0000e070 	cmpltui	zero,zero,897
    da98:	0000e040 	call	e04 <LCD_Init+0x5e0>
    da9c:	0000dcb0 	cmpltui	zero,zero,882
    daa0:	0000e07c 	xorhi	zero,zero,897
    daa4:	0000e040 	call	e04 <LCD_Init+0x5e0>
    daa8:	0000e064 	muli	zero,zero,897
    daac:	0000e00c 	andi	zero,zero,896
    dab0:	0000e00c 	andi	zero,zero,896
    dab4:	0000e00c 	andi	zero,zero,896
    dab8:	0000e00c 	andi	zero,zero,896
    dabc:	0000e00c 	andi	zero,zero,896
    dac0:	0000e00c 	andi	zero,zero,896
    dac4:	0000e00c 	andi	zero,zero,896
    dac8:	0000e00c 	andi	zero,zero,896
    dacc:	0000e00c 	andi	zero,zero,896
    dad0:	0000e040 	call	e04 <LCD_Init+0x5e0>
    dad4:	0000e040 	call	e04 <LCD_Init+0x5e0>
    dad8:	0000e040 	call	e04 <LCD_Init+0x5e0>
    dadc:	0000e040 	call	e04 <LCD_Init+0x5e0>
    dae0:	0000e040 	call	e04 <LCD_Init+0x5e0>
    dae4:	0000e040 	call	e04 <LCD_Init+0x5e0>
    dae8:	0000e040 	call	e04 <LCD_Init+0x5e0>
    daec:	0000e040 	call	e04 <LCD_Init+0x5e0>
    daf0:	0000e040 	call	e04 <LCD_Init+0x5e0>
    daf4:	0000e040 	call	e04 <LCD_Init+0x5e0>
    daf8:	0000dfac 	andhi	zero,zero,894
    dafc:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db00:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db04:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db08:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db0c:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db10:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db14:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db18:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db1c:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db20:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db24:	0000dc58 	cmpnei	zero,zero,881
    db28:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db2c:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db30:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db34:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db38:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db3c:	0000dbcc 	andi	zero,zero,879
    db40:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db44:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db48:	0000dee0 	cmpeqi	zero,zero,891
    db4c:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db50:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db54:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db58:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db5c:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db60:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db64:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db68:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db6c:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db70:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db74:	0000ddd0 	cmplti	zero,zero,887
    db78:	0000dd94 	movui	zero,886
    db7c:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db80:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db84:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db88:	0000df38 	rdprs	zero,zero,892
    db8c:	0000dd94 	movui	zero,886
    db90:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db94:	0000e040 	call	e04 <LCD_Init+0x5e0>
    db98:	0000df24 	muli	zero,zero,892
    db9c:	0000e040 	call	e04 <LCD_Init+0x5e0>
    dba0:	0000dcbc 	xorhi	zero,zero,882
    dba4:	0000dc5c 	xori	zero,zero,881
    dba8:	0000dd54 	movui	zero,885
    dbac:	0000dd48 	cmpgei	zero,zero,885
    dbb0:	0000e040 	call	e04 <LCD_Init+0x5e0>
    dbb4:	0000dcf4 	movhi	zero,883
    dbb8:	0000e040 	call	e04 <LCD_Init+0x5e0>
    dbbc:	0000dbd0 	cmplti	zero,zero,879
    dbc0:	0000e040 	call	e04 <LCD_Init+0x5e0>
    dbc4:	0000e040 	call	e04 <LCD_Init+0x5e0>
    dbc8:	0000df6c 	andhi	zero,zero,893
    dbcc:	8c400414 	ori	r17,r17,16
    dbd0:	8880080c 	andi	r2,r17,32
    dbd4:	10029426 	beq	r2,zero,e628 <___svfiprintf_internal_r+0xd18>
    dbd8:	da802417 	ldw	r10,144(sp)
    dbdc:	00800044 	movi	r2,1
    dbe0:	57000017 	ldw	fp,0(r10)
    dbe4:	52400117 	ldw	r9,4(r10)
    dbe8:	52800204 	addi	r10,r10,8
    dbec:	da802415 	stw	r10,144(sp)
    dbf0:	e248b03a 	or	r4,fp,r9
    dbf4:	d8001d85 	stb	zero,118(sp)
    dbf8:	dd402015 	stw	r21,128(sp)
    dbfc:	002f883a 	mov	r23,zero
    dc00:	a8000216 	blt	r21,zero,dc0c <___svfiprintf_internal_r+0x2fc>
    dc04:	00ffdfc4 	movi	r3,-129
    dc08:	88e2703a 	and	r17,r17,r3
    dc0c:	10803fcc 	andi	r2,r2,255
    dc10:	2001b71e 	bne	r4,zero,e2f0 <___svfiprintf_internal_r+0x9e0>
    dc14:	a801b61e 	bne	r21,zero,e2f0 <___svfiprintf_internal_r+0x9e0>
    dc18:	1000021e 	bne	r2,zero,dc24 <___svfiprintf_internal_r+0x314>
    dc1c:	8880004c 	andi	r2,r17,1
    dc20:	1002a91e 	bne	r2,zero,e6c8 <___svfiprintf_internal_r+0xdb8>
    dc24:	dc001a04 	addi	r16,sp,104
    dc28:	d8c02017 	ldw	r3,128(sp)
    dc2c:	d8c02115 	stw	r3,132(sp)
    dc30:	1d40010e 	bge	r3,r21,dc38 <___svfiprintf_internal_r+0x328>
    dc34:	dd402115 	stw	r21,132(sp)
    dc38:	ba803fcc 	andi	r10,r23,255
    dc3c:	5280201c 	xori	r10,r10,128
    dc40:	52bfe004 	addi	r10,r10,-128
    dc44:	50006d26 	beq	r10,zero,ddfc <___svfiprintf_internal_r+0x4ec>
    dc48:	da802117 	ldw	r10,132(sp)
    dc4c:	52800044 	addi	r10,r10,1
    dc50:	da802115 	stw	r10,132(sp)
    dc54:	00006906 	br	ddfc <___svfiprintf_internal_r+0x4ec>
    dc58:	8c400414 	ori	r17,r17,16
    dc5c:	8880080c 	andi	r2,r17,32
    dc60:	10027826 	beq	r2,zero,e644 <___svfiprintf_internal_r+0xd34>
    dc64:	da802417 	ldw	r10,144(sp)
    dc68:	0005883a 	mov	r2,zero
    dc6c:	57000017 	ldw	fp,0(r10)
    dc70:	52400117 	ldw	r9,4(r10)
    dc74:	52800204 	addi	r10,r10,8
    dc78:	da802415 	stw	r10,144(sp)
    dc7c:	e248b03a 	or	r4,fp,r9
    dc80:	003fdc06 	br	dbf4 <__alt_data_end+0xfe00dbf4>
    dc84:	da802417 	ldw	r10,144(sp)
    dc88:	52800017 	ldw	r10,0(r10)
    dc8c:	da802215 	stw	r10,136(sp)
    dc90:	da802417 	ldw	r10,144(sp)
    dc94:	50800104 	addi	r2,r10,4
    dc98:	da802217 	ldw	r10,136(sp)
    dc9c:	5002800e 	bge	r10,zero,e6a0 <___svfiprintf_internal_r+0xd90>
    dca0:	da802217 	ldw	r10,136(sp)
    dca4:	d8802415 	stw	r2,144(sp)
    dca8:	0295c83a 	sub	r10,zero,r10
    dcac:	da802215 	stw	r10,136(sp)
    dcb0:	8c400114 	ori	r17,r17,4
    dcb4:	98c00007 	ldb	r3,0(r19)
    dcb8:	003f6106 	br	da40 <__alt_data_end+0xfe00da40>
    dcbc:	d9801d85 	stb	r6,118(sp)
    dcc0:	8880080c 	andi	r2,r17,32
    dcc4:	1002a81e 	bne	r2,zero,e768 <___svfiprintf_internal_r+0xe58>
    dcc8:	8880040c 	andi	r2,r17,16
    dccc:	1002b51e 	bne	r2,zero,e7a4 <___svfiprintf_internal_r+0xe94>
    dcd0:	8c40100c 	andi	r17,r17,64
    dcd4:	8802b326 	beq	r17,zero,e7a4 <___svfiprintf_internal_r+0xe94>
    dcd8:	da802417 	ldw	r10,144(sp)
    dcdc:	50800017 	ldw	r2,0(r10)
    dce0:	52800104 	addi	r10,r10,4
    dce4:	da802415 	stw	r10,144(sp)
    dce8:	da802517 	ldw	r10,148(sp)
    dcec:	1280000d 	sth	r10,0(r2)
    dcf0:	003f2c06 	br	d9a4 <__alt_data_end+0xfe00d9a4>
    dcf4:	da802417 	ldw	r10,144(sp)
    dcf8:	d8001d85 	stb	zero,118(sp)
    dcfc:	54000017 	ldw	r16,0(r10)
    dd00:	57000104 	addi	fp,r10,4
    dd04:	8002c426 	beq	r16,zero,e818 <___svfiprintf_internal_r+0xf08>
    dd08:	8009883a 	mov	r4,r16
    dd0c:	a802ba16 	blt	r21,zero,e7f8 <___svfiprintf_internal_r+0xee8>
    dd10:	000b883a 	mov	r5,zero
    dd14:	a80d883a 	mov	r6,r21
    dd18:	da002c15 	stw	r8,176(sp)
    dd1c:	00046dc0 	call	46dc <memchr>
    dd20:	da002c17 	ldw	r8,176(sp)
    dd24:	1002d126 	beq	r2,zero,e86c <___svfiprintf_internal_r+0xf5c>
    dd28:	1405c83a 	sub	r2,r2,r16
    dd2c:	d8802015 	stw	r2,128(sp)
    dd30:	a880010e 	bge	r21,r2,dd38 <___svfiprintf_internal_r+0x428>
    dd34:	dd402015 	stw	r21,128(sp)
    dd38:	ddc01d83 	ldbu	r23,118(sp)
    dd3c:	df002415 	stw	fp,144(sp)
    dd40:	002b883a 	mov	r21,zero
    dd44:	003fb806 	br	dc28 <__alt_data_end+0xfe00dc28>
    dd48:	8c400814 	ori	r17,r17,32
    dd4c:	98c00007 	ldb	r3,0(r19)
    dd50:	003f3b06 	br	da40 <__alt_data_end+0xfe00da40>
    dd54:	da802417 	ldw	r10,144(sp)
    dd58:	00800c04 	movi	r2,48
    dd5c:	d8801d05 	stb	r2,116(sp)
    dd60:	57000017 	ldw	fp,0(r10)
    dd64:	52800104 	addi	r10,r10,4
    dd68:	00801e04 	movi	r2,120
    dd6c:	da802415 	stw	r10,144(sp)
    dd70:	02800074 	movhi	r10,1
    dd74:	52945204 	addi	r10,r10,20808
    dd78:	d8801d45 	stb	r2,117(sp)
    dd7c:	0013883a 	mov	r9,zero
    dd80:	8c400094 	ori	r17,r17,2
    dd84:	da802a15 	stw	r10,168(sp)
    dd88:	00800084 	movi	r2,2
    dd8c:	e009883a 	mov	r4,fp
    dd90:	003f9806 	br	dbf4 <__alt_data_end+0xfe00dbf4>
    dd94:	d9801d85 	stb	r6,118(sp)
    dd98:	8880080c 	andi	r2,r17,32
    dd9c:	10008726 	beq	r2,zero,dfbc <___svfiprintf_internal_r+0x6ac>
    dda0:	da802417 	ldw	r10,144(sp)
    dda4:	50800117 	ldw	r2,4(r10)
    dda8:	57000017 	ldw	fp,0(r10)
    ddac:	52800204 	addi	r10,r10,8
    ddb0:	da802415 	stw	r10,144(sp)
    ddb4:	1013883a 	mov	r9,r2
    ddb8:	10008916 	blt	r2,zero,dfe0 <___svfiprintf_internal_r+0x6d0>
    ddbc:	ddc01d83 	ldbu	r23,118(sp)
    ddc0:	dd402015 	stw	r21,128(sp)
    ddc4:	00800044 	movi	r2,1
    ddc8:	e248b03a 	or	r4,fp,r9
    ddcc:	003f8c06 	br	dc00 <__alt_data_end+0xfe00dc00>
    ddd0:	da802417 	ldw	r10,144(sp)
    ddd4:	00c00044 	movi	r3,1
    ddd8:	d8c02115 	stw	r3,132(sp)
    dddc:	50800017 	ldw	r2,0(r10)
    dde0:	52800104 	addi	r10,r10,4
    dde4:	d8001d85 	stb	zero,118(sp)
    dde8:	d8801005 	stb	r2,64(sp)
    ddec:	da802415 	stw	r10,144(sp)
    ddf0:	d8c02015 	stw	r3,128(sp)
    ddf4:	dc001004 	addi	r16,sp,64
    ddf8:	002b883a 	mov	r21,zero
    ddfc:	88c0008c 	andi	r3,r17,2
    de00:	d8c02315 	stw	r3,140(sp)
    de04:	18000326 	beq	r3,zero,de14 <___svfiprintf_internal_r+0x504>
    de08:	da802117 	ldw	r10,132(sp)
    de0c:	52800084 	addi	r10,r10,2
    de10:	da802115 	stw	r10,132(sp)
    de14:	88c0210c 	andi	r3,r17,132
    de18:	d8c02615 	stw	r3,152(sp)
    de1c:	1800a71e 	bne	r3,zero,e0bc <___svfiprintf_internal_r+0x7ac>
    de20:	da802217 	ldw	r10,136(sp)
    de24:	d8c02117 	ldw	r3,132(sp)
    de28:	50efc83a 	sub	r23,r10,r3
    de2c:	05c0a30e 	bge	zero,r23,e0bc <___svfiprintf_internal_r+0x7ac>
    de30:	02800074 	movhi	r10,1
    de34:	5294ba04 	addi	r10,r10,21224
    de38:	02400404 	movi	r9,16
    de3c:	da802815 	stw	r10,160(sp)
    de40:	d8c01c17 	ldw	r3,112(sp)
    de44:	d8801b17 	ldw	r2,108(sp)
    de48:	4dc01a0e 	bge	r9,r23,deb4 <___svfiprintf_internal_r+0x5a4>
    de4c:	070001c4 	movi	fp,7
    de50:	00000306 	br	de60 <___svfiprintf_internal_r+0x550>
    de54:	bdfffc04 	addi	r23,r23,-16
    de58:	42000204 	addi	r8,r8,8
    de5c:	4dc0150e 	bge	r9,r23,deb4 <___svfiprintf_internal_r+0x5a4>
    de60:	18c00404 	addi	r3,r3,16
    de64:	10800044 	addi	r2,r2,1
    de68:	01000074 	movhi	r4,1
    de6c:	2114ba04 	addi	r4,r4,21224
    de70:	41000015 	stw	r4,0(r8)
    de74:	42400115 	stw	r9,4(r8)
    de78:	d8c01c15 	stw	r3,112(sp)
    de7c:	d8801b15 	stw	r2,108(sp)
    de80:	e0bff40e 	bge	fp,r2,de54 <__alt_data_end+0xfe00de54>
    de84:	9009883a 	mov	r4,r18
    de88:	b00b883a 	mov	r5,r22
    de8c:	d9801a04 	addi	r6,sp,104
    de90:	da402c15 	stw	r9,176(sp)
    de94:	000d7440 	call	d744 <__ssprint_r>
    de98:	da402c17 	ldw	r9,176(sp)
    de9c:	1001301e 	bne	r2,zero,e360 <___svfiprintf_internal_r+0xa50>
    dea0:	bdfffc04 	addi	r23,r23,-16
    dea4:	d8c01c17 	ldw	r3,112(sp)
    dea8:	d8801b17 	ldw	r2,108(sp)
    deac:	d811883a 	mov	r8,sp
    deb0:	4dffeb16 	blt	r9,r23,de60 <__alt_data_end+0xfe00de60>
    deb4:	da802817 	ldw	r10,160(sp)
    deb8:	b8c7883a 	add	r3,r23,r3
    debc:	10800044 	addi	r2,r2,1
    dec0:	42800015 	stw	r10,0(r8)
    dec4:	45c00115 	stw	r23,4(r8)
    dec8:	d8c01c15 	stw	r3,112(sp)
    decc:	d8801b15 	stw	r2,108(sp)
    ded0:	010001c4 	movi	r4,7
    ded4:	2081cb16 	blt	r4,r2,e604 <___svfiprintf_internal_r+0xcf4>
    ded8:	42000204 	addi	r8,r8,8
    dedc:	00007906 	br	e0c4 <___svfiprintf_internal_r+0x7b4>
    dee0:	02800074 	movhi	r10,1
    dee4:	52944d04 	addi	r10,r10,20788
    dee8:	d9801d85 	stb	r6,118(sp)
    deec:	da802a15 	stw	r10,168(sp)
    def0:	8880080c 	andi	r2,r17,32
    def4:	10002326 	beq	r2,zero,df84 <___svfiprintf_internal_r+0x674>
    def8:	da802417 	ldw	r10,144(sp)
    defc:	57000017 	ldw	fp,0(r10)
    df00:	52400117 	ldw	r9,4(r10)
    df04:	52800204 	addi	r10,r10,8
    df08:	da802415 	stw	r10,144(sp)
    df0c:	8880004c 	andi	r2,r17,1
    df10:	1001d826 	beq	r2,zero,e674 <___svfiprintf_internal_r+0xd64>
    df14:	e248b03a 	or	r4,fp,r9
    df18:	2001f11e 	bne	r4,zero,e6e0 <___svfiprintf_internal_r+0xdd0>
    df1c:	00800084 	movi	r2,2
    df20:	003f3406 	br	dbf4 <__alt_data_end+0xfe00dbf4>
    df24:	98c00007 	ldb	r3,0(r19)
    df28:	9805883a 	mov	r2,r19
    df2c:	19c21926 	beq	r3,r7,e794 <___svfiprintf_internal_r+0xe84>
    df30:	8c400414 	ori	r17,r17,16
    df34:	003ec206 	br	da40 <__alt_data_end+0xfe00da40>
    df38:	8c401014 	ori	r17,r17,64
    df3c:	98c00007 	ldb	r3,0(r19)
    df40:	003ebf06 	br	da40 <__alt_data_end+0xfe00da40>
    df44:	8c400054 	ori	r17,r17,1
    df48:	98c00007 	ldb	r3,0(r19)
    df4c:	003ebc06 	br	da40 <__alt_data_end+0xfe00da40>
    df50:	30803fcc 	andi	r2,r6,255
    df54:	1080201c 	xori	r2,r2,128
    df58:	10bfe004 	addi	r2,r2,-128
    df5c:	1001e61e 	bne	r2,zero,e6f8 <___svfiprintf_internal_r+0xde8>
    df60:	01800804 	movi	r6,32
    df64:	98c00007 	ldb	r3,0(r19)
    df68:	003eb506 	br	da40 <__alt_data_end+0xfe00da40>
    df6c:	02800074 	movhi	r10,1
    df70:	52945204 	addi	r10,r10,20808
    df74:	d9801d85 	stb	r6,118(sp)
    df78:	da802a15 	stw	r10,168(sp)
    df7c:	8880080c 	andi	r2,r17,32
    df80:	103fdd1e 	bne	r2,zero,def8 <__alt_data_end+0xfe00def8>
    df84:	8880040c 	andi	r2,r17,16
    df88:	1001ee1e 	bne	r2,zero,e744 <___svfiprintf_internal_r+0xe34>
    df8c:	8880100c 	andi	r2,r17,64
    df90:	da802417 	ldw	r10,144(sp)
    df94:	10021326 	beq	r2,zero,e7e4 <___svfiprintf_internal_r+0xed4>
    df98:	5700000b 	ldhu	fp,0(r10)
    df9c:	52800104 	addi	r10,r10,4
    dfa0:	0013883a 	mov	r9,zero
    dfa4:	da802415 	stw	r10,144(sp)
    dfa8:	003fd806 	br	df0c <__alt_data_end+0xfe00df0c>
    dfac:	8c400414 	ori	r17,r17,16
    dfb0:	d9801d85 	stb	r6,118(sp)
    dfb4:	8880080c 	andi	r2,r17,32
    dfb8:	103f791e 	bne	r2,zero,dda0 <__alt_data_end+0xfe00dda0>
    dfbc:	8880040c 	andi	r2,r17,16
    dfc0:	1001d726 	beq	r2,zero,e720 <___svfiprintf_internal_r+0xe10>
    dfc4:	da802417 	ldw	r10,144(sp)
    dfc8:	57000017 	ldw	fp,0(r10)
    dfcc:	52800104 	addi	r10,r10,4
    dfd0:	da802415 	stw	r10,144(sp)
    dfd4:	e013d7fa 	srai	r9,fp,31
    dfd8:	4805883a 	mov	r2,r9
    dfdc:	103f770e 	bge	r2,zero,ddbc <__alt_data_end+0xfe00ddbc>
    dfe0:	0739c83a 	sub	fp,zero,fp
    dfe4:	e004c03a 	cmpne	r2,fp,zero
    dfe8:	0253c83a 	sub	r9,zero,r9
    dfec:	02800b44 	movi	r10,45
    dff0:	4893c83a 	sub	r9,r9,r2
    dff4:	da801d85 	stb	r10,118(sp)
    dff8:	dd402015 	stw	r21,128(sp)
    dffc:	502f883a 	mov	r23,r10
    e000:	00800044 	movi	r2,1
    e004:	e248b03a 	or	r4,fp,r9
    e008:	003efd06 	br	dc00 <__alt_data_end+0xfe00dc00>
    e00c:	d8002215 	stw	zero,136(sp)
    e010:	18bff404 	addi	r2,r3,-48
    e014:	da802217 	ldw	r10,136(sp)
    e018:	98c00007 	ldb	r3,0(r19)
    e01c:	52c002a4 	muli	r11,r10,10
    e020:	9a800044 	addi	r10,r19,1
    e024:	5027883a 	mov	r19,r10
    e028:	5885883a 	add	r2,r11,r2
    e02c:	d8802215 	stw	r2,136(sp)
    e030:	18bff404 	addi	r2,r3,-48
    e034:	28bff72e 	bgeu	r5,r2,e014 <__alt_data_end+0xfe00e014>
    e038:	18bff804 	addi	r2,r3,-32
    e03c:	20be832e 	bgeu	r4,r2,da4c <__alt_data_end+0xfe00da4c>
    e040:	d9801d85 	stb	r6,118(sp)
    e044:	1800c026 	beq	r3,zero,e348 <___svfiprintf_internal_r+0xa38>
    e048:	02800044 	movi	r10,1
    e04c:	da802115 	stw	r10,132(sp)
    e050:	d8c01005 	stb	r3,64(sp)
    e054:	d8001d85 	stb	zero,118(sp)
    e058:	da802015 	stw	r10,128(sp)
    e05c:	dc001004 	addi	r16,sp,64
    e060:	003f6506 	br	ddf8 <__alt_data_end+0xfe00ddf8>
    e064:	8c402014 	ori	r17,r17,128
    e068:	98c00007 	ldb	r3,0(r19)
    e06c:	003e7406 	br	da40 <__alt_data_end+0xfe00da40>
    e070:	01800ac4 	movi	r6,43
    e074:	98c00007 	ldb	r3,0(r19)
    e078:	003e7106 	br	da40 <__alt_data_end+0xfe00da40>
    e07c:	98c00007 	ldb	r3,0(r19)
    e080:	9a800044 	addi	r10,r19,1
    e084:	1a420026 	beq	r3,r9,e888 <___svfiprintf_internal_r+0xf78>
    e088:	18bff404 	addi	r2,r3,-48
    e08c:	5027883a 	mov	r19,r10
    e090:	002b883a 	mov	r21,zero
    e094:	28be6b36 	bltu	r5,r2,da44 <__alt_data_end+0xfe00da44>
    e098:	98c00007 	ldb	r3,0(r19)
    e09c:	ad4002a4 	muli	r21,r21,10
    e0a0:	9cc00044 	addi	r19,r19,1
    e0a4:	156b883a 	add	r21,r2,r21
    e0a8:	18bff404 	addi	r2,r3,-48
    e0ac:	28bffa2e 	bgeu	r5,r2,e098 <__alt_data_end+0xfe00e098>
    e0b0:	a83e640e 	bge	r21,zero,da44 <__alt_data_end+0xfe00da44>
    e0b4:	057fffc4 	movi	r21,-1
    e0b8:	003e6206 	br	da44 <__alt_data_end+0xfe00da44>
    e0bc:	d8c01c17 	ldw	r3,112(sp)
    e0c0:	d8801b17 	ldw	r2,108(sp)
    e0c4:	d9001d87 	ldb	r4,118(sp)
    e0c8:	20000b26 	beq	r4,zero,e0f8 <___svfiprintf_internal_r+0x7e8>
    e0cc:	d9001d84 	addi	r4,sp,118
    e0d0:	18c00044 	addi	r3,r3,1
    e0d4:	10800044 	addi	r2,r2,1
    e0d8:	41000015 	stw	r4,0(r8)
    e0dc:	01000044 	movi	r4,1
    e0e0:	41000115 	stw	r4,4(r8)
    e0e4:	d8c01c15 	stw	r3,112(sp)
    e0e8:	d8801b15 	stw	r2,108(sp)
    e0ec:	010001c4 	movi	r4,7
    e0f0:	20813216 	blt	r4,r2,e5bc <___svfiprintf_internal_r+0xcac>
    e0f4:	42000204 	addi	r8,r8,8
    e0f8:	da802317 	ldw	r10,140(sp)
    e0fc:	50000b26 	beq	r10,zero,e12c <___svfiprintf_internal_r+0x81c>
    e100:	d9001d04 	addi	r4,sp,116
    e104:	18c00084 	addi	r3,r3,2
    e108:	10800044 	addi	r2,r2,1
    e10c:	41000015 	stw	r4,0(r8)
    e110:	01000084 	movi	r4,2
    e114:	41000115 	stw	r4,4(r8)
    e118:	d8c01c15 	stw	r3,112(sp)
    e11c:	d8801b15 	stw	r2,108(sp)
    e120:	010001c4 	movi	r4,7
    e124:	20812e16 	blt	r4,r2,e5e0 <___svfiprintf_internal_r+0xcd0>
    e128:	42000204 	addi	r8,r8,8
    e12c:	da802617 	ldw	r10,152(sp)
    e130:	01002004 	movi	r4,128
    e134:	51009b26 	beq	r10,r4,e3a4 <___svfiprintf_internal_r+0xa94>
    e138:	da802017 	ldw	r10,128(sp)
    e13c:	aaabc83a 	sub	r21,r21,r10
    e140:	0540260e 	bge	zero,r21,e1dc <___svfiprintf_internal_r+0x8cc>
    e144:	02800074 	movhi	r10,1
    e148:	5294b604 	addi	r10,r10,21208
    e14c:	01c00404 	movi	r7,16
    e150:	da802315 	stw	r10,140(sp)
    e154:	3d40170e 	bge	r7,r21,e1b4 <___svfiprintf_internal_r+0x8a4>
    e158:	382f883a 	mov	r23,r7
    e15c:	070001c4 	movi	fp,7
    e160:	00000306 	br	e170 <___svfiprintf_internal_r+0x860>
    e164:	ad7ffc04 	addi	r21,r21,-16
    e168:	42000204 	addi	r8,r8,8
    e16c:	bd40110e 	bge	r23,r21,e1b4 <___svfiprintf_internal_r+0x8a4>
    e170:	18c00404 	addi	r3,r3,16
    e174:	10800044 	addi	r2,r2,1
    e178:	45000015 	stw	r20,0(r8)
    e17c:	45c00115 	stw	r23,4(r8)
    e180:	d8c01c15 	stw	r3,112(sp)
    e184:	d8801b15 	stw	r2,108(sp)
    e188:	e0bff60e 	bge	fp,r2,e164 <__alt_data_end+0xfe00e164>
    e18c:	9009883a 	mov	r4,r18
    e190:	b00b883a 	mov	r5,r22
    e194:	d9801a04 	addi	r6,sp,104
    e198:	000d7440 	call	d744 <__ssprint_r>
    e19c:	1000701e 	bne	r2,zero,e360 <___svfiprintf_internal_r+0xa50>
    e1a0:	ad7ffc04 	addi	r21,r21,-16
    e1a4:	d8c01c17 	ldw	r3,112(sp)
    e1a8:	d8801b17 	ldw	r2,108(sp)
    e1ac:	d811883a 	mov	r8,sp
    e1b0:	bd7fef16 	blt	r23,r21,e170 <__alt_data_end+0xfe00e170>
    e1b4:	da802317 	ldw	r10,140(sp)
    e1b8:	1d47883a 	add	r3,r3,r21
    e1bc:	10800044 	addi	r2,r2,1
    e1c0:	42800015 	stw	r10,0(r8)
    e1c4:	45400115 	stw	r21,4(r8)
    e1c8:	d8c01c15 	stw	r3,112(sp)
    e1cc:	d8801b15 	stw	r2,108(sp)
    e1d0:	010001c4 	movi	r4,7
    e1d4:	2080d016 	blt	r4,r2,e518 <___svfiprintf_internal_r+0xc08>
    e1d8:	42000204 	addi	r8,r8,8
    e1dc:	da802017 	ldw	r10,128(sp)
    e1e0:	10800044 	addi	r2,r2,1
    e1e4:	44000015 	stw	r16,0(r8)
    e1e8:	50c7883a 	add	r3,r10,r3
    e1ec:	42800115 	stw	r10,4(r8)
    e1f0:	d8c01c15 	stw	r3,112(sp)
    e1f4:	d8801b15 	stw	r2,108(sp)
    e1f8:	010001c4 	movi	r4,7
    e1fc:	20809516 	blt	r4,r2,e454 <___svfiprintf_internal_r+0xb44>
    e200:	42000204 	addi	r8,r8,8
    e204:	8c40010c 	andi	r17,r17,4
    e208:	88002b26 	beq	r17,zero,e2b8 <___svfiprintf_internal_r+0x9a8>
    e20c:	da802217 	ldw	r10,136(sp)
    e210:	d8802117 	ldw	r2,132(sp)
    e214:	50a1c83a 	sub	r16,r10,r2
    e218:	0400270e 	bge	zero,r16,e2b8 <___svfiprintf_internal_r+0x9a8>
    e21c:	02800074 	movhi	r10,1
    e220:	5294ba04 	addi	r10,r10,21224
    e224:	04400404 	movi	r17,16
    e228:	da802815 	stw	r10,160(sp)
    e22c:	d8801b17 	ldw	r2,108(sp)
    e230:	8c00180e 	bge	r17,r16,e294 <___svfiprintf_internal_r+0x984>
    e234:	054001c4 	movi	r21,7
    e238:	00000306 	br	e248 <___svfiprintf_internal_r+0x938>
    e23c:	843ffc04 	addi	r16,r16,-16
    e240:	42000204 	addi	r8,r8,8
    e244:	8c00130e 	bge	r17,r16,e294 <___svfiprintf_internal_r+0x984>
    e248:	18c00404 	addi	r3,r3,16
    e24c:	10800044 	addi	r2,r2,1
    e250:	01000074 	movhi	r4,1
    e254:	2114ba04 	addi	r4,r4,21224
    e258:	41000015 	stw	r4,0(r8)
    e25c:	44400115 	stw	r17,4(r8)
    e260:	d8c01c15 	stw	r3,112(sp)
    e264:	d8801b15 	stw	r2,108(sp)
    e268:	a8bff40e 	bge	r21,r2,e23c <__alt_data_end+0xfe00e23c>
    e26c:	9009883a 	mov	r4,r18
    e270:	b00b883a 	mov	r5,r22
    e274:	d9801a04 	addi	r6,sp,104
    e278:	000d7440 	call	d744 <__ssprint_r>
    e27c:	1000381e 	bne	r2,zero,e360 <___svfiprintf_internal_r+0xa50>
    e280:	843ffc04 	addi	r16,r16,-16
    e284:	d8c01c17 	ldw	r3,112(sp)
    e288:	d8801b17 	ldw	r2,108(sp)
    e28c:	d811883a 	mov	r8,sp
    e290:	8c3fed16 	blt	r17,r16,e248 <__alt_data_end+0xfe00e248>
    e294:	da802817 	ldw	r10,160(sp)
    e298:	1c07883a 	add	r3,r3,r16
    e29c:	10800044 	addi	r2,r2,1
    e2a0:	42800015 	stw	r10,0(r8)
    e2a4:	44000115 	stw	r16,4(r8)
    e2a8:	d8c01c15 	stw	r3,112(sp)
    e2ac:	d8801b15 	stw	r2,108(sp)
    e2b0:	010001c4 	movi	r4,7
    e2b4:	2080fd16 	blt	r4,r2,e6ac <___svfiprintf_internal_r+0xd9c>
    e2b8:	df002117 	ldw	fp,132(sp)
    e2bc:	da802217 	ldw	r10,136(sp)
    e2c0:	e280010e 	bge	fp,r10,e2c8 <___svfiprintf_internal_r+0x9b8>
    e2c4:	5039883a 	mov	fp,r10
    e2c8:	da802517 	ldw	r10,148(sp)
    e2cc:	5715883a 	add	r10,r10,fp
    e2d0:	da802515 	stw	r10,148(sp)
    e2d4:	1800671e 	bne	r3,zero,e474 <___svfiprintf_internal_r+0xb64>
    e2d8:	98800007 	ldb	r2,0(r19)
    e2dc:	d8001b15 	stw	zero,108(sp)
    e2e0:	d811883a 	mov	r8,sp
    e2e4:	103db11e 	bne	r2,zero,d9ac <__alt_data_end+0xfe00d9ac>
    e2e8:	9821883a 	mov	r16,r19
    e2ec:	003dc706 	br	da0c <__alt_data_end+0xfe00da0c>
    e2f0:	00c00044 	movi	r3,1
    e2f4:	10c09126 	beq	r2,r3,e53c <___svfiprintf_internal_r+0xc2c>
    e2f8:	00c00084 	movi	r3,2
    e2fc:	10c0631e 	bne	r2,r3,e48c <___svfiprintf_internal_r+0xb7c>
    e300:	d9402a17 	ldw	r5,168(sp)
    e304:	d88019c4 	addi	r2,sp,103
    e308:	e0c003cc 	andi	r3,fp,15
    e30c:	4808973a 	slli	r4,r9,28
    e310:	28c7883a 	add	r3,r5,r3
    e314:	e038d13a 	srli	fp,fp,4
    e318:	18c00003 	ldbu	r3,0(r3)
    e31c:	4812d13a 	srli	r9,r9,4
    e320:	2738b03a 	or	fp,r4,fp
    e324:	10c00005 	stb	r3,0(r2)
    e328:	e246b03a 	or	r3,fp,r9
    e32c:	1021883a 	mov	r16,r2
    e330:	10bfffc4 	addi	r2,r2,-1
    e334:	183ff41e 	bne	r3,zero,e308 <__alt_data_end+0xfe00e308>
    e338:	da801e17 	ldw	r10,120(sp)
    e33c:	5415c83a 	sub	r10,r10,r16
    e340:	da802015 	stw	r10,128(sp)
    e344:	003e3806 	br	dc28 <__alt_data_end+0xfe00dc28>
    e348:	d8801c17 	ldw	r2,112(sp)
    e34c:	10000426 	beq	r2,zero,e360 <___svfiprintf_internal_r+0xa50>
    e350:	d9002917 	ldw	r4,164(sp)
    e354:	d9402717 	ldw	r5,156(sp)
    e358:	d9801a04 	addi	r6,sp,104
    e35c:	000d7440 	call	d744 <__ssprint_r>
    e360:	da802717 	ldw	r10,156(sp)
    e364:	5080030b 	ldhu	r2,12(r10)
    e368:	1080100c 	andi	r2,r2,64
    e36c:	10006126 	beq	r2,zero,e4f4 <___svfiprintf_internal_r+0xbe4>
    e370:	00bfffc4 	movi	r2,-1
    e374:	dfc03617 	ldw	ra,216(sp)
    e378:	df003517 	ldw	fp,212(sp)
    e37c:	ddc03417 	ldw	r23,208(sp)
    e380:	dd803317 	ldw	r22,204(sp)
    e384:	dd403217 	ldw	r21,200(sp)
    e388:	dd003117 	ldw	r20,196(sp)
    e38c:	dcc03017 	ldw	r19,192(sp)
    e390:	dc802f17 	ldw	r18,188(sp)
    e394:	dc402e17 	ldw	r17,184(sp)
    e398:	dc002d17 	ldw	r16,180(sp)
    e39c:	dec03704 	addi	sp,sp,220
    e3a0:	f800283a 	ret
    e3a4:	da802217 	ldw	r10,136(sp)
    e3a8:	d9002117 	ldw	r4,132(sp)
    e3ac:	512fc83a 	sub	r23,r10,r4
    e3b0:	05ff610e 	bge	zero,r23,e138 <__alt_data_end+0xfe00e138>
    e3b4:	02800074 	movhi	r10,1
    e3b8:	5294b604 	addi	r10,r10,21208
    e3bc:	02400404 	movi	r9,16
    e3c0:	da802315 	stw	r10,140(sp)
    e3c4:	4dc0180e 	bge	r9,r23,e428 <___svfiprintf_internal_r+0xb18>
    e3c8:	070001c4 	movi	fp,7
    e3cc:	00000306 	br	e3dc <___svfiprintf_internal_r+0xacc>
    e3d0:	bdfffc04 	addi	r23,r23,-16
    e3d4:	42000204 	addi	r8,r8,8
    e3d8:	4dc0130e 	bge	r9,r23,e428 <___svfiprintf_internal_r+0xb18>
    e3dc:	18c00404 	addi	r3,r3,16
    e3e0:	10800044 	addi	r2,r2,1
    e3e4:	45000015 	stw	r20,0(r8)
    e3e8:	42400115 	stw	r9,4(r8)
    e3ec:	d8c01c15 	stw	r3,112(sp)
    e3f0:	d8801b15 	stw	r2,108(sp)
    e3f4:	e0bff60e 	bge	fp,r2,e3d0 <__alt_data_end+0xfe00e3d0>
    e3f8:	9009883a 	mov	r4,r18
    e3fc:	b00b883a 	mov	r5,r22
    e400:	d9801a04 	addi	r6,sp,104
    e404:	da402c15 	stw	r9,176(sp)
    e408:	000d7440 	call	d744 <__ssprint_r>
    e40c:	da402c17 	ldw	r9,176(sp)
    e410:	103fd31e 	bne	r2,zero,e360 <__alt_data_end+0xfe00e360>
    e414:	bdfffc04 	addi	r23,r23,-16
    e418:	d8c01c17 	ldw	r3,112(sp)
    e41c:	d8801b17 	ldw	r2,108(sp)
    e420:	d811883a 	mov	r8,sp
    e424:	4dffed16 	blt	r9,r23,e3dc <__alt_data_end+0xfe00e3dc>
    e428:	da802317 	ldw	r10,140(sp)
    e42c:	1dc7883a 	add	r3,r3,r23
    e430:	10800044 	addi	r2,r2,1
    e434:	42800015 	stw	r10,0(r8)
    e438:	45c00115 	stw	r23,4(r8)
    e43c:	d8c01c15 	stw	r3,112(sp)
    e440:	d8801b15 	stw	r2,108(sp)
    e444:	010001c4 	movi	r4,7
    e448:	2080dd16 	blt	r4,r2,e7c0 <___svfiprintf_internal_r+0xeb0>
    e44c:	42000204 	addi	r8,r8,8
    e450:	003f3906 	br	e138 <__alt_data_end+0xfe00e138>
    e454:	9009883a 	mov	r4,r18
    e458:	b00b883a 	mov	r5,r22
    e45c:	d9801a04 	addi	r6,sp,104
    e460:	000d7440 	call	d744 <__ssprint_r>
    e464:	103fbe1e 	bne	r2,zero,e360 <__alt_data_end+0xfe00e360>
    e468:	d8c01c17 	ldw	r3,112(sp)
    e46c:	d811883a 	mov	r8,sp
    e470:	003f6406 	br	e204 <__alt_data_end+0xfe00e204>
    e474:	9009883a 	mov	r4,r18
    e478:	b00b883a 	mov	r5,r22
    e47c:	d9801a04 	addi	r6,sp,104
    e480:	000d7440 	call	d744 <__ssprint_r>
    e484:	103f9426 	beq	r2,zero,e2d8 <__alt_data_end+0xfe00e2d8>
    e488:	003fb506 	br	e360 <__alt_data_end+0xfe00e360>
    e48c:	d8c019c4 	addi	r3,sp,103
    e490:	e008d0fa 	srli	r4,fp,3
    e494:	480a977a 	slli	r5,r9,29
    e498:	4812d0fa 	srli	r9,r9,3
    e49c:	e70001cc 	andi	fp,fp,7
    e4a0:	e0800c04 	addi	r2,fp,48
    e4a4:	2938b03a 	or	fp,r5,r4
    e4a8:	18800005 	stb	r2,0(r3)
    e4ac:	e248b03a 	or	r4,fp,r9
    e4b0:	1821883a 	mov	r16,r3
    e4b4:	18ffffc4 	addi	r3,r3,-1
    e4b8:	203ff51e 	bne	r4,zero,e490 <__alt_data_end+0xfe00e490>
    e4bc:	8900004c 	andi	r4,r17,1
    e4c0:	800b883a 	mov	r5,r16
    e4c4:	20000726 	beq	r4,zero,e4e4 <___svfiprintf_internal_r+0xbd4>
    e4c8:	10803fcc 	andi	r2,r2,255
    e4cc:	1080201c 	xori	r2,r2,128
    e4d0:	10bfe004 	addi	r2,r2,-128
    e4d4:	01000c04 	movi	r4,48
    e4d8:	113f9726 	beq	r2,r4,e338 <__alt_data_end+0xfe00e338>
    e4dc:	1821883a 	mov	r16,r3
    e4e0:	293fffc5 	stb	r4,-1(r5)
    e4e4:	d8c01e17 	ldw	r3,120(sp)
    e4e8:	1c07c83a 	sub	r3,r3,r16
    e4ec:	d8c02015 	stw	r3,128(sp)
    e4f0:	003dcd06 	br	dc28 <__alt_data_end+0xfe00dc28>
    e4f4:	d8802517 	ldw	r2,148(sp)
    e4f8:	003f9e06 	br	e374 <__alt_data_end+0xfe00e374>
    e4fc:	9009883a 	mov	r4,r18
    e500:	b00b883a 	mov	r5,r22
    e504:	d9801a04 	addi	r6,sp,104
    e508:	000d7440 	call	d744 <__ssprint_r>
    e50c:	103f941e 	bne	r2,zero,e360 <__alt_data_end+0xfe00e360>
    e510:	d811883a 	mov	r8,sp
    e514:	003d3a06 	br	da00 <__alt_data_end+0xfe00da00>
    e518:	9009883a 	mov	r4,r18
    e51c:	b00b883a 	mov	r5,r22
    e520:	d9801a04 	addi	r6,sp,104
    e524:	000d7440 	call	d744 <__ssprint_r>
    e528:	103f8d1e 	bne	r2,zero,e360 <__alt_data_end+0xfe00e360>
    e52c:	d8c01c17 	ldw	r3,112(sp)
    e530:	d8801b17 	ldw	r2,108(sp)
    e534:	d811883a 	mov	r8,sp
    e538:	003f2806 	br	e1dc <__alt_data_end+0xfe00e1dc>
    e53c:	48005026 	beq	r9,zero,e680 <___svfiprintf_internal_r+0xd70>
    e540:	dc402015 	stw	r17,128(sp)
    e544:	dc802115 	stw	r18,132(sp)
    e548:	e023883a 	mov	r17,fp
    e54c:	d88019c4 	addi	r2,sp,103
    e550:	4039883a 	mov	fp,r8
    e554:	4825883a 	mov	r18,r9
    e558:	8809883a 	mov	r4,r17
    e55c:	900b883a 	mov	r5,r18
    e560:	01800284 	movi	r6,10
    e564:	000f883a 	mov	r7,zero
    e568:	1021883a 	mov	r16,r2
    e56c:	000f1140 	call	f114 <__umoddi3>
    e570:	10800c04 	addi	r2,r2,48
    e574:	8809883a 	mov	r4,r17
    e578:	900b883a 	mov	r5,r18
    e57c:	80800005 	stb	r2,0(r16)
    e580:	01800284 	movi	r6,10
    e584:	000f883a 	mov	r7,zero
    e588:	000eb500 	call	eb50 <__udivdi3>
    e58c:	1825883a 	mov	r18,r3
    e590:	10c6b03a 	or	r3,r2,r3
    e594:	1023883a 	mov	r17,r2
    e598:	80bfffc4 	addi	r2,r16,-1
    e59c:	183fee1e 	bne	r3,zero,e558 <__alt_data_end+0xfe00e558>
    e5a0:	d8c01e17 	ldw	r3,120(sp)
    e5a4:	dc402017 	ldw	r17,128(sp)
    e5a8:	e011883a 	mov	r8,fp
    e5ac:	1c07c83a 	sub	r3,r3,r16
    e5b0:	dc802117 	ldw	r18,132(sp)
    e5b4:	d8c02015 	stw	r3,128(sp)
    e5b8:	003d9b06 	br	dc28 <__alt_data_end+0xfe00dc28>
    e5bc:	9009883a 	mov	r4,r18
    e5c0:	b00b883a 	mov	r5,r22
    e5c4:	d9801a04 	addi	r6,sp,104
    e5c8:	000d7440 	call	d744 <__ssprint_r>
    e5cc:	103f641e 	bne	r2,zero,e360 <__alt_data_end+0xfe00e360>
    e5d0:	d8c01c17 	ldw	r3,112(sp)
    e5d4:	d8801b17 	ldw	r2,108(sp)
    e5d8:	d811883a 	mov	r8,sp
    e5dc:	003ec606 	br	e0f8 <__alt_data_end+0xfe00e0f8>
    e5e0:	9009883a 	mov	r4,r18
    e5e4:	b00b883a 	mov	r5,r22
    e5e8:	d9801a04 	addi	r6,sp,104
    e5ec:	000d7440 	call	d744 <__ssprint_r>
    e5f0:	103f5b1e 	bne	r2,zero,e360 <__alt_data_end+0xfe00e360>
    e5f4:	d8c01c17 	ldw	r3,112(sp)
    e5f8:	d8801b17 	ldw	r2,108(sp)
    e5fc:	d811883a 	mov	r8,sp
    e600:	003eca06 	br	e12c <__alt_data_end+0xfe00e12c>
    e604:	9009883a 	mov	r4,r18
    e608:	b00b883a 	mov	r5,r22
    e60c:	d9801a04 	addi	r6,sp,104
    e610:	000d7440 	call	d744 <__ssprint_r>
    e614:	103f521e 	bne	r2,zero,e360 <__alt_data_end+0xfe00e360>
    e618:	d8c01c17 	ldw	r3,112(sp)
    e61c:	d8801b17 	ldw	r2,108(sp)
    e620:	d811883a 	mov	r8,sp
    e624:	003ea706 	br	e0c4 <__alt_data_end+0xfe00e0c4>
    e628:	8880040c 	andi	r2,r17,16
    e62c:	1000341e 	bne	r2,zero,e700 <___svfiprintf_internal_r+0xdf0>
    e630:	8880100c 	andi	r2,r17,64
    e634:	da802417 	ldw	r10,144(sp)
    e638:	10003226 	beq	r2,zero,e704 <___svfiprintf_internal_r+0xdf4>
    e63c:	5700000b 	ldhu	fp,0(r10)
    e640:	00003106 	br	e708 <___svfiprintf_internal_r+0xdf8>
    e644:	8880040c 	andi	r2,r17,16
    e648:	1000441e 	bne	r2,zero,e75c <___svfiprintf_internal_r+0xe4c>
    e64c:	8880100c 	andi	r2,r17,64
    e650:	da802417 	ldw	r10,144(sp)
    e654:	10004226 	beq	r2,zero,e760 <___svfiprintf_internal_r+0xe50>
    e658:	5700000b 	ldhu	fp,0(r10)
    e65c:	52800104 	addi	r10,r10,4
    e660:	0013883a 	mov	r9,zero
    e664:	da802415 	stw	r10,144(sp)
    e668:	0005883a 	mov	r2,zero
    e66c:	e009883a 	mov	r4,fp
    e670:	003d6006 	br	dbf4 <__alt_data_end+0xfe00dbf4>
    e674:	00800084 	movi	r2,2
    e678:	e248b03a 	or	r4,fp,r9
    e67c:	003d5d06 	br	dbf4 <__alt_data_end+0xfe00dbf4>
    e680:	00800244 	movi	r2,9
    e684:	173fae36 	bltu	r2,fp,e540 <__alt_data_end+0xfe00e540>
    e688:	da802b17 	ldw	r10,172(sp)
    e68c:	e7000c04 	addi	fp,fp,48
    e690:	df0019c5 	stb	fp,103(sp)
    e694:	da802015 	stw	r10,128(sp)
    e698:	dc0019c4 	addi	r16,sp,103
    e69c:	003d6206 	br	dc28 <__alt_data_end+0xfe00dc28>
    e6a0:	d8802415 	stw	r2,144(sp)
    e6a4:	98c00007 	ldb	r3,0(r19)
    e6a8:	003ce506 	br	da40 <__alt_data_end+0xfe00da40>
    e6ac:	9009883a 	mov	r4,r18
    e6b0:	b00b883a 	mov	r5,r22
    e6b4:	d9801a04 	addi	r6,sp,104
    e6b8:	000d7440 	call	d744 <__ssprint_r>
    e6bc:	103f281e 	bne	r2,zero,e360 <__alt_data_end+0xfe00e360>
    e6c0:	d8c01c17 	ldw	r3,112(sp)
    e6c4:	003efc06 	br	e2b8 <__alt_data_end+0xfe00e2b8>
    e6c8:	da802b17 	ldw	r10,172(sp)
    e6cc:	00800c04 	movi	r2,48
    e6d0:	d88019c5 	stb	r2,103(sp)
    e6d4:	da802015 	stw	r10,128(sp)
    e6d8:	dc0019c4 	addi	r16,sp,103
    e6dc:	003d5206 	br	dc28 <__alt_data_end+0xfe00dc28>
    e6e0:	00800c04 	movi	r2,48
    e6e4:	d8801d05 	stb	r2,116(sp)
    e6e8:	d8c01d45 	stb	r3,117(sp)
    e6ec:	8c400094 	ori	r17,r17,2
    e6f0:	00800084 	movi	r2,2
    e6f4:	003d3f06 	br	dbf4 <__alt_data_end+0xfe00dbf4>
    e6f8:	98c00007 	ldb	r3,0(r19)
    e6fc:	003cd006 	br	da40 <__alt_data_end+0xfe00da40>
    e700:	da802417 	ldw	r10,144(sp)
    e704:	57000017 	ldw	fp,0(r10)
    e708:	52800104 	addi	r10,r10,4
    e70c:	0013883a 	mov	r9,zero
    e710:	da802415 	stw	r10,144(sp)
    e714:	00800044 	movi	r2,1
    e718:	e009883a 	mov	r4,fp
    e71c:	003d3506 	br	dbf4 <__alt_data_end+0xfe00dbf4>
    e720:	8880100c 	andi	r2,r17,64
    e724:	da802417 	ldw	r10,144(sp)
    e728:	103e2726 	beq	r2,zero,dfc8 <__alt_data_end+0xfe00dfc8>
    e72c:	5700000f 	ldh	fp,0(r10)
    e730:	52800104 	addi	r10,r10,4
    e734:	da802415 	stw	r10,144(sp)
    e738:	e013d7fa 	srai	r9,fp,31
    e73c:	4805883a 	mov	r2,r9
    e740:	003d9d06 	br	ddb8 <__alt_data_end+0xfe00ddb8>
    e744:	da802417 	ldw	r10,144(sp)
    e748:	0013883a 	mov	r9,zero
    e74c:	57000017 	ldw	fp,0(r10)
    e750:	52800104 	addi	r10,r10,4
    e754:	da802415 	stw	r10,144(sp)
    e758:	003dec06 	br	df0c <__alt_data_end+0xfe00df0c>
    e75c:	da802417 	ldw	r10,144(sp)
    e760:	57000017 	ldw	fp,0(r10)
    e764:	003fbd06 	br	e65c <__alt_data_end+0xfe00e65c>
    e768:	da802417 	ldw	r10,144(sp)
    e76c:	50800017 	ldw	r2,0(r10)
    e770:	da802517 	ldw	r10,148(sp)
    e774:	5007d7fa 	srai	r3,r10,31
    e778:	da802417 	ldw	r10,144(sp)
    e77c:	10c00115 	stw	r3,4(r2)
    e780:	52800104 	addi	r10,r10,4
    e784:	da802415 	stw	r10,144(sp)
    e788:	da802517 	ldw	r10,148(sp)
    e78c:	12800015 	stw	r10,0(r2)
    e790:	003c8406 	br	d9a4 <__alt_data_end+0xfe00d9a4>
    e794:	9cc00044 	addi	r19,r19,1
    e798:	8c400814 	ori	r17,r17,32
    e79c:	10c00047 	ldb	r3,1(r2)
    e7a0:	003ca706 	br	da40 <__alt_data_end+0xfe00da40>
    e7a4:	da802417 	ldw	r10,144(sp)
    e7a8:	50800017 	ldw	r2,0(r10)
    e7ac:	52800104 	addi	r10,r10,4
    e7b0:	da802415 	stw	r10,144(sp)
    e7b4:	da802517 	ldw	r10,148(sp)
    e7b8:	12800015 	stw	r10,0(r2)
    e7bc:	003c7906 	br	d9a4 <__alt_data_end+0xfe00d9a4>
    e7c0:	9009883a 	mov	r4,r18
    e7c4:	b00b883a 	mov	r5,r22
    e7c8:	d9801a04 	addi	r6,sp,104
    e7cc:	000d7440 	call	d744 <__ssprint_r>
    e7d0:	103ee31e 	bne	r2,zero,e360 <__alt_data_end+0xfe00e360>
    e7d4:	d8c01c17 	ldw	r3,112(sp)
    e7d8:	d8801b17 	ldw	r2,108(sp)
    e7dc:	d811883a 	mov	r8,sp
    e7e0:	003e5506 	br	e138 <__alt_data_end+0xfe00e138>
    e7e4:	57000017 	ldw	fp,0(r10)
    e7e8:	52800104 	addi	r10,r10,4
    e7ec:	0013883a 	mov	r9,zero
    e7f0:	da802415 	stw	r10,144(sp)
    e7f4:	003dc506 	br	df0c <__alt_data_end+0xfe00df0c>
    e7f8:	da002c15 	stw	r8,176(sp)
    e7fc:	00012640 	call	1264 <strlen>
    e800:	d8802015 	stw	r2,128(sp)
    e804:	ddc01d83 	ldbu	r23,118(sp)
    e808:	df002415 	stw	fp,144(sp)
    e80c:	002b883a 	mov	r21,zero
    e810:	da002c17 	ldw	r8,176(sp)
    e814:	003d0406 	br	dc28 <__alt_data_end+0xfe00dc28>
    e818:	00800184 	movi	r2,6
    e81c:	1540012e 	bgeu	r2,r21,e824 <___svfiprintf_internal_r+0xf14>
    e820:	102b883a 	mov	r21,r2
    e824:	dd402015 	stw	r21,128(sp)
    e828:	a805883a 	mov	r2,r21
    e82c:	a8001416 	blt	r21,zero,e880 <___svfiprintf_internal_r+0xf70>
    e830:	d8802115 	stw	r2,132(sp)
    e834:	df002415 	stw	fp,144(sp)
    e838:	04000074 	movhi	r16,1
    e83c:	84145704 	addi	r16,r16,20828
    e840:	003d6d06 	br	ddf8 <__alt_data_end+0xfe00ddf8>
    e844:	04001004 	movi	r16,64
    e848:	800b883a 	mov	r5,r16
    e84c:	0003cdc0 	call	3cdc <_malloc_r>
    e850:	da802717 	ldw	r10,156(sp)
    e854:	50800015 	stw	r2,0(r10)
    e858:	50800415 	stw	r2,16(r10)
    e85c:	10001526 	beq	r2,zero,e8b4 <___svfiprintf_internal_r+0xfa4>
    e860:	da802717 	ldw	r10,156(sp)
    e864:	54000515 	stw	r16,20(r10)
    e868:	003c3d06 	br	d960 <__alt_data_end+0xfe00d960>
    e86c:	dd402015 	stw	r21,128(sp)
    e870:	ddc01d83 	ldbu	r23,118(sp)
    e874:	df002415 	stw	fp,144(sp)
    e878:	002b883a 	mov	r21,zero
    e87c:	003cea06 	br	dc28 <__alt_data_end+0xfe00dc28>
    e880:	0005883a 	mov	r2,zero
    e884:	003fea06 	br	e830 <__alt_data_end+0xfe00e830>
    e888:	d8802417 	ldw	r2,144(sp)
    e88c:	98c00043 	ldbu	r3,1(r19)
    e890:	5027883a 	mov	r19,r10
    e894:	15400017 	ldw	r21,0(r2)
    e898:	10800104 	addi	r2,r2,4
    e89c:	d8802415 	stw	r2,144(sp)
    e8a0:	a8000916 	blt	r21,zero,e8c8 <___svfiprintf_internal_r+0xfb8>
    e8a4:	18c03fcc 	andi	r3,r3,255
    e8a8:	18c0201c 	xori	r3,r3,128
    e8ac:	18ffe004 	addi	r3,r3,-128
    e8b0:	003c6306 	br	da40 <__alt_data_end+0xfe00da40>
    e8b4:	da802917 	ldw	r10,164(sp)
    e8b8:	00800304 	movi	r2,12
    e8bc:	50800015 	stw	r2,0(r10)
    e8c0:	00bfffc4 	movi	r2,-1
    e8c4:	003eab06 	br	e374 <__alt_data_end+0xfe00e374>
    e8c8:	18c03fcc 	andi	r3,r3,255
    e8cc:	18c0201c 	xori	r3,r3,128
    e8d0:	057fffc4 	movi	r21,-1
    e8d4:	18ffe004 	addi	r3,r3,-128
    e8d8:	003c5906 	br	da40 <__alt_data_end+0xfe00da40>

0000e8dc <_calloc_r>:
    e8dc:	298b383a 	mul	r5,r5,r6
    e8e0:	defffe04 	addi	sp,sp,-8
    e8e4:	dc000015 	stw	r16,0(sp)
    e8e8:	dfc00115 	stw	ra,4(sp)
    e8ec:	0003cdc0 	call	3cdc <_malloc_r>
    e8f0:	1021883a 	mov	r16,r2
    e8f4:	10002826 	beq	r2,zero,e998 <_calloc_r+0xbc>
    e8f8:	11bfff17 	ldw	r6,-4(r2)
    e8fc:	00ffff04 	movi	r3,-4
    e900:	00800904 	movi	r2,36
    e904:	30cc703a 	and	r6,r6,r3
    e908:	30cd883a 	add	r6,r6,r3
    e90c:	11801436 	bltu	r2,r6,e960 <_calloc_r+0x84>
    e910:	00c004c4 	movi	r3,19
    e914:	19800936 	bltu	r3,r6,e93c <_calloc_r+0x60>
    e918:	8005883a 	mov	r2,r16
    e91c:	10000015 	stw	zero,0(r2)
    e920:	10000115 	stw	zero,4(r2)
    e924:	10000215 	stw	zero,8(r2)
    e928:	8005883a 	mov	r2,r16
    e92c:	dfc00117 	ldw	ra,4(sp)
    e930:	dc000017 	ldw	r16,0(sp)
    e934:	dec00204 	addi	sp,sp,8
    e938:	f800283a 	ret
    e93c:	80000015 	stw	zero,0(r16)
    e940:	80000115 	stw	zero,4(r16)
    e944:	00c006c4 	movi	r3,27
    e948:	19800d2e 	bgeu	r3,r6,e980 <_calloc_r+0xa4>
    e94c:	80000215 	stw	zero,8(r16)
    e950:	80000315 	stw	zero,12(r16)
    e954:	30800c26 	beq	r6,r2,e988 <_calloc_r+0xac>
    e958:	80800404 	addi	r2,r16,16
    e95c:	003fef06 	br	e91c <__alt_data_end+0xfe00e91c>
    e960:	8009883a 	mov	r4,r16
    e964:	000b883a 	mov	r5,zero
    e968:	0004a0c0 	call	4a0c <memset>
    e96c:	8005883a 	mov	r2,r16
    e970:	dfc00117 	ldw	ra,4(sp)
    e974:	dc000017 	ldw	r16,0(sp)
    e978:	dec00204 	addi	sp,sp,8
    e97c:	f800283a 	ret
    e980:	80800204 	addi	r2,r16,8
    e984:	003fe506 	br	e91c <__alt_data_end+0xfe00e91c>
    e988:	80000415 	stw	zero,16(r16)
    e98c:	80800604 	addi	r2,r16,24
    e990:	80000515 	stw	zero,20(r16)
    e994:	003fe106 	br	e91c <__alt_data_end+0xfe00e91c>
    e998:	0005883a 	mov	r2,zero
    e99c:	003fe306 	br	e92c <__alt_data_end+0xfe00e92c>

0000e9a0 <_fstat_r>:
    e9a0:	defffd04 	addi	sp,sp,-12
    e9a4:	dc400115 	stw	r17,4(sp)
    e9a8:	dc000015 	stw	r16,0(sp)
    e9ac:	2023883a 	mov	r17,r4
    e9b0:	040000b4 	movhi	r16,2
    e9b4:	8422d804 	addi	r16,r16,-29856
    e9b8:	2809883a 	mov	r4,r5
    e9bc:	300b883a 	mov	r5,r6
    e9c0:	dfc00215 	stw	ra,8(sp)
    e9c4:	80000015 	stw	zero,0(r16)
    e9c8:	00122b00 	call	122b0 <fstat>
    e9cc:	00ffffc4 	movi	r3,-1
    e9d0:	10c00526 	beq	r2,r3,e9e8 <_fstat_r+0x48>
    e9d4:	dfc00217 	ldw	ra,8(sp)
    e9d8:	dc400117 	ldw	r17,4(sp)
    e9dc:	dc000017 	ldw	r16,0(sp)
    e9e0:	dec00304 	addi	sp,sp,12
    e9e4:	f800283a 	ret
    e9e8:	80c00017 	ldw	r3,0(r16)
    e9ec:	183ff926 	beq	r3,zero,e9d4 <__alt_data_end+0xfe00e9d4>
    e9f0:	88c00015 	stw	r3,0(r17)
    e9f4:	dfc00217 	ldw	ra,8(sp)
    e9f8:	dc400117 	ldw	r17,4(sp)
    e9fc:	dc000017 	ldw	r16,0(sp)
    ea00:	dec00304 	addi	sp,sp,12
    ea04:	f800283a 	ret

0000ea08 <_isatty_r>:
    ea08:	defffd04 	addi	sp,sp,-12
    ea0c:	dc400115 	stw	r17,4(sp)
    ea10:	dc000015 	stw	r16,0(sp)
    ea14:	2023883a 	mov	r17,r4
    ea18:	040000b4 	movhi	r16,2
    ea1c:	8422d804 	addi	r16,r16,-29856
    ea20:	2809883a 	mov	r4,r5
    ea24:	dfc00215 	stw	ra,8(sp)
    ea28:	80000015 	stw	zero,0(r16)
    ea2c:	00123ac0 	call	123ac <isatty>
    ea30:	00ffffc4 	movi	r3,-1
    ea34:	10c00526 	beq	r2,r3,ea4c <_isatty_r+0x44>
    ea38:	dfc00217 	ldw	ra,8(sp)
    ea3c:	dc400117 	ldw	r17,4(sp)
    ea40:	dc000017 	ldw	r16,0(sp)
    ea44:	dec00304 	addi	sp,sp,12
    ea48:	f800283a 	ret
    ea4c:	80c00017 	ldw	r3,0(r16)
    ea50:	183ff926 	beq	r3,zero,ea38 <__alt_data_end+0xfe00ea38>
    ea54:	88c00015 	stw	r3,0(r17)
    ea58:	dfc00217 	ldw	ra,8(sp)
    ea5c:	dc400117 	ldw	r17,4(sp)
    ea60:	dc000017 	ldw	r16,0(sp)
    ea64:	dec00304 	addi	sp,sp,12
    ea68:	f800283a 	ret

0000ea6c <__muldi3>:
    ea6c:	20bfffcc 	andi	r2,r4,65535
    ea70:	2010d43a 	srli	r8,r4,16
    ea74:	30ffffcc 	andi	r3,r6,65535
    ea78:	3014d43a 	srli	r10,r6,16
    ea7c:	1893383a 	mul	r9,r3,r2
    ea80:	1a07383a 	mul	r3,r3,r8
    ea84:	5085383a 	mul	r2,r10,r2
    ea88:	4816d43a 	srli	r11,r9,16
    ea8c:	5211383a 	mul	r8,r10,r8
    ea90:	1885883a 	add	r2,r3,r2
    ea94:	12c5883a 	add	r2,r2,r11
    ea98:	10c0022e 	bgeu	r2,r3,eaa4 <__muldi3+0x38>
    ea9c:	00c00074 	movhi	r3,1
    eaa0:	40d1883a 	add	r8,r8,r3
    eaa4:	1014d43a 	srli	r10,r2,16
    eaa8:	21c9383a 	mul	r4,r4,r7
    eaac:	314d383a 	mul	r6,r6,r5
    eab0:	1004943a 	slli	r2,r2,16
    eab4:	4291883a 	add	r8,r8,r10
    eab8:	4a7fffcc 	andi	r9,r9,65535
    eabc:	2187883a 	add	r3,r4,r6
    eac0:	1245883a 	add	r2,r2,r9
    eac4:	1a07883a 	add	r3,r3,r8
    eac8:	f800283a 	ret

0000eacc <__fixunsdfsi>:
    eacc:	defffd04 	addi	sp,sp,-12
    ead0:	000d883a 	mov	r6,zero
    ead4:	01d07834 	movhi	r7,16864
    ead8:	dc400115 	stw	r17,4(sp)
    eadc:	dc000015 	stw	r16,0(sp)
    eae0:	dfc00215 	stw	ra,8(sp)
    eae4:	2023883a 	mov	r17,r4
    eae8:	2821883a 	mov	r16,r5
    eaec:	0010b8c0 	call	10b8c <__gedf2>
    eaf0:	1000080e 	bge	r2,zero,eb14 <__fixunsdfsi+0x48>
    eaf4:	8809883a 	mov	r4,r17
    eaf8:	800b883a 	mov	r5,r16
    eafc:	0011cc40 	call	11cc4 <__fixdfsi>
    eb00:	dfc00217 	ldw	ra,8(sp)
    eb04:	dc400117 	ldw	r17,4(sp)
    eb08:	dc000017 	ldw	r16,0(sp)
    eb0c:	dec00304 	addi	sp,sp,12
    eb10:	f800283a 	ret
    eb14:	000d883a 	mov	r6,zero
    eb18:	01d07834 	movhi	r7,16864
    eb1c:	8809883a 	mov	r4,r17
    eb20:	800b883a 	mov	r5,r16
    eb24:	001143c0 	call	1143c <__subdf3>
    eb28:	180b883a 	mov	r5,r3
    eb2c:	1009883a 	mov	r4,r2
    eb30:	0011cc40 	call	11cc4 <__fixdfsi>
    eb34:	00e00034 	movhi	r3,32768
    eb38:	10c5883a 	add	r2,r2,r3
    eb3c:	dfc00217 	ldw	ra,8(sp)
    eb40:	dc400117 	ldw	r17,4(sp)
    eb44:	dc000017 	ldw	r16,0(sp)
    eb48:	dec00304 	addi	sp,sp,12
    eb4c:	f800283a 	ret

0000eb50 <__udivdi3>:
    eb50:	defff504 	addi	sp,sp,-44
    eb54:	dc800315 	stw	r18,12(sp)
    eb58:	dc400215 	stw	r17,8(sp)
    eb5c:	dfc00a15 	stw	ra,40(sp)
    eb60:	df000915 	stw	fp,36(sp)
    eb64:	ddc00815 	stw	r23,32(sp)
    eb68:	dd800715 	stw	r22,28(sp)
    eb6c:	dd400615 	stw	r21,24(sp)
    eb70:	dd000515 	stw	r20,20(sp)
    eb74:	dcc00415 	stw	r19,16(sp)
    eb78:	dc000115 	stw	r16,4(sp)
    eb7c:	2025883a 	mov	r18,r4
    eb80:	2823883a 	mov	r17,r5
    eb84:	3800421e 	bne	r7,zero,ec90 <__udivdi3+0x140>
    eb88:	3021883a 	mov	r16,r6
    eb8c:	2027883a 	mov	r19,r4
    eb90:	2980542e 	bgeu	r5,r6,ece4 <__udivdi3+0x194>
    eb94:	00bfffd4 	movui	r2,65535
    eb98:	2829883a 	mov	r20,r5
    eb9c:	1180a836 	bltu	r2,r6,ee40 <__udivdi3+0x2f0>
    eba0:	00803fc4 	movi	r2,255
    eba4:	11814336 	bltu	r2,r6,f0b4 <__udivdi3+0x564>
    eba8:	0005883a 	mov	r2,zero
    ebac:	0007883a 	mov	r3,zero
    ebb0:	3084d83a 	srl	r2,r6,r2
    ebb4:	01000074 	movhi	r4,1
    ebb8:	2114be04 	addi	r4,r4,21240
    ebbc:	2085883a 	add	r2,r4,r2
    ebc0:	10800003 	ldbu	r2,0(r2)
    ebc4:	10c7883a 	add	r3,r2,r3
    ebc8:	00800804 	movi	r2,32
    ebcc:	10c5c83a 	sub	r2,r2,r3
    ebd0:	10000526 	beq	r2,zero,ebe8 <__udivdi3+0x98>
    ebd4:	88a2983a 	sll	r17,r17,r2
    ebd8:	90c6d83a 	srl	r3,r18,r3
    ebdc:	30a0983a 	sll	r16,r6,r2
    ebe0:	90a6983a 	sll	r19,r18,r2
    ebe4:	88e8b03a 	or	r20,r17,r3
    ebe8:	8022d43a 	srli	r17,r16,16
    ebec:	a009883a 	mov	r4,r20
    ebf0:	857fffcc 	andi	r21,r16,65535
    ebf4:	880b883a 	mov	r5,r17
    ebf8:	000f7b80 	call	f7b8 <__umodsi3>
    ebfc:	a009883a 	mov	r4,r20
    ec00:	880b883a 	mov	r5,r17
    ec04:	102d883a 	mov	r22,r2
    ec08:	000f7b00 	call	f7b0 <__udivsi3>
    ec0c:	b02c943a 	slli	r22,r22,16
    ec10:	9806d43a 	srli	r3,r19,16
    ec14:	1549383a 	mul	r4,r2,r21
    ec18:	1025883a 	mov	r18,r2
    ec1c:	b0c6b03a 	or	r3,r22,r3
    ec20:	1900052e 	bgeu	r3,r4,ec38 <__udivdi3+0xe8>
    ec24:	1c07883a 	add	r3,r3,r16
    ec28:	10bfffc4 	addi	r2,r2,-1
    ec2c:	1c000136 	bltu	r3,r16,ec34 <__udivdi3+0xe4>
    ec30:	19013536 	bltu	r3,r4,f108 <__udivdi3+0x5b8>
    ec34:	1025883a 	mov	r18,r2
    ec38:	1929c83a 	sub	r20,r3,r4
    ec3c:	a009883a 	mov	r4,r20
    ec40:	880b883a 	mov	r5,r17
    ec44:	000f7b80 	call	f7b8 <__umodsi3>
    ec48:	102d883a 	mov	r22,r2
    ec4c:	a009883a 	mov	r4,r20
    ec50:	880b883a 	mov	r5,r17
    ec54:	000f7b00 	call	f7b0 <__udivsi3>
    ec58:	b02c943a 	slli	r22,r22,16
    ec5c:	156b383a 	mul	r21,r2,r21
    ec60:	9cffffcc 	andi	r19,r19,65535
    ec64:	b4e6b03a 	or	r19,r22,r19
    ec68:	9d40052e 	bgeu	r19,r21,ec80 <__udivdi3+0x130>
    ec6c:	9c27883a 	add	r19,r19,r16
    ec70:	10ffffc4 	addi	r3,r2,-1
    ec74:	9c00f636 	bltu	r19,r16,f050 <__udivdi3+0x500>
    ec78:	9d40f52e 	bgeu	r19,r21,f050 <__udivdi3+0x500>
    ec7c:	10bfff84 	addi	r2,r2,-2
    ec80:	9024943a 	slli	r18,r18,16
    ec84:	0007883a 	mov	r3,zero
    ec88:	1484b03a 	or	r2,r2,r18
    ec8c:	00005b06 	br	edfc <__udivdi3+0x2ac>
    ec90:	29c05836 	bltu	r5,r7,edf4 <__udivdi3+0x2a4>
    ec94:	00bfffd4 	movui	r2,65535
    ec98:	11c0642e 	bgeu	r2,r7,ee2c <__udivdi3+0x2dc>
    ec9c:	00804034 	movhi	r2,256
    eca0:	10bfffc4 	addi	r2,r2,-1
    eca4:	11c0f436 	bltu	r2,r7,f078 <__udivdi3+0x528>
    eca8:	00c00404 	movi	r3,16
    ecac:	180b883a 	mov	r5,r3
    ecb0:	38c6d83a 	srl	r3,r7,r3
    ecb4:	01000074 	movhi	r4,1
    ecb8:	2114be04 	addi	r4,r4,21240
    ecbc:	04000804 	movi	r16,32
    ecc0:	20c7883a 	add	r3,r4,r3
    ecc4:	18800003 	ldbu	r2,0(r3)
    ecc8:	1145883a 	add	r2,r2,r5
    eccc:	80a1c83a 	sub	r16,r16,r2
    ecd0:	8000661e 	bne	r16,zero,ee6c <__udivdi3+0x31c>
    ecd4:	3c40fa36 	bltu	r7,r17,f0c0 <__udivdi3+0x570>
    ecd8:	9185403a 	cmpgeu	r2,r18,r6
    ecdc:	0007883a 	mov	r3,zero
    ece0:	00004606 	br	edfc <__udivdi3+0x2ac>
    ece4:	3000041e 	bne	r6,zero,ecf8 <__udivdi3+0x1a8>
    ece8:	01000044 	movi	r4,1
    ecec:	000b883a 	mov	r5,zero
    ecf0:	000f7b00 	call	f7b0 <__udivsi3>
    ecf4:	1021883a 	mov	r16,r2
    ecf8:	00bfffd4 	movui	r2,65535
    ecfc:	1400562e 	bgeu	r2,r16,ee58 <__udivdi3+0x308>
    ed00:	00804034 	movhi	r2,256
    ed04:	10bfffc4 	addi	r2,r2,-1
    ed08:	1400e436 	bltu	r2,r16,f09c <__udivdi3+0x54c>
    ed0c:	00800404 	movi	r2,16
    ed10:	1007883a 	mov	r3,r2
    ed14:	8084d83a 	srl	r2,r16,r2
    ed18:	01000074 	movhi	r4,1
    ed1c:	2114be04 	addi	r4,r4,21240
    ed20:	2085883a 	add	r2,r4,r2
    ed24:	10800003 	ldbu	r2,0(r2)
    ed28:	10c7883a 	add	r3,r2,r3
    ed2c:	00800804 	movi	r2,32
    ed30:	10c5c83a 	sub	r2,r2,r3
    ed34:	1000921e 	bne	r2,zero,ef80 <__udivdi3+0x430>
    ed38:	8028d43a 	srli	r20,r16,16
    ed3c:	8c23c83a 	sub	r17,r17,r16
    ed40:	857fffcc 	andi	r21,r16,65535
    ed44:	00c00044 	movi	r3,1
    ed48:	8809883a 	mov	r4,r17
    ed4c:	a00b883a 	mov	r5,r20
    ed50:	d8c00015 	stw	r3,0(sp)
    ed54:	000f7b80 	call	f7b8 <__umodsi3>
    ed58:	8809883a 	mov	r4,r17
    ed5c:	a00b883a 	mov	r5,r20
    ed60:	102d883a 	mov	r22,r2
    ed64:	000f7b00 	call	f7b0 <__udivsi3>
    ed68:	b02c943a 	slli	r22,r22,16
    ed6c:	9808d43a 	srli	r4,r19,16
    ed70:	154b383a 	mul	r5,r2,r21
    ed74:	1025883a 	mov	r18,r2
    ed78:	b108b03a 	or	r4,r22,r4
    ed7c:	d8c00017 	ldw	r3,0(sp)
    ed80:	2140052e 	bgeu	r4,r5,ed98 <__udivdi3+0x248>
    ed84:	2409883a 	add	r4,r4,r16
    ed88:	10bfffc4 	addi	r2,r2,-1
    ed8c:	24000136 	bltu	r4,r16,ed94 <__udivdi3+0x244>
    ed90:	2140da36 	bltu	r4,r5,f0fc <__udivdi3+0x5ac>
    ed94:	1025883a 	mov	r18,r2
    ed98:	2163c83a 	sub	r17,r4,r5
    ed9c:	8809883a 	mov	r4,r17
    eda0:	a00b883a 	mov	r5,r20
    eda4:	d8c00015 	stw	r3,0(sp)
    eda8:	000f7b80 	call	f7b8 <__umodsi3>
    edac:	102d883a 	mov	r22,r2
    edb0:	8809883a 	mov	r4,r17
    edb4:	a00b883a 	mov	r5,r20
    edb8:	000f7b00 	call	f7b0 <__udivsi3>
    edbc:	b02c943a 	slli	r22,r22,16
    edc0:	156b383a 	mul	r21,r2,r21
    edc4:	9cffffcc 	andi	r19,r19,65535
    edc8:	b4e6b03a 	or	r19,r22,r19
    edcc:	d8c00017 	ldw	r3,0(sp)
    edd0:	9d40052e 	bgeu	r19,r21,ede8 <__udivdi3+0x298>
    edd4:	9c27883a 	add	r19,r19,r16
    edd8:	113fffc4 	addi	r4,r2,-1
    eddc:	9c009a36 	bltu	r19,r16,f048 <__udivdi3+0x4f8>
    ede0:	9d40992e 	bgeu	r19,r21,f048 <__udivdi3+0x4f8>
    ede4:	10bfff84 	addi	r2,r2,-2
    ede8:	9024943a 	slli	r18,r18,16
    edec:	1484b03a 	or	r2,r2,r18
    edf0:	00000206 	br	edfc <__udivdi3+0x2ac>
    edf4:	0007883a 	mov	r3,zero
    edf8:	0005883a 	mov	r2,zero
    edfc:	dfc00a17 	ldw	ra,40(sp)
    ee00:	df000917 	ldw	fp,36(sp)
    ee04:	ddc00817 	ldw	r23,32(sp)
    ee08:	dd800717 	ldw	r22,28(sp)
    ee0c:	dd400617 	ldw	r21,24(sp)
    ee10:	dd000517 	ldw	r20,20(sp)
    ee14:	dcc00417 	ldw	r19,16(sp)
    ee18:	dc800317 	ldw	r18,12(sp)
    ee1c:	dc400217 	ldw	r17,8(sp)
    ee20:	dc000117 	ldw	r16,4(sp)
    ee24:	dec00b04 	addi	sp,sp,44
    ee28:	f800283a 	ret
    ee2c:	00803fc4 	movi	r2,255
    ee30:	11c09436 	bltu	r2,r7,f084 <__udivdi3+0x534>
    ee34:	0007883a 	mov	r3,zero
    ee38:	000b883a 	mov	r5,zero
    ee3c:	003f9c06 	br	ecb0 <__alt_data_end+0xfe00ecb0>
    ee40:	00804034 	movhi	r2,256
    ee44:	10bfffc4 	addi	r2,r2,-1
    ee48:	11809136 	bltu	r2,r6,f090 <__udivdi3+0x540>
    ee4c:	00800404 	movi	r2,16
    ee50:	1007883a 	mov	r3,r2
    ee54:	003f5606 	br	ebb0 <__alt_data_end+0xfe00ebb0>
    ee58:	00803fc4 	movi	r2,255
    ee5c:	14009236 	bltu	r2,r16,f0a8 <__udivdi3+0x558>
    ee60:	0005883a 	mov	r2,zero
    ee64:	0007883a 	mov	r3,zero
    ee68:	003faa06 	br	ed14 <__alt_data_end+0xfe00ed14>
    ee6c:	3086d83a 	srl	r3,r6,r2
    ee70:	3c0e983a 	sll	r7,r7,r16
    ee74:	88aad83a 	srl	r21,r17,r2
    ee78:	9084d83a 	srl	r2,r18,r2
    ee7c:	38e6b03a 	or	r19,r7,r3
    ee80:	9828d43a 	srli	r20,r19,16
    ee84:	8c22983a 	sll	r17,r17,r16
    ee88:	a809883a 	mov	r4,r21
    ee8c:	a00b883a 	mov	r5,r20
    ee90:	342c983a 	sll	r22,r6,r16
    ee94:	88a2b03a 	or	r17,r17,r2
    ee98:	000f7b80 	call	f7b8 <__umodsi3>
    ee9c:	a809883a 	mov	r4,r21
    eea0:	a00b883a 	mov	r5,r20
    eea4:	1039883a 	mov	fp,r2
    eea8:	000f7b00 	call	f7b0 <__udivsi3>
    eeac:	102b883a 	mov	r21,r2
    eeb0:	9dffffcc 	andi	r23,r19,65535
    eeb4:	e008943a 	slli	r4,fp,16
    eeb8:	8804d43a 	srli	r2,r17,16
    eebc:	adcd383a 	mul	r6,r21,r23
    eec0:	2088b03a 	or	r4,r4,r2
    eec4:	2180042e 	bgeu	r4,r6,eed8 <__udivdi3+0x388>
    eec8:	24c9883a 	add	r4,r4,r19
    eecc:	a8bfffc4 	addi	r2,r21,-1
    eed0:	24c0822e 	bgeu	r4,r19,f0dc <__udivdi3+0x58c>
    eed4:	102b883a 	mov	r21,r2
    eed8:	21b9c83a 	sub	fp,r4,r6
    eedc:	e009883a 	mov	r4,fp
    eee0:	a00b883a 	mov	r5,r20
    eee4:	000f7b80 	call	f7b8 <__umodsi3>
    eee8:	e009883a 	mov	r4,fp
    eeec:	a00b883a 	mov	r5,r20
    eef0:	d8800015 	stw	r2,0(sp)
    eef4:	000f7b00 	call	f7b0 <__udivsi3>
    eef8:	d8c00017 	ldw	r3,0(sp)
    eefc:	15cb383a 	mul	r5,r2,r23
    ef00:	8c7fffcc 	andi	r17,r17,65535
    ef04:	1806943a 	slli	r3,r3,16
    ef08:	1009883a 	mov	r4,r2
    ef0c:	1c46b03a 	or	r3,r3,r17
    ef10:	1940042e 	bgeu	r3,r5,ef24 <__udivdi3+0x3d4>
    ef14:	1cc7883a 	add	r3,r3,r19
    ef18:	10bfffc4 	addi	r2,r2,-1
    ef1c:	1cc06b2e 	bgeu	r3,r19,f0cc <__udivdi3+0x57c>
    ef20:	1009883a 	mov	r4,r2
    ef24:	a804943a 	slli	r2,r21,16
    ef28:	b1ffffcc 	andi	r7,r22,65535
    ef2c:	b02cd43a 	srli	r22,r22,16
    ef30:	2084b03a 	or	r2,r4,r2
    ef34:	113fffcc 	andi	r4,r2,65535
    ef38:	100cd43a 	srli	r6,r2,16
    ef3c:	21d1383a 	mul	r8,r4,r7
    ef40:	2589383a 	mul	r4,r4,r22
    ef44:	31cf383a 	mul	r7,r6,r7
    ef48:	4012d43a 	srli	r9,r8,16
    ef4c:	1947c83a 	sub	r3,r3,r5
    ef50:	3909883a 	add	r4,r7,r4
    ef54:	2249883a 	add	r4,r4,r9
    ef58:	35ad383a 	mul	r22,r6,r22
    ef5c:	21c0022e 	bgeu	r4,r7,ef68 <__udivdi3+0x418>
    ef60:	01400074 	movhi	r5,1
    ef64:	b16d883a 	add	r22,r22,r5
    ef68:	200ad43a 	srli	r5,r4,16
    ef6c:	b16d883a 	add	r22,r22,r5
    ef70:	1d803e36 	bltu	r3,r22,f06c <__udivdi3+0x51c>
    ef74:	1d803826 	beq	r3,r22,f058 <__udivdi3+0x508>
    ef78:	0007883a 	mov	r3,zero
    ef7c:	003f9f06 	br	edfc <__alt_data_end+0xfe00edfc>
    ef80:	80a0983a 	sll	r16,r16,r2
    ef84:	88ead83a 	srl	r21,r17,r3
    ef88:	90c6d83a 	srl	r3,r18,r3
    ef8c:	8028d43a 	srli	r20,r16,16
    ef90:	88a2983a 	sll	r17,r17,r2
    ef94:	a809883a 	mov	r4,r21
    ef98:	a00b883a 	mov	r5,r20
    ef9c:	88ecb03a 	or	r22,r17,r3
    efa0:	90a6983a 	sll	r19,r18,r2
    efa4:	000f7b80 	call	f7b8 <__umodsi3>
    efa8:	a809883a 	mov	r4,r21
    efac:	a00b883a 	mov	r5,r20
    efb0:	1023883a 	mov	r17,r2
    efb4:	000f7b00 	call	f7b0 <__udivsi3>
    efb8:	1025883a 	mov	r18,r2
    efbc:	857fffcc 	andi	r21,r16,65535
    efc0:	8808943a 	slli	r4,r17,16
    efc4:	b004d43a 	srli	r2,r22,16
    efc8:	9547383a 	mul	r3,r18,r21
    efcc:	2088b03a 	or	r4,r4,r2
    efd0:	20c0062e 	bgeu	r4,r3,efec <__udivdi3+0x49c>
    efd4:	2409883a 	add	r4,r4,r16
    efd8:	90bfffc4 	addi	r2,r18,-1
    efdc:	24004536 	bltu	r4,r16,f0f4 <__udivdi3+0x5a4>
    efe0:	20c0442e 	bgeu	r4,r3,f0f4 <__udivdi3+0x5a4>
    efe4:	94bfff84 	addi	r18,r18,-2
    efe8:	2409883a 	add	r4,r4,r16
    efec:	20efc83a 	sub	r23,r4,r3
    eff0:	b809883a 	mov	r4,r23
    eff4:	a00b883a 	mov	r5,r20
    eff8:	000f7b80 	call	f7b8 <__umodsi3>
    effc:	1023883a 	mov	r17,r2
    f000:	a00b883a 	mov	r5,r20
    f004:	b809883a 	mov	r4,r23
    f008:	000f7b00 	call	f7b0 <__udivsi3>
    f00c:	8822943a 	slli	r17,r17,16
    f010:	154b383a 	mul	r5,r2,r21
    f014:	b5bfffcc 	andi	r22,r22,65535
    f018:	8da2b03a 	or	r17,r17,r22
    f01c:	8940062e 	bgeu	r17,r5,f038 <__udivdi3+0x4e8>
    f020:	8c23883a 	add	r17,r17,r16
    f024:	10ffffc4 	addi	r3,r2,-1
    f028:	8c003036 	bltu	r17,r16,f0ec <__udivdi3+0x59c>
    f02c:	89402f2e 	bgeu	r17,r5,f0ec <__udivdi3+0x59c>
    f030:	10bfff84 	addi	r2,r2,-2
    f034:	8c23883a 	add	r17,r17,r16
    f038:	9006943a 	slli	r3,r18,16
    f03c:	8963c83a 	sub	r17,r17,r5
    f040:	10c6b03a 	or	r3,r2,r3
    f044:	003f4006 	br	ed48 <__alt_data_end+0xfe00ed48>
    f048:	2005883a 	mov	r2,r4
    f04c:	003f6606 	br	ede8 <__alt_data_end+0xfe00ede8>
    f050:	1805883a 	mov	r2,r3
    f054:	003f0a06 	br	ec80 <__alt_data_end+0xfe00ec80>
    f058:	2008943a 	slli	r4,r4,16
    f05c:	9420983a 	sll	r16,r18,r16
    f060:	423fffcc 	andi	r8,r8,65535
    f064:	2209883a 	add	r4,r4,r8
    f068:	813fc32e 	bgeu	r16,r4,ef78 <__alt_data_end+0xfe00ef78>
    f06c:	10bfffc4 	addi	r2,r2,-1
    f070:	0007883a 	mov	r3,zero
    f074:	003f6106 	br	edfc <__alt_data_end+0xfe00edfc>
    f078:	00c00604 	movi	r3,24
    f07c:	180b883a 	mov	r5,r3
    f080:	003f0b06 	br	ecb0 <__alt_data_end+0xfe00ecb0>
    f084:	00c00204 	movi	r3,8
    f088:	180b883a 	mov	r5,r3
    f08c:	003f0806 	br	ecb0 <__alt_data_end+0xfe00ecb0>
    f090:	00800604 	movi	r2,24
    f094:	1007883a 	mov	r3,r2
    f098:	003ec506 	br	ebb0 <__alt_data_end+0xfe00ebb0>
    f09c:	00800604 	movi	r2,24
    f0a0:	1007883a 	mov	r3,r2
    f0a4:	003f1b06 	br	ed14 <__alt_data_end+0xfe00ed14>
    f0a8:	00800204 	movi	r2,8
    f0ac:	1007883a 	mov	r3,r2
    f0b0:	003f1806 	br	ed14 <__alt_data_end+0xfe00ed14>
    f0b4:	00800204 	movi	r2,8
    f0b8:	1007883a 	mov	r3,r2
    f0bc:	003ebc06 	br	ebb0 <__alt_data_end+0xfe00ebb0>
    f0c0:	0007883a 	mov	r3,zero
    f0c4:	00800044 	movi	r2,1
    f0c8:	003f4c06 	br	edfc <__alt_data_end+0xfe00edfc>
    f0cc:	197f942e 	bgeu	r3,r5,ef20 <__alt_data_end+0xfe00ef20>
    f0d0:	213fff84 	addi	r4,r4,-2
    f0d4:	1cc7883a 	add	r3,r3,r19
    f0d8:	003f9206 	br	ef24 <__alt_data_end+0xfe00ef24>
    f0dc:	21bf7d2e 	bgeu	r4,r6,eed4 <__alt_data_end+0xfe00eed4>
    f0e0:	ad7fff84 	addi	r21,r21,-2
    f0e4:	24c9883a 	add	r4,r4,r19
    f0e8:	003f7b06 	br	eed8 <__alt_data_end+0xfe00eed8>
    f0ec:	1805883a 	mov	r2,r3
    f0f0:	003fd106 	br	f038 <__alt_data_end+0xfe00f038>
    f0f4:	1025883a 	mov	r18,r2
    f0f8:	003fbc06 	br	efec <__alt_data_end+0xfe00efec>
    f0fc:	94bfff84 	addi	r18,r18,-2
    f100:	2409883a 	add	r4,r4,r16
    f104:	003f2406 	br	ed98 <__alt_data_end+0xfe00ed98>
    f108:	94bfff84 	addi	r18,r18,-2
    f10c:	1c07883a 	add	r3,r3,r16
    f110:	003ec906 	br	ec38 <__alt_data_end+0xfe00ec38>

0000f114 <__umoddi3>:
    f114:	defff504 	addi	sp,sp,-44
    f118:	dd000515 	stw	r20,20(sp)
    f11c:	dc800315 	stw	r18,12(sp)
    f120:	dc400215 	stw	r17,8(sp)
    f124:	dfc00a15 	stw	ra,40(sp)
    f128:	df000915 	stw	fp,36(sp)
    f12c:	ddc00815 	stw	r23,32(sp)
    f130:	dd800715 	stw	r22,28(sp)
    f134:	dd400615 	stw	r21,24(sp)
    f138:	dcc00415 	stw	r19,16(sp)
    f13c:	dc000115 	stw	r16,4(sp)
    f140:	2025883a 	mov	r18,r4
    f144:	2823883a 	mov	r17,r5
    f148:	2829883a 	mov	r20,r5
    f14c:	3800381e 	bne	r7,zero,f230 <__umoddi3+0x11c>
    f150:	3021883a 	mov	r16,r6
    f154:	2027883a 	mov	r19,r4
    f158:	29804e2e 	bgeu	r5,r6,f294 <__umoddi3+0x180>
    f15c:	00bfffd4 	movui	r2,65535
    f160:	11809c36 	bltu	r2,r6,f3d4 <__umoddi3+0x2c0>
    f164:	00803fc4 	movi	r2,255
    f168:	11813c36 	bltu	r2,r6,f65c <__umoddi3+0x548>
    f16c:	0005883a 	mov	r2,zero
    f170:	0009883a 	mov	r4,zero
    f174:	3084d83a 	srl	r2,r6,r2
    f178:	00c00074 	movhi	r3,1
    f17c:	18d4be04 	addi	r3,r3,21240
    f180:	1885883a 	add	r2,r3,r2
    f184:	10800003 	ldbu	r2,0(r2)
    f188:	1109883a 	add	r4,r2,r4
    f18c:	00800804 	movi	r2,32
    f190:	1105c83a 	sub	r2,r2,r4
    f194:	1000ee26 	beq	r2,zero,f550 <__umoddi3+0x43c>
    f198:	9108d83a 	srl	r4,r18,r4
    f19c:	88a2983a 	sll	r17,r17,r2
    f1a0:	30a0983a 	sll	r16,r6,r2
    f1a4:	90a6983a 	sll	r19,r18,r2
    f1a8:	8928b03a 	or	r20,r17,r4
    f1ac:	1025883a 	mov	r18,r2
    f1b0:	8022d43a 	srli	r17,r16,16
    f1b4:	a009883a 	mov	r4,r20
    f1b8:	857fffcc 	andi	r21,r16,65535
    f1bc:	880b883a 	mov	r5,r17
    f1c0:	000f7b80 	call	f7b8 <__umodsi3>
    f1c4:	a009883a 	mov	r4,r20
    f1c8:	880b883a 	mov	r5,r17
    f1cc:	102d883a 	mov	r22,r2
    f1d0:	000f7b00 	call	f7b0 <__udivsi3>
    f1d4:	b02c943a 	slli	r22,r22,16
    f1d8:	9806d43a 	srli	r3,r19,16
    f1dc:	1545383a 	mul	r2,r2,r21
    f1e0:	b0c6b03a 	or	r3,r22,r3
    f1e4:	1880042e 	bgeu	r3,r2,f1f8 <__umoddi3+0xe4>
    f1e8:	1c07883a 	add	r3,r3,r16
    f1ec:	1c000236 	bltu	r3,r16,f1f8 <__umoddi3+0xe4>
    f1f0:	1880012e 	bgeu	r3,r2,f1f8 <__umoddi3+0xe4>
    f1f4:	1c07883a 	add	r3,r3,r16
    f1f8:	18a9c83a 	sub	r20,r3,r2
    f1fc:	a009883a 	mov	r4,r20
    f200:	880b883a 	mov	r5,r17
    f204:	000f7b80 	call	f7b8 <__umodsi3>
    f208:	102d883a 	mov	r22,r2
    f20c:	a009883a 	mov	r4,r20
    f210:	880b883a 	mov	r5,r17
    f214:	000f7b00 	call	f7b0 <__udivsi3>
    f218:	b02c943a 	slli	r22,r22,16
    f21c:	1545383a 	mul	r2,r2,r21
    f220:	9cffffcc 	andi	r19,r19,65535
    f224:	b4e6b03a 	or	r19,r22,r19
    f228:	9880532e 	bgeu	r19,r2,f378 <__umoddi3+0x264>
    f22c:	00004e06 	br	f368 <__umoddi3+0x254>
    f230:	29c05536 	bltu	r5,r7,f388 <__umoddi3+0x274>
    f234:	00bfffd4 	movui	r2,65535
    f238:	11c0612e 	bgeu	r2,r7,f3c0 <__umoddi3+0x2ac>
    f23c:	00804034 	movhi	r2,256
    f240:	10bfffc4 	addi	r2,r2,-1
    f244:	11c0f936 	bltu	r2,r7,f62c <__umoddi3+0x518>
    f248:	00c00404 	movi	r3,16
    f24c:	1827883a 	mov	r19,r3
    f250:	38c6d83a 	srl	r3,r7,r3
    f254:	01000074 	movhi	r4,1
    f258:	2114be04 	addi	r4,r4,21240
    f25c:	04000804 	movi	r16,32
    f260:	20c7883a 	add	r3,r4,r3
    f264:	18800003 	ldbu	r2,0(r3)
    f268:	14e7883a 	add	r19,r2,r19
    f26c:	84e1c83a 	sub	r16,r16,r19
    f270:	8000631e 	bne	r16,zero,f400 <__umoddi3+0x2ec>
    f274:	3c400136 	bltu	r7,r17,f27c <__umoddi3+0x168>
    f278:	91810536 	bltu	r18,r6,f690 <__umoddi3+0x57c>
    f27c:	9185c83a 	sub	r2,r18,r6
    f280:	89e3c83a 	sub	r17,r17,r7
    f284:	90a5803a 	cmpltu	r18,r18,r2
    f288:	8ca9c83a 	sub	r20,r17,r18
    f28c:	a007883a 	mov	r3,r20
    f290:	00003f06 	br	f390 <__umoddi3+0x27c>
    f294:	3000041e 	bne	r6,zero,f2a8 <__umoddi3+0x194>
    f298:	01000044 	movi	r4,1
    f29c:	000b883a 	mov	r5,zero
    f2a0:	000f7b00 	call	f7b0 <__udivsi3>
    f2a4:	1021883a 	mov	r16,r2
    f2a8:	00bfffd4 	movui	r2,65535
    f2ac:	14004f2e 	bgeu	r2,r16,f3ec <__umoddi3+0x2d8>
    f2b0:	00804034 	movhi	r2,256
    f2b4:	10bfffc4 	addi	r2,r2,-1
    f2b8:	1400e536 	bltu	r2,r16,f650 <__umoddi3+0x53c>
    f2bc:	00800404 	movi	r2,16
    f2c0:	1007883a 	mov	r3,r2
    f2c4:	8084d83a 	srl	r2,r16,r2
    f2c8:	01000074 	movhi	r4,1
    f2cc:	2114be04 	addi	r4,r4,21240
    f2d0:	05400804 	movi	r21,32
    f2d4:	2085883a 	add	r2,r4,r2
    f2d8:	10800003 	ldbu	r2,0(r2)
    f2dc:	10c7883a 	add	r3,r2,r3
    f2e0:	a8ebc83a 	sub	r21,r21,r3
    f2e4:	a8009c1e 	bne	r21,zero,f558 <__umoddi3+0x444>
    f2e8:	8028d43a 	srli	r20,r16,16
    f2ec:	8c23c83a 	sub	r17,r17,r16
    f2f0:	85bfffcc 	andi	r22,r16,65535
    f2f4:	0025883a 	mov	r18,zero
    f2f8:	8809883a 	mov	r4,r17
    f2fc:	a00b883a 	mov	r5,r20
    f300:	000f7b80 	call	f7b8 <__umodsi3>
    f304:	8809883a 	mov	r4,r17
    f308:	a00b883a 	mov	r5,r20
    f30c:	102b883a 	mov	r21,r2
    f310:	000f7b00 	call	f7b0 <__udivsi3>
    f314:	a82a943a 	slli	r21,r21,16
    f318:	9806d43a 	srli	r3,r19,16
    f31c:	1585383a 	mul	r2,r2,r22
    f320:	a8c6b03a 	or	r3,r21,r3
    f324:	1880032e 	bgeu	r3,r2,f334 <__umoddi3+0x220>
    f328:	1c07883a 	add	r3,r3,r16
    f32c:	1c000136 	bltu	r3,r16,f334 <__umoddi3+0x220>
    f330:	1880d536 	bltu	r3,r2,f688 <__umoddi3+0x574>
    f334:	18a3c83a 	sub	r17,r3,r2
    f338:	8809883a 	mov	r4,r17
    f33c:	a00b883a 	mov	r5,r20
    f340:	000f7b80 	call	f7b8 <__umodsi3>
    f344:	102b883a 	mov	r21,r2
    f348:	8809883a 	mov	r4,r17
    f34c:	a00b883a 	mov	r5,r20
    f350:	000f7b00 	call	f7b0 <__udivsi3>
    f354:	a82a943a 	slli	r21,r21,16
    f358:	1585383a 	mul	r2,r2,r22
    f35c:	9cffffcc 	andi	r19,r19,65535
    f360:	ace6b03a 	or	r19,r21,r19
    f364:	9880042e 	bgeu	r19,r2,f378 <__umoddi3+0x264>
    f368:	9c27883a 	add	r19,r19,r16
    f36c:	9c000236 	bltu	r19,r16,f378 <__umoddi3+0x264>
    f370:	9880012e 	bgeu	r19,r2,f378 <__umoddi3+0x264>
    f374:	9c27883a 	add	r19,r19,r16
    f378:	98a7c83a 	sub	r19,r19,r2
    f37c:	9c84d83a 	srl	r2,r19,r18
    f380:	0007883a 	mov	r3,zero
    f384:	00000206 	br	f390 <__umoddi3+0x27c>
    f388:	2005883a 	mov	r2,r4
    f38c:	2807883a 	mov	r3,r5
    f390:	dfc00a17 	ldw	ra,40(sp)
    f394:	df000917 	ldw	fp,36(sp)
    f398:	ddc00817 	ldw	r23,32(sp)
    f39c:	dd800717 	ldw	r22,28(sp)
    f3a0:	dd400617 	ldw	r21,24(sp)
    f3a4:	dd000517 	ldw	r20,20(sp)
    f3a8:	dcc00417 	ldw	r19,16(sp)
    f3ac:	dc800317 	ldw	r18,12(sp)
    f3b0:	dc400217 	ldw	r17,8(sp)
    f3b4:	dc000117 	ldw	r16,4(sp)
    f3b8:	dec00b04 	addi	sp,sp,44
    f3bc:	f800283a 	ret
    f3c0:	00803fc4 	movi	r2,255
    f3c4:	11c09636 	bltu	r2,r7,f620 <__umoddi3+0x50c>
    f3c8:	0007883a 	mov	r3,zero
    f3cc:	0027883a 	mov	r19,zero
    f3d0:	003f9f06 	br	f250 <__alt_data_end+0xfe00f250>
    f3d4:	00804034 	movhi	r2,256
    f3d8:	10bfffc4 	addi	r2,r2,-1
    f3dc:	11809636 	bltu	r2,r6,f638 <__umoddi3+0x524>
    f3e0:	00800404 	movi	r2,16
    f3e4:	1009883a 	mov	r4,r2
    f3e8:	003f6206 	br	f174 <__alt_data_end+0xfe00f174>
    f3ec:	00803fc4 	movi	r2,255
    f3f0:	14009436 	bltu	r2,r16,f644 <__umoddi3+0x530>
    f3f4:	0005883a 	mov	r2,zero
    f3f8:	0007883a 	mov	r3,zero
    f3fc:	003fb106 	br	f2c4 <__alt_data_end+0xfe00f2c4>
    f400:	3c0e983a 	sll	r7,r7,r16
    f404:	34c4d83a 	srl	r2,r6,r19
    f408:	8ceed83a 	srl	r23,r17,r19
    f40c:	8c22983a 	sll	r17,r17,r16
    f410:	38a8b03a 	or	r20,r7,r2
    f414:	a02ad43a 	srli	r21,r20,16
    f418:	94c4d83a 	srl	r2,r18,r19
    f41c:	b809883a 	mov	r4,r23
    f420:	a80b883a 	mov	r5,r21
    f424:	88a2b03a 	or	r17,r17,r2
    f428:	342c983a 	sll	r22,r6,r16
    f42c:	000f7b80 	call	f7b8 <__umodsi3>
    f430:	b809883a 	mov	r4,r23
    f434:	a80b883a 	mov	r5,r21
    f438:	d8800015 	stw	r2,0(sp)
    f43c:	000f7b00 	call	f7b0 <__udivsi3>
    f440:	d8c00017 	ldw	r3,0(sp)
    f444:	102f883a 	mov	r23,r2
    f448:	a73fffcc 	andi	fp,r20,65535
    f44c:	180a943a 	slli	r5,r3,16
    f450:	8804d43a 	srli	r2,r17,16
    f454:	bf0f383a 	mul	r7,r23,fp
    f458:	9424983a 	sll	r18,r18,r16
    f45c:	288ab03a 	or	r5,r5,r2
    f460:	29c0042e 	bgeu	r5,r7,f474 <__umoddi3+0x360>
    f464:	2d0b883a 	add	r5,r5,r20
    f468:	b8bfffc4 	addi	r2,r23,-1
    f46c:	2d00822e 	bgeu	r5,r20,f678 <__umoddi3+0x564>
    f470:	102f883a 	mov	r23,r2
    f474:	29cfc83a 	sub	r7,r5,r7
    f478:	3809883a 	mov	r4,r7
    f47c:	a80b883a 	mov	r5,r21
    f480:	d9c00015 	stw	r7,0(sp)
    f484:	000f7b80 	call	f7b8 <__umodsi3>
    f488:	d9c00017 	ldw	r7,0(sp)
    f48c:	a80b883a 	mov	r5,r21
    f490:	d8800015 	stw	r2,0(sp)
    f494:	3809883a 	mov	r4,r7
    f498:	000f7b00 	call	f7b0 <__udivsi3>
    f49c:	d8c00017 	ldw	r3,0(sp)
    f4a0:	170d383a 	mul	r6,r2,fp
    f4a4:	8c7fffcc 	andi	r17,r17,65535
    f4a8:	1808943a 	slli	r4,r3,16
    f4ac:	2448b03a 	or	r4,r4,r17
    f4b0:	2180042e 	bgeu	r4,r6,f4c4 <__umoddi3+0x3b0>
    f4b4:	2509883a 	add	r4,r4,r20
    f4b8:	10ffffc4 	addi	r3,r2,-1
    f4bc:	25006a2e 	bgeu	r4,r20,f668 <__umoddi3+0x554>
    f4c0:	1805883a 	mov	r2,r3
    f4c4:	b82e943a 	slli	r23,r23,16
    f4c8:	b010d43a 	srli	r8,r22,16
    f4cc:	b1ffffcc 	andi	r7,r22,65535
    f4d0:	15eeb03a 	or	r23,r2,r23
    f4d4:	b8bfffcc 	andi	r2,r23,65535
    f4d8:	b82ed43a 	srli	r23,r23,16
    f4dc:	11c7383a 	mul	r3,r2,r7
    f4e0:	1205383a 	mul	r2,r2,r8
    f4e4:	b9cf383a 	mul	r7,r23,r7
    f4e8:	400b883a 	mov	r5,r8
    f4ec:	1810d43a 	srli	r8,r3,16
    f4f0:	3885883a 	add	r2,r7,r2
    f4f4:	2189c83a 	sub	r4,r4,r6
    f4f8:	1205883a 	add	r2,r2,r8
    f4fc:	b94b383a 	mul	r5,r23,r5
    f500:	11c0022e 	bgeu	r2,r7,f50c <__umoddi3+0x3f8>
    f504:	01800074 	movhi	r6,1
    f508:	298b883a 	add	r5,r5,r6
    f50c:	100cd43a 	srli	r6,r2,16
    f510:	1004943a 	slli	r2,r2,16
    f514:	18ffffcc 	andi	r3,r3,65535
    f518:	298b883a 	add	r5,r5,r6
    f51c:	10c5883a 	add	r2,r2,r3
    f520:	21403936 	bltu	r4,r5,f608 <__umoddi3+0x4f4>
    f524:	21405d26 	beq	r4,r5,f69c <__umoddi3+0x588>
    f528:	2147c83a 	sub	r3,r4,r5
    f52c:	102d883a 	mov	r22,r2
    f530:	95adc83a 	sub	r22,r18,r22
    f534:	95a5803a 	cmpltu	r18,r18,r22
    f538:	1c87c83a 	sub	r3,r3,r18
    f53c:	1cc4983a 	sll	r2,r3,r19
    f540:	b42cd83a 	srl	r22,r22,r16
    f544:	1c06d83a 	srl	r3,r3,r16
    f548:	1584b03a 	or	r2,r2,r22
    f54c:	003f9006 	br	f390 <__alt_data_end+0xfe00f390>
    f550:	0025883a 	mov	r18,zero
    f554:	003f1606 	br	f1b0 <__alt_data_end+0xfe00f1b0>
    f558:	8560983a 	sll	r16,r16,r21
    f55c:	88e6d83a 	srl	r19,r17,r3
    f560:	90c6d83a 	srl	r3,r18,r3
    f564:	8028d43a 	srli	r20,r16,16
    f568:	8d62983a 	sll	r17,r17,r21
    f56c:	9809883a 	mov	r4,r19
    f570:	a00b883a 	mov	r5,r20
    f574:	88eeb03a 	or	r23,r17,r3
    f578:	000f7b80 	call	f7b8 <__umodsi3>
    f57c:	9809883a 	mov	r4,r19
    f580:	a00b883a 	mov	r5,r20
    f584:	1023883a 	mov	r17,r2
    f588:	000f7b00 	call	f7b0 <__udivsi3>
    f58c:	85bfffcc 	andi	r22,r16,65535
    f590:	8808943a 	slli	r4,r17,16
    f594:	b806d43a 	srli	r3,r23,16
    f598:	1585383a 	mul	r2,r2,r22
    f59c:	9566983a 	sll	r19,r18,r21
    f5a0:	20c8b03a 	or	r4,r4,r3
    f5a4:	2080042e 	bgeu	r4,r2,f5b8 <__umoddi3+0x4a4>
    f5a8:	2409883a 	add	r4,r4,r16
    f5ac:	24000236 	bltu	r4,r16,f5b8 <__umoddi3+0x4a4>
    f5b0:	2080012e 	bgeu	r4,r2,f5b8 <__umoddi3+0x4a4>
    f5b4:	2409883a 	add	r4,r4,r16
    f5b8:	20a5c83a 	sub	r18,r4,r2
    f5bc:	9009883a 	mov	r4,r18
    f5c0:	a00b883a 	mov	r5,r20
    f5c4:	000f7b80 	call	f7b8 <__umodsi3>
    f5c8:	1023883a 	mov	r17,r2
    f5cc:	9009883a 	mov	r4,r18
    f5d0:	a00b883a 	mov	r5,r20
    f5d4:	000f7b00 	call	f7b0 <__udivsi3>
    f5d8:	8822943a 	slli	r17,r17,16
    f5dc:	1585383a 	mul	r2,r2,r22
    f5e0:	bdffffcc 	andi	r23,r23,65535
    f5e4:	8de2b03a 	or	r17,r17,r23
    f5e8:	8880042e 	bgeu	r17,r2,f5fc <__umoddi3+0x4e8>
    f5ec:	8c23883a 	add	r17,r17,r16
    f5f0:	8c000236 	bltu	r17,r16,f5fc <__umoddi3+0x4e8>
    f5f4:	8880012e 	bgeu	r17,r2,f5fc <__umoddi3+0x4e8>
    f5f8:	8c23883a 	add	r17,r17,r16
    f5fc:	88a3c83a 	sub	r17,r17,r2
    f600:	a825883a 	mov	r18,r21
    f604:	003f3c06 	br	f2f8 <__alt_data_end+0xfe00f2f8>
    f608:	15adc83a 	sub	r22,r2,r22
    f60c:	2d07c83a 	sub	r3,r5,r20
    f610:	1585803a 	cmpltu	r2,r2,r22
    f614:	1887c83a 	sub	r3,r3,r2
    f618:	20c7c83a 	sub	r3,r4,r3
    f61c:	003fc406 	br	f530 <__alt_data_end+0xfe00f530>
    f620:	00c00204 	movi	r3,8
    f624:	1827883a 	mov	r19,r3
    f628:	003f0906 	br	f250 <__alt_data_end+0xfe00f250>
    f62c:	00c00604 	movi	r3,24
    f630:	1827883a 	mov	r19,r3
    f634:	003f0606 	br	f250 <__alt_data_end+0xfe00f250>
    f638:	00800604 	movi	r2,24
    f63c:	1009883a 	mov	r4,r2
    f640:	003ecc06 	br	f174 <__alt_data_end+0xfe00f174>
    f644:	00800204 	movi	r2,8
    f648:	1007883a 	mov	r3,r2
    f64c:	003f1d06 	br	f2c4 <__alt_data_end+0xfe00f2c4>
    f650:	00800604 	movi	r2,24
    f654:	1007883a 	mov	r3,r2
    f658:	003f1a06 	br	f2c4 <__alt_data_end+0xfe00f2c4>
    f65c:	00800204 	movi	r2,8
    f660:	1009883a 	mov	r4,r2
    f664:	003ec306 	br	f174 <__alt_data_end+0xfe00f174>
    f668:	21bf952e 	bgeu	r4,r6,f4c0 <__alt_data_end+0xfe00f4c0>
    f66c:	10bfff84 	addi	r2,r2,-2
    f670:	2509883a 	add	r4,r4,r20
    f674:	003f9306 	br	f4c4 <__alt_data_end+0xfe00f4c4>
    f678:	29ff7d2e 	bgeu	r5,r7,f470 <__alt_data_end+0xfe00f470>
    f67c:	bdffff84 	addi	r23,r23,-2
    f680:	2d0b883a 	add	r5,r5,r20
    f684:	003f7b06 	br	f474 <__alt_data_end+0xfe00f474>
    f688:	1c07883a 	add	r3,r3,r16
    f68c:	003f2906 	br	f334 <__alt_data_end+0xfe00f334>
    f690:	9005883a 	mov	r2,r18
    f694:	a007883a 	mov	r3,r20
    f698:	003f3d06 	br	f390 <__alt_data_end+0xfe00f390>
    f69c:	90bfda36 	bltu	r18,r2,f608 <__alt_data_end+0xfe00f608>
    f6a0:	102d883a 	mov	r22,r2
    f6a4:	0007883a 	mov	r3,zero
    f6a8:	003fa106 	br	f530 <__alt_data_end+0xfe00f530>

0000f6ac <udivmodsi4>:
    f6ac:	2900182e 	bgeu	r5,r4,f710 <udivmodsi4+0x64>
    f6b0:	28001716 	blt	r5,zero,f710 <udivmodsi4+0x64>
    f6b4:	00800804 	movi	r2,32
    f6b8:	00c00044 	movi	r3,1
    f6bc:	00000206 	br	f6c8 <udivmodsi4+0x1c>
    f6c0:	10001126 	beq	r2,zero,f708 <udivmodsi4+0x5c>
    f6c4:	28000516 	blt	r5,zero,f6dc <udivmodsi4+0x30>
    f6c8:	294b883a 	add	r5,r5,r5
    f6cc:	10bfffc4 	addi	r2,r2,-1
    f6d0:	18c7883a 	add	r3,r3,r3
    f6d4:	293ffa36 	bltu	r5,r4,f6c0 <__alt_data_end+0xfe00f6c0>
    f6d8:	18000b26 	beq	r3,zero,f708 <udivmodsi4+0x5c>
    f6dc:	0005883a 	mov	r2,zero
    f6e0:	21400236 	bltu	r4,r5,f6ec <udivmodsi4+0x40>
    f6e4:	2149c83a 	sub	r4,r4,r5
    f6e8:	10c4b03a 	or	r2,r2,r3
    f6ec:	1806d07a 	srli	r3,r3,1
    f6f0:	280ad07a 	srli	r5,r5,1
    f6f4:	183ffa1e 	bne	r3,zero,f6e0 <__alt_data_end+0xfe00f6e0>
    f6f8:	3000011e 	bne	r6,zero,f700 <udivmodsi4+0x54>
    f6fc:	f800283a 	ret
    f700:	2005883a 	mov	r2,r4
    f704:	f800283a 	ret
    f708:	0005883a 	mov	r2,zero
    f70c:	003ffa06 	br	f6f8 <__alt_data_end+0xfe00f6f8>
    f710:	00c00044 	movi	r3,1
    f714:	0005883a 	mov	r2,zero
    f718:	003ff106 	br	f6e0 <__alt_data_end+0xfe00f6e0>

0000f71c <__divsi3>:
    f71c:	deffff04 	addi	sp,sp,-4
    f720:	dfc00015 	stw	ra,0(sp)
    f724:	20000916 	blt	r4,zero,f74c <__divsi3+0x30>
    f728:	000f883a 	mov	r7,zero
    f72c:	28000a16 	blt	r5,zero,f758 <__divsi3+0x3c>
    f730:	000d883a 	mov	r6,zero
    f734:	000f6ac0 	call	f6ac <udivmodsi4>
    f738:	38000126 	beq	r7,zero,f740 <__divsi3+0x24>
    f73c:	0085c83a 	sub	r2,zero,r2
    f740:	dfc00017 	ldw	ra,0(sp)
    f744:	dec00104 	addi	sp,sp,4
    f748:	f800283a 	ret
    f74c:	0109c83a 	sub	r4,zero,r4
    f750:	01c00044 	movi	r7,1
    f754:	283ff60e 	bge	r5,zero,f730 <__alt_data_end+0xfe00f730>
    f758:	014bc83a 	sub	r5,zero,r5
    f75c:	39c0005c 	xori	r7,r7,1
    f760:	003ff306 	br	f730 <__alt_data_end+0xfe00f730>

0000f764 <__modsi3>:
    f764:	20000316 	blt	r4,zero,f774 <__modsi3+0x10>
    f768:	28000c16 	blt	r5,zero,f79c <__modsi3+0x38>
    f76c:	01800044 	movi	r6,1
    f770:	000f6ac1 	jmpi	f6ac <udivmodsi4>
    f774:	deffff04 	addi	sp,sp,-4
    f778:	dfc00015 	stw	ra,0(sp)
    f77c:	0109c83a 	sub	r4,zero,r4
    f780:	28000916 	blt	r5,zero,f7a8 <__modsi3+0x44>
    f784:	01800044 	movi	r6,1
    f788:	000f6ac0 	call	f6ac <udivmodsi4>
    f78c:	0085c83a 	sub	r2,zero,r2
    f790:	dfc00017 	ldw	ra,0(sp)
    f794:	dec00104 	addi	sp,sp,4
    f798:	f800283a 	ret
    f79c:	014bc83a 	sub	r5,zero,r5
    f7a0:	01800044 	movi	r6,1
    f7a4:	000f6ac1 	jmpi	f6ac <udivmodsi4>
    f7a8:	014bc83a 	sub	r5,zero,r5
    f7ac:	003ff506 	br	f784 <__alt_data_end+0xfe00f784>

0000f7b0 <__udivsi3>:
    f7b0:	000d883a 	mov	r6,zero
    f7b4:	000f6ac1 	jmpi	f6ac <udivmodsi4>

0000f7b8 <__umodsi3>:
    f7b8:	01800044 	movi	r6,1
    f7bc:	000f6ac1 	jmpi	f6ac <udivmodsi4>

0000f7c0 <__eqsf2>:
    f7c0:	200cd5fa 	srli	r6,r4,23
    f7c4:	280ed5fa 	srli	r7,r5,23
    f7c8:	00c02034 	movhi	r3,128
    f7cc:	18ffffc4 	addi	r3,r3,-1
    f7d0:	31803fcc 	andi	r6,r6,255
    f7d4:	02003fc4 	movi	r8,255
    f7d8:	1904703a 	and	r2,r3,r4
    f7dc:	39c03fcc 	andi	r7,r7,255
    f7e0:	1946703a 	and	r3,r3,r5
    f7e4:	2008d7fa 	srli	r4,r4,31
    f7e8:	280ad7fa 	srli	r5,r5,31
    f7ec:	32000c26 	beq	r6,r8,f820 <__eqsf2+0x60>
    f7f0:	02003fc4 	movi	r8,255
    f7f4:	3a000326 	beq	r7,r8,f804 <__eqsf2+0x44>
    f7f8:	31c00426 	beq	r6,r7,f80c <__eqsf2+0x4c>
    f7fc:	00800044 	movi	r2,1
    f800:	f800283a 	ret
    f804:	183ffd1e 	bne	r3,zero,f7fc <__alt_data_end+0xfe00f7fc>
    f808:	31fffc1e 	bne	r6,r7,f7fc <__alt_data_end+0xfe00f7fc>
    f80c:	10fffb1e 	bne	r2,r3,f7fc <__alt_data_end+0xfe00f7fc>
    f810:	21400626 	beq	r4,r5,f82c <__eqsf2+0x6c>
    f814:	303ff91e 	bne	r6,zero,f7fc <__alt_data_end+0xfe00f7fc>
    f818:	1004c03a 	cmpne	r2,r2,zero
    f81c:	f800283a 	ret
    f820:	103ff326 	beq	r2,zero,f7f0 <__alt_data_end+0xfe00f7f0>
    f824:	00800044 	movi	r2,1
    f828:	f800283a 	ret
    f82c:	0005883a 	mov	r2,zero
    f830:	f800283a 	ret

0000f834 <__gesf2>:
    f834:	2004d5fa 	srli	r2,r4,23
    f838:	280cd5fa 	srli	r6,r5,23
    f83c:	00c02034 	movhi	r3,128
    f840:	18ffffc4 	addi	r3,r3,-1
    f844:	10803fcc 	andi	r2,r2,255
    f848:	01c03fc4 	movi	r7,255
    f84c:	1910703a 	and	r8,r3,r4
    f850:	31803fcc 	andi	r6,r6,255
    f854:	1946703a 	and	r3,r3,r5
    f858:	2008d7fa 	srli	r4,r4,31
    f85c:	280ad7fa 	srli	r5,r5,31
    f860:	11c01826 	beq	r2,r7,f8c4 <__gesf2+0x90>
    f864:	01c03fc4 	movi	r7,255
    f868:	31c00826 	beq	r6,r7,f88c <__gesf2+0x58>
    f86c:	10000a1e 	bne	r2,zero,f898 <__gesf2+0x64>
    f870:	400f003a 	cmpeq	r7,r8,zero
    f874:	3813883a 	mov	r9,r7
    f878:	30000926 	beq	r6,zero,f8a0 <__gesf2+0x6c>
    f87c:	38001326 	beq	r7,zero,f8cc <__gesf2+0x98>
    f880:	28000b1e 	bne	r5,zero,f8b0 <__gesf2+0x7c>
    f884:	00bfffc4 	movi	r2,-1
    f888:	f800283a 	ret
    f88c:	183ff726 	beq	r3,zero,f86c <__alt_data_end+0xfe00f86c>
    f890:	00bfff84 	movi	r2,-2
    f894:	f800283a 	ret
    f898:	30000c1e 	bne	r6,zero,f8cc <__gesf2+0x98>
    f89c:	0013883a 	mov	r9,zero
    f8a0:	180f003a 	cmpeq	r7,r3,zero
    f8a4:	4800041e 	bne	r9,zero,f8b8 <__gesf2+0x84>
    f8a8:	38000826 	beq	r7,zero,f8cc <__gesf2+0x98>
    f8ac:	203ff51e 	bne	r4,zero,f884 <__alt_data_end+0xfe00f884>
    f8b0:	00800044 	movi	r2,1
    f8b4:	f800283a 	ret
    f8b8:	383ff126 	beq	r7,zero,f880 <__alt_data_end+0xfe00f880>
    f8bc:	0005883a 	mov	r2,zero
    f8c0:	f800283a 	ret
    f8c4:	403fe726 	beq	r8,zero,f864 <__alt_data_end+0xfe00f864>
    f8c8:	003ff106 	br	f890 <__alt_data_end+0xfe00f890>
    f8cc:	217ff71e 	bne	r4,r5,f8ac <__alt_data_end+0xfe00f8ac>
    f8d0:	30bff616 	blt	r6,r2,f8ac <__alt_data_end+0xfe00f8ac>
    f8d4:	11800216 	blt	r2,r6,f8e0 <__gesf2+0xac>
    f8d8:	1a3ff436 	bltu	r3,r8,f8ac <__alt_data_end+0xfe00f8ac>
    f8dc:	40fff72e 	bgeu	r8,r3,f8bc <__alt_data_end+0xfe00f8bc>
    f8e0:	203fe826 	beq	r4,zero,f884 <__alt_data_end+0xfe00f884>
    f8e4:	003ff206 	br	f8b0 <__alt_data_end+0xfe00f8b0>

0000f8e8 <__lesf2>:
    f8e8:	2006d5fa 	srli	r3,r4,23
    f8ec:	280cd5fa 	srli	r6,r5,23
    f8f0:	00802034 	movhi	r2,128
    f8f4:	10bfffc4 	addi	r2,r2,-1
    f8f8:	18c03fcc 	andi	r3,r3,255
    f8fc:	01c03fc4 	movi	r7,255
    f900:	1110703a 	and	r8,r2,r4
    f904:	31803fcc 	andi	r6,r6,255
    f908:	1144703a 	and	r2,r2,r5
    f90c:	2008d7fa 	srli	r4,r4,31
    f910:	280ad7fa 	srli	r5,r5,31
    f914:	19c01d26 	beq	r3,r7,f98c <__lesf2+0xa4>
    f918:	01c03fc4 	movi	r7,255
    f91c:	31c01526 	beq	r6,r7,f974 <__lesf2+0x8c>
    f920:	18000a26 	beq	r3,zero,f94c <__lesf2+0x64>
    f924:	21003fcc 	andi	r4,r4,255
    f928:	29403fcc 	andi	r5,r5,255
    f92c:	30000d1e 	bne	r6,zero,f964 <__lesf2+0x7c>
    f930:	0013883a 	mov	r9,zero
    f934:	100f003a 	cmpeq	r7,r2,zero
    f938:	48001126 	beq	r9,zero,f980 <__lesf2+0x98>
    f93c:	38001a1e 	bne	r7,zero,f9a8 <__lesf2+0xc0>
    f940:	28000a1e 	bne	r5,zero,f96c <__lesf2+0x84>
    f944:	00bfffc4 	movi	r2,-1
    f948:	f800283a 	ret
    f94c:	400f003a 	cmpeq	r7,r8,zero
    f950:	3813883a 	mov	r9,r7
    f954:	21003fcc 	andi	r4,r4,255
    f958:	29403fcc 	andi	r5,r5,255
    f95c:	303ff526 	beq	r6,zero,f934 <__alt_data_end+0xfe00f934>
    f960:	383ff71e 	bne	r7,zero,f940 <__alt_data_end+0xfe00f940>
    f964:	21400c26 	beq	r4,r5,f998 <__lesf2+0xb0>
    f968:	203ff61e 	bne	r4,zero,f944 <__alt_data_end+0xfe00f944>
    f96c:	00800044 	movi	r2,1
    f970:	f800283a 	ret
    f974:	103fea26 	beq	r2,zero,f920 <__alt_data_end+0xfe00f920>
    f978:	00800084 	movi	r2,2
    f97c:	f800283a 	ret
    f980:	383ff826 	beq	r7,zero,f964 <__alt_data_end+0xfe00f964>
    f984:	203ff926 	beq	r4,zero,f96c <__alt_data_end+0xfe00f96c>
    f988:	003fee06 	br	f944 <__alt_data_end+0xfe00f944>
    f98c:	403fe226 	beq	r8,zero,f918 <__alt_data_end+0xfe00f918>
    f990:	00800084 	movi	r2,2
    f994:	f800283a 	ret
    f998:	30fff316 	blt	r6,r3,f968 <__alt_data_end+0xfe00f968>
    f99c:	19800416 	blt	r3,r6,f9b0 <__lesf2+0xc8>
    f9a0:	123ff136 	bltu	r2,r8,f968 <__alt_data_end+0xfe00f968>
    f9a4:	40800236 	bltu	r8,r2,f9b0 <__lesf2+0xc8>
    f9a8:	0005883a 	mov	r2,zero
    f9ac:	f800283a 	ret
    f9b0:	203fe426 	beq	r4,zero,f944 <__alt_data_end+0xfe00f944>
    f9b4:	003fed06 	br	f96c <__alt_data_end+0xfe00f96c>

0000f9b8 <__adddf3>:
    f9b8:	00800434 	movhi	r2,16
    f9bc:	10bfffc4 	addi	r2,r2,-1
    f9c0:	defffb04 	addi	sp,sp,-20
    f9c4:	2890703a 	and	r8,r5,r2
    f9c8:	2806d7fa 	srli	r3,r5,31
    f9cc:	3884703a 	and	r2,r7,r2
    f9d0:	2014d77a 	srli	r10,r4,29
    f9d4:	3812d53a 	srli	r9,r7,20
    f9d8:	dc400115 	stw	r17,4(sp)
    f9dc:	100490fa 	slli	r2,r2,3
    f9e0:	2822d53a 	srli	r17,r5,20
    f9e4:	380ed7fa 	srli	r7,r7,31
    f9e8:	400a90fa 	slli	r5,r8,3
    f9ec:	3010d77a 	srli	r8,r6,29
    f9f0:	dc800215 	stw	r18,8(sp)
    f9f4:	dc000015 	stw	r16,0(sp)
    f9f8:	dfc00415 	stw	ra,16(sp)
    f9fc:	dcc00315 	stw	r19,12(sp)
    fa00:	1c803fcc 	andi	r18,r3,255
    fa04:	202090fa 	slli	r16,r4,3
    fa08:	8c41ffcc 	andi	r17,r17,2047
    fa0c:	2a8ab03a 	or	r5,r5,r10
    fa10:	4901ffcc 	andi	r4,r9,2047
    fa14:	1204b03a 	or	r2,r2,r8
    fa18:	300c90fa 	slli	r6,r6,3
    fa1c:	91c07126 	beq	r18,r7,fbe4 <__adddf3+0x22c>
    fa20:	8907c83a 	sub	r3,r17,r4
    fa24:	00c0a00e 	bge	zero,r3,fca8 <__adddf3+0x2f0>
    fa28:	2000291e 	bne	r4,zero,fad0 <__adddf3+0x118>
    fa2c:	1188b03a 	or	r4,r2,r6
    fa30:	20008b1e 	bne	r4,zero,fc60 <__adddf3+0x2a8>
    fa34:	808001cc 	andi	r2,r16,7
    fa38:	10005a26 	beq	r2,zero,fba4 <__adddf3+0x1ec>
    fa3c:	80c003cc 	andi	r3,r16,15
    fa40:	00800104 	movi	r2,4
    fa44:	18805726 	beq	r3,r2,fba4 <__adddf3+0x1ec>
    fa48:	81000104 	addi	r4,r16,4
    fa4c:	2421803a 	cmpltu	r16,r4,r16
    fa50:	2c0b883a 	add	r5,r5,r16
    fa54:	2880202c 	andhi	r2,r5,128
    fa58:	9007883a 	mov	r3,r18
    fa5c:	2021883a 	mov	r16,r4
    fa60:	10005326 	beq	r2,zero,fbb0 <__adddf3+0x1f8>
    fa64:	8c400044 	addi	r17,r17,1
    fa68:	0081ffc4 	movi	r2,2047
    fa6c:	8880ae26 	beq	r17,r2,fd28 <__adddf3+0x370>
    fa70:	00bfe034 	movhi	r2,65408
    fa74:	10bfffc4 	addi	r2,r2,-1
    fa78:	288a703a 	and	r5,r5,r2
    fa7c:	2804977a 	slli	r2,r5,29
    fa80:	280a927a 	slli	r5,r5,9
    fa84:	8020d0fa 	srli	r16,r16,3
    fa88:	280ad33a 	srli	r5,r5,12
    fa8c:	1404b03a 	or	r2,r2,r16
    fa90:	8c41ffcc 	andi	r17,r17,2047
    fa94:	8822953a 	slli	r17,r17,20
    fa98:	18c03fcc 	andi	r3,r3,255
    fa9c:	180897fa 	slli	r4,r3,31
    faa0:	00c00434 	movhi	r3,16
    faa4:	18ffffc4 	addi	r3,r3,-1
    faa8:	28c6703a 	and	r3,r5,r3
    faac:	1c46b03a 	or	r3,r3,r17
    fab0:	1906b03a 	or	r3,r3,r4
    fab4:	dfc00417 	ldw	ra,16(sp)
    fab8:	dcc00317 	ldw	r19,12(sp)
    fabc:	dc800217 	ldw	r18,8(sp)
    fac0:	dc400117 	ldw	r17,4(sp)
    fac4:	dc000017 	ldw	r16,0(sp)
    fac8:	dec00504 	addi	sp,sp,20
    facc:	f800283a 	ret
    fad0:	0101ffc4 	movi	r4,2047
    fad4:	893fd726 	beq	r17,r4,fa34 <__alt_data_end+0xfe00fa34>
    fad8:	10802034 	orhi	r2,r2,128
    fadc:	01000e04 	movi	r4,56
    fae0:	20c09416 	blt	r4,r3,fd34 <__adddf3+0x37c>
    fae4:	010007c4 	movi	r4,31
    fae8:	20c0b716 	blt	r4,r3,fdc8 <__adddf3+0x410>
    faec:	01000804 	movi	r4,32
    faf0:	20c9c83a 	sub	r4,r4,r3
    faf4:	30ced83a 	srl	r7,r6,r3
    faf8:	1110983a 	sll	r8,r2,r4
    fafc:	3108983a 	sll	r4,r6,r4
    fb00:	10c6d83a 	srl	r3,r2,r3
    fb04:	41c4b03a 	or	r2,r8,r7
    fb08:	2008c03a 	cmpne	r4,r4,zero
    fb0c:	110cb03a 	or	r6,r2,r4
    fb10:	818dc83a 	sub	r6,r16,r6
    fb14:	81a1803a 	cmpltu	r16,r16,r6
    fb18:	28cbc83a 	sub	r5,r5,r3
    fb1c:	2c0bc83a 	sub	r5,r5,r16
    fb20:	3021883a 	mov	r16,r6
    fb24:	2880202c 	andhi	r2,r5,128
    fb28:	103fc226 	beq	r2,zero,fa34 <__alt_data_end+0xfe00fa34>
    fb2c:	04c02034 	movhi	r19,128
    fb30:	9cffffc4 	addi	r19,r19,-1
    fb34:	2ce6703a 	and	r19,r5,r19
    fb38:	98006c26 	beq	r19,zero,fcec <__adddf3+0x334>
    fb3c:	9809883a 	mov	r4,r19
    fb40:	00120700 	call	12070 <__clzsi2>
    fb44:	10fffe04 	addi	r3,r2,-8
    fb48:	010007c4 	movi	r4,31
    fb4c:	20c06d16 	blt	r4,r3,fd04 <__adddf3+0x34c>
    fb50:	01000a04 	movi	r4,40
    fb54:	2085c83a 	sub	r2,r4,r2
    fb58:	8084d83a 	srl	r2,r16,r2
    fb5c:	98e6983a 	sll	r19,r19,r3
    fb60:	80e0983a 	sll	r16,r16,r3
    fb64:	14c4b03a 	or	r2,r2,r19
    fb68:	1c406a16 	blt	r3,r17,fd14 <__adddf3+0x35c>
    fb6c:	1c63c83a 	sub	r17,r3,r17
    fb70:	89400044 	addi	r5,r17,1
    fb74:	00c007c4 	movi	r3,31
    fb78:	19408616 	blt	r3,r5,fd94 <__adddf3+0x3dc>
    fb7c:	1c47c83a 	sub	r3,r3,r17
    fb80:	8148d83a 	srl	r4,r16,r5
    fb84:	80e0983a 	sll	r16,r16,r3
    fb88:	10c6983a 	sll	r3,r2,r3
    fb8c:	114ad83a 	srl	r5,r2,r5
    fb90:	8004c03a 	cmpne	r2,r16,zero
    fb94:	20e0b03a 	or	r16,r4,r3
    fb98:	80a0b03a 	or	r16,r16,r2
    fb9c:	0023883a 	mov	r17,zero
    fba0:	003fa406 	br	fa34 <__alt_data_end+0xfe00fa34>
    fba4:	2880202c 	andhi	r2,r5,128
    fba8:	9007883a 	mov	r3,r18
    fbac:	103fad1e 	bne	r2,zero,fa64 <__alt_data_end+0xfe00fa64>
    fbb0:	2804977a 	slli	r2,r5,29
    fbb4:	8020d0fa 	srli	r16,r16,3
    fbb8:	0101ffc4 	movi	r4,2047
    fbbc:	280ad0fa 	srli	r5,r5,3
    fbc0:	1404b03a 	or	r2,r2,r16
    fbc4:	8900031e 	bne	r17,r4,fbd4 <__adddf3+0x21c>
    fbc8:	1148b03a 	or	r4,r2,r5
    fbcc:	20005626 	beq	r4,zero,fd28 <__adddf3+0x370>
    fbd0:	29400234 	orhi	r5,r5,8
    fbd4:	01000434 	movhi	r4,16
    fbd8:	213fffc4 	addi	r4,r4,-1
    fbdc:	290a703a 	and	r5,r5,r4
    fbe0:	003fab06 	br	fa90 <__alt_data_end+0xfe00fa90>
    fbe4:	890fc83a 	sub	r7,r17,r4
    fbe8:	01c0560e 	bge	zero,r7,fd44 <__adddf3+0x38c>
    fbec:	20002426 	beq	r4,zero,fc80 <__adddf3+0x2c8>
    fbf0:	0101ffc4 	movi	r4,2047
    fbf4:	893f8f26 	beq	r17,r4,fa34 <__alt_data_end+0xfe00fa34>
    fbf8:	10802034 	orhi	r2,r2,128
    fbfc:	01000e04 	movi	r4,56
    fc00:	21c09d0e 	bge	r4,r7,fe78 <__adddf3+0x4c0>
    fc04:	118cb03a 	or	r6,r2,r6
    fc08:	300cc03a 	cmpne	r6,r6,zero
    fc0c:	000f883a 	mov	r7,zero
    fc10:	340d883a 	add	r6,r6,r16
    fc14:	3421803a 	cmpltu	r16,r6,r16
    fc18:	394b883a 	add	r5,r7,r5
    fc1c:	2c0b883a 	add	r5,r5,r16
    fc20:	3021883a 	mov	r16,r6
    fc24:	2880202c 	andhi	r2,r5,128
    fc28:	103f8226 	beq	r2,zero,fa34 <__alt_data_end+0xfe00fa34>
    fc2c:	8c400044 	addi	r17,r17,1
    fc30:	0081ffc4 	movi	r2,2047
    fc34:	8880cb26 	beq	r17,r2,ff64 <__adddf3+0x5ac>
    fc38:	00bfe034 	movhi	r2,65408
    fc3c:	10bfffc4 	addi	r2,r2,-1
    fc40:	288a703a 	and	r5,r5,r2
    fc44:	8006d07a 	srli	r3,r16,1
    fc48:	280497fa 	slli	r2,r5,31
    fc4c:	8400004c 	andi	r16,r16,1
    fc50:	80e0b03a 	or	r16,r16,r3
    fc54:	80a0b03a 	or	r16,r16,r2
    fc58:	280ad07a 	srli	r5,r5,1
    fc5c:	003f7506 	br	fa34 <__alt_data_end+0xfe00fa34>
    fc60:	18ffffc4 	addi	r3,r3,-1
    fc64:	1800481e 	bne	r3,zero,fd88 <__adddf3+0x3d0>
    fc68:	818dc83a 	sub	r6,r16,r6
    fc6c:	81a1803a 	cmpltu	r16,r16,r6
    fc70:	288bc83a 	sub	r5,r5,r2
    fc74:	2c0bc83a 	sub	r5,r5,r16
    fc78:	3021883a 	mov	r16,r6
    fc7c:	003fa906 	br	fb24 <__alt_data_end+0xfe00fb24>
    fc80:	1188b03a 	or	r4,r2,r6
    fc84:	203f6b26 	beq	r4,zero,fa34 <__alt_data_end+0xfe00fa34>
    fc88:	39ffffc4 	addi	r7,r7,-1
    fc8c:	3800931e 	bne	r7,zero,fedc <__adddf3+0x524>
    fc90:	340d883a 	add	r6,r6,r16
    fc94:	3421803a 	cmpltu	r16,r6,r16
    fc98:	114b883a 	add	r5,r2,r5
    fc9c:	2c0b883a 	add	r5,r5,r16
    fca0:	3021883a 	mov	r16,r6
    fca4:	003fdf06 	br	fc24 <__alt_data_end+0xfe00fc24>
    fca8:	1800531e 	bne	r3,zero,fdf8 <__adddf3+0x440>
    fcac:	88c00044 	addi	r3,r17,1
    fcb0:	18c1ffcc 	andi	r3,r3,2047
    fcb4:	01000044 	movi	r4,1
    fcb8:	20c0a00e 	bge	r4,r3,ff3c <__adddf3+0x584>
    fcbc:	8187c83a 	sub	r3,r16,r6
    fcc0:	80c9803a 	cmpltu	r4,r16,r3
    fcc4:	28a7c83a 	sub	r19,r5,r2
    fcc8:	9927c83a 	sub	r19,r19,r4
    fccc:	9900202c 	andhi	r4,r19,128
    fcd0:	20006226 	beq	r4,zero,fe5c <__adddf3+0x4a4>
    fcd4:	3421c83a 	sub	r16,r6,r16
    fcd8:	1145c83a 	sub	r2,r2,r5
    fcdc:	340d803a 	cmpltu	r6,r6,r16
    fce0:	11a7c83a 	sub	r19,r2,r6
    fce4:	3825883a 	mov	r18,r7
    fce8:	983f941e 	bne	r19,zero,fb3c <__alt_data_end+0xfe00fb3c>
    fcec:	8009883a 	mov	r4,r16
    fcf0:	00120700 	call	12070 <__clzsi2>
    fcf4:	10800804 	addi	r2,r2,32
    fcf8:	10fffe04 	addi	r3,r2,-8
    fcfc:	010007c4 	movi	r4,31
    fd00:	20ff930e 	bge	r4,r3,fb50 <__alt_data_end+0xfe00fb50>
    fd04:	10bff604 	addi	r2,r2,-40
    fd08:	8084983a 	sll	r2,r16,r2
    fd0c:	0021883a 	mov	r16,zero
    fd10:	1c7f960e 	bge	r3,r17,fb6c <__alt_data_end+0xfe00fb6c>
    fd14:	017fe034 	movhi	r5,65408
    fd18:	297fffc4 	addi	r5,r5,-1
    fd1c:	88e3c83a 	sub	r17,r17,r3
    fd20:	114a703a 	and	r5,r2,r5
    fd24:	003f4306 	br	fa34 <__alt_data_end+0xfe00fa34>
    fd28:	000b883a 	mov	r5,zero
    fd2c:	0005883a 	mov	r2,zero
    fd30:	003f5706 	br	fa90 <__alt_data_end+0xfe00fa90>
    fd34:	118cb03a 	or	r6,r2,r6
    fd38:	300cc03a 	cmpne	r6,r6,zero
    fd3c:	0007883a 	mov	r3,zero
    fd40:	003f7306 	br	fb10 <__alt_data_end+0xfe00fb10>
    fd44:	3800961e 	bne	r7,zero,ffa0 <__adddf3+0x5e8>
    fd48:	89000044 	addi	r4,r17,1
    fd4c:	2201ffcc 	andi	r8,r4,2047
    fd50:	01c00044 	movi	r7,1
    fd54:	3a00680e 	bge	r7,r8,fef8 <__adddf3+0x540>
    fd58:	01c1ffc4 	movi	r7,2047
    fd5c:	21c0a726 	beq	r4,r7,fffc <__adddf3+0x644>
    fd60:	340d883a 	add	r6,r6,r16
    fd64:	3421803a 	cmpltu	r16,r6,r16
    fd68:	114b883a 	add	r5,r2,r5
    fd6c:	2c0b883a 	add	r5,r5,r16
    fd70:	282097fa 	slli	r16,r5,31
    fd74:	300cd07a 	srli	r6,r6,1
    fd78:	280ad07a 	srli	r5,r5,1
    fd7c:	2023883a 	mov	r17,r4
    fd80:	81a0b03a 	or	r16,r16,r6
    fd84:	003f2b06 	br	fa34 <__alt_data_end+0xfe00fa34>
    fd88:	0101ffc4 	movi	r4,2047
    fd8c:	893f531e 	bne	r17,r4,fadc <__alt_data_end+0xfe00fadc>
    fd90:	003f2806 	br	fa34 <__alt_data_end+0xfe00fa34>
    fd94:	893ff844 	addi	r4,r17,-31
    fd98:	00c00804 	movi	r3,32
    fd9c:	1108d83a 	srl	r4,r2,r4
    fda0:	28c05126 	beq	r5,r3,fee8 <__adddf3+0x530>
    fda4:	00c00fc4 	movi	r3,63
    fda8:	1c63c83a 	sub	r17,r3,r17
    fdac:	1444983a 	sll	r2,r2,r17
    fdb0:	1420b03a 	or	r16,r2,r16
    fdb4:	8020c03a 	cmpne	r16,r16,zero
    fdb8:	8120b03a 	or	r16,r16,r4
    fdbc:	000b883a 	mov	r5,zero
    fdc0:	0023883a 	mov	r17,zero
    fdc4:	003f1b06 	br	fa34 <__alt_data_end+0xfe00fa34>
    fdc8:	193ff804 	addi	r4,r3,-32
    fdcc:	01c00804 	movi	r7,32
    fdd0:	1108d83a 	srl	r4,r2,r4
    fdd4:	19c04626 	beq	r3,r7,fef0 <__adddf3+0x538>
    fdd8:	01c01004 	movi	r7,64
    fddc:	38c7c83a 	sub	r3,r7,r3
    fde0:	10c4983a 	sll	r2,r2,r3
    fde4:	118cb03a 	or	r6,r2,r6
    fde8:	300cc03a 	cmpne	r6,r6,zero
    fdec:	310cb03a 	or	r6,r6,r4
    fdf0:	0007883a 	mov	r3,zero
    fdf4:	003f4606 	br	fb10 <__alt_data_end+0xfe00fb10>
    fdf8:	88002b26 	beq	r17,zero,fea8 <__adddf3+0x4f0>
    fdfc:	0201ffc4 	movi	r8,2047
    fe00:	22002f26 	beq	r4,r8,fec0 <__adddf3+0x508>
    fe04:	00c7c83a 	sub	r3,zero,r3
    fe08:	29402034 	orhi	r5,r5,128
    fe0c:	02000e04 	movi	r8,56
    fe10:	40c07616 	blt	r8,r3,ffec <__adddf3+0x634>
    fe14:	020007c4 	movi	r8,31
    fe18:	40c0d216 	blt	r8,r3,10164 <__adddf3+0x7ac>
    fe1c:	02000804 	movi	r8,32
    fe20:	40d1c83a 	sub	r8,r8,r3
    fe24:	2a14983a 	sll	r10,r5,r8
    fe28:	80d2d83a 	srl	r9,r16,r3
    fe2c:	8210983a 	sll	r8,r16,r8
    fe30:	28cad83a 	srl	r5,r5,r3
    fe34:	5252b03a 	or	r9,r10,r9
    fe38:	4006c03a 	cmpne	r3,r8,zero
    fe3c:	48e0b03a 	or	r16,r9,r3
    fe40:	3421c83a 	sub	r16,r6,r16
    fe44:	114bc83a 	sub	r5,r2,r5
    fe48:	340d803a 	cmpltu	r6,r6,r16
    fe4c:	298bc83a 	sub	r5,r5,r6
    fe50:	2023883a 	mov	r17,r4
    fe54:	3825883a 	mov	r18,r7
    fe58:	003f3206 	br	fb24 <__alt_data_end+0xfe00fb24>
    fe5c:	98c4b03a 	or	r2,r19,r3
    fe60:	10001c1e 	bne	r2,zero,fed4 <__adddf3+0x51c>
    fe64:	0007883a 	mov	r3,zero
    fe68:	000b883a 	mov	r5,zero
    fe6c:	0021883a 	mov	r16,zero
    fe70:	0023883a 	mov	r17,zero
    fe74:	003f4e06 	br	fbb0 <__alt_data_end+0xfe00fbb0>
    fe78:	010007c4 	movi	r4,31
    fe7c:	21c03c16 	blt	r4,r7,ff70 <__adddf3+0x5b8>
    fe80:	01000804 	movi	r4,32
    fe84:	21c9c83a 	sub	r4,r4,r7
    fe88:	31d0d83a 	srl	r8,r6,r7
    fe8c:	1112983a 	sll	r9,r2,r4
    fe90:	3108983a 	sll	r4,r6,r4
    fe94:	11ced83a 	srl	r7,r2,r7
    fe98:	4a04b03a 	or	r2,r9,r8
    fe9c:	2008c03a 	cmpne	r4,r4,zero
    fea0:	110cb03a 	or	r6,r2,r4
    fea4:	003f5a06 	br	fc10 <__alt_data_end+0xfe00fc10>
    fea8:	2c10b03a 	or	r8,r5,r16
    feac:	40000426 	beq	r8,zero,fec0 <__adddf3+0x508>
    feb0:	00c6303a 	nor	r3,zero,r3
    feb4:	183fe226 	beq	r3,zero,fe40 <__alt_data_end+0xfe00fe40>
    feb8:	0201ffc4 	movi	r8,2047
    febc:	223fd31e 	bne	r4,r8,fe0c <__alt_data_end+0xfe00fe0c>
    fec0:	100b883a 	mov	r5,r2
    fec4:	3021883a 	mov	r16,r6
    fec8:	2023883a 	mov	r17,r4
    fecc:	3825883a 	mov	r18,r7
    fed0:	003ed806 	br	fa34 <__alt_data_end+0xfe00fa34>
    fed4:	1821883a 	mov	r16,r3
    fed8:	003f1706 	br	fb38 <__alt_data_end+0xfe00fb38>
    fedc:	0101ffc4 	movi	r4,2047
    fee0:	893f461e 	bne	r17,r4,fbfc <__alt_data_end+0xfe00fbfc>
    fee4:	003ed306 	br	fa34 <__alt_data_end+0xfe00fa34>
    fee8:	0005883a 	mov	r2,zero
    feec:	003fb006 	br	fdb0 <__alt_data_end+0xfe00fdb0>
    fef0:	0005883a 	mov	r2,zero
    fef4:	003fbb06 	br	fde4 <__alt_data_end+0xfe00fde4>
    fef8:	2c06b03a 	or	r3,r5,r16
    fefc:	8800841e 	bne	r17,zero,10110 <__adddf3+0x758>
    ff00:	1800b226 	beq	r3,zero,101cc <__adddf3+0x814>
    ff04:	1186b03a 	or	r3,r2,r6
    ff08:	183eca26 	beq	r3,zero,fa34 <__alt_data_end+0xfe00fa34>
    ff0c:	340d883a 	add	r6,r6,r16
    ff10:	114b883a 	add	r5,r2,r5
    ff14:	3421803a 	cmpltu	r16,r6,r16
    ff18:	2c0b883a 	add	r5,r5,r16
    ff1c:	2880202c 	andhi	r2,r5,128
    ff20:	1000c026 	beq	r2,zero,10224 <__adddf3+0x86c>
    ff24:	00bfe034 	movhi	r2,65408
    ff28:	10bfffc4 	addi	r2,r2,-1
    ff2c:	288a703a 	and	r5,r5,r2
    ff30:	3021883a 	mov	r16,r6
    ff34:	3823883a 	mov	r17,r7
    ff38:	003ebe06 	br	fa34 <__alt_data_end+0xfe00fa34>
    ff3c:	2c06b03a 	or	r3,r5,r16
    ff40:	8800221e 	bne	r17,zero,ffcc <__adddf3+0x614>
    ff44:	1800481e 	bne	r3,zero,10068 <__adddf3+0x6b0>
    ff48:	1186b03a 	or	r3,r2,r6
    ff4c:	18000426 	beq	r3,zero,ff60 <__adddf3+0x5a8>
    ff50:	100b883a 	mov	r5,r2
    ff54:	3021883a 	mov	r16,r6
    ff58:	3825883a 	mov	r18,r7
    ff5c:	003eb506 	br	fa34 <__alt_data_end+0xfe00fa34>
    ff60:	0007883a 	mov	r3,zero
    ff64:	000b883a 	mov	r5,zero
    ff68:	0021883a 	mov	r16,zero
    ff6c:	003f1006 	br	fbb0 <__alt_data_end+0xfe00fbb0>
    ff70:	393ff804 	addi	r4,r7,-32
    ff74:	02000804 	movi	r8,32
    ff78:	1108d83a 	srl	r4,r2,r4
    ff7c:	3a007726 	beq	r7,r8,1015c <__adddf3+0x7a4>
    ff80:	02001004 	movi	r8,64
    ff84:	41cfc83a 	sub	r7,r8,r7
    ff88:	11c4983a 	sll	r2,r2,r7
    ff8c:	118cb03a 	or	r6,r2,r6
    ff90:	300cc03a 	cmpne	r6,r6,zero
    ff94:	310cb03a 	or	r6,r6,r4
    ff98:	000f883a 	mov	r7,zero
    ff9c:	003f1c06 	br	fc10 <__alt_data_end+0xfe00fc10>
    ffa0:	88001a1e 	bne	r17,zero,1000c <__adddf3+0x654>
    ffa4:	2c10b03a 	or	r8,r5,r16
    ffa8:	40005526 	beq	r8,zero,10100 <__adddf3+0x748>
    ffac:	01ce303a 	nor	r7,zero,r7
    ffb0:	3800511e 	bne	r7,zero,100f8 <__adddf3+0x740>
    ffb4:	81a1883a 	add	r16,r16,r6
    ffb8:	114b883a 	add	r5,r2,r5
    ffbc:	818d803a 	cmpltu	r6,r16,r6
    ffc0:	298b883a 	add	r5,r5,r6
    ffc4:	2023883a 	mov	r17,r4
    ffc8:	003f1606 	br	fc24 <__alt_data_end+0xfe00fc24>
    ffcc:	1800341e 	bne	r3,zero,100a0 <__adddf3+0x6e8>
    ffd0:	1186b03a 	or	r3,r2,r6
    ffd4:	18006f26 	beq	r3,zero,10194 <__adddf3+0x7dc>
    ffd8:	100b883a 	mov	r5,r2
    ffdc:	3021883a 	mov	r16,r6
    ffe0:	3825883a 	mov	r18,r7
    ffe4:	0441ffc4 	movi	r17,2047
    ffe8:	003e9206 	br	fa34 <__alt_data_end+0xfe00fa34>
    ffec:	2c20b03a 	or	r16,r5,r16
    fff0:	8020c03a 	cmpne	r16,r16,zero
    fff4:	000b883a 	mov	r5,zero
    fff8:	003f9106 	br	fe40 <__alt_data_end+0xfe00fe40>
    fffc:	2023883a 	mov	r17,r4
   10000:	000b883a 	mov	r5,zero
   10004:	0021883a 	mov	r16,zero
   10008:	003ee906 	br	fbb0 <__alt_data_end+0xfe00fbb0>
   1000c:	0201ffc4 	movi	r8,2047
   10010:	22003b26 	beq	r4,r8,10100 <__adddf3+0x748>
   10014:	01cfc83a 	sub	r7,zero,r7
   10018:	29402034 	orhi	r5,r5,128
   1001c:	02000e04 	movi	r8,56
   10020:	41c06216 	blt	r8,r7,101ac <__adddf3+0x7f4>
   10024:	020007c4 	movi	r8,31
   10028:	41c07016 	blt	r8,r7,101ec <__adddf3+0x834>
   1002c:	02000804 	movi	r8,32
   10030:	41d1c83a 	sub	r8,r8,r7
   10034:	2a14983a 	sll	r10,r5,r8
   10038:	81d2d83a 	srl	r9,r16,r7
   1003c:	8210983a 	sll	r8,r16,r8
   10040:	29cad83a 	srl	r5,r5,r7
   10044:	5252b03a 	or	r9,r10,r9
   10048:	400ec03a 	cmpne	r7,r8,zero
   1004c:	49e0b03a 	or	r16,r9,r7
   10050:	81a1883a 	add	r16,r16,r6
   10054:	2885883a 	add	r2,r5,r2
   10058:	818d803a 	cmpltu	r6,r16,r6
   1005c:	118b883a 	add	r5,r2,r6
   10060:	2023883a 	mov	r17,r4
   10064:	003eef06 	br	fc24 <__alt_data_end+0xfe00fc24>
   10068:	1186b03a 	or	r3,r2,r6
   1006c:	183e7126 	beq	r3,zero,fa34 <__alt_data_end+0xfe00fa34>
   10070:	8187c83a 	sub	r3,r16,r6
   10074:	80d1803a 	cmpltu	r8,r16,r3
   10078:	2889c83a 	sub	r4,r5,r2
   1007c:	2209c83a 	sub	r4,r4,r8
   10080:	2200202c 	andhi	r8,r4,128
   10084:	40005426 	beq	r8,zero,101d8 <__adddf3+0x820>
   10088:	3421c83a 	sub	r16,r6,r16
   1008c:	114bc83a 	sub	r5,r2,r5
   10090:	340d803a 	cmpltu	r6,r6,r16
   10094:	298bc83a 	sub	r5,r5,r6
   10098:	3825883a 	mov	r18,r7
   1009c:	003e6506 	br	fa34 <__alt_data_end+0xfe00fa34>
   100a0:	1186b03a 	or	r3,r2,r6
   100a4:	18002b26 	beq	r3,zero,10154 <__adddf3+0x79c>
   100a8:	2806d0fa 	srli	r3,r5,3
   100ac:	8020d0fa 	srli	r16,r16,3
   100b0:	280a977a 	slli	r5,r5,29
   100b4:	1900022c 	andhi	r4,r3,8
   100b8:	2c20b03a 	or	r16,r5,r16
   100bc:	20000826 	beq	r4,zero,100e0 <__adddf3+0x728>
   100c0:	1008d0fa 	srli	r4,r2,3
   100c4:	2140022c 	andhi	r5,r4,8
   100c8:	2800051e 	bne	r5,zero,100e0 <__adddf3+0x728>
   100cc:	300cd0fa 	srli	r6,r6,3
   100d0:	1004977a 	slli	r2,r2,29
   100d4:	2007883a 	mov	r3,r4
   100d8:	3825883a 	mov	r18,r7
   100dc:	11a0b03a 	or	r16,r2,r6
   100e0:	800ad77a 	srli	r5,r16,29
   100e4:	180690fa 	slli	r3,r3,3
   100e8:	802090fa 	slli	r16,r16,3
   100ec:	0441ffc4 	movi	r17,2047
   100f0:	28cab03a 	or	r5,r5,r3
   100f4:	003e4f06 	br	fa34 <__alt_data_end+0xfe00fa34>
   100f8:	0201ffc4 	movi	r8,2047
   100fc:	223fc71e 	bne	r4,r8,1001c <__alt_data_end+0xfe01001c>
   10100:	100b883a 	mov	r5,r2
   10104:	3021883a 	mov	r16,r6
   10108:	2023883a 	mov	r17,r4
   1010c:	003e4906 	br	fa34 <__alt_data_end+0xfe00fa34>
   10110:	18002a26 	beq	r3,zero,101bc <__adddf3+0x804>
   10114:	1186b03a 	or	r3,r2,r6
   10118:	18000e26 	beq	r3,zero,10154 <__adddf3+0x79c>
   1011c:	2806d0fa 	srli	r3,r5,3
   10120:	8020d0fa 	srli	r16,r16,3
   10124:	280a977a 	slli	r5,r5,29
   10128:	1900022c 	andhi	r4,r3,8
   1012c:	2c20b03a 	or	r16,r5,r16
   10130:	203feb26 	beq	r4,zero,100e0 <__alt_data_end+0xfe0100e0>
   10134:	1008d0fa 	srli	r4,r2,3
   10138:	2140022c 	andhi	r5,r4,8
   1013c:	283fe81e 	bne	r5,zero,100e0 <__alt_data_end+0xfe0100e0>
   10140:	300cd0fa 	srli	r6,r6,3
   10144:	1004977a 	slli	r2,r2,29
   10148:	2007883a 	mov	r3,r4
   1014c:	11a0b03a 	or	r16,r2,r6
   10150:	003fe306 	br	100e0 <__alt_data_end+0xfe0100e0>
   10154:	0441ffc4 	movi	r17,2047
   10158:	003e3606 	br	fa34 <__alt_data_end+0xfe00fa34>
   1015c:	0005883a 	mov	r2,zero
   10160:	003f8a06 	br	ff8c <__alt_data_end+0xfe00ff8c>
   10164:	1a3ff804 	addi	r8,r3,-32
   10168:	02400804 	movi	r9,32
   1016c:	2a10d83a 	srl	r8,r5,r8
   10170:	1a402a26 	beq	r3,r9,1021c <__adddf3+0x864>
   10174:	02401004 	movi	r9,64
   10178:	48c7c83a 	sub	r3,r9,r3
   1017c:	28ca983a 	sll	r5,r5,r3
   10180:	2c20b03a 	or	r16,r5,r16
   10184:	8020c03a 	cmpne	r16,r16,zero
   10188:	8220b03a 	or	r16,r16,r8
   1018c:	000b883a 	mov	r5,zero
   10190:	003f2b06 	br	fe40 <__alt_data_end+0xfe00fe40>
   10194:	0007883a 	mov	r3,zero
   10198:	01402034 	movhi	r5,128
   1019c:	297fffc4 	addi	r5,r5,-1
   101a0:	043ffe04 	movi	r16,-8
   101a4:	0441ffc4 	movi	r17,2047
   101a8:	003e8106 	br	fbb0 <__alt_data_end+0xfe00fbb0>
   101ac:	2c20b03a 	or	r16,r5,r16
   101b0:	8020c03a 	cmpne	r16,r16,zero
   101b4:	000b883a 	mov	r5,zero
   101b8:	003fa506 	br	10050 <__alt_data_end+0xfe010050>
   101bc:	100b883a 	mov	r5,r2
   101c0:	3021883a 	mov	r16,r6
   101c4:	0441ffc4 	movi	r17,2047
   101c8:	003e1a06 	br	fa34 <__alt_data_end+0xfe00fa34>
   101cc:	100b883a 	mov	r5,r2
   101d0:	3021883a 	mov	r16,r6
   101d4:	003e1706 	br	fa34 <__alt_data_end+0xfe00fa34>
   101d8:	20c4b03a 	or	r2,r4,r3
   101dc:	103f6026 	beq	r2,zero,ff60 <__alt_data_end+0xfe00ff60>
   101e0:	200b883a 	mov	r5,r4
   101e4:	1821883a 	mov	r16,r3
   101e8:	003e1206 	br	fa34 <__alt_data_end+0xfe00fa34>
   101ec:	3a3ff804 	addi	r8,r7,-32
   101f0:	02400804 	movi	r9,32
   101f4:	2a10d83a 	srl	r8,r5,r8
   101f8:	3a400c26 	beq	r7,r9,1022c <__adddf3+0x874>
   101fc:	02401004 	movi	r9,64
   10200:	49cfc83a 	sub	r7,r9,r7
   10204:	29ca983a 	sll	r5,r5,r7
   10208:	2c20b03a 	or	r16,r5,r16
   1020c:	8020c03a 	cmpne	r16,r16,zero
   10210:	8220b03a 	or	r16,r16,r8
   10214:	000b883a 	mov	r5,zero
   10218:	003f8d06 	br	10050 <__alt_data_end+0xfe010050>
   1021c:	000b883a 	mov	r5,zero
   10220:	003fd706 	br	10180 <__alt_data_end+0xfe010180>
   10224:	3021883a 	mov	r16,r6
   10228:	003e0206 	br	fa34 <__alt_data_end+0xfe00fa34>
   1022c:	000b883a 	mov	r5,zero
   10230:	003ff506 	br	10208 <__alt_data_end+0xfe010208>

00010234 <__divdf3>:
   10234:	defff204 	addi	sp,sp,-56
   10238:	dcc00715 	stw	r19,28(sp)
   1023c:	2826d53a 	srli	r19,r5,20
   10240:	dd400915 	stw	r21,36(sp)
   10244:	282ad7fa 	srli	r21,r5,31
   10248:	ddc00b15 	stw	r23,44(sp)
   1024c:	dd800a15 	stw	r22,40(sp)
   10250:	dc800615 	stw	r18,24(sp)
   10254:	dfc00d15 	stw	ra,52(sp)
   10258:	04800434 	movhi	r18,16
   1025c:	94bfffc4 	addi	r18,r18,-1
   10260:	df000c15 	stw	fp,48(sp)
   10264:	dd000815 	stw	r20,32(sp)
   10268:	dc400515 	stw	r17,20(sp)
   1026c:	dc000415 	stw	r16,16(sp)
   10270:	9cc1ffcc 	andi	r19,r19,2047
   10274:	202d883a 	mov	r22,r4
   10278:	2ca4703a 	and	r18,r5,r18
   1027c:	adc03fcc 	andi	r23,r21,255
   10280:	98006a26 	beq	r19,zero,1042c <__divdf3+0x1f8>
   10284:	0081ffc4 	movi	r2,2047
   10288:	2021883a 	mov	r16,r4
   1028c:	98803726 	beq	r19,r2,1036c <__divdf3+0x138>
   10290:	90800434 	orhi	r2,r18,16
   10294:	100490fa 	slli	r2,r2,3
   10298:	2024d77a 	srli	r18,r4,29
   1029c:	202090fa 	slli	r16,r4,3
   102a0:	9cff0044 	addi	r19,r19,-1023
   102a4:	14a4b03a 	or	r18,r2,r18
   102a8:	0029883a 	mov	r20,zero
   102ac:	0039883a 	mov	fp,zero
   102b0:	3804d53a 	srli	r2,r7,20
   102b4:	382cd7fa 	srli	r22,r7,31
   102b8:	04400434 	movhi	r17,16
   102bc:	8c7fffc4 	addi	r17,r17,-1
   102c0:	1081ffcc 	andi	r2,r2,2047
   102c4:	3011883a 	mov	r8,r6
   102c8:	3c62703a 	and	r17,r7,r17
   102cc:	b2403fcc 	andi	r9,r22,255
   102d0:	10007326 	beq	r2,zero,104a0 <__divdf3+0x26c>
   102d4:	0101ffc4 	movi	r4,2047
   102d8:	11006b26 	beq	r2,r4,10488 <__divdf3+0x254>
   102dc:	89000434 	orhi	r4,r17,16
   102e0:	200890fa 	slli	r4,r4,3
   102e4:	3022d77a 	srli	r17,r6,29
   102e8:	301090fa 	slli	r8,r6,3
   102ec:	10bf0044 	addi	r2,r2,-1023
   102f0:	2462b03a 	or	r17,r4,r17
   102f4:	000d883a 	mov	r6,zero
   102f8:	ad8af03a 	xor	r5,r21,r22
   102fc:	3508b03a 	or	r4,r6,r20
   10300:	00c003c4 	movi	r3,15
   10304:	280f883a 	mov	r7,r5
   10308:	2d003fcc 	andi	r20,r5,255
   1030c:	19009236 	bltu	r3,r4,10558 <__divdf3+0x324>
   10310:	2109883a 	add	r4,r4,r4
   10314:	00c00074 	movhi	r3,1
   10318:	18c0cb04 	addi	r3,r3,812
   1031c:	2109883a 	add	r4,r4,r4
   10320:	20c9883a 	add	r4,r4,r3
   10324:	20c00017 	ldw	r3,0(r4)
   10328:	1800683a 	jmp	r3
   1032c:	00010558 	cmpnei	zero,zero,1045
   10330:	000103c8 	cmpgei	zero,zero,1039
   10334:	00010548 	cmpgei	zero,zero,1045
   10338:	00010398 	cmpnei	zero,zero,1038
   1033c:	00010548 	cmpgei	zero,zero,1045
   10340:	00010530 	cmpltui	zero,zero,1044
   10344:	00010548 	cmpgei	zero,zero,1045
   10348:	00010398 	cmpnei	zero,zero,1038
   1034c:	000103c8 	cmpgei	zero,zero,1039
   10350:	000103c8 	cmpgei	zero,zero,1039
   10354:	00010530 	cmpltui	zero,zero,1044
   10358:	00010398 	cmpnei	zero,zero,1038
   1035c:	00010388 	cmpgei	zero,zero,1038
   10360:	00010388 	cmpgei	zero,zero,1038
   10364:	00010388 	cmpgei	zero,zero,1038
   10368:	00010844 	movi	zero,1057
   1036c:	9104b03a 	or	r2,r18,r4
   10370:	10006c1e 	bne	r2,zero,10524 <__divdf3+0x2f0>
   10374:	05000204 	movi	r20,8
   10378:	0025883a 	mov	r18,zero
   1037c:	0021883a 	mov	r16,zero
   10380:	07000084 	movi	fp,2
   10384:	003fca06 	br	102b0 <__alt_data_end+0xfe0102b0>
   10388:	9023883a 	mov	r17,r18
   1038c:	8011883a 	mov	r8,r16
   10390:	b813883a 	mov	r9,r23
   10394:	e00d883a 	mov	r6,fp
   10398:	00800084 	movi	r2,2
   1039c:	30800926 	beq	r6,r2,103c4 <__divdf3+0x190>
   103a0:	008000c4 	movi	r2,3
   103a4:	3081d026 	beq	r6,r2,10ae8 <__divdf3+0x8b4>
   103a8:	00800044 	movi	r2,1
   103ac:	3081881e 	bne	r6,r2,109d0 <__divdf3+0x79c>
   103b0:	480f883a 	mov	r7,r9
   103b4:	0005883a 	mov	r2,zero
   103b8:	0025883a 	mov	r18,zero
   103bc:	0021883a 	mov	r16,zero
   103c0:	00000506 	br	103d8 <__divdf3+0x1a4>
   103c4:	4829883a 	mov	r20,r9
   103c8:	a1c0004c 	andi	r7,r20,1
   103cc:	0081ffc4 	movi	r2,2047
   103d0:	0025883a 	mov	r18,zero
   103d4:	0021883a 	mov	r16,zero
   103d8:	1004953a 	slli	r2,r2,20
   103dc:	39c03fcc 	andi	r7,r7,255
   103e0:	380e97fa 	slli	r7,r7,31
   103e4:	00c00434 	movhi	r3,16
   103e8:	18ffffc4 	addi	r3,r3,-1
   103ec:	90e4703a 	and	r18,r18,r3
   103f0:	9086b03a 	or	r3,r18,r2
   103f4:	19c6b03a 	or	r3,r3,r7
   103f8:	8005883a 	mov	r2,r16
   103fc:	dfc00d17 	ldw	ra,52(sp)
   10400:	df000c17 	ldw	fp,48(sp)
   10404:	ddc00b17 	ldw	r23,44(sp)
   10408:	dd800a17 	ldw	r22,40(sp)
   1040c:	dd400917 	ldw	r21,36(sp)
   10410:	dd000817 	ldw	r20,32(sp)
   10414:	dcc00717 	ldw	r19,28(sp)
   10418:	dc800617 	ldw	r18,24(sp)
   1041c:	dc400517 	ldw	r17,20(sp)
   10420:	dc000417 	ldw	r16,16(sp)
   10424:	dec00e04 	addi	sp,sp,56
   10428:	f800283a 	ret
   1042c:	9104b03a 	or	r2,r18,r4
   10430:	10003726 	beq	r2,zero,10510 <__divdf3+0x2dc>
   10434:	90012626 	beq	r18,zero,108d0 <__divdf3+0x69c>
   10438:	9009883a 	mov	r4,r18
   1043c:	d9800215 	stw	r6,8(sp)
   10440:	d9c00115 	stw	r7,4(sp)
   10444:	00120700 	call	12070 <__clzsi2>
   10448:	d9800217 	ldw	r6,8(sp)
   1044c:	d9c00117 	ldw	r7,4(sp)
   10450:	00c009c4 	movi	r3,39
   10454:	18811a16 	blt	r3,r2,108c0 <__divdf3+0x68c>
   10458:	01400a04 	movi	r5,40
   1045c:	143ffe04 	addi	r16,r2,-8
   10460:	288bc83a 	sub	r5,r5,r2
   10464:	9424983a 	sll	r18,r18,r16
   10468:	b14ad83a 	srl	r5,r22,r5
   1046c:	b420983a 	sll	r16,r22,r16
   10470:	2ca4b03a 	or	r18,r5,r18
   10474:	04ff0344 	movi	r19,-1011
   10478:	98a7c83a 	sub	r19,r19,r2
   1047c:	0029883a 	mov	r20,zero
   10480:	0039883a 	mov	fp,zero
   10484:	003f8a06 	br	102b0 <__alt_data_end+0xfe0102b0>
   10488:	8988b03a 	or	r4,r17,r6
   1048c:	20001e1e 	bne	r4,zero,10508 <__divdf3+0x2d4>
   10490:	0023883a 	mov	r17,zero
   10494:	0011883a 	mov	r8,zero
   10498:	01800084 	movi	r6,2
   1049c:	003f9606 	br	102f8 <__alt_data_end+0xfe0102f8>
   104a0:	8988b03a 	or	r4,r17,r6
   104a4:	20001426 	beq	r4,zero,104f8 <__divdf3+0x2c4>
   104a8:	8800fd26 	beq	r17,zero,108a0 <__divdf3+0x66c>
   104ac:	8809883a 	mov	r4,r17
   104b0:	d9800215 	stw	r6,8(sp)
   104b4:	da400115 	stw	r9,4(sp)
   104b8:	00120700 	call	12070 <__clzsi2>
   104bc:	d9800217 	ldw	r6,8(sp)
   104c0:	da400117 	ldw	r9,4(sp)
   104c4:	010009c4 	movi	r4,39
   104c8:	2080f116 	blt	r4,r2,10890 <__divdf3+0x65c>
   104cc:	01000a04 	movi	r4,40
   104d0:	123ffe04 	addi	r8,r2,-8
   104d4:	2089c83a 	sub	r4,r4,r2
   104d8:	8a22983a 	sll	r17,r17,r8
   104dc:	3108d83a 	srl	r4,r6,r4
   104e0:	3210983a 	sll	r8,r6,r8
   104e4:	2462b03a 	or	r17,r4,r17
   104e8:	013f0344 	movi	r4,-1011
   104ec:	2085c83a 	sub	r2,r4,r2
   104f0:	000d883a 	mov	r6,zero
   104f4:	003f8006 	br	102f8 <__alt_data_end+0xfe0102f8>
   104f8:	0023883a 	mov	r17,zero
   104fc:	0011883a 	mov	r8,zero
   10500:	01800044 	movi	r6,1
   10504:	003f7c06 	br	102f8 <__alt_data_end+0xfe0102f8>
   10508:	018000c4 	movi	r6,3
   1050c:	003f7a06 	br	102f8 <__alt_data_end+0xfe0102f8>
   10510:	05000104 	movi	r20,4
   10514:	0025883a 	mov	r18,zero
   10518:	0021883a 	mov	r16,zero
   1051c:	07000044 	movi	fp,1
   10520:	003f6306 	br	102b0 <__alt_data_end+0xfe0102b0>
   10524:	05000304 	movi	r20,12
   10528:	070000c4 	movi	fp,3
   1052c:	003f6006 	br	102b0 <__alt_data_end+0xfe0102b0>
   10530:	000f883a 	mov	r7,zero
   10534:	04800434 	movhi	r18,16
   10538:	94bfffc4 	addi	r18,r18,-1
   1053c:	043fffc4 	movi	r16,-1
   10540:	0081ffc4 	movi	r2,2047
   10544:	003fa406 	br	103d8 <__alt_data_end+0xfe0103d8>
   10548:	0005883a 	mov	r2,zero
   1054c:	0025883a 	mov	r18,zero
   10550:	0021883a 	mov	r16,zero
   10554:	003fa006 	br	103d8 <__alt_data_end+0xfe0103d8>
   10558:	9885c83a 	sub	r2,r19,r2
   1055c:	d8800015 	stw	r2,0(sp)
   10560:	8c80ef36 	bltu	r17,r18,10920 <__divdf3+0x6ec>
   10564:	9440ed26 	beq	r18,r17,1091c <__divdf3+0x6e8>
   10568:	d8c00017 	ldw	r3,0(sp)
   1056c:	002d883a 	mov	r22,zero
   10570:	18ffffc4 	addi	r3,r3,-1
   10574:	d8c00015 	stw	r3,0(sp)
   10578:	9007883a 	mov	r3,r18
   1057c:	4026d63a 	srli	r19,r8,24
   10580:	8822923a 	slli	r17,r17,8
   10584:	1809883a 	mov	r4,r3
   10588:	402e923a 	slli	r23,r8,8
   1058c:	9c66b03a 	or	r19,r19,r17
   10590:	982ad43a 	srli	r21,r19,16
   10594:	d8c00315 	stw	r3,12(sp)
   10598:	9f3fffcc 	andi	fp,r19,65535
   1059c:	a80b883a 	mov	r5,r21
   105a0:	000f7b00 	call	f7b0 <__udivsi3>
   105a4:	d8c00317 	ldw	r3,12(sp)
   105a8:	a80b883a 	mov	r5,r21
   105ac:	1025883a 	mov	r18,r2
   105b0:	1809883a 	mov	r4,r3
   105b4:	000f7b80 	call	f7b8 <__umodsi3>
   105b8:	1004943a 	slli	r2,r2,16
   105bc:	8006d43a 	srli	r3,r16,16
   105c0:	9709383a 	mul	r4,r18,fp
   105c4:	10c6b03a 	or	r3,r2,r3
   105c8:	1900062e 	bgeu	r3,r4,105e4 <__divdf3+0x3b0>
   105cc:	1cc7883a 	add	r3,r3,r19
   105d0:	90bfffc4 	addi	r2,r18,-1
   105d4:	1cc0e436 	bltu	r3,r19,10968 <__divdf3+0x734>
   105d8:	1900e32e 	bgeu	r3,r4,10968 <__divdf3+0x734>
   105dc:	94bfff84 	addi	r18,r18,-2
   105e0:	1cc7883a 	add	r3,r3,r19
   105e4:	1907c83a 	sub	r3,r3,r4
   105e8:	1809883a 	mov	r4,r3
   105ec:	a80b883a 	mov	r5,r21
   105f0:	d8c00315 	stw	r3,12(sp)
   105f4:	000f7b00 	call	f7b0 <__udivsi3>
   105f8:	d8c00317 	ldw	r3,12(sp)
   105fc:	a80b883a 	mov	r5,r21
   10600:	1023883a 	mov	r17,r2
   10604:	1809883a 	mov	r4,r3
   10608:	000f7b80 	call	f7b8 <__umodsi3>
   1060c:	1004943a 	slli	r2,r2,16
   10610:	8f0b383a 	mul	r5,r17,fp
   10614:	843fffcc 	andi	r16,r16,65535
   10618:	1420b03a 	or	r16,r2,r16
   1061c:	8140062e 	bgeu	r16,r5,10638 <__divdf3+0x404>
   10620:	84e1883a 	add	r16,r16,r19
   10624:	88bfffc4 	addi	r2,r17,-1
   10628:	84c0cd36 	bltu	r16,r19,10960 <__divdf3+0x72c>
   1062c:	8140cc2e 	bgeu	r16,r5,10960 <__divdf3+0x72c>
   10630:	8c7fff84 	addi	r17,r17,-2
   10634:	84e1883a 	add	r16,r16,r19
   10638:	9004943a 	slli	r2,r18,16
   1063c:	b8ffffcc 	andi	r3,r23,65535
   10640:	b824d43a 	srli	r18,r23,16
   10644:	88a2b03a 	or	r17,r17,r2
   10648:	8808d43a 	srli	r4,r17,16
   1064c:	88bfffcc 	andi	r2,r17,65535
   10650:	10cd383a 	mul	r6,r2,r3
   10654:	20cf383a 	mul	r7,r4,r3
   10658:	1485383a 	mul	r2,r2,r18
   1065c:	3010d43a 	srli	r8,r6,16
   10660:	814bc83a 	sub	r5,r16,r5
   10664:	3885883a 	add	r2,r7,r2
   10668:	1205883a 	add	r2,r2,r8
   1066c:	2489383a 	mul	r4,r4,r18
   10670:	11c0022e 	bgeu	r2,r7,1067c <__divdf3+0x448>
   10674:	01c00074 	movhi	r7,1
   10678:	21c9883a 	add	r4,r4,r7
   1067c:	100ed43a 	srli	r7,r2,16
   10680:	1020943a 	slli	r16,r2,16
   10684:	31bfffcc 	andi	r6,r6,65535
   10688:	21c9883a 	add	r4,r4,r7
   1068c:	81a1883a 	add	r16,r16,r6
   10690:	29009736 	bltu	r5,r4,108f0 <__divdf3+0x6bc>
   10694:	29009526 	beq	r5,r4,108ec <__divdf3+0x6b8>
   10698:	2909c83a 	sub	r4,r5,r4
   1069c:	b421c83a 	sub	r16,r22,r16
   106a0:	b42d803a 	cmpltu	r22,r22,r16
   106a4:	25adc83a 	sub	r22,r4,r22
   106a8:	b4c0c326 	beq	r22,r19,109b8 <__divdf3+0x784>
   106ac:	b009883a 	mov	r4,r22
   106b0:	a80b883a 	mov	r5,r21
   106b4:	d8c00315 	stw	r3,12(sp)
   106b8:	000f7b00 	call	f7b0 <__udivsi3>
   106bc:	b009883a 	mov	r4,r22
   106c0:	a80b883a 	mov	r5,r21
   106c4:	d8800115 	stw	r2,4(sp)
   106c8:	000f7b80 	call	f7b8 <__umodsi3>
   106cc:	da000117 	ldw	r8,4(sp)
   106d0:	1004943a 	slli	r2,r2,16
   106d4:	800ad43a 	srli	r5,r16,16
   106d8:	4709383a 	mul	r4,r8,fp
   106dc:	d8c00317 	ldw	r3,12(sp)
   106e0:	114ab03a 	or	r5,r2,r5
   106e4:	2900062e 	bgeu	r5,r4,10700 <__divdf3+0x4cc>
   106e8:	2ccb883a 	add	r5,r5,r19
   106ec:	40bfffc4 	addi	r2,r8,-1
   106f0:	2cc0b536 	bltu	r5,r19,109c8 <__divdf3+0x794>
   106f4:	2900b42e 	bgeu	r5,r4,109c8 <__divdf3+0x794>
   106f8:	423fff84 	addi	r8,r8,-2
   106fc:	2ccb883a 	add	r5,r5,r19
   10700:	290dc83a 	sub	r6,r5,r4
   10704:	3009883a 	mov	r4,r6
   10708:	a80b883a 	mov	r5,r21
   1070c:	d8c00315 	stw	r3,12(sp)
   10710:	da000115 	stw	r8,4(sp)
   10714:	d9800215 	stw	r6,8(sp)
   10718:	000f7b00 	call	f7b0 <__udivsi3>
   1071c:	d9800217 	ldw	r6,8(sp)
   10720:	a80b883a 	mov	r5,r21
   10724:	102d883a 	mov	r22,r2
   10728:	3009883a 	mov	r4,r6
   1072c:	000f7b80 	call	f7b8 <__umodsi3>
   10730:	1004943a 	slli	r2,r2,16
   10734:	b739383a 	mul	fp,r22,fp
   10738:	843fffcc 	andi	r16,r16,65535
   1073c:	1408b03a 	or	r4,r2,r16
   10740:	d8c00317 	ldw	r3,12(sp)
   10744:	da000117 	ldw	r8,4(sp)
   10748:	2700062e 	bgeu	r4,fp,10764 <__divdf3+0x530>
   1074c:	24c9883a 	add	r4,r4,r19
   10750:	b0bfffc4 	addi	r2,r22,-1
   10754:	24c09a36 	bltu	r4,r19,109c0 <__divdf3+0x78c>
   10758:	2700992e 	bgeu	r4,fp,109c0 <__divdf3+0x78c>
   1075c:	b5bfff84 	addi	r22,r22,-2
   10760:	24c9883a 	add	r4,r4,r19
   10764:	4010943a 	slli	r8,r8,16
   10768:	2739c83a 	sub	fp,r4,fp
   1076c:	b210b03a 	or	r8,r22,r8
   10770:	400ad43a 	srli	r5,r8,16
   10774:	40bfffcc 	andi	r2,r8,65535
   10778:	10c9383a 	mul	r4,r2,r3
   1077c:	1485383a 	mul	r2,r2,r18
   10780:	28c7383a 	mul	r3,r5,r3
   10784:	200cd43a 	srli	r6,r4,16
   10788:	2ca5383a 	mul	r18,r5,r18
   1078c:	1885883a 	add	r2,r3,r2
   10790:	1185883a 	add	r2,r2,r6
   10794:	10c0022e 	bgeu	r2,r3,107a0 <__divdf3+0x56c>
   10798:	00c00074 	movhi	r3,1
   1079c:	90e5883a 	add	r18,r18,r3
   107a0:	1006d43a 	srli	r3,r2,16
   107a4:	1004943a 	slli	r2,r2,16
   107a8:	213fffcc 	andi	r4,r4,65535
   107ac:	90e5883a 	add	r18,r18,r3
   107b0:	1109883a 	add	r4,r2,r4
   107b4:	e480602e 	bgeu	fp,r18,10938 <__divdf3+0x704>
   107b8:	e4f9883a 	add	fp,fp,r19
   107bc:	40bfffc4 	addi	r2,r8,-1
   107c0:	e4c06b2e 	bgeu	fp,r19,10970 <__divdf3+0x73c>
   107c4:	1011883a 	mov	r8,r2
   107c8:	e4805e26 	beq	fp,r18,10944 <__divdf3+0x710>
   107cc:	42000054 	ori	r8,r8,1
   107d0:	d8c00017 	ldw	r3,0(sp)
   107d4:	1880ffc4 	addi	r2,r3,1023
   107d8:	00806d0e 	bge	zero,r2,10990 <__divdf3+0x75c>
   107dc:	40c001cc 	andi	r3,r8,7
   107e0:	18000726 	beq	r3,zero,10800 <__divdf3+0x5cc>
   107e4:	410003cc 	andi	r4,r8,15
   107e8:	00c00104 	movi	r3,4
   107ec:	20c00426 	beq	r4,r3,10800 <__divdf3+0x5cc>
   107f0:	40c7883a 	add	r3,r8,r3
   107f4:	1a11803a 	cmpltu	r8,r3,r8
   107f8:	8a23883a 	add	r17,r17,r8
   107fc:	1811883a 	mov	r8,r3
   10800:	88c0402c 	andhi	r3,r17,256
   10804:	18000526 	beq	r3,zero,1081c <__divdf3+0x5e8>
   10808:	d8c00017 	ldw	r3,0(sp)
   1080c:	00bfc034 	movhi	r2,65280
   10810:	10bfffc4 	addi	r2,r2,-1
   10814:	88a2703a 	and	r17,r17,r2
   10818:	18810004 	addi	r2,r3,1024
   1081c:	00c1ff84 	movi	r3,2046
   10820:	18bee916 	blt	r3,r2,103c8 <__alt_data_end+0xfe0103c8>
   10824:	8820977a 	slli	r16,r17,29
   10828:	4010d0fa 	srli	r8,r8,3
   1082c:	8822927a 	slli	r17,r17,9
   10830:	1081ffcc 	andi	r2,r2,2047
   10834:	8220b03a 	or	r16,r16,r8
   10838:	8824d33a 	srli	r18,r17,12
   1083c:	a1c0004c 	andi	r7,r20,1
   10840:	003ee506 	br	103d8 <__alt_data_end+0xfe0103d8>
   10844:	9080022c 	andhi	r2,r18,8
   10848:	10000a26 	beq	r2,zero,10874 <__divdf3+0x640>
   1084c:	8880022c 	andhi	r2,r17,8
   10850:	1000081e 	bne	r2,zero,10874 <__divdf3+0x640>
   10854:	00800434 	movhi	r2,16
   10858:	10bfffc4 	addi	r2,r2,-1
   1085c:	8c800234 	orhi	r18,r17,8
   10860:	90a4703a 	and	r18,r18,r2
   10864:	b00f883a 	mov	r7,r22
   10868:	4021883a 	mov	r16,r8
   1086c:	0081ffc4 	movi	r2,2047
   10870:	003ed906 	br	103d8 <__alt_data_end+0xfe0103d8>
   10874:	00800434 	movhi	r2,16
   10878:	10bfffc4 	addi	r2,r2,-1
   1087c:	94800234 	orhi	r18,r18,8
   10880:	90a4703a 	and	r18,r18,r2
   10884:	a80f883a 	mov	r7,r21
   10888:	0081ffc4 	movi	r2,2047
   1088c:	003ed206 	br	103d8 <__alt_data_end+0xfe0103d8>
   10890:	147ff604 	addi	r17,r2,-40
   10894:	3462983a 	sll	r17,r6,r17
   10898:	0011883a 	mov	r8,zero
   1089c:	003f1206 	br	104e8 <__alt_data_end+0xfe0104e8>
   108a0:	3009883a 	mov	r4,r6
   108a4:	d9800215 	stw	r6,8(sp)
   108a8:	da400115 	stw	r9,4(sp)
   108ac:	00120700 	call	12070 <__clzsi2>
   108b0:	10800804 	addi	r2,r2,32
   108b4:	da400117 	ldw	r9,4(sp)
   108b8:	d9800217 	ldw	r6,8(sp)
   108bc:	003f0106 	br	104c4 <__alt_data_end+0xfe0104c4>
   108c0:	14bff604 	addi	r18,r2,-40
   108c4:	b4a4983a 	sll	r18,r22,r18
   108c8:	0021883a 	mov	r16,zero
   108cc:	003ee906 	br	10474 <__alt_data_end+0xfe010474>
   108d0:	d9800215 	stw	r6,8(sp)
   108d4:	d9c00115 	stw	r7,4(sp)
   108d8:	00120700 	call	12070 <__clzsi2>
   108dc:	10800804 	addi	r2,r2,32
   108e0:	d9c00117 	ldw	r7,4(sp)
   108e4:	d9800217 	ldw	r6,8(sp)
   108e8:	003ed906 	br	10450 <__alt_data_end+0xfe010450>
   108ec:	b400262e 	bgeu	r22,r16,10988 <__divdf3+0x754>
   108f0:	b5ed883a 	add	r22,r22,r23
   108f4:	b5c5803a 	cmpltu	r2,r22,r23
   108f8:	14c5883a 	add	r2,r2,r19
   108fc:	114b883a 	add	r5,r2,r5
   10900:	88bfffc4 	addi	r2,r17,-1
   10904:	9940112e 	bgeu	r19,r5,1094c <__divdf3+0x718>
   10908:	29004e36 	bltu	r5,r4,10a44 <__divdf3+0x810>
   1090c:	21401c26 	beq	r4,r5,10980 <__divdf3+0x74c>
   10910:	2909c83a 	sub	r4,r5,r4
   10914:	1023883a 	mov	r17,r2
   10918:	003f6006 	br	1069c <__alt_data_end+0xfe01069c>
   1091c:	443f122e 	bgeu	r8,r16,10568 <__alt_data_end+0xfe010568>
   10920:	8008d07a 	srli	r4,r16,1
   10924:	900497fa 	slli	r2,r18,31
   10928:	802c97fa 	slli	r22,r16,31
   1092c:	9006d07a 	srli	r3,r18,1
   10930:	20a0b03a 	or	r16,r4,r2
   10934:	003f1106 	br	1057c <__alt_data_end+0xfe01057c>
   10938:	e4bfa41e 	bne	fp,r18,107cc <__alt_data_end+0xfe0107cc>
   1093c:	203f9e1e 	bne	r4,zero,107b8 <__alt_data_end+0xfe0107b8>
   10940:	002f883a 	mov	r23,zero
   10944:	b93fa11e 	bne	r23,r4,107cc <__alt_data_end+0xfe0107cc>
   10948:	003fa106 	br	107d0 <__alt_data_end+0xfe0107d0>
   1094c:	2cfff01e 	bne	r5,r19,10910 <__alt_data_end+0xfe010910>
   10950:	b5ffed2e 	bgeu	r22,r23,10908 <__alt_data_end+0xfe010908>
   10954:	9909c83a 	sub	r4,r19,r4
   10958:	1023883a 	mov	r17,r2
   1095c:	003f4f06 	br	1069c <__alt_data_end+0xfe01069c>
   10960:	1023883a 	mov	r17,r2
   10964:	003f3406 	br	10638 <__alt_data_end+0xfe010638>
   10968:	1025883a 	mov	r18,r2
   1096c:	003f1d06 	br	105e4 <__alt_data_end+0xfe0105e4>
   10970:	e4803a36 	bltu	fp,r18,10a5c <__divdf3+0x828>
   10974:	97005626 	beq	r18,fp,10ad0 <__divdf3+0x89c>
   10978:	1011883a 	mov	r8,r2
   1097c:	003f9306 	br	107cc <__alt_data_end+0xfe0107cc>
   10980:	b4003036 	bltu	r22,r16,10a44 <__divdf3+0x810>
   10984:	1023883a 	mov	r17,r2
   10988:	0009883a 	mov	r4,zero
   1098c:	003f4306 	br	1069c <__alt_data_end+0xfe01069c>
   10990:	d8c00017 	ldw	r3,0(sp)
   10994:	00bf0084 	movi	r2,-1022
   10998:	10c5c83a 	sub	r2,r2,r3
   1099c:	00c00e04 	movi	r3,56
   109a0:	18800d0e 	bge	r3,r2,109d8 <__divdf3+0x7a4>
   109a4:	a1c0004c 	andi	r7,r20,1
   109a8:	0005883a 	mov	r2,zero
   109ac:	0025883a 	mov	r18,zero
   109b0:	0021883a 	mov	r16,zero
   109b4:	003e8806 	br	103d8 <__alt_data_end+0xfe0103d8>
   109b8:	023fffc4 	movi	r8,-1
   109bc:	003f8406 	br	107d0 <__alt_data_end+0xfe0107d0>
   109c0:	102d883a 	mov	r22,r2
   109c4:	003f6706 	br	10764 <__alt_data_end+0xfe010764>
   109c8:	1011883a 	mov	r8,r2
   109cc:	003f4c06 	br	10700 <__alt_data_end+0xfe010700>
   109d0:	4829883a 	mov	r20,r9
   109d4:	003f7e06 	br	107d0 <__alt_data_end+0xfe0107d0>
   109d8:	00c007c4 	movi	r3,31
   109dc:	18802616 	blt	r3,r2,10a78 <__divdf3+0x844>
   109e0:	d9000017 	ldw	r4,0(sp)
   109e4:	408ad83a 	srl	r5,r8,r2
   109e8:	8884d83a 	srl	r2,r17,r2
   109ec:	20c10784 	addi	r3,r4,1054
   109f0:	88c8983a 	sll	r4,r17,r3
   109f4:	40c6983a 	sll	r3,r8,r3
   109f8:	2908b03a 	or	r4,r5,r4
   109fc:	1806c03a 	cmpne	r3,r3,zero
   10a00:	20c6b03a 	or	r3,r4,r3
   10a04:	190001cc 	andi	r4,r3,7
   10a08:	20000726 	beq	r4,zero,10a28 <__divdf3+0x7f4>
   10a0c:	194003cc 	andi	r5,r3,15
   10a10:	01000104 	movi	r4,4
   10a14:	29000426 	beq	r5,r4,10a28 <__divdf3+0x7f4>
   10a18:	1909883a 	add	r4,r3,r4
   10a1c:	20c7803a 	cmpltu	r3,r4,r3
   10a20:	10c5883a 	add	r2,r2,r3
   10a24:	2007883a 	mov	r3,r4
   10a28:	1100202c 	andhi	r4,r2,128
   10a2c:	20002026 	beq	r4,zero,10ab0 <__divdf3+0x87c>
   10a30:	a1c0004c 	andi	r7,r20,1
   10a34:	00800044 	movi	r2,1
   10a38:	0025883a 	mov	r18,zero
   10a3c:	0021883a 	mov	r16,zero
   10a40:	003e6506 	br	103d8 <__alt_data_end+0xfe0103d8>
   10a44:	b5ed883a 	add	r22,r22,r23
   10a48:	b5c5803a 	cmpltu	r2,r22,r23
   10a4c:	14c5883a 	add	r2,r2,r19
   10a50:	114b883a 	add	r5,r2,r5
   10a54:	8c7fff84 	addi	r17,r17,-2
   10a58:	003f0f06 	br	10698 <__alt_data_end+0xfe010698>
   10a5c:	bdc7883a 	add	r3,r23,r23
   10a60:	1def803a 	cmpltu	r23,r3,r23
   10a64:	bce7883a 	add	r19,r23,r19
   10a68:	40bfff84 	addi	r2,r8,-2
   10a6c:	e4f9883a 	add	fp,fp,r19
   10a70:	182f883a 	mov	r23,r3
   10a74:	003f5306 	br	107c4 <__alt_data_end+0xfe0107c4>
   10a78:	d9000017 	ldw	r4,0(sp)
   10a7c:	00fef884 	movi	r3,-1054
   10a80:	1907c83a 	sub	r3,r3,r4
   10a84:	01000804 	movi	r4,32
   10a88:	88c6d83a 	srl	r3,r17,r3
   10a8c:	11001426 	beq	r2,r4,10ae0 <__divdf3+0x8ac>
   10a90:	d9000017 	ldw	r4,0(sp)
   10a94:	20810f84 	addi	r2,r4,1086
   10a98:	8884983a 	sll	r2,r17,r2
   10a9c:	1204b03a 	or	r2,r2,r8
   10aa0:	1004c03a 	cmpne	r2,r2,zero
   10aa4:	10c6b03a 	or	r3,r2,r3
   10aa8:	0005883a 	mov	r2,zero
   10aac:	003fd506 	br	10a04 <__alt_data_end+0xfe010a04>
   10ab0:	1020977a 	slli	r16,r2,29
   10ab4:	1806d0fa 	srli	r3,r3,3
   10ab8:	1004927a 	slli	r2,r2,9
   10abc:	a1c0004c 	andi	r7,r20,1
   10ac0:	80e0b03a 	or	r16,r16,r3
   10ac4:	1024d33a 	srli	r18,r2,12
   10ac8:	0005883a 	mov	r2,zero
   10acc:	003e4206 	br	103d8 <__alt_data_end+0xfe0103d8>
   10ad0:	b93fe236 	bltu	r23,r4,10a5c <__alt_data_end+0xfe010a5c>
   10ad4:	1011883a 	mov	r8,r2
   10ad8:	b93f3c1e 	bne	r23,r4,107cc <__alt_data_end+0xfe0107cc>
   10adc:	003f3c06 	br	107d0 <__alt_data_end+0xfe0107d0>
   10ae0:	0005883a 	mov	r2,zero
   10ae4:	003fed06 	br	10a9c <__alt_data_end+0xfe010a9c>
   10ae8:	00800434 	movhi	r2,16
   10aec:	10bfffc4 	addi	r2,r2,-1
   10af0:	8c800234 	orhi	r18,r17,8
   10af4:	90a4703a 	and	r18,r18,r2
   10af8:	480f883a 	mov	r7,r9
   10afc:	4021883a 	mov	r16,r8
   10b00:	0081ffc4 	movi	r2,2047
   10b04:	003e3406 	br	103d8 <__alt_data_end+0xfe0103d8>

00010b08 <__eqdf2>:
   10b08:	2806d53a 	srli	r3,r5,20
   10b0c:	3810d53a 	srli	r8,r7,20
   10b10:	00800434 	movhi	r2,16
   10b14:	10bfffc4 	addi	r2,r2,-1
   10b18:	18c1ffcc 	andi	r3,r3,2047
   10b1c:	0241ffc4 	movi	r9,2047
   10b20:	2894703a 	and	r10,r5,r2
   10b24:	4201ffcc 	andi	r8,r8,2047
   10b28:	3884703a 	and	r2,r7,r2
   10b2c:	280ad7fa 	srli	r5,r5,31
   10b30:	380ed7fa 	srli	r7,r7,31
   10b34:	1a400f26 	beq	r3,r9,10b74 <__eqdf2+0x6c>
   10b38:	0241ffc4 	movi	r9,2047
   10b3c:	42400326 	beq	r8,r9,10b4c <__eqdf2+0x44>
   10b40:	1a000526 	beq	r3,r8,10b58 <__eqdf2+0x50>
   10b44:	00800044 	movi	r2,1
   10b48:	f800283a 	ret
   10b4c:	1192b03a 	or	r9,r2,r6
   10b50:	483ffc1e 	bne	r9,zero,10b44 <__alt_data_end+0xfe010b44>
   10b54:	1a3ffb1e 	bne	r3,r8,10b44 <__alt_data_end+0xfe010b44>
   10b58:	50bffa1e 	bne	r10,r2,10b44 <__alt_data_end+0xfe010b44>
   10b5c:	21bff91e 	bne	r4,r6,10b44 <__alt_data_end+0xfe010b44>
   10b60:	29c00826 	beq	r5,r7,10b84 <__eqdf2+0x7c>
   10b64:	183ff71e 	bne	r3,zero,10b44 <__alt_data_end+0xfe010b44>
   10b68:	5104b03a 	or	r2,r10,r4
   10b6c:	1004c03a 	cmpne	r2,r2,zero
   10b70:	f800283a 	ret
   10b74:	5112b03a 	or	r9,r10,r4
   10b78:	483fef26 	beq	r9,zero,10b38 <__alt_data_end+0xfe010b38>
   10b7c:	00800044 	movi	r2,1
   10b80:	f800283a 	ret
   10b84:	0005883a 	mov	r2,zero
   10b88:	f800283a 	ret

00010b8c <__gedf2>:
   10b8c:	2804d53a 	srli	r2,r5,20
   10b90:	3810d53a 	srli	r8,r7,20
   10b94:	00c00434 	movhi	r3,16
   10b98:	18ffffc4 	addi	r3,r3,-1
   10b9c:	1081ffcc 	andi	r2,r2,2047
   10ba0:	0241ffc4 	movi	r9,2047
   10ba4:	28d4703a 	and	r10,r5,r3
   10ba8:	4201ffcc 	andi	r8,r8,2047
   10bac:	38c6703a 	and	r3,r7,r3
   10bb0:	280ad7fa 	srli	r5,r5,31
   10bb4:	380ed7fa 	srli	r7,r7,31
   10bb8:	12401b26 	beq	r2,r9,10c28 <__gedf2+0x9c>
   10bbc:	0241ffc4 	movi	r9,2047
   10bc0:	42400926 	beq	r8,r9,10be8 <__gedf2+0x5c>
   10bc4:	10000c1e 	bne	r2,zero,10bf8 <__gedf2+0x6c>
   10bc8:	5112b03a 	or	r9,r10,r4
   10bcc:	4813003a 	cmpeq	r9,r9,zero
   10bd0:	4817883a 	mov	r11,r9
   10bd4:	40000a26 	beq	r8,zero,10c00 <__gedf2+0x74>
   10bd8:	48001626 	beq	r9,zero,10c34 <__gedf2+0xa8>
   10bdc:	38000d1e 	bne	r7,zero,10c14 <__gedf2+0x88>
   10be0:	00bfffc4 	movi	r2,-1
   10be4:	f800283a 	ret
   10be8:	1992b03a 	or	r9,r3,r6
   10bec:	483ff526 	beq	r9,zero,10bc4 <__alt_data_end+0xfe010bc4>
   10bf0:	00bfff84 	movi	r2,-2
   10bf4:	f800283a 	ret
   10bf8:	40000e1e 	bne	r8,zero,10c34 <__gedf2+0xa8>
   10bfc:	0017883a 	mov	r11,zero
   10c00:	1992b03a 	or	r9,r3,r6
   10c04:	4813003a 	cmpeq	r9,r9,zero
   10c08:	5800041e 	bne	r11,zero,10c1c <__gedf2+0x90>
   10c0c:	48000926 	beq	r9,zero,10c34 <__gedf2+0xa8>
   10c10:	283ff31e 	bne	r5,zero,10be0 <__alt_data_end+0xfe010be0>
   10c14:	00800044 	movi	r2,1
   10c18:	f800283a 	ret
   10c1c:	483fef26 	beq	r9,zero,10bdc <__alt_data_end+0xfe010bdc>
   10c20:	0005883a 	mov	r2,zero
   10c24:	f800283a 	ret
   10c28:	5112b03a 	or	r9,r10,r4
   10c2c:	483fe326 	beq	r9,zero,10bbc <__alt_data_end+0xfe010bbc>
   10c30:	003fef06 	br	10bf0 <__alt_data_end+0xfe010bf0>
   10c34:	29fff61e 	bne	r5,r7,10c10 <__alt_data_end+0xfe010c10>
   10c38:	40bff516 	blt	r8,r2,10c10 <__alt_data_end+0xfe010c10>
   10c3c:	12000316 	blt	r2,r8,10c4c <__gedf2+0xc0>
   10c40:	1abff336 	bltu	r3,r10,10c10 <__alt_data_end+0xfe010c10>
   10c44:	50c00326 	beq	r10,r3,10c54 <__gedf2+0xc8>
   10c48:	50fff52e 	bgeu	r10,r3,10c20 <__alt_data_end+0xfe010c20>
   10c4c:	283fe426 	beq	r5,zero,10be0 <__alt_data_end+0xfe010be0>
   10c50:	003ff006 	br	10c14 <__alt_data_end+0xfe010c14>
   10c54:	313fee36 	bltu	r6,r4,10c10 <__alt_data_end+0xfe010c10>
   10c58:	21bff12e 	bgeu	r4,r6,10c20 <__alt_data_end+0xfe010c20>
   10c5c:	283fe026 	beq	r5,zero,10be0 <__alt_data_end+0xfe010be0>
   10c60:	003fec06 	br	10c14 <__alt_data_end+0xfe010c14>

00010c64 <__ledf2>:
   10c64:	2806d53a 	srli	r3,r5,20
   10c68:	3810d53a 	srli	r8,r7,20
   10c6c:	00800434 	movhi	r2,16
   10c70:	10bfffc4 	addi	r2,r2,-1
   10c74:	18c1ffcc 	andi	r3,r3,2047
   10c78:	0241ffc4 	movi	r9,2047
   10c7c:	2894703a 	and	r10,r5,r2
   10c80:	4201ffcc 	andi	r8,r8,2047
   10c84:	3884703a 	and	r2,r7,r2
   10c88:	280ad7fa 	srli	r5,r5,31
   10c8c:	380ed7fa 	srli	r7,r7,31
   10c90:	1a402026 	beq	r3,r9,10d14 <__ledf2+0xb0>
   10c94:	0241ffc4 	movi	r9,2047
   10c98:	42401726 	beq	r8,r9,10cf8 <__ledf2+0x94>
   10c9c:	18000b26 	beq	r3,zero,10ccc <__ledf2+0x68>
   10ca0:	29403fcc 	andi	r5,r5,255
   10ca4:	39c03fcc 	andi	r7,r7,255
   10ca8:	40000f1e 	bne	r8,zero,10ce8 <__ledf2+0x84>
   10cac:	0017883a 	mov	r11,zero
   10cb0:	1192b03a 	or	r9,r2,r6
   10cb4:	4813003a 	cmpeq	r9,r9,zero
   10cb8:	58001326 	beq	r11,zero,10d08 <__ledf2+0xa4>
   10cbc:	48001e1e 	bne	r9,zero,10d38 <__ledf2+0xd4>
   10cc0:	38000b1e 	bne	r7,zero,10cf0 <__ledf2+0x8c>
   10cc4:	00bfffc4 	movi	r2,-1
   10cc8:	f800283a 	ret
   10ccc:	5112b03a 	or	r9,r10,r4
   10cd0:	4813003a 	cmpeq	r9,r9,zero
   10cd4:	4817883a 	mov	r11,r9
   10cd8:	29403fcc 	andi	r5,r5,255
   10cdc:	39c03fcc 	andi	r7,r7,255
   10ce0:	403ff326 	beq	r8,zero,10cb0 <__alt_data_end+0xfe010cb0>
   10ce4:	483ff61e 	bne	r9,zero,10cc0 <__alt_data_end+0xfe010cc0>
   10ce8:	29c00e26 	beq	r5,r7,10d24 <__ledf2+0xc0>
   10cec:	283ff51e 	bne	r5,zero,10cc4 <__alt_data_end+0xfe010cc4>
   10cf0:	00800044 	movi	r2,1
   10cf4:	f800283a 	ret
   10cf8:	1192b03a 	or	r9,r2,r6
   10cfc:	483fe726 	beq	r9,zero,10c9c <__alt_data_end+0xfe010c9c>
   10d00:	00800084 	movi	r2,2
   10d04:	f800283a 	ret
   10d08:	483ff726 	beq	r9,zero,10ce8 <__alt_data_end+0xfe010ce8>
   10d0c:	283ff826 	beq	r5,zero,10cf0 <__alt_data_end+0xfe010cf0>
   10d10:	003fec06 	br	10cc4 <__alt_data_end+0xfe010cc4>
   10d14:	5112b03a 	or	r9,r10,r4
   10d18:	483fde26 	beq	r9,zero,10c94 <__alt_data_end+0xfe010c94>
   10d1c:	00800084 	movi	r2,2
   10d20:	f800283a 	ret
   10d24:	40fff116 	blt	r8,r3,10cec <__alt_data_end+0xfe010cec>
   10d28:	1a000716 	blt	r3,r8,10d48 <__ledf2+0xe4>
   10d2c:	12bfef36 	bltu	r2,r10,10cec <__alt_data_end+0xfe010cec>
   10d30:	50800326 	beq	r10,r2,10d40 <__ledf2+0xdc>
   10d34:	50800436 	bltu	r10,r2,10d48 <__ledf2+0xe4>
   10d38:	0005883a 	mov	r2,zero
   10d3c:	f800283a 	ret
   10d40:	313fea36 	bltu	r6,r4,10cec <__alt_data_end+0xfe010cec>
   10d44:	21bffc2e 	bgeu	r4,r6,10d38 <__alt_data_end+0xfe010d38>
   10d48:	283fde26 	beq	r5,zero,10cc4 <__alt_data_end+0xfe010cc4>
   10d4c:	003fe806 	br	10cf0 <__alt_data_end+0xfe010cf0>

00010d50 <__muldf3>:
   10d50:	defff204 	addi	sp,sp,-56
   10d54:	dd000815 	stw	r20,32(sp)
   10d58:	2828d53a 	srli	r20,r5,20
   10d5c:	dc800615 	stw	r18,24(sp)
   10d60:	2824d7fa 	srli	r18,r5,31
   10d64:	ddc00b15 	stw	r23,44(sp)
   10d68:	dd400915 	stw	r21,36(sp)
   10d6c:	dcc00715 	stw	r19,28(sp)
   10d70:	dc400515 	stw	r17,20(sp)
   10d74:	dfc00d15 	stw	ra,52(sp)
   10d78:	04400434 	movhi	r17,16
   10d7c:	8c7fffc4 	addi	r17,r17,-1
   10d80:	df000c15 	stw	fp,48(sp)
   10d84:	dd800a15 	stw	r22,40(sp)
   10d88:	dc000415 	stw	r16,16(sp)
   10d8c:	a501ffcc 	andi	r20,r20,2047
   10d90:	2027883a 	mov	r19,r4
   10d94:	2c62703a 	and	r17,r5,r17
   10d98:	902f883a 	mov	r23,r18
   10d9c:	95403fcc 	andi	r21,r18,255
   10da0:	a0005d26 	beq	r20,zero,10f18 <__muldf3+0x1c8>
   10da4:	0081ffc4 	movi	r2,2047
   10da8:	2021883a 	mov	r16,r4
   10dac:	a0803326 	beq	r20,r2,10e7c <__muldf3+0x12c>
   10db0:	88800434 	orhi	r2,r17,16
   10db4:	100490fa 	slli	r2,r2,3
   10db8:	2022d77a 	srli	r17,r4,29
   10dbc:	202090fa 	slli	r16,r4,3
   10dc0:	a53f0044 	addi	r20,r20,-1023
   10dc4:	1462b03a 	or	r17,r2,r17
   10dc8:	0015883a 	mov	r10,zero
   10dcc:	0039883a 	mov	fp,zero
   10dd0:	3804d53a 	srli	r2,r7,20
   10dd4:	382cd7fa 	srli	r22,r7,31
   10dd8:	04c00434 	movhi	r19,16
   10ddc:	9cffffc4 	addi	r19,r19,-1
   10de0:	1081ffcc 	andi	r2,r2,2047
   10de4:	300b883a 	mov	r5,r6
   10de8:	3ce6703a 	and	r19,r7,r19
   10dec:	b2403fcc 	andi	r9,r22,255
   10df0:	10006626 	beq	r2,zero,10f8c <__muldf3+0x23c>
   10df4:	00c1ffc4 	movi	r3,2047
   10df8:	10c05e26 	beq	r2,r3,10f74 <__muldf3+0x224>
   10dfc:	98c00434 	orhi	r3,r19,16
   10e00:	180690fa 	slli	r3,r3,3
   10e04:	3026d77a 	srli	r19,r6,29
   10e08:	300a90fa 	slli	r5,r6,3
   10e0c:	10bf0044 	addi	r2,r2,-1023
   10e10:	1ce6b03a 	or	r19,r3,r19
   10e14:	0007883a 	mov	r3,zero
   10e18:	1a88b03a 	or	r4,r3,r10
   10e1c:	2109883a 	add	r4,r4,r4
   10e20:	2109883a 	add	r4,r4,r4
   10e24:	01800074 	movhi	r6,1
   10e28:	31838f04 	addi	r6,r6,3644
   10e2c:	2189883a 	add	r4,r4,r6
   10e30:	21000017 	ldw	r4,0(r4)
   10e34:	95a4f03a 	xor	r18,r18,r22
   10e38:	2000683a 	jmp	r4
   10e3c:	00011074 	movhi	zero,1089
   10e40:	00011064 	muli	zero,zero,1089
   10e44:	00011064 	muli	zero,zero,1089
   10e48:	00011050 	cmplti	zero,zero,1089
   10e4c:	00010e9c 	xori	zero,zero,1082
   10e50:	00010e9c 	xori	zero,zero,1082
   10e54:	00011038 	rdprs	zero,zero,1088
   10e58:	00011050 	cmplti	zero,zero,1089
   10e5c:	00010e9c 	xori	zero,zero,1082
   10e60:	00011038 	rdprs	zero,zero,1088
   10e64:	00010e9c 	xori	zero,zero,1082
   10e68:	00011050 	cmplti	zero,zero,1089
   10e6c:	00010e98 	cmpnei	zero,zero,1082
   10e70:	00010e98 	cmpnei	zero,zero,1082
   10e74:	00010e98 	cmpnei	zero,zero,1082
   10e78:	00011294 	movui	zero,1098
   10e7c:	8904b03a 	or	r2,r17,r4
   10e80:	10006a1e 	bne	r2,zero,1102c <__muldf3+0x2dc>
   10e84:	02800204 	movi	r10,8
   10e88:	0023883a 	mov	r17,zero
   10e8c:	0021883a 	mov	r16,zero
   10e90:	07000084 	movi	fp,2
   10e94:	003fce06 	br	10dd0 <__alt_data_end+0xfe010dd0>
   10e98:	a825883a 	mov	r18,r21
   10e9c:	00800084 	movi	r2,2
   10ea0:	e0805226 	beq	fp,r2,10fec <__muldf3+0x29c>
   10ea4:	008000c4 	movi	r2,3
   10ea8:	e0815d26 	beq	fp,r2,11420 <__muldf3+0x6d0>
   10eac:	00800044 	movi	r2,1
   10eb0:	e080db1e 	bne	fp,r2,11220 <__muldf3+0x4d0>
   10eb4:	902f883a 	mov	r23,r18
   10eb8:	0005883a 	mov	r2,zero
   10ebc:	0023883a 	mov	r17,zero
   10ec0:	0021883a 	mov	r16,zero
   10ec4:	1004953a 	slli	r2,r2,20
   10ec8:	bdc03fcc 	andi	r23,r23,255
   10ecc:	b82e97fa 	slli	r23,r23,31
   10ed0:	00c00434 	movhi	r3,16
   10ed4:	18ffffc4 	addi	r3,r3,-1
   10ed8:	88e2703a 	and	r17,r17,r3
   10edc:	8886b03a 	or	r3,r17,r2
   10ee0:	1dc6b03a 	or	r3,r3,r23
   10ee4:	8005883a 	mov	r2,r16
   10ee8:	dfc00d17 	ldw	ra,52(sp)
   10eec:	df000c17 	ldw	fp,48(sp)
   10ef0:	ddc00b17 	ldw	r23,44(sp)
   10ef4:	dd800a17 	ldw	r22,40(sp)
   10ef8:	dd400917 	ldw	r21,36(sp)
   10efc:	dd000817 	ldw	r20,32(sp)
   10f00:	dcc00717 	ldw	r19,28(sp)
   10f04:	dc800617 	ldw	r18,24(sp)
   10f08:	dc400517 	ldw	r17,20(sp)
   10f0c:	dc000417 	ldw	r16,16(sp)
   10f10:	dec00e04 	addi	sp,sp,56
   10f14:	f800283a 	ret
   10f18:	8904b03a 	or	r2,r17,r4
   10f1c:	10003e26 	beq	r2,zero,11018 <__muldf3+0x2c8>
   10f20:	8800f226 	beq	r17,zero,112ec <__muldf3+0x59c>
   10f24:	8809883a 	mov	r4,r17
   10f28:	d9800315 	stw	r6,12(sp)
   10f2c:	d9c00115 	stw	r7,4(sp)
   10f30:	00120700 	call	12070 <__clzsi2>
   10f34:	d9800317 	ldw	r6,12(sp)
   10f38:	d9c00117 	ldw	r7,4(sp)
   10f3c:	00c009c4 	movi	r3,39
   10f40:	1880e616 	blt	r3,r2,112dc <__muldf3+0x58c>
   10f44:	00c00a04 	movi	r3,40
   10f48:	143ffe04 	addi	r16,r2,-8
   10f4c:	1887c83a 	sub	r3,r3,r2
   10f50:	8c22983a 	sll	r17,r17,r16
   10f54:	98c6d83a 	srl	r3,r19,r3
   10f58:	9c20983a 	sll	r16,r19,r16
   10f5c:	1c62b03a 	or	r17,r3,r17
   10f60:	053f0344 	movi	r20,-1011
   10f64:	a0a9c83a 	sub	r20,r20,r2
   10f68:	0015883a 	mov	r10,zero
   10f6c:	0039883a 	mov	fp,zero
   10f70:	003f9706 	br	10dd0 <__alt_data_end+0xfe010dd0>
   10f74:	9986b03a 	or	r3,r19,r6
   10f78:	1800251e 	bne	r3,zero,11010 <__muldf3+0x2c0>
   10f7c:	0027883a 	mov	r19,zero
   10f80:	000b883a 	mov	r5,zero
   10f84:	00c00084 	movi	r3,2
   10f88:	003fa306 	br	10e18 <__alt_data_end+0xfe010e18>
   10f8c:	9986b03a 	or	r3,r19,r6
   10f90:	18001b26 	beq	r3,zero,11000 <__muldf3+0x2b0>
   10f94:	9800e026 	beq	r19,zero,11318 <__muldf3+0x5c8>
   10f98:	9809883a 	mov	r4,r19
   10f9c:	d9800315 	stw	r6,12(sp)
   10fa0:	da400115 	stw	r9,4(sp)
   10fa4:	da800215 	stw	r10,8(sp)
   10fa8:	00120700 	call	12070 <__clzsi2>
   10fac:	d9800317 	ldw	r6,12(sp)
   10fb0:	da400117 	ldw	r9,4(sp)
   10fb4:	da800217 	ldw	r10,8(sp)
   10fb8:	00c009c4 	movi	r3,39
   10fbc:	1880d216 	blt	r3,r2,11308 <__muldf3+0x5b8>
   10fc0:	01c00a04 	movi	r7,40
   10fc4:	117ffe04 	addi	r5,r2,-8
   10fc8:	388fc83a 	sub	r7,r7,r2
   10fcc:	9966983a 	sll	r19,r19,r5
   10fd0:	31ced83a 	srl	r7,r6,r7
   10fd4:	314a983a 	sll	r5,r6,r5
   10fd8:	3ce6b03a 	or	r19,r7,r19
   10fdc:	00ff0344 	movi	r3,-1011
   10fe0:	1885c83a 	sub	r2,r3,r2
   10fe4:	0007883a 	mov	r3,zero
   10fe8:	003f8b06 	br	10e18 <__alt_data_end+0xfe010e18>
   10fec:	902f883a 	mov	r23,r18
   10ff0:	0081ffc4 	movi	r2,2047
   10ff4:	0023883a 	mov	r17,zero
   10ff8:	0021883a 	mov	r16,zero
   10ffc:	003fb106 	br	10ec4 <__alt_data_end+0xfe010ec4>
   11000:	0027883a 	mov	r19,zero
   11004:	000b883a 	mov	r5,zero
   11008:	00c00044 	movi	r3,1
   1100c:	003f8206 	br	10e18 <__alt_data_end+0xfe010e18>
   11010:	00c000c4 	movi	r3,3
   11014:	003f8006 	br	10e18 <__alt_data_end+0xfe010e18>
   11018:	02800104 	movi	r10,4
   1101c:	0023883a 	mov	r17,zero
   11020:	0021883a 	mov	r16,zero
   11024:	07000044 	movi	fp,1
   11028:	003f6906 	br	10dd0 <__alt_data_end+0xfe010dd0>
   1102c:	02800304 	movi	r10,12
   11030:	070000c4 	movi	fp,3
   11034:	003f6606 	br	10dd0 <__alt_data_end+0xfe010dd0>
   11038:	002f883a 	mov	r23,zero
   1103c:	04400434 	movhi	r17,16
   11040:	8c7fffc4 	addi	r17,r17,-1
   11044:	043fffc4 	movi	r16,-1
   11048:	0081ffc4 	movi	r2,2047
   1104c:	003f9d06 	br	10ec4 <__alt_data_end+0xfe010ec4>
   11050:	9823883a 	mov	r17,r19
   11054:	2821883a 	mov	r16,r5
   11058:	4825883a 	mov	r18,r9
   1105c:	1839883a 	mov	fp,r3
   11060:	003f8e06 	br	10e9c <__alt_data_end+0xfe010e9c>
   11064:	9823883a 	mov	r17,r19
   11068:	2821883a 	mov	r16,r5
   1106c:	1839883a 	mov	fp,r3
   11070:	003f8a06 	br	10e9c <__alt_data_end+0xfe010e9c>
   11074:	800cd43a 	srli	r6,r16,16
   11078:	2808d43a 	srli	r4,r5,16
   1107c:	843fffcc 	andi	r16,r16,65535
   11080:	297fffcc 	andi	r5,r5,65535
   11084:	2c15383a 	mul	r10,r5,r16
   11088:	2411383a 	mul	r8,r4,r16
   1108c:	2987383a 	mul	r3,r5,r6
   11090:	500ed43a 	srli	r7,r10,16
   11094:	a085883a 	add	r2,r20,r2
   11098:	d8800015 	stw	r2,0(sp)
   1109c:	1a05883a 	add	r2,r3,r8
   110a0:	11c5883a 	add	r2,r2,r7
   110a4:	2197383a 	mul	r11,r4,r6
   110a8:	10c0022e 	bgeu	r2,r3,110b4 <__muldf3+0x364>
   110ac:	00c00074 	movhi	r3,1
   110b0:	58d7883a 	add	r11,r11,r3
   110b4:	9806d43a 	srli	r3,r19,16
   110b8:	9cffffcc 	andi	r19,r19,65535
   110bc:	9c13383a 	mul	r9,r19,r16
   110c0:	9991383a 	mul	r8,r19,r6
   110c4:	1c21383a 	mul	r16,r3,r16
   110c8:	481ad43a 	srli	r13,r9,16
   110cc:	1018943a 	slli	r12,r2,16
   110d0:	440f883a 	add	r7,r8,r16
   110d4:	52bfffcc 	andi	r10,r10,65535
   110d8:	3b4f883a 	add	r7,r7,r13
   110dc:	1020d43a 	srli	r16,r2,16
   110e0:	6299883a 	add	r12,r12,r10
   110e4:	198d383a 	mul	r6,r3,r6
   110e8:	3a00022e 	bgeu	r7,r8,110f4 <__muldf3+0x3a4>
   110ec:	00800074 	movhi	r2,1
   110f0:	308d883a 	add	r6,r6,r2
   110f4:	8804d43a 	srli	r2,r17,16
   110f8:	8c7fffcc 	andi	r17,r17,65535
   110fc:	2c55383a 	mul	r10,r5,r17
   11100:	2451383a 	mul	r8,r4,r17
   11104:	288b383a 	mul	r5,r5,r2
   11108:	501cd43a 	srli	r14,r10,16
   1110c:	381ad43a 	srli	r13,r7,16
   11110:	380e943a 	slli	r7,r7,16
   11114:	2a11883a 	add	r8,r5,r8
   11118:	4a7fffcc 	andi	r9,r9,65535
   1111c:	4391883a 	add	r8,r8,r14
   11120:	334d883a 	add	r6,r6,r13
   11124:	3a4f883a 	add	r7,r7,r9
   11128:	2089383a 	mul	r4,r4,r2
   1112c:	4140022e 	bgeu	r8,r5,11138 <__muldf3+0x3e8>
   11130:	01400074 	movhi	r5,1
   11134:	2149883a 	add	r4,r4,r5
   11138:	9c53383a 	mul	r9,r19,r17
   1113c:	1c63383a 	mul	r17,r3,r17
   11140:	98a7383a 	mul	r19,r19,r2
   11144:	481cd43a 	srli	r14,r9,16
   11148:	401ad43a 	srli	r13,r8,16
   1114c:	4010943a 	slli	r8,r8,16
   11150:	9c4b883a 	add	r5,r19,r17
   11154:	52bfffcc 	andi	r10,r10,65535
   11158:	2b8b883a 	add	r5,r5,r14
   1115c:	2349883a 	add	r4,r4,r13
   11160:	4291883a 	add	r8,r8,r10
   11164:	1887383a 	mul	r3,r3,r2
   11168:	2cc0022e 	bgeu	r5,r19,11174 <__muldf3+0x424>
   1116c:	00800074 	movhi	r2,1
   11170:	1887883a 	add	r3,r3,r2
   11174:	2814943a 	slli	r10,r5,16
   11178:	3c21883a 	add	r16,r7,r16
   1117c:	4a7fffcc 	andi	r9,r9,65535
   11180:	82e1883a 	add	r16,r16,r11
   11184:	5255883a 	add	r10,r10,r9
   11188:	81cf803a 	cmpltu	r7,r16,r7
   1118c:	5195883a 	add	r10,r10,r6
   11190:	8221883a 	add	r16,r16,r8
   11194:	51d7883a 	add	r11,r10,r7
   11198:	8211803a 	cmpltu	r8,r16,r8
   1119c:	2804d43a 	srli	r2,r5,16
   111a0:	22d3883a 	add	r9,r4,r11
   111a4:	4a0b883a 	add	r5,r9,r8
   111a8:	518d803a 	cmpltu	r6,r10,r6
   111ac:	59e3803a 	cmpltu	r17,r11,r7
   111b0:	89a2b03a 	or	r17,r17,r6
   111b4:	2a11803a 	cmpltu	r8,r5,r8
   111b8:	4909803a 	cmpltu	r4,r9,r4
   111bc:	88a3883a 	add	r17,r17,r2
   111c0:	4108b03a 	or	r4,r8,r4
   111c4:	8923883a 	add	r17,r17,r4
   111c8:	800c927a 	slli	r6,r16,9
   111cc:	88c7883a 	add	r3,r17,r3
   111d0:	2808d5fa 	srli	r4,r5,23
   111d4:	1822927a 	slli	r17,r3,9
   111d8:	8020d5fa 	srli	r16,r16,23
   111dc:	3318b03a 	or	r12,r6,r12
   111e0:	280a927a 	slli	r5,r5,9
   111e4:	8922b03a 	or	r17,r17,r4
   111e8:	6018c03a 	cmpne	r12,r12,zero
   111ec:	6420b03a 	or	r16,r12,r16
   111f0:	8880402c 	andhi	r2,r17,256
   111f4:	8160b03a 	or	r16,r16,r5
   111f8:	10000926 	beq	r2,zero,11220 <__muldf3+0x4d0>
   111fc:	8006d07a 	srli	r3,r16,1
   11200:	8400004c 	andi	r16,r16,1
   11204:	880497fa 	slli	r2,r17,31
   11208:	80e0b03a 	or	r16,r16,r3
   1120c:	d8c00017 	ldw	r3,0(sp)
   11210:	8822d07a 	srli	r17,r17,1
   11214:	80a0b03a 	or	r16,r16,r2
   11218:	18c00044 	addi	r3,r3,1
   1121c:	d8c00015 	stw	r3,0(sp)
   11220:	d8c00017 	ldw	r3,0(sp)
   11224:	1880ffc4 	addi	r2,r3,1023
   11228:	0080450e 	bge	zero,r2,11340 <__muldf3+0x5f0>
   1122c:	80c001cc 	andi	r3,r16,7
   11230:	18000726 	beq	r3,zero,11250 <__muldf3+0x500>
   11234:	810003cc 	andi	r4,r16,15
   11238:	00c00104 	movi	r3,4
   1123c:	20c00426 	beq	r4,r3,11250 <__muldf3+0x500>
   11240:	80c7883a 	add	r3,r16,r3
   11244:	1c21803a 	cmpltu	r16,r3,r16
   11248:	8c23883a 	add	r17,r17,r16
   1124c:	1821883a 	mov	r16,r3
   11250:	88c0402c 	andhi	r3,r17,256
   11254:	18000526 	beq	r3,zero,1126c <__muldf3+0x51c>
   11258:	d8c00017 	ldw	r3,0(sp)
   1125c:	00bfc034 	movhi	r2,65280
   11260:	10bfffc4 	addi	r2,r2,-1
   11264:	88a2703a 	and	r17,r17,r2
   11268:	18810004 	addi	r2,r3,1024
   1126c:	00c1ff84 	movi	r3,2046
   11270:	18bf5e16 	blt	r3,r2,10fec <__alt_data_end+0xfe010fec>
   11274:	8806977a 	slli	r3,r17,29
   11278:	8020d0fa 	srli	r16,r16,3
   1127c:	8822927a 	slli	r17,r17,9
   11280:	1081ffcc 	andi	r2,r2,2047
   11284:	1c20b03a 	or	r16,r3,r16
   11288:	8822d33a 	srli	r17,r17,12
   1128c:	902f883a 	mov	r23,r18
   11290:	003f0c06 	br	10ec4 <__alt_data_end+0xfe010ec4>
   11294:	8880022c 	andhi	r2,r17,8
   11298:	10000a26 	beq	r2,zero,112c4 <__muldf3+0x574>
   1129c:	9880022c 	andhi	r2,r19,8
   112a0:	1000081e 	bne	r2,zero,112c4 <__muldf3+0x574>
   112a4:	00800434 	movhi	r2,16
   112a8:	10bfffc4 	addi	r2,r2,-1
   112ac:	9c400234 	orhi	r17,r19,8
   112b0:	88a2703a 	and	r17,r17,r2
   112b4:	b02f883a 	mov	r23,r22
   112b8:	2821883a 	mov	r16,r5
   112bc:	0081ffc4 	movi	r2,2047
   112c0:	003f0006 	br	10ec4 <__alt_data_end+0xfe010ec4>
   112c4:	00800434 	movhi	r2,16
   112c8:	10bfffc4 	addi	r2,r2,-1
   112cc:	8c400234 	orhi	r17,r17,8
   112d0:	88a2703a 	and	r17,r17,r2
   112d4:	0081ffc4 	movi	r2,2047
   112d8:	003efa06 	br	10ec4 <__alt_data_end+0xfe010ec4>
   112dc:	147ff604 	addi	r17,r2,-40
   112e0:	9c62983a 	sll	r17,r19,r17
   112e4:	0021883a 	mov	r16,zero
   112e8:	003f1d06 	br	10f60 <__alt_data_end+0xfe010f60>
   112ec:	d9800315 	stw	r6,12(sp)
   112f0:	d9c00115 	stw	r7,4(sp)
   112f4:	00120700 	call	12070 <__clzsi2>
   112f8:	10800804 	addi	r2,r2,32
   112fc:	d9c00117 	ldw	r7,4(sp)
   11300:	d9800317 	ldw	r6,12(sp)
   11304:	003f0d06 	br	10f3c <__alt_data_end+0xfe010f3c>
   11308:	14fff604 	addi	r19,r2,-40
   1130c:	34e6983a 	sll	r19,r6,r19
   11310:	000b883a 	mov	r5,zero
   11314:	003f3106 	br	10fdc <__alt_data_end+0xfe010fdc>
   11318:	3009883a 	mov	r4,r6
   1131c:	d9800315 	stw	r6,12(sp)
   11320:	da400115 	stw	r9,4(sp)
   11324:	da800215 	stw	r10,8(sp)
   11328:	00120700 	call	12070 <__clzsi2>
   1132c:	10800804 	addi	r2,r2,32
   11330:	da800217 	ldw	r10,8(sp)
   11334:	da400117 	ldw	r9,4(sp)
   11338:	d9800317 	ldw	r6,12(sp)
   1133c:	003f1e06 	br	10fb8 <__alt_data_end+0xfe010fb8>
   11340:	d8c00017 	ldw	r3,0(sp)
   11344:	00bf0084 	movi	r2,-1022
   11348:	10c5c83a 	sub	r2,r2,r3
   1134c:	00c00e04 	movi	r3,56
   11350:	18bed816 	blt	r3,r2,10eb4 <__alt_data_end+0xfe010eb4>
   11354:	00c007c4 	movi	r3,31
   11358:	18801916 	blt	r3,r2,113c0 <__muldf3+0x670>
   1135c:	d8c00017 	ldw	r3,0(sp)
   11360:	808ad83a 	srl	r5,r16,r2
   11364:	8884d83a 	srl	r2,r17,r2
   11368:	1d410784 	addi	r21,r3,1054
   1136c:	8d48983a 	sll	r4,r17,r21
   11370:	8546983a 	sll	r3,r16,r21
   11374:	2908b03a 	or	r4,r5,r4
   11378:	1806c03a 	cmpne	r3,r3,zero
   1137c:	20c6b03a 	or	r3,r4,r3
   11380:	190001cc 	andi	r4,r3,7
   11384:	20000726 	beq	r4,zero,113a4 <__muldf3+0x654>
   11388:	194003cc 	andi	r5,r3,15
   1138c:	01000104 	movi	r4,4
   11390:	29000426 	beq	r5,r4,113a4 <__muldf3+0x654>
   11394:	1909883a 	add	r4,r3,r4
   11398:	20c7803a 	cmpltu	r3,r4,r3
   1139c:	10c5883a 	add	r2,r2,r3
   113a0:	2007883a 	mov	r3,r4
   113a4:	1100202c 	andhi	r4,r2,128
   113a8:	20001326 	beq	r4,zero,113f8 <__muldf3+0x6a8>
   113ac:	902f883a 	mov	r23,r18
   113b0:	00800044 	movi	r2,1
   113b4:	0023883a 	mov	r17,zero
   113b8:	0021883a 	mov	r16,zero
   113bc:	003ec106 	br	10ec4 <__alt_data_end+0xfe010ec4>
   113c0:	d9000017 	ldw	r4,0(sp)
   113c4:	00fef884 	movi	r3,-1054
   113c8:	1907c83a 	sub	r3,r3,r4
   113cc:	01000804 	movi	r4,32
   113d0:	88c6d83a 	srl	r3,r17,r3
   113d4:	11001026 	beq	r2,r4,11418 <__muldf3+0x6c8>
   113d8:	d9000017 	ldw	r4,0(sp)
   113dc:	20810f84 	addi	r2,r4,1086
   113e0:	8884983a 	sll	r2,r17,r2
   113e4:	1404b03a 	or	r2,r2,r16
   113e8:	1004c03a 	cmpne	r2,r2,zero
   113ec:	10c6b03a 	or	r3,r2,r3
   113f0:	0005883a 	mov	r2,zero
   113f4:	003fe206 	br	11380 <__alt_data_end+0xfe011380>
   113f8:	1020977a 	slli	r16,r2,29
   113fc:	1806d0fa 	srli	r3,r3,3
   11400:	1004927a 	slli	r2,r2,9
   11404:	902f883a 	mov	r23,r18
   11408:	80e0b03a 	or	r16,r16,r3
   1140c:	1022d33a 	srli	r17,r2,12
   11410:	0005883a 	mov	r2,zero
   11414:	003eab06 	br	10ec4 <__alt_data_end+0xfe010ec4>
   11418:	0005883a 	mov	r2,zero
   1141c:	003ff106 	br	113e4 <__alt_data_end+0xfe0113e4>
   11420:	00800434 	movhi	r2,16
   11424:	10bfffc4 	addi	r2,r2,-1
   11428:	8c400234 	orhi	r17,r17,8
   1142c:	88a2703a 	and	r17,r17,r2
   11430:	902f883a 	mov	r23,r18
   11434:	0081ffc4 	movi	r2,2047
   11438:	003ea206 	br	10ec4 <__alt_data_end+0xfe010ec4>

0001143c <__subdf3>:
   1143c:	02000434 	movhi	r8,16
   11440:	423fffc4 	addi	r8,r8,-1
   11444:	defffb04 	addi	sp,sp,-20
   11448:	2a06703a 	and	r3,r5,r8
   1144c:	3a10703a 	and	r8,r7,r8
   11450:	3804d53a 	srli	r2,r7,20
   11454:	dc800215 	stw	r18,8(sp)
   11458:	dc400115 	stw	r17,4(sp)
   1145c:	2824d7fa 	srli	r18,r5,31
   11460:	2822d53a 	srli	r17,r5,20
   11464:	401090fa 	slli	r8,r8,3
   11468:	180a90fa 	slli	r5,r3,3
   1146c:	3006d77a 	srli	r3,r6,29
   11470:	2014d77a 	srli	r10,r4,29
   11474:	dc000015 	stw	r16,0(sp)
   11478:	40d0b03a 	or	r8,r8,r3
   1147c:	dfc00415 	stw	ra,16(sp)
   11480:	dcc00315 	stw	r19,12(sp)
   11484:	1081ffcc 	andi	r2,r2,2047
   11488:	00c1ffc4 	movi	r3,2047
   1148c:	9013883a 	mov	r9,r18
   11490:	8c41ffcc 	andi	r17,r17,2047
   11494:	94803fcc 	andi	r18,r18,255
   11498:	2a8ab03a 	or	r5,r5,r10
   1149c:	202090fa 	slli	r16,r4,3
   114a0:	380ed7fa 	srli	r7,r7,31
   114a4:	300c90fa 	slli	r6,r6,3
   114a8:	10c02e26 	beq	r2,r3,11564 <__subdf3+0x128>
   114ac:	39c0005c 	xori	r7,r7,1
   114b0:	8887c83a 	sub	r3,r17,r2
   114b4:	91c03026 	beq	r18,r7,11578 <__subdf3+0x13c>
   114b8:	00c0a40e 	bge	zero,r3,1174c <__subdf3+0x310>
   114bc:	10004c1e 	bne	r2,zero,115f0 <__subdf3+0x1b4>
   114c0:	4184b03a 	or	r2,r8,r6
   114c4:	10008f1e 	bne	r2,zero,11704 <__subdf3+0x2c8>
   114c8:	808001cc 	andi	r2,r16,7
   114cc:	10007d26 	beq	r2,zero,116c4 <__subdf3+0x288>
   114d0:	80c003cc 	andi	r3,r16,15
   114d4:	00800104 	movi	r2,4
   114d8:	18807a26 	beq	r3,r2,116c4 <__subdf3+0x288>
   114dc:	80c00104 	addi	r3,r16,4
   114e0:	1c21803a 	cmpltu	r16,r3,r16
   114e4:	2c0b883a 	add	r5,r5,r16
   114e8:	2880202c 	andhi	r2,r5,128
   114ec:	9240004c 	andi	r9,r18,1
   114f0:	1821883a 	mov	r16,r3
   114f4:	10007626 	beq	r2,zero,116d0 <__subdf3+0x294>
   114f8:	8c400044 	addi	r17,r17,1
   114fc:	0081ffc4 	movi	r2,2047
   11500:	8880b226 	beq	r17,r2,117cc <__subdf3+0x390>
   11504:	00bfe034 	movhi	r2,65408
   11508:	10bfffc4 	addi	r2,r2,-1
   1150c:	288a703a 	and	r5,r5,r2
   11510:	2804977a 	slli	r2,r5,29
   11514:	280a927a 	slli	r5,r5,9
   11518:	8020d0fa 	srli	r16,r16,3
   1151c:	280ad33a 	srli	r5,r5,12
   11520:	1404b03a 	or	r2,r2,r16
   11524:	8c41ffcc 	andi	r17,r17,2047
   11528:	8822953a 	slli	r17,r17,20
   1152c:	4a403fcc 	andi	r9,r9,255
   11530:	481297fa 	slli	r9,r9,31
   11534:	00c00434 	movhi	r3,16
   11538:	18ffffc4 	addi	r3,r3,-1
   1153c:	28c6703a 	and	r3,r5,r3
   11540:	1c46b03a 	or	r3,r3,r17
   11544:	1a46b03a 	or	r3,r3,r9
   11548:	dfc00417 	ldw	ra,16(sp)
   1154c:	dcc00317 	ldw	r19,12(sp)
   11550:	dc800217 	ldw	r18,8(sp)
   11554:	dc400117 	ldw	r17,4(sp)
   11558:	dc000017 	ldw	r16,0(sp)
   1155c:	dec00504 	addi	sp,sp,20
   11560:	f800283a 	ret
   11564:	4186b03a 	or	r3,r8,r6
   11568:	183fd026 	beq	r3,zero,114ac <__alt_data_end+0xfe0114ac>
   1156c:	39c03fcc 	andi	r7,r7,255
   11570:	8887c83a 	sub	r3,r17,r2
   11574:	91ffd01e 	bne	r18,r7,114b8 <__alt_data_end+0xfe0114b8>
   11578:	00c09b0e 	bge	zero,r3,117e8 <__subdf3+0x3ac>
   1157c:	10006926 	beq	r2,zero,11724 <__subdf3+0x2e8>
   11580:	0081ffc4 	movi	r2,2047
   11584:	88bfd026 	beq	r17,r2,114c8 <__alt_data_end+0xfe0114c8>
   11588:	42002034 	orhi	r8,r8,128
   1158c:	00800e04 	movi	r2,56
   11590:	10c0e20e 	bge	r2,r3,1191c <__subdf3+0x4e0>
   11594:	418cb03a 	or	r6,r8,r6
   11598:	300cc03a 	cmpne	r6,r6,zero
   1159c:	0007883a 	mov	r3,zero
   115a0:	340d883a 	add	r6,r6,r16
   115a4:	3421803a 	cmpltu	r16,r6,r16
   115a8:	194b883a 	add	r5,r3,r5
   115ac:	2c0b883a 	add	r5,r5,r16
   115b0:	3021883a 	mov	r16,r6
   115b4:	2880202c 	andhi	r2,r5,128
   115b8:	103fc326 	beq	r2,zero,114c8 <__alt_data_end+0xfe0114c8>
   115bc:	8c400044 	addi	r17,r17,1
   115c0:	0081ffc4 	movi	r2,2047
   115c4:	88811026 	beq	r17,r2,11a08 <__subdf3+0x5cc>
   115c8:	00bfe034 	movhi	r2,65408
   115cc:	10bfffc4 	addi	r2,r2,-1
   115d0:	288a703a 	and	r5,r5,r2
   115d4:	8006d07a 	srli	r3,r16,1
   115d8:	280497fa 	slli	r2,r5,31
   115dc:	8400004c 	andi	r16,r16,1
   115e0:	80e0b03a 	or	r16,r16,r3
   115e4:	80a0b03a 	or	r16,r16,r2
   115e8:	280ad07a 	srli	r5,r5,1
   115ec:	003fb606 	br	114c8 <__alt_data_end+0xfe0114c8>
   115f0:	0081ffc4 	movi	r2,2047
   115f4:	88bfb426 	beq	r17,r2,114c8 <__alt_data_end+0xfe0114c8>
   115f8:	42002034 	orhi	r8,r8,128
   115fc:	00800e04 	movi	r2,56
   11600:	10c07516 	blt	r2,r3,117d8 <__subdf3+0x39c>
   11604:	008007c4 	movi	r2,31
   11608:	10c09816 	blt	r2,r3,1186c <__subdf3+0x430>
   1160c:	00800804 	movi	r2,32
   11610:	10c5c83a 	sub	r2,r2,r3
   11614:	30c8d83a 	srl	r4,r6,r3
   11618:	408e983a 	sll	r7,r8,r2
   1161c:	3084983a 	sll	r2,r6,r2
   11620:	40c6d83a 	srl	r3,r8,r3
   11624:	3908b03a 	or	r4,r7,r4
   11628:	1004c03a 	cmpne	r2,r2,zero
   1162c:	208cb03a 	or	r6,r4,r2
   11630:	818dc83a 	sub	r6,r16,r6
   11634:	81a1803a 	cmpltu	r16,r16,r6
   11638:	28cbc83a 	sub	r5,r5,r3
   1163c:	2c0bc83a 	sub	r5,r5,r16
   11640:	3021883a 	mov	r16,r6
   11644:	2880202c 	andhi	r2,r5,128
   11648:	103f9f26 	beq	r2,zero,114c8 <__alt_data_end+0xfe0114c8>
   1164c:	04c02034 	movhi	r19,128
   11650:	9cffffc4 	addi	r19,r19,-1
   11654:	2ce6703a 	and	r19,r5,r19
   11658:	98004d26 	beq	r19,zero,11790 <__subdf3+0x354>
   1165c:	9809883a 	mov	r4,r19
   11660:	00120700 	call	12070 <__clzsi2>
   11664:	10fffe04 	addi	r3,r2,-8
   11668:	010007c4 	movi	r4,31
   1166c:	20c04e16 	blt	r4,r3,117a8 <__subdf3+0x36c>
   11670:	01000a04 	movi	r4,40
   11674:	2085c83a 	sub	r2,r4,r2
   11678:	8084d83a 	srl	r2,r16,r2
   1167c:	98e6983a 	sll	r19,r19,r3
   11680:	80e0983a 	sll	r16,r16,r3
   11684:	14c4b03a 	or	r2,r2,r19
   11688:	1c404b16 	blt	r3,r17,117b8 <__subdf3+0x37c>
   1168c:	1c63c83a 	sub	r17,r3,r17
   11690:	89400044 	addi	r5,r17,1
   11694:	00c007c4 	movi	r3,31
   11698:	19406716 	blt	r3,r5,11838 <__subdf3+0x3fc>
   1169c:	1c47c83a 	sub	r3,r3,r17
   116a0:	8148d83a 	srl	r4,r16,r5
   116a4:	80e0983a 	sll	r16,r16,r3
   116a8:	10c6983a 	sll	r3,r2,r3
   116ac:	114ad83a 	srl	r5,r2,r5
   116b0:	8004c03a 	cmpne	r2,r16,zero
   116b4:	20e0b03a 	or	r16,r4,r3
   116b8:	80a0b03a 	or	r16,r16,r2
   116bc:	0023883a 	mov	r17,zero
   116c0:	003f8106 	br	114c8 <__alt_data_end+0xfe0114c8>
   116c4:	2880202c 	andhi	r2,r5,128
   116c8:	9240004c 	andi	r9,r18,1
   116cc:	103f8a1e 	bne	r2,zero,114f8 <__alt_data_end+0xfe0114f8>
   116d0:	2804977a 	slli	r2,r5,29
   116d4:	8020d0fa 	srli	r16,r16,3
   116d8:	00c1ffc4 	movi	r3,2047
   116dc:	280ad0fa 	srli	r5,r5,3
   116e0:	1404b03a 	or	r2,r2,r16
   116e4:	88c0031e 	bne	r17,r3,116f4 <__subdf3+0x2b8>
   116e8:	1146b03a 	or	r3,r2,r5
   116ec:	18003726 	beq	r3,zero,117cc <__subdf3+0x390>
   116f0:	29400234 	orhi	r5,r5,8
   116f4:	00c00434 	movhi	r3,16
   116f8:	18ffffc4 	addi	r3,r3,-1
   116fc:	28ca703a 	and	r5,r5,r3
   11700:	003f8806 	br	11524 <__alt_data_end+0xfe011524>
   11704:	18ffffc4 	addi	r3,r3,-1
   11708:	1800481e 	bne	r3,zero,1182c <__subdf3+0x3f0>
   1170c:	818dc83a 	sub	r6,r16,r6
   11710:	81a1803a 	cmpltu	r16,r16,r6
   11714:	2a0bc83a 	sub	r5,r5,r8
   11718:	2c0bc83a 	sub	r5,r5,r16
   1171c:	3021883a 	mov	r16,r6
   11720:	003fc806 	br	11644 <__alt_data_end+0xfe011644>
   11724:	4184b03a 	or	r2,r8,r6
   11728:	103f6726 	beq	r2,zero,114c8 <__alt_data_end+0xfe0114c8>
   1172c:	18ffffc4 	addi	r3,r3,-1
   11730:	1800931e 	bne	r3,zero,11980 <__subdf3+0x544>
   11734:	340d883a 	add	r6,r6,r16
   11738:	3421803a 	cmpltu	r16,r6,r16
   1173c:	414b883a 	add	r5,r8,r5
   11740:	2c0b883a 	add	r5,r5,r16
   11744:	3021883a 	mov	r16,r6
   11748:	003f9a06 	br	115b4 <__alt_data_end+0xfe0115b4>
   1174c:	1800531e 	bne	r3,zero,1189c <__subdf3+0x460>
   11750:	88800044 	addi	r2,r17,1
   11754:	1081ffcc 	andi	r2,r2,2047
   11758:	00c00044 	movi	r3,1
   1175c:	1880a00e 	bge	r3,r2,119e0 <__subdf3+0x5a4>
   11760:	8185c83a 	sub	r2,r16,r6
   11764:	8087803a 	cmpltu	r3,r16,r2
   11768:	2a27c83a 	sub	r19,r5,r8
   1176c:	98e7c83a 	sub	r19,r19,r3
   11770:	98c0202c 	andhi	r3,r19,128
   11774:	18006226 	beq	r3,zero,11900 <__subdf3+0x4c4>
   11778:	3421c83a 	sub	r16,r6,r16
   1177c:	414bc83a 	sub	r5,r8,r5
   11780:	340d803a 	cmpltu	r6,r6,r16
   11784:	29a7c83a 	sub	r19,r5,r6
   11788:	3825883a 	mov	r18,r7
   1178c:	983fb31e 	bne	r19,zero,1165c <__alt_data_end+0xfe01165c>
   11790:	8009883a 	mov	r4,r16
   11794:	00120700 	call	12070 <__clzsi2>
   11798:	10800804 	addi	r2,r2,32
   1179c:	10fffe04 	addi	r3,r2,-8
   117a0:	010007c4 	movi	r4,31
   117a4:	20ffb20e 	bge	r4,r3,11670 <__alt_data_end+0xfe011670>
   117a8:	10bff604 	addi	r2,r2,-40
   117ac:	8084983a 	sll	r2,r16,r2
   117b0:	0021883a 	mov	r16,zero
   117b4:	1c7fb50e 	bge	r3,r17,1168c <__alt_data_end+0xfe01168c>
   117b8:	017fe034 	movhi	r5,65408
   117bc:	297fffc4 	addi	r5,r5,-1
   117c0:	88e3c83a 	sub	r17,r17,r3
   117c4:	114a703a 	and	r5,r2,r5
   117c8:	003f3f06 	br	114c8 <__alt_data_end+0xfe0114c8>
   117cc:	000b883a 	mov	r5,zero
   117d0:	0005883a 	mov	r2,zero
   117d4:	003f5306 	br	11524 <__alt_data_end+0xfe011524>
   117d8:	418cb03a 	or	r6,r8,r6
   117dc:	300cc03a 	cmpne	r6,r6,zero
   117e0:	0007883a 	mov	r3,zero
   117e4:	003f9206 	br	11630 <__alt_data_end+0xfe011630>
   117e8:	1800961e 	bne	r3,zero,11a44 <__subdf3+0x608>
   117ec:	88800044 	addi	r2,r17,1
   117f0:	1101ffcc 	andi	r4,r2,2047
   117f4:	00c00044 	movi	r3,1
   117f8:	1900680e 	bge	r3,r4,1199c <__subdf3+0x560>
   117fc:	00c1ffc4 	movi	r3,2047
   11800:	10c0b626 	beq	r2,r3,11adc <__subdf3+0x6a0>
   11804:	340d883a 	add	r6,r6,r16
   11808:	3421803a 	cmpltu	r16,r6,r16
   1180c:	414b883a 	add	r5,r8,r5
   11810:	2c0b883a 	add	r5,r5,r16
   11814:	282097fa 	slli	r16,r5,31
   11818:	300cd07a 	srli	r6,r6,1
   1181c:	280ad07a 	srli	r5,r5,1
   11820:	1023883a 	mov	r17,r2
   11824:	81a0b03a 	or	r16,r16,r6
   11828:	003f2706 	br	114c8 <__alt_data_end+0xfe0114c8>
   1182c:	0081ffc4 	movi	r2,2047
   11830:	88bf721e 	bne	r17,r2,115fc <__alt_data_end+0xfe0115fc>
   11834:	003f2406 	br	114c8 <__alt_data_end+0xfe0114c8>
   11838:	893ff844 	addi	r4,r17,-31
   1183c:	00c00804 	movi	r3,32
   11840:	1108d83a 	srl	r4,r2,r4
   11844:	28c05126 	beq	r5,r3,1198c <__subdf3+0x550>
   11848:	00c00fc4 	movi	r3,63
   1184c:	1c63c83a 	sub	r17,r3,r17
   11850:	1444983a 	sll	r2,r2,r17
   11854:	1420b03a 	or	r16,r2,r16
   11858:	8020c03a 	cmpne	r16,r16,zero
   1185c:	8120b03a 	or	r16,r16,r4
   11860:	000b883a 	mov	r5,zero
   11864:	0023883a 	mov	r17,zero
   11868:	003f1706 	br	114c8 <__alt_data_end+0xfe0114c8>
   1186c:	18bff804 	addi	r2,r3,-32
   11870:	01000804 	movi	r4,32
   11874:	4084d83a 	srl	r2,r8,r2
   11878:	19004626 	beq	r3,r4,11994 <__subdf3+0x558>
   1187c:	01001004 	movi	r4,64
   11880:	20c7c83a 	sub	r3,r4,r3
   11884:	40d0983a 	sll	r8,r8,r3
   11888:	418cb03a 	or	r6,r8,r6
   1188c:	300cc03a 	cmpne	r6,r6,zero
   11890:	308cb03a 	or	r6,r6,r2
   11894:	0007883a 	mov	r3,zero
   11898:	003f6506 	br	11630 <__alt_data_end+0xfe011630>
   1189c:	88002b26 	beq	r17,zero,1194c <__subdf3+0x510>
   118a0:	0101ffc4 	movi	r4,2047
   118a4:	11002f26 	beq	r2,r4,11964 <__subdf3+0x528>
   118a8:	00c7c83a 	sub	r3,zero,r3
   118ac:	29402034 	orhi	r5,r5,128
   118b0:	01000e04 	movi	r4,56
   118b4:	20c08516 	blt	r4,r3,11acc <__subdf3+0x690>
   118b8:	010007c4 	movi	r4,31
   118bc:	20c0cd16 	blt	r4,r3,11bf4 <__subdf3+0x7b8>
   118c0:	01000804 	movi	r4,32
   118c4:	20c9c83a 	sub	r4,r4,r3
   118c8:	2914983a 	sll	r10,r5,r4
   118cc:	80d2d83a 	srl	r9,r16,r3
   118d0:	8108983a 	sll	r4,r16,r4
   118d4:	28cad83a 	srl	r5,r5,r3
   118d8:	5252b03a 	or	r9,r10,r9
   118dc:	2006c03a 	cmpne	r3,r4,zero
   118e0:	48e0b03a 	or	r16,r9,r3
   118e4:	3421c83a 	sub	r16,r6,r16
   118e8:	414bc83a 	sub	r5,r8,r5
   118ec:	340d803a 	cmpltu	r6,r6,r16
   118f0:	298bc83a 	sub	r5,r5,r6
   118f4:	1023883a 	mov	r17,r2
   118f8:	3825883a 	mov	r18,r7
   118fc:	003f5106 	br	11644 <__alt_data_end+0xfe011644>
   11900:	9886b03a 	or	r3,r19,r2
   11904:	18001c1e 	bne	r3,zero,11978 <__subdf3+0x53c>
   11908:	0013883a 	mov	r9,zero
   1190c:	000b883a 	mov	r5,zero
   11910:	0021883a 	mov	r16,zero
   11914:	0023883a 	mov	r17,zero
   11918:	003f6d06 	br	116d0 <__alt_data_end+0xfe0116d0>
   1191c:	008007c4 	movi	r2,31
   11920:	10c03c16 	blt	r2,r3,11a14 <__subdf3+0x5d8>
   11924:	00800804 	movi	r2,32
   11928:	10c5c83a 	sub	r2,r2,r3
   1192c:	30c8d83a 	srl	r4,r6,r3
   11930:	408e983a 	sll	r7,r8,r2
   11934:	3084983a 	sll	r2,r6,r2
   11938:	40c6d83a 	srl	r3,r8,r3
   1193c:	3908b03a 	or	r4,r7,r4
   11940:	1004c03a 	cmpne	r2,r2,zero
   11944:	208cb03a 	or	r6,r4,r2
   11948:	003f1506 	br	115a0 <__alt_data_end+0xfe0115a0>
   1194c:	2c08b03a 	or	r4,r5,r16
   11950:	20000426 	beq	r4,zero,11964 <__subdf3+0x528>
   11954:	00c6303a 	nor	r3,zero,r3
   11958:	183fe226 	beq	r3,zero,118e4 <__alt_data_end+0xfe0118e4>
   1195c:	0101ffc4 	movi	r4,2047
   11960:	113fd31e 	bne	r2,r4,118b0 <__alt_data_end+0xfe0118b0>
   11964:	400b883a 	mov	r5,r8
   11968:	3021883a 	mov	r16,r6
   1196c:	1023883a 	mov	r17,r2
   11970:	3825883a 	mov	r18,r7
   11974:	003ed406 	br	114c8 <__alt_data_end+0xfe0114c8>
   11978:	1021883a 	mov	r16,r2
   1197c:	003f3606 	br	11658 <__alt_data_end+0xfe011658>
   11980:	0081ffc4 	movi	r2,2047
   11984:	88bf011e 	bne	r17,r2,1158c <__alt_data_end+0xfe01158c>
   11988:	003ecf06 	br	114c8 <__alt_data_end+0xfe0114c8>
   1198c:	0005883a 	mov	r2,zero
   11990:	003fb006 	br	11854 <__alt_data_end+0xfe011854>
   11994:	0011883a 	mov	r8,zero
   11998:	003fbb06 	br	11888 <__alt_data_end+0xfe011888>
   1199c:	2c04b03a 	or	r2,r5,r16
   119a0:	88007f1e 	bne	r17,zero,11ba0 <__subdf3+0x764>
   119a4:	1000a926 	beq	r2,zero,11c4c <__subdf3+0x810>
   119a8:	4184b03a 	or	r2,r8,r6
   119ac:	103ec626 	beq	r2,zero,114c8 <__alt_data_end+0xfe0114c8>
   119b0:	340d883a 	add	r6,r6,r16
   119b4:	414b883a 	add	r5,r8,r5
   119b8:	3421803a 	cmpltu	r16,r6,r16
   119bc:	2c0b883a 	add	r5,r5,r16
   119c0:	2880202c 	andhi	r2,r5,128
   119c4:	1000bb26 	beq	r2,zero,11cb4 <__subdf3+0x878>
   119c8:	00bfe034 	movhi	r2,65408
   119cc:	10bfffc4 	addi	r2,r2,-1
   119d0:	288a703a 	and	r5,r5,r2
   119d4:	3021883a 	mov	r16,r6
   119d8:	1823883a 	mov	r17,r3
   119dc:	003eba06 	br	114c8 <__alt_data_end+0xfe0114c8>
   119e0:	2c04b03a 	or	r2,r5,r16
   119e4:	8800311e 	bne	r17,zero,11aac <__subdf3+0x670>
   119e8:	1000451e 	bne	r2,zero,11b00 <__subdf3+0x6c4>
   119ec:	4184b03a 	or	r2,r8,r6
   119f0:	10000426 	beq	r2,zero,11a04 <__subdf3+0x5c8>
   119f4:	400b883a 	mov	r5,r8
   119f8:	3021883a 	mov	r16,r6
   119fc:	3825883a 	mov	r18,r7
   11a00:	003eb106 	br	114c8 <__alt_data_end+0xfe0114c8>
   11a04:	0013883a 	mov	r9,zero
   11a08:	000b883a 	mov	r5,zero
   11a0c:	0021883a 	mov	r16,zero
   11a10:	003f2f06 	br	116d0 <__alt_data_end+0xfe0116d0>
   11a14:	18bff804 	addi	r2,r3,-32
   11a18:	01000804 	movi	r4,32
   11a1c:	4084d83a 	srl	r2,r8,r2
   11a20:	19007226 	beq	r3,r4,11bec <__subdf3+0x7b0>
   11a24:	01001004 	movi	r4,64
   11a28:	20c7c83a 	sub	r3,r4,r3
   11a2c:	40d0983a 	sll	r8,r8,r3
   11a30:	418cb03a 	or	r6,r8,r6
   11a34:	300cc03a 	cmpne	r6,r6,zero
   11a38:	308cb03a 	or	r6,r6,r2
   11a3c:	0007883a 	mov	r3,zero
   11a40:	003ed706 	br	115a0 <__alt_data_end+0xfe0115a0>
   11a44:	8800291e 	bne	r17,zero,11aec <__subdf3+0x6b0>
   11a48:	2c08b03a 	or	r4,r5,r16
   11a4c:	20005026 	beq	r4,zero,11b90 <__subdf3+0x754>
   11a50:	00c6303a 	nor	r3,zero,r3
   11a54:	18000f26 	beq	r3,zero,11a94 <__subdf3+0x658>
   11a58:	0101ffc4 	movi	r4,2047
   11a5c:	11004c26 	beq	r2,r4,11b90 <__subdf3+0x754>
   11a60:	01000e04 	movi	r4,56
   11a64:	20c07516 	blt	r4,r3,11c3c <__subdf3+0x800>
   11a68:	010007c4 	movi	r4,31
   11a6c:	20c08316 	blt	r4,r3,11c7c <__subdf3+0x840>
   11a70:	01000804 	movi	r4,32
   11a74:	20c9c83a 	sub	r4,r4,r3
   11a78:	2914983a 	sll	r10,r5,r4
   11a7c:	80ced83a 	srl	r7,r16,r3
   11a80:	8108983a 	sll	r4,r16,r4
   11a84:	28cad83a 	srl	r5,r5,r3
   11a88:	51ceb03a 	or	r7,r10,r7
   11a8c:	2006c03a 	cmpne	r3,r4,zero
   11a90:	38e0b03a 	or	r16,r7,r3
   11a94:	81a1883a 	add	r16,r16,r6
   11a98:	2a0b883a 	add	r5,r5,r8
   11a9c:	818d803a 	cmpltu	r6,r16,r6
   11aa0:	298b883a 	add	r5,r5,r6
   11aa4:	1023883a 	mov	r17,r2
   11aa8:	003ec206 	br	115b4 <__alt_data_end+0xfe0115b4>
   11aac:	1000221e 	bne	r2,zero,11b38 <__subdf3+0x6fc>
   11ab0:	4184b03a 	or	r2,r8,r6
   11ab4:	10005b26 	beq	r2,zero,11c24 <__subdf3+0x7e8>
   11ab8:	400b883a 	mov	r5,r8
   11abc:	3021883a 	mov	r16,r6
   11ac0:	3825883a 	mov	r18,r7
   11ac4:	0441ffc4 	movi	r17,2047
   11ac8:	003e7f06 	br	114c8 <__alt_data_end+0xfe0114c8>
   11acc:	2c20b03a 	or	r16,r5,r16
   11ad0:	8020c03a 	cmpne	r16,r16,zero
   11ad4:	000b883a 	mov	r5,zero
   11ad8:	003f8206 	br	118e4 <__alt_data_end+0xfe0118e4>
   11adc:	1023883a 	mov	r17,r2
   11ae0:	000b883a 	mov	r5,zero
   11ae4:	0021883a 	mov	r16,zero
   11ae8:	003ef906 	br	116d0 <__alt_data_end+0xfe0116d0>
   11aec:	0101ffc4 	movi	r4,2047
   11af0:	11002726 	beq	r2,r4,11b90 <__subdf3+0x754>
   11af4:	00c7c83a 	sub	r3,zero,r3
   11af8:	29402034 	orhi	r5,r5,128
   11afc:	003fd806 	br	11a60 <__alt_data_end+0xfe011a60>
   11b00:	4184b03a 	or	r2,r8,r6
   11b04:	103e7026 	beq	r2,zero,114c8 <__alt_data_end+0xfe0114c8>
   11b08:	8185c83a 	sub	r2,r16,r6
   11b0c:	8089803a 	cmpltu	r4,r16,r2
   11b10:	2a07c83a 	sub	r3,r5,r8
   11b14:	1907c83a 	sub	r3,r3,r4
   11b18:	1900202c 	andhi	r4,r3,128
   11b1c:	20005226 	beq	r4,zero,11c68 <__subdf3+0x82c>
   11b20:	3421c83a 	sub	r16,r6,r16
   11b24:	414bc83a 	sub	r5,r8,r5
   11b28:	340d803a 	cmpltu	r6,r6,r16
   11b2c:	298bc83a 	sub	r5,r5,r6
   11b30:	3825883a 	mov	r18,r7
   11b34:	003e6406 	br	114c8 <__alt_data_end+0xfe0114c8>
   11b38:	4184b03a 	or	r2,r8,r6
   11b3c:	10002926 	beq	r2,zero,11be4 <__subdf3+0x7a8>
   11b40:	2804d0fa 	srli	r2,r5,3
   11b44:	8020d0fa 	srli	r16,r16,3
   11b48:	280a977a 	slli	r5,r5,29
   11b4c:	10c0022c 	andhi	r3,r2,8
   11b50:	2c20b03a 	or	r16,r5,r16
   11b54:	18000826 	beq	r3,zero,11b78 <__subdf3+0x73c>
   11b58:	4006d0fa 	srli	r3,r8,3
   11b5c:	1900022c 	andhi	r4,r3,8
   11b60:	2000051e 	bne	r4,zero,11b78 <__subdf3+0x73c>
   11b64:	300cd0fa 	srli	r6,r6,3
   11b68:	4010977a 	slli	r8,r8,29
   11b6c:	1805883a 	mov	r2,r3
   11b70:	3825883a 	mov	r18,r7
   11b74:	41a0b03a 	or	r16,r8,r6
   11b78:	800ad77a 	srli	r5,r16,29
   11b7c:	100490fa 	slli	r2,r2,3
   11b80:	802090fa 	slli	r16,r16,3
   11b84:	0441ffc4 	movi	r17,2047
   11b88:	288ab03a 	or	r5,r5,r2
   11b8c:	003e4e06 	br	114c8 <__alt_data_end+0xfe0114c8>
   11b90:	400b883a 	mov	r5,r8
   11b94:	3021883a 	mov	r16,r6
   11b98:	1023883a 	mov	r17,r2
   11b9c:	003e4a06 	br	114c8 <__alt_data_end+0xfe0114c8>
   11ba0:	10002d26 	beq	r2,zero,11c58 <__subdf3+0x81c>
   11ba4:	4184b03a 	or	r2,r8,r6
   11ba8:	10000e26 	beq	r2,zero,11be4 <__subdf3+0x7a8>
   11bac:	2804d0fa 	srli	r2,r5,3
   11bb0:	8020d0fa 	srli	r16,r16,3
   11bb4:	280a977a 	slli	r5,r5,29
   11bb8:	10c0022c 	andhi	r3,r2,8
   11bbc:	2c20b03a 	or	r16,r5,r16
   11bc0:	183fed26 	beq	r3,zero,11b78 <__alt_data_end+0xfe011b78>
   11bc4:	4006d0fa 	srli	r3,r8,3
   11bc8:	1900022c 	andhi	r4,r3,8
   11bcc:	203fea1e 	bne	r4,zero,11b78 <__alt_data_end+0xfe011b78>
   11bd0:	300cd0fa 	srli	r6,r6,3
   11bd4:	4010977a 	slli	r8,r8,29
   11bd8:	1805883a 	mov	r2,r3
   11bdc:	41a0b03a 	or	r16,r8,r6
   11be0:	003fe506 	br	11b78 <__alt_data_end+0xfe011b78>
   11be4:	0441ffc4 	movi	r17,2047
   11be8:	003e3706 	br	114c8 <__alt_data_end+0xfe0114c8>
   11bec:	0011883a 	mov	r8,zero
   11bf0:	003f8f06 	br	11a30 <__alt_data_end+0xfe011a30>
   11bf4:	193ff804 	addi	r4,r3,-32
   11bf8:	02400804 	movi	r9,32
   11bfc:	2908d83a 	srl	r4,r5,r4
   11c00:	1a402a26 	beq	r3,r9,11cac <__subdf3+0x870>
   11c04:	02401004 	movi	r9,64
   11c08:	48c7c83a 	sub	r3,r9,r3
   11c0c:	28ca983a 	sll	r5,r5,r3
   11c10:	2c20b03a 	or	r16,r5,r16
   11c14:	8020c03a 	cmpne	r16,r16,zero
   11c18:	8120b03a 	or	r16,r16,r4
   11c1c:	000b883a 	mov	r5,zero
   11c20:	003f3006 	br	118e4 <__alt_data_end+0xfe0118e4>
   11c24:	0013883a 	mov	r9,zero
   11c28:	01402034 	movhi	r5,128
   11c2c:	297fffc4 	addi	r5,r5,-1
   11c30:	043ffe04 	movi	r16,-8
   11c34:	0441ffc4 	movi	r17,2047
   11c38:	003ea506 	br	116d0 <__alt_data_end+0xfe0116d0>
   11c3c:	2c20b03a 	or	r16,r5,r16
   11c40:	8020c03a 	cmpne	r16,r16,zero
   11c44:	000b883a 	mov	r5,zero
   11c48:	003f9206 	br	11a94 <__alt_data_end+0xfe011a94>
   11c4c:	400b883a 	mov	r5,r8
   11c50:	3021883a 	mov	r16,r6
   11c54:	003e1c06 	br	114c8 <__alt_data_end+0xfe0114c8>
   11c58:	400b883a 	mov	r5,r8
   11c5c:	3021883a 	mov	r16,r6
   11c60:	0441ffc4 	movi	r17,2047
   11c64:	003e1806 	br	114c8 <__alt_data_end+0xfe0114c8>
   11c68:	1888b03a 	or	r4,r3,r2
   11c6c:	203f6526 	beq	r4,zero,11a04 <__alt_data_end+0xfe011a04>
   11c70:	180b883a 	mov	r5,r3
   11c74:	1021883a 	mov	r16,r2
   11c78:	003e1306 	br	114c8 <__alt_data_end+0xfe0114c8>
   11c7c:	193ff804 	addi	r4,r3,-32
   11c80:	01c00804 	movi	r7,32
   11c84:	2908d83a 	srl	r4,r5,r4
   11c88:	19c00c26 	beq	r3,r7,11cbc <__subdf3+0x880>
   11c8c:	01c01004 	movi	r7,64
   11c90:	38c7c83a 	sub	r3,r7,r3
   11c94:	28ca983a 	sll	r5,r5,r3
   11c98:	2c20b03a 	or	r16,r5,r16
   11c9c:	8020c03a 	cmpne	r16,r16,zero
   11ca0:	8120b03a 	or	r16,r16,r4
   11ca4:	000b883a 	mov	r5,zero
   11ca8:	003f7a06 	br	11a94 <__alt_data_end+0xfe011a94>
   11cac:	000b883a 	mov	r5,zero
   11cb0:	003fd706 	br	11c10 <__alt_data_end+0xfe011c10>
   11cb4:	3021883a 	mov	r16,r6
   11cb8:	003e0306 	br	114c8 <__alt_data_end+0xfe0114c8>
   11cbc:	000b883a 	mov	r5,zero
   11cc0:	003ff506 	br	11c98 <__alt_data_end+0xfe011c98>

00011cc4 <__fixdfsi>:
   11cc4:	2806d53a 	srli	r3,r5,20
   11cc8:	00800434 	movhi	r2,16
   11ccc:	10bfffc4 	addi	r2,r2,-1
   11cd0:	0180ff84 	movi	r6,1022
   11cd4:	18c1ffcc 	andi	r3,r3,2047
   11cd8:	2884703a 	and	r2,r5,r2
   11cdc:	280ad7fa 	srli	r5,r5,31
   11ce0:	30c0120e 	bge	r6,r3,11d2c <__fixdfsi+0x68>
   11ce4:	01810744 	movi	r6,1053
   11ce8:	30c00c16 	blt	r6,r3,11d1c <__fixdfsi+0x58>
   11cec:	01810cc4 	movi	r6,1075
   11cf0:	30cdc83a 	sub	r6,r6,r3
   11cf4:	01c007c4 	movi	r7,31
   11cf8:	10800434 	orhi	r2,r2,16
   11cfc:	39800d16 	blt	r7,r6,11d34 <__fixdfsi+0x70>
   11d00:	18fefb44 	addi	r3,r3,-1043
   11d04:	2188d83a 	srl	r4,r4,r6
   11d08:	10c4983a 	sll	r2,r2,r3
   11d0c:	2084b03a 	or	r2,r4,r2
   11d10:	28000726 	beq	r5,zero,11d30 <__fixdfsi+0x6c>
   11d14:	0085c83a 	sub	r2,zero,r2
   11d18:	f800283a 	ret
   11d1c:	00a00034 	movhi	r2,32768
   11d20:	10bfffc4 	addi	r2,r2,-1
   11d24:	2885883a 	add	r2,r5,r2
   11d28:	f800283a 	ret
   11d2c:	0005883a 	mov	r2,zero
   11d30:	f800283a 	ret
   11d34:	010104c4 	movi	r4,1043
   11d38:	20c7c83a 	sub	r3,r4,r3
   11d3c:	10c4d83a 	srl	r2,r2,r3
   11d40:	003ff306 	br	11d10 <__alt_data_end+0xfe011d10>

00011d44 <__floatsidf>:
   11d44:	defffd04 	addi	sp,sp,-12
   11d48:	dc000015 	stw	r16,0(sp)
   11d4c:	dfc00215 	stw	ra,8(sp)
   11d50:	dc400115 	stw	r17,4(sp)
   11d54:	2021883a 	mov	r16,r4
   11d58:	20002926 	beq	r4,zero,11e00 <__floatsidf+0xbc>
   11d5c:	2022d7fa 	srli	r17,r4,31
   11d60:	88000126 	beq	r17,zero,11d68 <__floatsidf+0x24>
   11d64:	0121c83a 	sub	r16,zero,r4
   11d68:	8009883a 	mov	r4,r16
   11d6c:	00120700 	call	12070 <__clzsi2>
   11d70:	01810784 	movi	r6,1054
   11d74:	00c00284 	movi	r3,10
   11d78:	308dc83a 	sub	r6,r6,r2
   11d7c:	1880150e 	bge	r3,r2,11dd4 <__floatsidf+0x90>
   11d80:	113ffd44 	addi	r4,r2,-11
   11d84:	8108983a 	sll	r4,r16,r4
   11d88:	00800434 	movhi	r2,16
   11d8c:	10bfffc4 	addi	r2,r2,-1
   11d90:	3181ffcc 	andi	r6,r6,2047
   11d94:	2088703a 	and	r4,r4,r2
   11d98:	880b883a 	mov	r5,r17
   11d9c:	0005883a 	mov	r2,zero
   11da0:	300c953a 	slli	r6,r6,20
   11da4:	29403fcc 	andi	r5,r5,255
   11da8:	280a97fa 	slli	r5,r5,31
   11dac:	00c00434 	movhi	r3,16
   11db0:	18ffffc4 	addi	r3,r3,-1
   11db4:	20c8703a 	and	r4,r4,r3
   11db8:	2186b03a 	or	r3,r4,r6
   11dbc:	1946b03a 	or	r3,r3,r5
   11dc0:	dfc00217 	ldw	ra,8(sp)
   11dc4:	dc400117 	ldw	r17,4(sp)
   11dc8:	dc000017 	ldw	r16,0(sp)
   11dcc:	dec00304 	addi	sp,sp,12
   11dd0:	f800283a 	ret
   11dd4:	010002c4 	movi	r4,11
   11dd8:	2089c83a 	sub	r4,r4,r2
   11ddc:	8108d83a 	srl	r4,r16,r4
   11de0:	10800544 	addi	r2,r2,21
   11de4:	00c00434 	movhi	r3,16
   11de8:	18ffffc4 	addi	r3,r3,-1
   11dec:	8084983a 	sll	r2,r16,r2
   11df0:	20c8703a 	and	r4,r4,r3
   11df4:	3181ffcc 	andi	r6,r6,2047
   11df8:	880b883a 	mov	r5,r17
   11dfc:	003fe806 	br	11da0 <__alt_data_end+0xfe011da0>
   11e00:	000b883a 	mov	r5,zero
   11e04:	000d883a 	mov	r6,zero
   11e08:	0009883a 	mov	r4,zero
   11e0c:	0005883a 	mov	r2,zero
   11e10:	003fe306 	br	11da0 <__alt_data_end+0xfe011da0>

00011e14 <__floatunsidf>:
   11e14:	defffe04 	addi	sp,sp,-8
   11e18:	dc000015 	stw	r16,0(sp)
   11e1c:	dfc00115 	stw	ra,4(sp)
   11e20:	2021883a 	mov	r16,r4
   11e24:	20001f26 	beq	r4,zero,11ea4 <__floatunsidf+0x90>
   11e28:	00120700 	call	12070 <__clzsi2>
   11e2c:	01010784 	movi	r4,1054
   11e30:	00c00284 	movi	r3,10
   11e34:	2089c83a 	sub	r4,r4,r2
   11e38:	1880100e 	bge	r3,r2,11e7c <__floatunsidf+0x68>
   11e3c:	117ffd44 	addi	r5,r2,-11
   11e40:	814a983a 	sll	r5,r16,r5
   11e44:	00800434 	movhi	r2,16
   11e48:	10bfffc4 	addi	r2,r2,-1
   11e4c:	2101ffcc 	andi	r4,r4,2047
   11e50:	288a703a 	and	r5,r5,r2
   11e54:	0005883a 	mov	r2,zero
   11e58:	2008953a 	slli	r4,r4,20
   11e5c:	00c00434 	movhi	r3,16
   11e60:	18ffffc4 	addi	r3,r3,-1
   11e64:	28c6703a 	and	r3,r5,r3
   11e68:	1906b03a 	or	r3,r3,r4
   11e6c:	dfc00117 	ldw	ra,4(sp)
   11e70:	dc000017 	ldw	r16,0(sp)
   11e74:	dec00204 	addi	sp,sp,8
   11e78:	f800283a 	ret
   11e7c:	014002c4 	movi	r5,11
   11e80:	288bc83a 	sub	r5,r5,r2
   11e84:	814ad83a 	srl	r5,r16,r5
   11e88:	10800544 	addi	r2,r2,21
   11e8c:	00c00434 	movhi	r3,16
   11e90:	18ffffc4 	addi	r3,r3,-1
   11e94:	8084983a 	sll	r2,r16,r2
   11e98:	28ca703a 	and	r5,r5,r3
   11e9c:	2101ffcc 	andi	r4,r4,2047
   11ea0:	003fed06 	br	11e58 <__alt_data_end+0xfe011e58>
   11ea4:	0009883a 	mov	r4,zero
   11ea8:	000b883a 	mov	r5,zero
   11eac:	0005883a 	mov	r2,zero
   11eb0:	003fe906 	br	11e58 <__alt_data_end+0xfe011e58>

00011eb4 <__truncdfsf2>:
   11eb4:	2806d53a 	srli	r3,r5,20
   11eb8:	01c00434 	movhi	r7,16
   11ebc:	39ffffc4 	addi	r7,r7,-1
   11ec0:	29ce703a 	and	r7,r5,r7
   11ec4:	200cd77a 	srli	r6,r4,29
   11ec8:	380e90fa 	slli	r7,r7,3
   11ecc:	18c1ffcc 	andi	r3,r3,2047
   11ed0:	18800044 	addi	r2,r3,1
   11ed4:	398eb03a 	or	r7,r7,r6
   11ed8:	1081ffcc 	andi	r2,r2,2047
   11edc:	01800044 	movi	r6,1
   11ee0:	280ad7fa 	srli	r5,r5,31
   11ee4:	201090fa 	slli	r8,r4,3
   11ee8:	3080290e 	bge	r6,r2,11f90 <__truncdfsf2+0xdc>
   11eec:	19bf2004 	addi	r6,r3,-896
   11ef0:	00803f84 	movi	r2,254
   11ef4:	11801516 	blt	r2,r6,11f4c <__truncdfsf2+0x98>
   11ef8:	0180360e 	bge	zero,r6,11fd4 <__truncdfsf2+0x120>
   11efc:	200891ba 	slli	r4,r4,6
   11f00:	380e90fa 	slli	r7,r7,3
   11f04:	4010d77a 	srli	r8,r8,29
   11f08:	2008c03a 	cmpne	r4,r4,zero
   11f0c:	3906b03a 	or	r3,r7,r4
   11f10:	1a06b03a 	or	r3,r3,r8
   11f14:	188001cc 	andi	r2,r3,7
   11f18:	10000426 	beq	r2,zero,11f2c <__truncdfsf2+0x78>
   11f1c:	190003cc 	andi	r4,r3,15
   11f20:	00800104 	movi	r2,4
   11f24:	20800126 	beq	r4,r2,11f2c <__truncdfsf2+0x78>
   11f28:	18c00104 	addi	r3,r3,4
   11f2c:	1881002c 	andhi	r2,r3,1024
   11f30:	10002c26 	beq	r2,zero,11fe4 <__truncdfsf2+0x130>
   11f34:	31000044 	addi	r4,r6,1
   11f38:	00803fc4 	movi	r2,255
   11f3c:	20802226 	beq	r4,r2,11fc8 <__truncdfsf2+0x114>
   11f40:	180691ba 	slli	r3,r3,6
   11f44:	1806d27a 	srli	r3,r3,9
   11f48:	00000806 	br	11f6c <__truncdfsf2+0xb8>
   11f4c:	013fffc4 	movi	r4,-1
   11f50:	00c03fc4 	movi	r3,255
   11f54:	00803fc4 	movi	r2,255
   11f58:	18801326 	beq	r3,r2,11fa8 <__truncdfsf2+0xf4>
   11f5c:	0007883a 	mov	r3,zero
   11f60:	00802034 	movhi	r2,128
   11f64:	10bfffc4 	addi	r2,r2,-1
   11f68:	1886703a 	and	r3,r3,r2
   11f6c:	21003fcc 	andi	r4,r4,255
   11f70:	200895fa 	slli	r4,r4,23
   11f74:	280a97fa 	slli	r5,r5,31
   11f78:	00802034 	movhi	r2,128
   11f7c:	10bfffc4 	addi	r2,r2,-1
   11f80:	1884703a 	and	r2,r3,r2
   11f84:	1104b03a 	or	r2,r2,r4
   11f88:	1144b03a 	or	r2,r2,r5
   11f8c:	f800283a 	ret
   11f90:	1800071e 	bne	r3,zero,11fb0 <__truncdfsf2+0xfc>
   11f94:	3a0eb03a 	or	r7,r7,r8
   11f98:	3800101e 	bne	r7,zero,11fdc <__truncdfsf2+0x128>
   11f9c:	0009883a 	mov	r4,zero
   11fa0:	0007883a 	mov	r3,zero
   11fa4:	003feb06 	br	11f54 <__alt_data_end+0xfe011f54>
   11fa8:	0007883a 	mov	r3,zero
   11fac:	003fef06 	br	11f6c <__alt_data_end+0xfe011f6c>
   11fb0:	3a10b03a 	or	r8,r7,r8
   11fb4:	403fe526 	beq	r8,zero,11f4c <__alt_data_end+0xfe011f4c>
   11fb8:	380e90fa 	slli	r7,r7,3
   11fbc:	01803fc4 	movi	r6,255
   11fc0:	38c08034 	orhi	r3,r7,512
   11fc4:	003fd306 	br	11f14 <__alt_data_end+0xfe011f14>
   11fc8:	013fffc4 	movi	r4,-1
   11fcc:	0007883a 	mov	r3,zero
   11fd0:	003fe606 	br	11f6c <__alt_data_end+0xfe011f6c>
   11fd4:	00bffa44 	movi	r2,-23
   11fd8:	3080090e 	bge	r6,r2,12000 <__truncdfsf2+0x14c>
   11fdc:	00c00144 	movi	r3,5
   11fe0:	000d883a 	mov	r6,zero
   11fe4:	00803fc4 	movi	r2,255
   11fe8:	1806d0fa 	srli	r3,r3,3
   11fec:	3009883a 	mov	r4,r6
   11ff0:	30bfdb1e 	bne	r6,r2,11f60 <__alt_data_end+0xfe011f60>
   11ff4:	183fec26 	beq	r3,zero,11fa8 <__alt_data_end+0xfe011fa8>
   11ff8:	18c01034 	orhi	r3,r3,64
   11ffc:	003fd806 	br	11f60 <__alt_data_end+0xfe011f60>
   12000:	0080e784 	movi	r2,926
   12004:	10c5c83a 	sub	r2,r2,r3
   12008:	010007c4 	movi	r4,31
   1200c:	39c02034 	orhi	r7,r7,128
   12010:	20800916 	blt	r4,r2,12038 <__truncdfsf2+0x184>
   12014:	18ff2084 	addi	r3,r3,-894
   12018:	40c8983a 	sll	r4,r8,r3
   1201c:	38c6983a 	sll	r3,r7,r3
   12020:	4084d83a 	srl	r2,r8,r2
   12024:	2008c03a 	cmpne	r4,r4,zero
   12028:	1906b03a 	or	r3,r3,r4
   1202c:	1886b03a 	or	r3,r3,r2
   12030:	000d883a 	mov	r6,zero
   12034:	003fb706 	br	11f14 <__alt_data_end+0xfe011f14>
   12038:	0100df84 	movi	r4,894
   1203c:	20c9c83a 	sub	r4,r4,r3
   12040:	01800804 	movi	r6,32
   12044:	3908d83a 	srl	r4,r7,r4
   12048:	11800726 	beq	r2,r6,12068 <__truncdfsf2+0x1b4>
   1204c:	18ff2884 	addi	r3,r3,-862
   12050:	38c6983a 	sll	r3,r7,r3
   12054:	1a06b03a 	or	r3,r3,r8
   12058:	1806c03a 	cmpne	r3,r3,zero
   1205c:	1906b03a 	or	r3,r3,r4
   12060:	000d883a 	mov	r6,zero
   12064:	003fab06 	br	11f14 <__alt_data_end+0xfe011f14>
   12068:	0007883a 	mov	r3,zero
   1206c:	003ff906 	br	12054 <__alt_data_end+0xfe012054>

00012070 <__clzsi2>:
   12070:	00bfffd4 	movui	r2,65535
   12074:	11000b36 	bltu	r2,r4,120a4 <__clzsi2+0x34>
   12078:	00803fc4 	movi	r2,255
   1207c:	11001e2e 	bgeu	r2,r4,120f8 <__clzsi2+0x88>
   12080:	00c00204 	movi	r3,8
   12084:	20c8d83a 	srl	r4,r4,r3
   12088:	00c00074 	movhi	r3,1
   1208c:	18d4be04 	addi	r3,r3,21240
   12090:	00800604 	movi	r2,24
   12094:	1909883a 	add	r4,r3,r4
   12098:	20c00003 	ldbu	r3,0(r4)
   1209c:	10c5c83a 	sub	r2,r2,r3
   120a0:	f800283a 	ret
   120a4:	00804034 	movhi	r2,256
   120a8:	10bfffc4 	addi	r2,r2,-1
   120ac:	11000936 	bltu	r2,r4,120d4 <__clzsi2+0x64>
   120b0:	00800404 	movi	r2,16
   120b4:	1007883a 	mov	r3,r2
   120b8:	20c8d83a 	srl	r4,r4,r3
   120bc:	00c00074 	movhi	r3,1
   120c0:	18d4be04 	addi	r3,r3,21240
   120c4:	1909883a 	add	r4,r3,r4
   120c8:	20c00003 	ldbu	r3,0(r4)
   120cc:	10c5c83a 	sub	r2,r2,r3
   120d0:	f800283a 	ret
   120d4:	00c00604 	movi	r3,24
   120d8:	20c8d83a 	srl	r4,r4,r3
   120dc:	00c00074 	movhi	r3,1
   120e0:	18d4be04 	addi	r3,r3,21240
   120e4:	00800204 	movi	r2,8
   120e8:	1909883a 	add	r4,r3,r4
   120ec:	20c00003 	ldbu	r3,0(r4)
   120f0:	10c5c83a 	sub	r2,r2,r3
   120f4:	f800283a 	ret
   120f8:	0007883a 	mov	r3,zero
   120fc:	20c8d83a 	srl	r4,r4,r3
   12100:	00c00074 	movhi	r3,1
   12104:	18d4be04 	addi	r3,r3,21240
   12108:	00800804 	movi	r2,32
   1210c:	1909883a 	add	r4,r3,r4
   12110:	20c00003 	ldbu	r3,0(r4)
   12114:	10c5c83a 	sub	r2,r2,r3
   12118:	f800283a 	ret

0001211c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   1211c:	defffe04 	addi	sp,sp,-8
   12120:	dfc00115 	stw	ra,4(sp)
   12124:	df000015 	stw	fp,0(sp)
   12128:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   1212c:	00800074 	movhi	r2,1
   12130:	109bd904 	addi	r2,r2,28516
   12134:	10800017 	ldw	r2,0(r2)
   12138:	10000526 	beq	r2,zero,12150 <alt_get_errno+0x34>
   1213c:	00800074 	movhi	r2,1
   12140:	109bd904 	addi	r2,r2,28516
   12144:	10800017 	ldw	r2,0(r2)
   12148:	103ee83a 	callr	r2
   1214c:	00000206 	br	12158 <alt_get_errno+0x3c>
   12150:	008000b4 	movhi	r2,2
   12154:	10a2d804 	addi	r2,r2,-29856
}
   12158:	e037883a 	mov	sp,fp
   1215c:	dfc00117 	ldw	ra,4(sp)
   12160:	df000017 	ldw	fp,0(sp)
   12164:	dec00204 	addi	sp,sp,8
   12168:	f800283a 	ret

0001216c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   1216c:	defffb04 	addi	sp,sp,-20
   12170:	dfc00415 	stw	ra,16(sp)
   12174:	df000315 	stw	fp,12(sp)
   12178:	df000304 	addi	fp,sp,12
   1217c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   12180:	e0bfff17 	ldw	r2,-4(fp)
   12184:	10000616 	blt	r2,zero,121a0 <close+0x34>
   12188:	e0bfff17 	ldw	r2,-4(fp)
   1218c:	10c00324 	muli	r3,r2,12
   12190:	00800074 	movhi	r2,1
   12194:	10974b04 	addi	r2,r2,23852
   12198:	1885883a 	add	r2,r3,r2
   1219c:	00000106 	br	121a4 <close+0x38>
   121a0:	0005883a 	mov	r2,zero
   121a4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   121a8:	e0bffd17 	ldw	r2,-12(fp)
   121ac:	10001826 	beq	r2,zero,12210 <close+0xa4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   121b0:	e0bffd17 	ldw	r2,-12(fp)
   121b4:	10800017 	ldw	r2,0(r2)
   121b8:	10800417 	ldw	r2,16(r2)
   121bc:	10000626 	beq	r2,zero,121d8 <close+0x6c>
   121c0:	e0bffd17 	ldw	r2,-12(fp)
   121c4:	10800017 	ldw	r2,0(r2)
   121c8:	10800417 	ldw	r2,16(r2)
   121cc:	e13ffd17 	ldw	r4,-12(fp)
   121d0:	103ee83a 	callr	r2
   121d4:	00000106 	br	121dc <close+0x70>
   121d8:	0005883a 	mov	r2,zero
   121dc:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   121e0:	e13fff17 	ldw	r4,-4(fp)
   121e4:	00128480 	call	12848 <alt_release_fd>
    if (rval < 0)
   121e8:	e0bffe17 	ldw	r2,-8(fp)
   121ec:	1000060e 	bge	r2,zero,12208 <close+0x9c>
    {
      ALT_ERRNO = -rval;
   121f0:	001211c0 	call	1211c <alt_get_errno>
   121f4:	e0fffe17 	ldw	r3,-8(fp)
   121f8:	00c7c83a 	sub	r3,zero,r3
   121fc:	10c00015 	stw	r3,0(r2)
      return -1;
   12200:	00bfffc4 	movi	r2,-1
   12204:	00000606 	br	12220 <close+0xb4>
    }
    return 0;
   12208:	0005883a 	mov	r2,zero
   1220c:	00000406 	br	12220 <close+0xb4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   12210:	001211c0 	call	1211c <alt_get_errno>
   12214:	00c01444 	movi	r3,81
   12218:	10c00015 	stw	r3,0(r2)
    return -1;
   1221c:	00bfffc4 	movi	r2,-1
  }
}
   12220:	e037883a 	mov	sp,fp
   12224:	dfc00117 	ldw	ra,4(sp)
   12228:	df000017 	ldw	fp,0(sp)
   1222c:	dec00204 	addi	sp,sp,8
   12230:	f800283a 	ret

00012234 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   12234:	defffc04 	addi	sp,sp,-16
   12238:	df000315 	stw	fp,12(sp)
   1223c:	df000304 	addi	fp,sp,12
   12240:	e13ffd15 	stw	r4,-12(fp)
   12244:	e17ffe15 	stw	r5,-8(fp)
   12248:	e1bfff15 	stw	r6,-4(fp)
  return len;
   1224c:	e0bfff17 	ldw	r2,-4(fp)
}
   12250:	e037883a 	mov	sp,fp
   12254:	df000017 	ldw	fp,0(sp)
   12258:	dec00104 	addi	sp,sp,4
   1225c:	f800283a 	ret

00012260 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   12260:	defffe04 	addi	sp,sp,-8
   12264:	dfc00115 	stw	ra,4(sp)
   12268:	df000015 	stw	fp,0(sp)
   1226c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   12270:	00800074 	movhi	r2,1
   12274:	109bd904 	addi	r2,r2,28516
   12278:	10800017 	ldw	r2,0(r2)
   1227c:	10000526 	beq	r2,zero,12294 <alt_get_errno+0x34>
   12280:	00800074 	movhi	r2,1
   12284:	109bd904 	addi	r2,r2,28516
   12288:	10800017 	ldw	r2,0(r2)
   1228c:	103ee83a 	callr	r2
   12290:	00000206 	br	1229c <alt_get_errno+0x3c>
   12294:	008000b4 	movhi	r2,2
   12298:	10a2d804 	addi	r2,r2,-29856
}
   1229c:	e037883a 	mov	sp,fp
   122a0:	dfc00117 	ldw	ra,4(sp)
   122a4:	df000017 	ldw	fp,0(sp)
   122a8:	dec00204 	addi	sp,sp,8
   122ac:	f800283a 	ret

000122b0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   122b0:	defffb04 	addi	sp,sp,-20
   122b4:	dfc00415 	stw	ra,16(sp)
   122b8:	df000315 	stw	fp,12(sp)
   122bc:	df000304 	addi	fp,sp,12
   122c0:	e13ffe15 	stw	r4,-8(fp)
   122c4:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   122c8:	e0bffe17 	ldw	r2,-8(fp)
   122cc:	10000616 	blt	r2,zero,122e8 <fstat+0x38>
   122d0:	e0bffe17 	ldw	r2,-8(fp)
   122d4:	10c00324 	muli	r3,r2,12
   122d8:	00800074 	movhi	r2,1
   122dc:	10974b04 	addi	r2,r2,23852
   122e0:	1885883a 	add	r2,r3,r2
   122e4:	00000106 	br	122ec <fstat+0x3c>
   122e8:	0005883a 	mov	r2,zero
   122ec:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   122f0:	e0bffd17 	ldw	r2,-12(fp)
   122f4:	10001026 	beq	r2,zero,12338 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   122f8:	e0bffd17 	ldw	r2,-12(fp)
   122fc:	10800017 	ldw	r2,0(r2)
   12300:	10800817 	ldw	r2,32(r2)
   12304:	10000726 	beq	r2,zero,12324 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   12308:	e0bffd17 	ldw	r2,-12(fp)
   1230c:	10800017 	ldw	r2,0(r2)
   12310:	10800817 	ldw	r2,32(r2)
   12314:	e13ffd17 	ldw	r4,-12(fp)
   12318:	e17fff17 	ldw	r5,-4(fp)
   1231c:	103ee83a 	callr	r2
   12320:	00000906 	br	12348 <fstat+0x98>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   12324:	e0bfff17 	ldw	r2,-4(fp)
   12328:	00c80004 	movi	r3,8192
   1232c:	10c00115 	stw	r3,4(r2)
      return 0;
   12330:	0005883a 	mov	r2,zero
   12334:	00000406 	br	12348 <fstat+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   12338:	00122600 	call	12260 <alt_get_errno>
   1233c:	00c01444 	movi	r3,81
   12340:	10c00015 	stw	r3,0(r2)
    return -1;
   12344:	00bfffc4 	movi	r2,-1
  }
}
   12348:	e037883a 	mov	sp,fp
   1234c:	dfc00117 	ldw	ra,4(sp)
   12350:	df000017 	ldw	fp,0(sp)
   12354:	dec00204 	addi	sp,sp,8
   12358:	f800283a 	ret

0001235c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   1235c:	defffe04 	addi	sp,sp,-8
   12360:	dfc00115 	stw	ra,4(sp)
   12364:	df000015 	stw	fp,0(sp)
   12368:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   1236c:	00800074 	movhi	r2,1
   12370:	109bd904 	addi	r2,r2,28516
   12374:	10800017 	ldw	r2,0(r2)
   12378:	10000526 	beq	r2,zero,12390 <alt_get_errno+0x34>
   1237c:	00800074 	movhi	r2,1
   12380:	109bd904 	addi	r2,r2,28516
   12384:	10800017 	ldw	r2,0(r2)
   12388:	103ee83a 	callr	r2
   1238c:	00000206 	br	12398 <alt_get_errno+0x3c>
   12390:	008000b4 	movhi	r2,2
   12394:	10a2d804 	addi	r2,r2,-29856
}
   12398:	e037883a 	mov	sp,fp
   1239c:	dfc00117 	ldw	ra,4(sp)
   123a0:	df000017 	ldw	fp,0(sp)
   123a4:	dec00204 	addi	sp,sp,8
   123a8:	f800283a 	ret

000123ac <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   123ac:	deffed04 	addi	sp,sp,-76
   123b0:	dfc01215 	stw	ra,72(sp)
   123b4:	df001115 	stw	fp,68(sp)
   123b8:	df001104 	addi	fp,sp,68
   123bc:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   123c0:	e0bfff17 	ldw	r2,-4(fp)
   123c4:	10000616 	blt	r2,zero,123e0 <isatty+0x34>
   123c8:	e0bfff17 	ldw	r2,-4(fp)
   123cc:	10c00324 	muli	r3,r2,12
   123d0:	00800074 	movhi	r2,1
   123d4:	10974b04 	addi	r2,r2,23852
   123d8:	1885883a 	add	r2,r3,r2
   123dc:	00000106 	br	123e4 <isatty+0x38>
   123e0:	0005883a 	mov	r2,zero
   123e4:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   123e8:	e0bfef17 	ldw	r2,-68(fp)
   123ec:	10000e26 	beq	r2,zero,12428 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   123f0:	e0bfef17 	ldw	r2,-68(fp)
   123f4:	10800017 	ldw	r2,0(r2)
   123f8:	10800817 	ldw	r2,32(r2)
   123fc:	1000021e 	bne	r2,zero,12408 <isatty+0x5c>
    {
      return 1;
   12400:	00800044 	movi	r2,1
   12404:	00000c06 	br	12438 <isatty+0x8c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   12408:	e0bff004 	addi	r2,fp,-64
   1240c:	e13fff17 	ldw	r4,-4(fp)
   12410:	100b883a 	mov	r5,r2
   12414:	00122b00 	call	122b0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   12418:	e0bff117 	ldw	r2,-60(fp)
   1241c:	10880020 	cmpeqi	r2,r2,8192
   12420:	10803fcc 	andi	r2,r2,255
   12424:	00000406 	br	12438 <isatty+0x8c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   12428:	001235c0 	call	1235c <alt_get_errno>
   1242c:	00c01444 	movi	r3,81
   12430:	10c00015 	stw	r3,0(r2)
    return 0;
   12434:	0005883a 	mov	r2,zero
  }
}
   12438:	e037883a 	mov	sp,fp
   1243c:	dfc00117 	ldw	ra,4(sp)
   12440:	df000017 	ldw	fp,0(sp)
   12444:	dec00204 	addi	sp,sp,8
   12448:	f800283a 	ret

0001244c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   1244c:	defffc04 	addi	sp,sp,-16
   12450:	df000315 	stw	fp,12(sp)
   12454:	df000304 	addi	fp,sp,12
   12458:	e13ffd15 	stw	r4,-12(fp)
   1245c:	e17ffe15 	stw	r5,-8(fp)
   12460:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   12464:	e0fffe17 	ldw	r3,-8(fp)
   12468:	e0bffd17 	ldw	r2,-12(fp)
   1246c:	18800c26 	beq	r3,r2,124a0 <alt_load_section+0x54>
  {
    while( to != end )
   12470:	00000806 	br	12494 <alt_load_section+0x48>
    {
      *to++ = *from++;
   12474:	e0bffe17 	ldw	r2,-8(fp)
   12478:	10c00104 	addi	r3,r2,4
   1247c:	e0fffe15 	stw	r3,-8(fp)
   12480:	e0fffd17 	ldw	r3,-12(fp)
   12484:	19000104 	addi	r4,r3,4
   12488:	e13ffd15 	stw	r4,-12(fp)
   1248c:	18c00017 	ldw	r3,0(r3)
   12490:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   12494:	e0fffe17 	ldw	r3,-8(fp)
   12498:	e0bfff17 	ldw	r2,-4(fp)
   1249c:	18bff51e 	bne	r3,r2,12474 <__alt_data_end+0xfe012474>
    {
      *to++ = *from++;
    }
  }
}
   124a0:	e037883a 	mov	sp,fp
   124a4:	df000017 	ldw	fp,0(sp)
   124a8:	dec00104 	addi	sp,sp,4
   124ac:	f800283a 	ret

000124b0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   124b0:	defffe04 	addi	sp,sp,-8
   124b4:	dfc00115 	stw	ra,4(sp)
   124b8:	df000015 	stw	fp,0(sp)
   124bc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   124c0:	01000074 	movhi	r4,1
   124c4:	211bf004 	addi	r4,r4,28608
   124c8:	01400074 	movhi	r5,1
   124cc:	29550e04 	addi	r5,r5,21560
   124d0:	01800074 	movhi	r6,1
   124d4:	319bf004 	addi	r6,r6,28608
   124d8:	001244c0 	call	1244c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   124dc:	01000034 	movhi	r4,0
   124e0:	21000804 	addi	r4,r4,32
   124e4:	01400034 	movhi	r5,0
   124e8:	29400804 	addi	r5,r5,32
   124ec:	01800034 	movhi	r6,0
   124f0:	31806f04 	addi	r6,r6,444
   124f4:	001244c0 	call	1244c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   124f8:	01000074 	movhi	r4,1
   124fc:	21138404 	addi	r4,r4,19984
   12500:	01400074 	movhi	r5,1
   12504:	29538404 	addi	r5,r5,19984
   12508:	01800074 	movhi	r6,1
   1250c:	31950e04 	addi	r6,r6,21560
   12510:	001244c0 	call	1244c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   12514:	0013ccc0 	call	13ccc <alt_dcache_flush_all>
  alt_icache_flush_all();
   12518:	0013f140 	call	13f14 <alt_icache_flush_all>
}
   1251c:	e037883a 	mov	sp,fp
   12520:	dfc00117 	ldw	ra,4(sp)
   12524:	df000017 	ldw	fp,0(sp)
   12528:	dec00204 	addi	sp,sp,8
   1252c:	f800283a 	ret

00012530 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   12530:	defffe04 	addi	sp,sp,-8
   12534:	dfc00115 	stw	ra,4(sp)
   12538:	df000015 	stw	fp,0(sp)
   1253c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   12540:	00800074 	movhi	r2,1
   12544:	109bd904 	addi	r2,r2,28516
   12548:	10800017 	ldw	r2,0(r2)
   1254c:	10000526 	beq	r2,zero,12564 <alt_get_errno+0x34>
   12550:	00800074 	movhi	r2,1
   12554:	109bd904 	addi	r2,r2,28516
   12558:	10800017 	ldw	r2,0(r2)
   1255c:	103ee83a 	callr	r2
   12560:	00000206 	br	1256c <alt_get_errno+0x3c>
   12564:	008000b4 	movhi	r2,2
   12568:	10a2d804 	addi	r2,r2,-29856
}
   1256c:	e037883a 	mov	sp,fp
   12570:	dfc00117 	ldw	ra,4(sp)
   12574:	df000017 	ldw	fp,0(sp)
   12578:	dec00204 	addi	sp,sp,8
   1257c:	f800283a 	ret

00012580 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   12580:	defff904 	addi	sp,sp,-28
   12584:	dfc00615 	stw	ra,24(sp)
   12588:	df000515 	stw	fp,20(sp)
   1258c:	df000504 	addi	fp,sp,20
   12590:	e13ffd15 	stw	r4,-12(fp)
   12594:	e17ffe15 	stw	r5,-8(fp)
   12598:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   1259c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   125a0:	e0bffd17 	ldw	r2,-12(fp)
   125a4:	10000616 	blt	r2,zero,125c0 <lseek+0x40>
   125a8:	e0bffd17 	ldw	r2,-12(fp)
   125ac:	10c00324 	muli	r3,r2,12
   125b0:	00800074 	movhi	r2,1
   125b4:	10974b04 	addi	r2,r2,23852
   125b8:	1885883a 	add	r2,r3,r2
   125bc:	00000106 	br	125c4 <lseek+0x44>
   125c0:	0005883a 	mov	r2,zero
   125c4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   125c8:	e0bffc17 	ldw	r2,-16(fp)
   125cc:	10001026 	beq	r2,zero,12610 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   125d0:	e0bffc17 	ldw	r2,-16(fp)
   125d4:	10800017 	ldw	r2,0(r2)
   125d8:	10800717 	ldw	r2,28(r2)
   125dc:	10000926 	beq	r2,zero,12604 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   125e0:	e0bffc17 	ldw	r2,-16(fp)
   125e4:	10800017 	ldw	r2,0(r2)
   125e8:	10800717 	ldw	r2,28(r2)
   125ec:	e13ffc17 	ldw	r4,-16(fp)
   125f0:	e17ffe17 	ldw	r5,-8(fp)
   125f4:	e1bfff17 	ldw	r6,-4(fp)
   125f8:	103ee83a 	callr	r2
   125fc:	e0bffb15 	stw	r2,-20(fp)
   12600:	00000506 	br	12618 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   12604:	00bfde84 	movi	r2,-134
   12608:	e0bffb15 	stw	r2,-20(fp)
   1260c:	00000206 	br	12618 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   12610:	00bfebc4 	movi	r2,-81
   12614:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   12618:	e0bffb17 	ldw	r2,-20(fp)
   1261c:	1000060e 	bge	r2,zero,12638 <lseek+0xb8>
  {
    ALT_ERRNO = -rc;
   12620:	00125300 	call	12530 <alt_get_errno>
   12624:	e0fffb17 	ldw	r3,-20(fp)
   12628:	00c7c83a 	sub	r3,zero,r3
   1262c:	10c00015 	stw	r3,0(r2)
    rc = -1;
   12630:	00bfffc4 	movi	r2,-1
   12634:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   12638:	e0bffb17 	ldw	r2,-20(fp)
}
   1263c:	e037883a 	mov	sp,fp
   12640:	dfc00117 	ldw	ra,4(sp)
   12644:	df000017 	ldw	fp,0(sp)
   12648:	dec00204 	addi	sp,sp,8
   1264c:	f800283a 	ret

00012650 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   12650:	defffd04 	addi	sp,sp,-12
   12654:	dfc00215 	stw	ra,8(sp)
   12658:	df000115 	stw	fp,4(sp)
   1265c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   12660:	0009883a 	mov	r4,zero
   12664:	0012afc0 	call	12afc <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   12668:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   1266c:	0012b300 	call	12b30 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   12670:	01000074 	movhi	r4,1
   12674:	21150104 	addi	r4,r4,21508
   12678:	01400074 	movhi	r5,1
   1267c:	29550104 	addi	r5,r5,21508
   12680:	01800074 	movhi	r6,1
   12684:	31950104 	addi	r6,r6,21508
   12688:	00142cc0 	call	142cc <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   1268c:	0013dd80 	call	13dd8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   12690:	01000074 	movhi	r4,1
   12694:	210f8d04 	addi	r4,r4,15924
   12698:	0014a540 	call	14a54 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   1269c:	d1270c17 	ldw	r4,-25552(gp)
   126a0:	d0e70d17 	ldw	r3,-25548(gp)
   126a4:	d0a70e17 	ldw	r2,-25544(gp)
   126a8:	180b883a 	mov	r5,r3
   126ac:	100d883a 	mov	r6,r2
   126b0:	00001f80 	call	1f8 <main>
   126b4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   126b8:	01000044 	movi	r4,1
   126bc:	001216c0 	call	1216c <close>
  exit (result);
   126c0:	e13fff17 	ldw	r4,-4(fp)
   126c4:	0014a680 	call	14a68 <exit>

000126c8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   126c8:	defffe04 	addi	sp,sp,-8
   126cc:	df000115 	stw	fp,4(sp)
   126d0:	df000104 	addi	fp,sp,4
   126d4:	e13fff15 	stw	r4,-4(fp)
}
   126d8:	e037883a 	mov	sp,fp
   126dc:	df000017 	ldw	fp,0(sp)
   126e0:	dec00104 	addi	sp,sp,4
   126e4:	f800283a 	ret

000126e8 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   126e8:	defffe04 	addi	sp,sp,-8
   126ec:	df000115 	stw	fp,4(sp)
   126f0:	df000104 	addi	fp,sp,4
   126f4:	e13fff15 	stw	r4,-4(fp)
}
   126f8:	e037883a 	mov	sp,fp
   126fc:	df000017 	ldw	fp,0(sp)
   12700:	dec00104 	addi	sp,sp,4
   12704:	f800283a 	ret

00012708 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   12708:	defffe04 	addi	sp,sp,-8
   1270c:	dfc00115 	stw	ra,4(sp)
   12710:	df000015 	stw	fp,0(sp)
   12714:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   12718:	00800074 	movhi	r2,1
   1271c:	109bd904 	addi	r2,r2,28516
   12720:	10800017 	ldw	r2,0(r2)
   12724:	10000526 	beq	r2,zero,1273c <alt_get_errno+0x34>
   12728:	00800074 	movhi	r2,1
   1272c:	109bd904 	addi	r2,r2,28516
   12730:	10800017 	ldw	r2,0(r2)
   12734:	103ee83a 	callr	r2
   12738:	00000206 	br	12744 <alt_get_errno+0x3c>
   1273c:	008000b4 	movhi	r2,2
   12740:	10a2d804 	addi	r2,r2,-29856
}
   12744:	e037883a 	mov	sp,fp
   12748:	dfc00117 	ldw	ra,4(sp)
   1274c:	df000017 	ldw	fp,0(sp)
   12750:	dec00204 	addi	sp,sp,8
   12754:	f800283a 	ret

00012758 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   12758:	defff904 	addi	sp,sp,-28
   1275c:	dfc00615 	stw	ra,24(sp)
   12760:	df000515 	stw	fp,20(sp)
   12764:	df000504 	addi	fp,sp,20
   12768:	e13ffd15 	stw	r4,-12(fp)
   1276c:	e17ffe15 	stw	r5,-8(fp)
   12770:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   12774:	e0bffd17 	ldw	r2,-12(fp)
   12778:	10000616 	blt	r2,zero,12794 <read+0x3c>
   1277c:	e0bffd17 	ldw	r2,-12(fp)
   12780:	10c00324 	muli	r3,r2,12
   12784:	00800074 	movhi	r2,1
   12788:	10974b04 	addi	r2,r2,23852
   1278c:	1885883a 	add	r2,r3,r2
   12790:	00000106 	br	12798 <read+0x40>
   12794:	0005883a 	mov	r2,zero
   12798:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   1279c:	e0bffb17 	ldw	r2,-20(fp)
   127a0:	10002026 	beq	r2,zero,12824 <read+0xcc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   127a4:	e0bffb17 	ldw	r2,-20(fp)
   127a8:	10800217 	ldw	r2,8(r2)
   127ac:	108000cc 	andi	r2,r2,3
   127b0:	10800060 	cmpeqi	r2,r2,1
   127b4:	1000171e 	bne	r2,zero,12814 <read+0xbc>
        (fd->dev->read))
   127b8:	e0bffb17 	ldw	r2,-20(fp)
   127bc:	10800017 	ldw	r2,0(r2)
   127c0:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   127c4:	10001326 	beq	r2,zero,12814 <read+0xbc>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   127c8:	e0bffb17 	ldw	r2,-20(fp)
   127cc:	10800017 	ldw	r2,0(r2)
   127d0:	10800517 	ldw	r2,20(r2)
   127d4:	e0ffff17 	ldw	r3,-4(fp)
   127d8:	e13ffb17 	ldw	r4,-20(fp)
   127dc:	e17ffe17 	ldw	r5,-8(fp)
   127e0:	180d883a 	mov	r6,r3
   127e4:	103ee83a 	callr	r2
   127e8:	e0bffc15 	stw	r2,-16(fp)
   127ec:	e0bffc17 	ldw	r2,-16(fp)
   127f0:	1000060e 	bge	r2,zero,1280c <read+0xb4>
        {
          ALT_ERRNO = -rval;
   127f4:	00127080 	call	12708 <alt_get_errno>
   127f8:	e0fffc17 	ldw	r3,-16(fp)
   127fc:	00c7c83a 	sub	r3,zero,r3
   12800:	10c00015 	stw	r3,0(r2)
          return -1;
   12804:	00bfffc4 	movi	r2,-1
   12808:	00000a06 	br	12834 <read+0xdc>
        }
        return rval;
   1280c:	e0bffc17 	ldw	r2,-16(fp)
   12810:	00000806 	br	12834 <read+0xdc>
      }
      else
      {
        ALT_ERRNO = EACCES;
   12814:	00127080 	call	12708 <alt_get_errno>
   12818:	00c00344 	movi	r3,13
   1281c:	10c00015 	stw	r3,0(r2)
   12820:	00000306 	br	12830 <read+0xd8>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   12824:	00127080 	call	12708 <alt_get_errno>
   12828:	00c01444 	movi	r3,81
   1282c:	10c00015 	stw	r3,0(r2)
  }
  return -1;
   12830:	00bfffc4 	movi	r2,-1
}
   12834:	e037883a 	mov	sp,fp
   12838:	dfc00117 	ldw	ra,4(sp)
   1283c:	df000017 	ldw	fp,0(sp)
   12840:	dec00204 	addi	sp,sp,8
   12844:	f800283a 	ret

00012848 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   12848:	defffe04 	addi	sp,sp,-8
   1284c:	df000115 	stw	fp,4(sp)
   12850:	df000104 	addi	fp,sp,4
   12854:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   12858:	e0bfff17 	ldw	r2,-4(fp)
   1285c:	108000d0 	cmplti	r2,r2,3
   12860:	10000d1e 	bne	r2,zero,12898 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   12864:	00c00074 	movhi	r3,1
   12868:	18d74b04 	addi	r3,r3,23852
   1286c:	e0bfff17 	ldw	r2,-4(fp)
   12870:	10800324 	muli	r2,r2,12
   12874:	1885883a 	add	r2,r3,r2
   12878:	10800204 	addi	r2,r2,8
   1287c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   12880:	00c00074 	movhi	r3,1
   12884:	18d74b04 	addi	r3,r3,23852
   12888:	e0bfff17 	ldw	r2,-4(fp)
   1288c:	10800324 	muli	r2,r2,12
   12890:	1885883a 	add	r2,r3,r2
   12894:	10000015 	stw	zero,0(r2)
  }
}
   12898:	e037883a 	mov	sp,fp
   1289c:	df000017 	ldw	fp,0(sp)
   128a0:	dec00104 	addi	sp,sp,4
   128a4:	f800283a 	ret

000128a8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   128a8:	defff904 	addi	sp,sp,-28
   128ac:	df000615 	stw	fp,24(sp)
   128b0:	df000604 	addi	fp,sp,24
   128b4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   128b8:	0005303a 	rdctl	r2,status
   128bc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   128c0:	e0fffc17 	ldw	r3,-16(fp)
   128c4:	00bfff84 	movi	r2,-2
   128c8:	1884703a 	and	r2,r3,r2
   128cc:	1001703a 	wrctl	status,r2
  
  return context;
   128d0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   128d4:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   128d8:	d0a00d17 	ldw	r2,-32716(gp)
   128dc:	10c000c4 	addi	r3,r2,3
   128e0:	00bfff04 	movi	r2,-4
   128e4:	1884703a 	and	r2,r3,r2
   128e8:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   128ec:	d0e00d17 	ldw	r3,-32716(gp)
   128f0:	e0bfff17 	ldw	r2,-4(fp)
   128f4:	1885883a 	add	r2,r3,r2
   128f8:	00c08034 	movhi	r3,512
   128fc:	18c00004 	addi	r3,r3,0
   12900:	1880062e 	bgeu	r3,r2,1291c <sbrk+0x74>
   12904:	e0bffa17 	ldw	r2,-24(fp)
   12908:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1290c:	e0bffd17 	ldw	r2,-12(fp)
   12910:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   12914:	00bfffc4 	movi	r2,-1
   12918:	00000b06 	br	12948 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   1291c:	d0a00d17 	ldw	r2,-32716(gp)
   12920:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
   12924:	d0e00d17 	ldw	r3,-32716(gp)
   12928:	e0bfff17 	ldw	r2,-4(fp)
   1292c:	1885883a 	add	r2,r3,r2
   12930:	d0a00d15 	stw	r2,-32716(gp)
   12934:	e0bffa17 	ldw	r2,-24(fp)
   12938:	e0bffe15 	stw	r2,-8(fp)
   1293c:	e0bffe17 	ldw	r2,-8(fp)
   12940:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   12944:	e0bffb17 	ldw	r2,-20(fp)
} 
   12948:	e037883a 	mov	sp,fp
   1294c:	df000017 	ldw	fp,0(sp)
   12950:	dec00104 	addi	sp,sp,4
   12954:	f800283a 	ret

00012958 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   12958:	defffd04 	addi	sp,sp,-12
   1295c:	dfc00215 	stw	ra,8(sp)
   12960:	df000115 	stw	fp,4(sp)
   12964:	df000104 	addi	fp,sp,4
   12968:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   1296c:	e13fff17 	ldw	r4,-4(fp)
   12970:	0013b780 	call	13b78 <alt_busy_sleep>
}
   12974:	e037883a 	mov	sp,fp
   12978:	dfc00117 	ldw	ra,4(sp)
   1297c:	df000017 	ldw	fp,0(sp)
   12980:	dec00204 	addi	sp,sp,8
   12984:	f800283a 	ret

00012988 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   12988:	defffe04 	addi	sp,sp,-8
   1298c:	dfc00115 	stw	ra,4(sp)
   12990:	df000015 	stw	fp,0(sp)
   12994:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   12998:	00800074 	movhi	r2,1
   1299c:	109bd904 	addi	r2,r2,28516
   129a0:	10800017 	ldw	r2,0(r2)
   129a4:	10000526 	beq	r2,zero,129bc <alt_get_errno+0x34>
   129a8:	00800074 	movhi	r2,1
   129ac:	109bd904 	addi	r2,r2,28516
   129b0:	10800017 	ldw	r2,0(r2)
   129b4:	103ee83a 	callr	r2
   129b8:	00000206 	br	129c4 <alt_get_errno+0x3c>
   129bc:	008000b4 	movhi	r2,2
   129c0:	10a2d804 	addi	r2,r2,-29856
}
   129c4:	e037883a 	mov	sp,fp
   129c8:	dfc00117 	ldw	ra,4(sp)
   129cc:	df000017 	ldw	fp,0(sp)
   129d0:	dec00204 	addi	sp,sp,8
   129d4:	f800283a 	ret

000129d8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   129d8:	defff904 	addi	sp,sp,-28
   129dc:	dfc00615 	stw	ra,24(sp)
   129e0:	df000515 	stw	fp,20(sp)
   129e4:	df000504 	addi	fp,sp,20
   129e8:	e13ffd15 	stw	r4,-12(fp)
   129ec:	e17ffe15 	stw	r5,-8(fp)
   129f0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   129f4:	e0bffd17 	ldw	r2,-12(fp)
   129f8:	10000616 	blt	r2,zero,12a14 <write+0x3c>
   129fc:	e0bffd17 	ldw	r2,-12(fp)
   12a00:	10c00324 	muli	r3,r2,12
   12a04:	00800074 	movhi	r2,1
   12a08:	10974b04 	addi	r2,r2,23852
   12a0c:	1885883a 	add	r2,r3,r2
   12a10:	00000106 	br	12a18 <write+0x40>
   12a14:	0005883a 	mov	r2,zero
   12a18:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   12a1c:	e0bffb17 	ldw	r2,-20(fp)
   12a20:	10001f26 	beq	r2,zero,12aa0 <write+0xc8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   12a24:	e0bffb17 	ldw	r2,-20(fp)
   12a28:	10800217 	ldw	r2,8(r2)
   12a2c:	108000cc 	andi	r2,r2,3
   12a30:	10001726 	beq	r2,zero,12a90 <write+0xb8>
   12a34:	e0bffb17 	ldw	r2,-20(fp)
   12a38:	10800017 	ldw	r2,0(r2)
   12a3c:	10800617 	ldw	r2,24(r2)
   12a40:	10001326 	beq	r2,zero,12a90 <write+0xb8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   12a44:	e0bffb17 	ldw	r2,-20(fp)
   12a48:	10800017 	ldw	r2,0(r2)
   12a4c:	10800617 	ldw	r2,24(r2)
   12a50:	e0ffff17 	ldw	r3,-4(fp)
   12a54:	e13ffb17 	ldw	r4,-20(fp)
   12a58:	e17ffe17 	ldw	r5,-8(fp)
   12a5c:	180d883a 	mov	r6,r3
   12a60:	103ee83a 	callr	r2
   12a64:	e0bffc15 	stw	r2,-16(fp)
   12a68:	e0bffc17 	ldw	r2,-16(fp)
   12a6c:	1000060e 	bge	r2,zero,12a88 <write+0xb0>
      {
        ALT_ERRNO = -rval;
   12a70:	00129880 	call	12988 <alt_get_errno>
   12a74:	e0fffc17 	ldw	r3,-16(fp)
   12a78:	00c7c83a 	sub	r3,zero,r3
   12a7c:	10c00015 	stw	r3,0(r2)
        return -1;
   12a80:	00bfffc4 	movi	r2,-1
   12a84:	00000a06 	br	12ab0 <write+0xd8>
      }
      return rval;
   12a88:	e0bffc17 	ldw	r2,-16(fp)
   12a8c:	00000806 	br	12ab0 <write+0xd8>
    }
    else
    {
      ALT_ERRNO = EACCES;
   12a90:	00129880 	call	12988 <alt_get_errno>
   12a94:	00c00344 	movi	r3,13
   12a98:	10c00015 	stw	r3,0(r2)
   12a9c:	00000306 	br	12aac <write+0xd4>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   12aa0:	00129880 	call	12988 <alt_get_errno>
   12aa4:	00c01444 	movi	r3,81
   12aa8:	10c00015 	stw	r3,0(r2)
  }
  return -1;
   12aac:	00bfffc4 	movi	r2,-1
}
   12ab0:	e037883a 	mov	sp,fp
   12ab4:	dfc00117 	ldw	ra,4(sp)
   12ab8:	df000017 	ldw	fp,0(sp)
   12abc:	dec00204 	addi	sp,sp,8
   12ac0:	f800283a 	ret

00012ac4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   12ac4:	defffd04 	addi	sp,sp,-12
   12ac8:	dfc00215 	stw	ra,8(sp)
   12acc:	df000115 	stw	fp,4(sp)
   12ad0:	df000104 	addi	fp,sp,4
   12ad4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   12ad8:	e13fff17 	ldw	r4,-4(fp)
   12adc:	01400074 	movhi	r5,1
   12ae0:	295bd604 	addi	r5,r5,28504
   12ae4:	0013d380 	call	13d38 <alt_dev_llist_insert>
}
   12ae8:	e037883a 	mov	sp,fp
   12aec:	dfc00117 	ldw	ra,4(sp)
   12af0:	df000017 	ldw	fp,0(sp)
   12af4:	dec00204 	addi	sp,sp,8
   12af8:	f800283a 	ret

00012afc <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   12afc:	defffd04 	addi	sp,sp,-12
   12b00:	dfc00215 	stw	ra,8(sp)
   12b04:	df000115 	stw	fp,4(sp)
   12b08:	df000104 	addi	fp,sp,4
   12b0c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
   12b10:	00147500 	call	14750 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   12b14:	00800044 	movi	r2,1
   12b18:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   12b1c:	e037883a 	mov	sp,fp
   12b20:	dfc00117 	ldw	ra,4(sp)
   12b24:	df000017 	ldw	fp,0(sp)
   12b28:	dec00204 	addi	sp,sp,8
   12b2c:	f800283a 	ret

00012b30 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   12b30:	defffe04 	addi	sp,sp,-8
   12b34:	dfc00115 	stw	ra,4(sp)
   12b38:	df000015 	stw	fp,0(sp)
   12b3c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   12b40:	01000074 	movhi	r4,1
   12b44:	2117b504 	addi	r4,r4,24276
   12b48:	000b883a 	mov	r5,zero
   12b4c:	000d883a 	mov	r6,zero
   12b50:	0012ce40 	call	12ce4 <altera_avalon_jtag_uart_init>
   12b54:	01000074 	movhi	r4,1
   12b58:	2117ab04 	addi	r4,r4,24236
   12b5c:	0012ac40 	call	12ac4 <alt_dev_reg>
    ALTERA_HOSTFS_INIT ( ALTERA_HOSTFS, altera_hostfs);
   12b60:	01000074 	movhi	r4,1
   12b64:	211bc304 	addi	r4,r4,28428
   12b68:	0013e900 	call	13e90 <alt_fs_reg>
}
   12b6c:	e037883a 	mov	sp,fp
   12b70:	dfc00117 	ldw	ra,4(sp)
   12b74:	df000017 	ldw	fp,0(sp)
   12b78:	dec00204 	addi	sp,sp,8
   12b7c:	f800283a 	ret

00012b80 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   12b80:	defffa04 	addi	sp,sp,-24
   12b84:	dfc00515 	stw	ra,20(sp)
   12b88:	df000415 	stw	fp,16(sp)
   12b8c:	df000404 	addi	fp,sp,16
   12b90:	e13ffd15 	stw	r4,-12(fp)
   12b94:	e17ffe15 	stw	r5,-8(fp)
   12b98:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   12b9c:	e0bffd17 	ldw	r2,-12(fp)
   12ba0:	10800017 	ldw	r2,0(r2)
   12ba4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   12ba8:	e0bffc17 	ldw	r2,-16(fp)
   12bac:	10c00a04 	addi	r3,r2,40
   12bb0:	e0bffd17 	ldw	r2,-12(fp)
   12bb4:	10800217 	ldw	r2,8(r2)
   12bb8:	1809883a 	mov	r4,r3
   12bbc:	e17ffe17 	ldw	r5,-8(fp)
   12bc0:	e1bfff17 	ldw	r6,-4(fp)
   12bc4:	100f883a 	mov	r7,r2
   12bc8:	00131980 	call	13198 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   12bcc:	e037883a 	mov	sp,fp
   12bd0:	dfc00117 	ldw	ra,4(sp)
   12bd4:	df000017 	ldw	fp,0(sp)
   12bd8:	dec00204 	addi	sp,sp,8
   12bdc:	f800283a 	ret

00012be0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   12be0:	defffa04 	addi	sp,sp,-24
   12be4:	dfc00515 	stw	ra,20(sp)
   12be8:	df000415 	stw	fp,16(sp)
   12bec:	df000404 	addi	fp,sp,16
   12bf0:	e13ffd15 	stw	r4,-12(fp)
   12bf4:	e17ffe15 	stw	r5,-8(fp)
   12bf8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   12bfc:	e0bffd17 	ldw	r2,-12(fp)
   12c00:	10800017 	ldw	r2,0(r2)
   12c04:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   12c08:	e0bffc17 	ldw	r2,-16(fp)
   12c0c:	10c00a04 	addi	r3,r2,40
   12c10:	e0bffd17 	ldw	r2,-12(fp)
   12c14:	10800217 	ldw	r2,8(r2)
   12c18:	1809883a 	mov	r4,r3
   12c1c:	e17ffe17 	ldw	r5,-8(fp)
   12c20:	e1bfff17 	ldw	r6,-4(fp)
   12c24:	100f883a 	mov	r7,r2
   12c28:	00133a00 	call	133a0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   12c2c:	e037883a 	mov	sp,fp
   12c30:	dfc00117 	ldw	ra,4(sp)
   12c34:	df000017 	ldw	fp,0(sp)
   12c38:	dec00204 	addi	sp,sp,8
   12c3c:	f800283a 	ret

00012c40 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   12c40:	defffc04 	addi	sp,sp,-16
   12c44:	dfc00315 	stw	ra,12(sp)
   12c48:	df000215 	stw	fp,8(sp)
   12c4c:	df000204 	addi	fp,sp,8
   12c50:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   12c54:	e0bfff17 	ldw	r2,-4(fp)
   12c58:	10800017 	ldw	r2,0(r2)
   12c5c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   12c60:	e0bffe17 	ldw	r2,-8(fp)
   12c64:	10c00a04 	addi	r3,r2,40
   12c68:	e0bfff17 	ldw	r2,-4(fp)
   12c6c:	10800217 	ldw	r2,8(r2)
   12c70:	1809883a 	mov	r4,r3
   12c74:	100b883a 	mov	r5,r2
   12c78:	00130440 	call	13044 <altera_avalon_jtag_uart_close>
}
   12c7c:	e037883a 	mov	sp,fp
   12c80:	dfc00117 	ldw	ra,4(sp)
   12c84:	df000017 	ldw	fp,0(sp)
   12c88:	dec00204 	addi	sp,sp,8
   12c8c:	f800283a 	ret

00012c90 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   12c90:	defffa04 	addi	sp,sp,-24
   12c94:	dfc00515 	stw	ra,20(sp)
   12c98:	df000415 	stw	fp,16(sp)
   12c9c:	df000404 	addi	fp,sp,16
   12ca0:	e13ffd15 	stw	r4,-12(fp)
   12ca4:	e17ffe15 	stw	r5,-8(fp)
   12ca8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   12cac:	e0bffd17 	ldw	r2,-12(fp)
   12cb0:	10800017 	ldw	r2,0(r2)
   12cb4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   12cb8:	e0bffc17 	ldw	r2,-16(fp)
   12cbc:	10800a04 	addi	r2,r2,40
   12cc0:	1009883a 	mov	r4,r2
   12cc4:	e17ffe17 	ldw	r5,-8(fp)
   12cc8:	e1bfff17 	ldw	r6,-4(fp)
   12ccc:	00130ac0 	call	130ac <altera_avalon_jtag_uart_ioctl>
}
   12cd0:	e037883a 	mov	sp,fp
   12cd4:	dfc00117 	ldw	ra,4(sp)
   12cd8:	df000017 	ldw	fp,0(sp)
   12cdc:	dec00204 	addi	sp,sp,8
   12ce0:	f800283a 	ret

00012ce4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   12ce4:	defffa04 	addi	sp,sp,-24
   12ce8:	dfc00515 	stw	ra,20(sp)
   12cec:	df000415 	stw	fp,16(sp)
   12cf0:	df000404 	addi	fp,sp,16
   12cf4:	e13ffd15 	stw	r4,-12(fp)
   12cf8:	e17ffe15 	stw	r5,-8(fp)
   12cfc:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   12d00:	e0bffd17 	ldw	r2,-12(fp)
   12d04:	00c00044 	movi	r3,1
   12d08:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   12d0c:	e0bffd17 	ldw	r2,-12(fp)
   12d10:	10800017 	ldw	r2,0(r2)
   12d14:	10800104 	addi	r2,r2,4
   12d18:	e0fffd17 	ldw	r3,-12(fp)
   12d1c:	18c00817 	ldw	r3,32(r3)
   12d20:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   12d24:	e0fffe17 	ldw	r3,-8(fp)
   12d28:	e0bfff17 	ldw	r2,-4(fp)
   12d2c:	d8000015 	stw	zero,0(sp)
   12d30:	1809883a 	mov	r4,r3
   12d34:	100b883a 	mov	r5,r2
   12d38:	01800074 	movhi	r6,1
   12d3c:	318b6904 	addi	r6,r6,11684
   12d40:	e1fffd17 	ldw	r7,-12(fp)
   12d44:	0013f440 	call	13f44 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   12d48:	e0bffd17 	ldw	r2,-12(fp)
   12d4c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   12d50:	e0bffd17 	ldw	r2,-12(fp)
   12d54:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   12d58:	008000b4 	movhi	r2,2
   12d5c:	10a2dd04 	addi	r2,r2,-29836
   12d60:	10800017 	ldw	r2,0(r2)
   12d64:	1809883a 	mov	r4,r3
   12d68:	100b883a 	mov	r5,r2
   12d6c:	01800074 	movhi	r6,1
   12d70:	318be804 	addi	r6,r6,12192
   12d74:	e1fffd17 	ldw	r7,-12(fp)
   12d78:	0013a380 	call	13a38 <alt_alarm_start>
   12d7c:	1000040e 	bge	r2,zero,12d90 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   12d80:	e0bffd17 	ldw	r2,-12(fp)
   12d84:	00e00034 	movhi	r3,32768
   12d88:	18ffffc4 	addi	r3,r3,-1
   12d8c:	10c00115 	stw	r3,4(r2)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   12d90:	e037883a 	mov	sp,fp
   12d94:	dfc00117 	ldw	ra,4(sp)
   12d98:	df000017 	ldw	fp,0(sp)
   12d9c:	dec00204 	addi	sp,sp,8
   12da0:	f800283a 	ret

00012da4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   12da4:	defff804 	addi	sp,sp,-32
   12da8:	df000715 	stw	fp,28(sp)
   12dac:	df000704 	addi	fp,sp,28
   12db0:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   12db4:	e0bfff17 	ldw	r2,-4(fp)
   12db8:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   12dbc:	e0bffb17 	ldw	r2,-20(fp)
   12dc0:	10800017 	ldw	r2,0(r2)
   12dc4:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   12dc8:	e0bffc17 	ldw	r2,-16(fp)
   12dcc:	10800104 	addi	r2,r2,4
   12dd0:	10800037 	ldwio	r2,0(r2)
   12dd4:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   12dd8:	e0bffd17 	ldw	r2,-12(fp)
   12ddc:	1080c00c 	andi	r2,r2,768
   12de0:	1000011e 	bne	r2,zero,12de8 <altera_avalon_jtag_uart_irq+0x44>
      break;
   12de4:	00006a06 	br	12f90 <altera_avalon_jtag_uart_irq+0x1ec>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   12de8:	e0bffd17 	ldw	r2,-12(fp)
   12dec:	1080400c 	andi	r2,r2,256
   12df0:	10003226 	beq	r2,zero,12ebc <altera_avalon_jtag_uart_irq+0x118>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   12df4:	00800074 	movhi	r2,1
   12df8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   12dfc:	e0bffb17 	ldw	r2,-20(fp)
   12e00:	10800a17 	ldw	r2,40(r2)
   12e04:	10800044 	addi	r2,r2,1
   12e08:	1081ffcc 	andi	r2,r2,2047
   12e0c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   12e10:	e0bffb17 	ldw	r2,-20(fp)
   12e14:	10c00b17 	ldw	r3,44(r2)
   12e18:	e0bffe17 	ldw	r2,-8(fp)
   12e1c:	1880011e 	bne	r3,r2,12e24 <altera_avalon_jtag_uart_irq+0x80>
          break;
   12e20:	00001506 	br	12e78 <altera_avalon_jtag_uart_irq+0xd4>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   12e24:	e0bffc17 	ldw	r2,-16(fp)
   12e28:	10800037 	ldwio	r2,0(r2)
   12e2c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   12e30:	e0bff917 	ldw	r2,-28(fp)
   12e34:	10a0000c 	andi	r2,r2,32768
   12e38:	1000011e 	bne	r2,zero,12e40 <altera_avalon_jtag_uart_irq+0x9c>
          break;
   12e3c:	00000e06 	br	12e78 <altera_avalon_jtag_uart_irq+0xd4>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   12e40:	e0bffb17 	ldw	r2,-20(fp)
   12e44:	10800a17 	ldw	r2,40(r2)
   12e48:	e0fff917 	ldw	r3,-28(fp)
   12e4c:	e13ffb17 	ldw	r4,-20(fp)
   12e50:	2085883a 	add	r2,r4,r2
   12e54:	10800e04 	addi	r2,r2,56
   12e58:	10c00005 	stb	r3,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   12e5c:	e0bffb17 	ldw	r2,-20(fp)
   12e60:	10800a17 	ldw	r2,40(r2)
   12e64:	10800044 	addi	r2,r2,1
   12e68:	10c1ffcc 	andi	r3,r2,2047
   12e6c:	e0bffb17 	ldw	r2,-20(fp)
   12e70:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   12e74:	003fe106 	br	12dfc <__alt_data_end+0xfe012dfc>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   12e78:	e0bff917 	ldw	r2,-28(fp)
   12e7c:	10bfffec 	andhi	r2,r2,65535
   12e80:	10000e26 	beq	r2,zero,12ebc <altera_avalon_jtag_uart_irq+0x118>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   12e84:	e0bffb17 	ldw	r2,-20(fp)
   12e88:	10c00817 	ldw	r3,32(r2)
   12e8c:	00bfff84 	movi	r2,-2
   12e90:	1886703a 	and	r3,r3,r2
   12e94:	e0bffb17 	ldw	r2,-20(fp)
   12e98:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   12e9c:	e0bffc17 	ldw	r2,-16(fp)
   12ea0:	10800104 	addi	r2,r2,4
   12ea4:	e0fffb17 	ldw	r3,-20(fp)
   12ea8:	18c00817 	ldw	r3,32(r3)
   12eac:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   12eb0:	e0bffc17 	ldw	r2,-16(fp)
   12eb4:	10800104 	addi	r2,r2,4
   12eb8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   12ebc:	e0bffd17 	ldw	r2,-12(fp)
   12ec0:	1080800c 	andi	r2,r2,512
   12ec4:	10003126 	beq	r2,zero,12f8c <altera_avalon_jtag_uart_irq+0x1e8>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   12ec8:	e0bffd17 	ldw	r2,-12(fp)
   12ecc:	1004d43a 	srli	r2,r2,16
   12ed0:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   12ed4:	00001406 	br	12f28 <altera_avalon_jtag_uart_irq+0x184>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   12ed8:	e0bffc17 	ldw	r2,-16(fp)
   12edc:	e0fffb17 	ldw	r3,-20(fp)
   12ee0:	18c00d17 	ldw	r3,52(r3)
   12ee4:	e13ffb17 	ldw	r4,-20(fp)
   12ee8:	20c7883a 	add	r3,r4,r3
   12eec:	18c20e04 	addi	r3,r3,2104
   12ef0:	18c00003 	ldbu	r3,0(r3)
   12ef4:	18c03fcc 	andi	r3,r3,255
   12ef8:	18c0201c 	xori	r3,r3,128
   12efc:	18ffe004 	addi	r3,r3,-128
   12f00:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   12f04:	e0bffb17 	ldw	r2,-20(fp)
   12f08:	10800d17 	ldw	r2,52(r2)
   12f0c:	10800044 	addi	r2,r2,1
   12f10:	10c1ffcc 	andi	r3,r2,2047
   12f14:	e0bffb17 	ldw	r2,-20(fp)
   12f18:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   12f1c:	e0bffa17 	ldw	r2,-24(fp)
   12f20:	10bfffc4 	addi	r2,r2,-1
   12f24:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   12f28:	e0bffa17 	ldw	r2,-24(fp)
   12f2c:	10000526 	beq	r2,zero,12f44 <altera_avalon_jtag_uart_irq+0x1a0>
   12f30:	e0bffb17 	ldw	r2,-20(fp)
   12f34:	10c00d17 	ldw	r3,52(r2)
   12f38:	e0bffb17 	ldw	r2,-20(fp)
   12f3c:	10800c17 	ldw	r2,48(r2)
   12f40:	18bfe51e 	bne	r3,r2,12ed8 <__alt_data_end+0xfe012ed8>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   12f44:	e0bffa17 	ldw	r2,-24(fp)
   12f48:	10001026 	beq	r2,zero,12f8c <altera_avalon_jtag_uart_irq+0x1e8>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   12f4c:	e0bffb17 	ldw	r2,-20(fp)
   12f50:	10c00817 	ldw	r3,32(r2)
   12f54:	00bfff44 	movi	r2,-3
   12f58:	1886703a 	and	r3,r3,r2
   12f5c:	e0bffb17 	ldw	r2,-20(fp)
   12f60:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   12f64:	e0bffb17 	ldw	r2,-20(fp)
   12f68:	10800017 	ldw	r2,0(r2)
   12f6c:	10800104 	addi	r2,r2,4
   12f70:	e0fffb17 	ldw	r3,-20(fp)
   12f74:	18c00817 	ldw	r3,32(r3)
   12f78:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   12f7c:	e0bffc17 	ldw	r2,-16(fp)
   12f80:	10800104 	addi	r2,r2,4
   12f84:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   12f88:	003f8f06 	br	12dc8 <__alt_data_end+0xfe012dc8>
   12f8c:	003f8e06 	br	12dc8 <__alt_data_end+0xfe012dc8>
}
   12f90:	e037883a 	mov	sp,fp
   12f94:	df000017 	ldw	fp,0(sp)
   12f98:	dec00104 	addi	sp,sp,4
   12f9c:	f800283a 	ret

00012fa0 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   12fa0:	defff804 	addi	sp,sp,-32
   12fa4:	df000715 	stw	fp,28(sp)
   12fa8:	df000704 	addi	fp,sp,28
   12fac:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   12fb0:	e0bffb17 	ldw	r2,-20(fp)
   12fb4:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   12fb8:	e0bff917 	ldw	r2,-28(fp)
   12fbc:	10800017 	ldw	r2,0(r2)
   12fc0:	10800104 	addi	r2,r2,4
   12fc4:	10800037 	ldwio	r2,0(r2)
   12fc8:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   12fcc:	e0bffa17 	ldw	r2,-24(fp)
   12fd0:	1081000c 	andi	r2,r2,1024
   12fd4:	10000a26 	beq	r2,zero,13000 <altera_avalon_jtag_uart_timeout+0x60>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   12fd8:	e0bff917 	ldw	r2,-28(fp)
   12fdc:	10800017 	ldw	r2,0(r2)
   12fe0:	10800104 	addi	r2,r2,4
   12fe4:	e0fff917 	ldw	r3,-28(fp)
   12fe8:	18c00817 	ldw	r3,32(r3)
   12fec:	18c10014 	ori	r3,r3,1024
   12ff0:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
   12ff4:	e0bff917 	ldw	r2,-28(fp)
   12ff8:	10000915 	stw	zero,36(r2)
   12ffc:	00000a06 	br	13028 <altera_avalon_jtag_uart_timeout+0x88>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   13000:	e0bff917 	ldw	r2,-28(fp)
   13004:	10800917 	ldw	r2,36(r2)
   13008:	00e00034 	movhi	r3,32768
   1300c:	18ffff04 	addi	r3,r3,-4
   13010:	18800536 	bltu	r3,r2,13028 <altera_avalon_jtag_uart_timeout+0x88>
    sp->host_inactive++;
   13014:	e0bff917 	ldw	r2,-28(fp)
   13018:	10800917 	ldw	r2,36(r2)
   1301c:	10c00044 	addi	r3,r2,1
   13020:	e0bff917 	ldw	r2,-28(fp)
   13024:	10c00915 	stw	r3,36(r2)
   13028:	008000b4 	movhi	r2,2
   1302c:	10a2dd04 	addi	r2,r2,-29836
   13030:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   13034:	e037883a 	mov	sp,fp
   13038:	df000017 	ldw	fp,0(sp)
   1303c:	dec00104 	addi	sp,sp,4
   13040:	f800283a 	ret

00013044 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   13044:	defffd04 	addi	sp,sp,-12
   13048:	df000215 	stw	fp,8(sp)
   1304c:	df000204 	addi	fp,sp,8
   13050:	e13ffe15 	stw	r4,-8(fp)
   13054:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   13058:	00000506 	br	13070 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   1305c:	e0bfff17 	ldw	r2,-4(fp)
   13060:	1090000c 	andi	r2,r2,16384
   13064:	10000226 	beq	r2,zero,13070 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   13068:	00bffd44 	movi	r2,-11
   1306c:	00000b06 	br	1309c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   13070:	e0bffe17 	ldw	r2,-8(fp)
   13074:	10c00d17 	ldw	r3,52(r2)
   13078:	e0bffe17 	ldw	r2,-8(fp)
   1307c:	10800c17 	ldw	r2,48(r2)
   13080:	18800526 	beq	r3,r2,13098 <altera_avalon_jtag_uart_close+0x54>
   13084:	e0bffe17 	ldw	r2,-8(fp)
   13088:	10c00917 	ldw	r3,36(r2)
   1308c:	e0bffe17 	ldw	r2,-8(fp)
   13090:	10800117 	ldw	r2,4(r2)
   13094:	18bff136 	bltu	r3,r2,1305c <__alt_data_end+0xfe01305c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   13098:	0005883a 	mov	r2,zero
}
   1309c:	e037883a 	mov	sp,fp
   130a0:	df000017 	ldw	fp,0(sp)
   130a4:	dec00104 	addi	sp,sp,4
   130a8:	f800283a 	ret

000130ac <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   130ac:	defffa04 	addi	sp,sp,-24
   130b0:	df000515 	stw	fp,20(sp)
   130b4:	df000504 	addi	fp,sp,20
   130b8:	e13ffd15 	stw	r4,-12(fp)
   130bc:	e17ffe15 	stw	r5,-8(fp)
   130c0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   130c4:	00bff9c4 	movi	r2,-25
   130c8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   130cc:	e0bffe17 	ldw	r2,-8(fp)
   130d0:	10da8060 	cmpeqi	r3,r2,27137
   130d4:	1800031e 	bne	r3,zero,130e4 <altera_avalon_jtag_uart_ioctl+0x38>
   130d8:	109a80a0 	cmpeqi	r2,r2,27138
   130dc:	1000191e 	bne	r2,zero,13144 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   130e0:	00002806 	br	13184 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   130e4:	e0bffd17 	ldw	r2,-12(fp)
   130e8:	10c00117 	ldw	r3,4(r2)
   130ec:	00a00034 	movhi	r2,32768
   130f0:	10bfffc4 	addi	r2,r2,-1
   130f4:	18801226 	beq	r3,r2,13140 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
   130f8:	e0bfff17 	ldw	r2,-4(fp)
   130fc:	10800017 	ldw	r2,0(r2)
   13100:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   13104:	e0bffc17 	ldw	r2,-16(fp)
   13108:	10800090 	cmplti	r2,r2,2
   1310c:	1000061e 	bne	r2,zero,13128 <altera_avalon_jtag_uart_ioctl+0x7c>
   13110:	e0fffc17 	ldw	r3,-16(fp)
   13114:	00a00034 	movhi	r2,32768
   13118:	10bfffc4 	addi	r2,r2,-1
   1311c:	18800226 	beq	r3,r2,13128 <altera_avalon_jtag_uart_ioctl+0x7c>
   13120:	e0bffc17 	ldw	r2,-16(fp)
   13124:	00000206 	br	13130 <altera_avalon_jtag_uart_ioctl+0x84>
   13128:	00a00034 	movhi	r2,32768
   1312c:	10bfff84 	addi	r2,r2,-2
   13130:	e0fffd17 	ldw	r3,-12(fp)
   13134:	18800115 	stw	r2,4(r3)
      rc = 0;
   13138:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   1313c:	00001106 	br	13184 <altera_avalon_jtag_uart_ioctl+0xd8>
   13140:	00001006 	br	13184 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   13144:	e0bffd17 	ldw	r2,-12(fp)
   13148:	10c00117 	ldw	r3,4(r2)
   1314c:	00a00034 	movhi	r2,32768
   13150:	10bfffc4 	addi	r2,r2,-1
   13154:	18800a26 	beq	r3,r2,13180 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   13158:	e0bffd17 	ldw	r2,-12(fp)
   1315c:	10c00917 	ldw	r3,36(r2)
   13160:	e0bffd17 	ldw	r2,-12(fp)
   13164:	10800117 	ldw	r2,4(r2)
   13168:	1885803a 	cmpltu	r2,r3,r2
   1316c:	10c03fcc 	andi	r3,r2,255
   13170:	e0bfff17 	ldw	r2,-4(fp)
   13174:	10c00015 	stw	r3,0(r2)
      rc = 0;
   13178:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   1317c:	00000006 	br	13180 <altera_avalon_jtag_uart_ioctl+0xd4>
   13180:	0001883a 	nop

  default:
    break;
  }

  return rc;
   13184:	e0bffb17 	ldw	r2,-20(fp)
}
   13188:	e037883a 	mov	sp,fp
   1318c:	df000017 	ldw	fp,0(sp)
   13190:	dec00104 	addi	sp,sp,4
   13194:	f800283a 	ret

00013198 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   13198:	defff304 	addi	sp,sp,-52
   1319c:	dfc00c15 	stw	ra,48(sp)
   131a0:	df000b15 	stw	fp,44(sp)
   131a4:	df000b04 	addi	fp,sp,44
   131a8:	e13ffc15 	stw	r4,-16(fp)
   131ac:	e17ffd15 	stw	r5,-12(fp)
   131b0:	e1bffe15 	stw	r6,-8(fp)
   131b4:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   131b8:	e0bffd17 	ldw	r2,-12(fp)
   131bc:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   131c0:	00004906 	br	132e8 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   131c4:	e0bffc17 	ldw	r2,-16(fp)
   131c8:	10800a17 	ldw	r2,40(r2)
   131cc:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   131d0:	e0bffc17 	ldw	r2,-16(fp)
   131d4:	10800b17 	ldw	r2,44(r2)
   131d8:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   131dc:	e0fff717 	ldw	r3,-36(fp)
   131e0:	e0bff817 	ldw	r2,-32(fp)
   131e4:	18800536 	bltu	r3,r2,131fc <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   131e8:	e0fff717 	ldw	r3,-36(fp)
   131ec:	e0bff817 	ldw	r2,-32(fp)
   131f0:	1885c83a 	sub	r2,r3,r2
   131f4:	e0bff615 	stw	r2,-40(fp)
   131f8:	00000406 	br	1320c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   131fc:	00c20004 	movi	r3,2048
   13200:	e0bff817 	ldw	r2,-32(fp)
   13204:	1885c83a 	sub	r2,r3,r2
   13208:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   1320c:	e0bff617 	ldw	r2,-40(fp)
   13210:	1000011e 	bne	r2,zero,13218 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
   13214:	00001d06 	br	1328c <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
   13218:	e0fffe17 	ldw	r3,-8(fp)
   1321c:	e0bff617 	ldw	r2,-40(fp)
   13220:	1880022e 	bgeu	r3,r2,1322c <altera_avalon_jtag_uart_read+0x94>
        n = space;
   13224:	e0bffe17 	ldw	r2,-8(fp)
   13228:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   1322c:	e0bff817 	ldw	r2,-32(fp)
   13230:	10800e04 	addi	r2,r2,56
   13234:	e0fffc17 	ldw	r3,-16(fp)
   13238:	1885883a 	add	r2,r3,r2
   1323c:	e13ff517 	ldw	r4,-44(fp)
   13240:	100b883a 	mov	r5,r2
   13244:	e1bff617 	ldw	r6,-40(fp)
   13248:	00047c40 	call	47c4 <memcpy>
      ptr   += n;
   1324c:	e0fff517 	ldw	r3,-44(fp)
   13250:	e0bff617 	ldw	r2,-40(fp)
   13254:	1885883a 	add	r2,r3,r2
   13258:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   1325c:	e0fffe17 	ldw	r3,-8(fp)
   13260:	e0bff617 	ldw	r2,-40(fp)
   13264:	1885c83a 	sub	r2,r3,r2
   13268:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   1326c:	e0fff817 	ldw	r3,-32(fp)
   13270:	e0bff617 	ldw	r2,-40(fp)
   13274:	1885883a 	add	r2,r3,r2
   13278:	10c1ffcc 	andi	r3,r2,2047
   1327c:	e0bffc17 	ldw	r2,-16(fp)
   13280:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   13284:	e0bffe17 	ldw	r2,-8(fp)
   13288:	00bfce16 	blt	zero,r2,131c4 <__alt_data_end+0xfe0131c4>

    /* If we read any data then return it */
    if (ptr != buffer)
   1328c:	e0fff517 	ldw	r3,-44(fp)
   13290:	e0bffd17 	ldw	r2,-12(fp)
   13294:	18800126 	beq	r3,r2,1329c <altera_avalon_jtag_uart_read+0x104>
      break;
   13298:	00001506 	br	132f0 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   1329c:	e0bfff17 	ldw	r2,-4(fp)
   132a0:	1090000c 	andi	r2,r2,16384
   132a4:	10000126 	beq	r2,zero,132ac <altera_avalon_jtag_uart_read+0x114>
      break;
   132a8:	00001106 	br	132f0 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   132ac:	0001883a 	nop
   132b0:	e0bffc17 	ldw	r2,-16(fp)
   132b4:	10c00a17 	ldw	r3,40(r2)
   132b8:	e0bff717 	ldw	r2,-36(fp)
   132bc:	1880051e 	bne	r3,r2,132d4 <altera_avalon_jtag_uart_read+0x13c>
   132c0:	e0bffc17 	ldw	r2,-16(fp)
   132c4:	10c00917 	ldw	r3,36(r2)
   132c8:	e0bffc17 	ldw	r2,-16(fp)
   132cc:	10800117 	ldw	r2,4(r2)
   132d0:	18bff736 	bltu	r3,r2,132b0 <__alt_data_end+0xfe0132b0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   132d4:	e0bffc17 	ldw	r2,-16(fp)
   132d8:	10c00a17 	ldw	r3,40(r2)
   132dc:	e0bff717 	ldw	r2,-36(fp)
   132e0:	1880011e 	bne	r3,r2,132e8 <altera_avalon_jtag_uart_read+0x150>
      break;
   132e4:	00000206 	br	132f0 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   132e8:	e0bffe17 	ldw	r2,-8(fp)
   132ec:	00bfb516 	blt	zero,r2,131c4 <__alt_data_end+0xfe0131c4>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   132f0:	e0fff517 	ldw	r3,-44(fp)
   132f4:	e0bffd17 	ldw	r2,-12(fp)
   132f8:	18801726 	beq	r3,r2,13358 <altera_avalon_jtag_uart_read+0x1c0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   132fc:	0005303a 	rdctl	r2,status
   13300:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   13304:	e0fffa17 	ldw	r3,-24(fp)
   13308:	00bfff84 	movi	r2,-2
   1330c:	1884703a 	and	r2,r3,r2
   13310:	1001703a 	wrctl	status,r2
  
  return context;
   13314:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   13318:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   1331c:	e0bffc17 	ldw	r2,-16(fp)
   13320:	10800817 	ldw	r2,32(r2)
   13324:	10c00054 	ori	r3,r2,1
   13328:	e0bffc17 	ldw	r2,-16(fp)
   1332c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   13330:	e0bffc17 	ldw	r2,-16(fp)
   13334:	10800017 	ldw	r2,0(r2)
   13338:	10800104 	addi	r2,r2,4
   1333c:	e0fffc17 	ldw	r3,-16(fp)
   13340:	18c00817 	ldw	r3,32(r3)
   13344:	10c00035 	stwio	r3,0(r2)
   13348:	e0bff917 	ldw	r2,-28(fp)
   1334c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   13350:	e0bffb17 	ldw	r2,-20(fp)
   13354:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   13358:	e0fff517 	ldw	r3,-44(fp)
   1335c:	e0bffd17 	ldw	r2,-12(fp)
   13360:	18800426 	beq	r3,r2,13374 <altera_avalon_jtag_uart_read+0x1dc>
    return ptr - buffer;
   13364:	e0fff517 	ldw	r3,-44(fp)
   13368:	e0bffd17 	ldw	r2,-12(fp)
   1336c:	1885c83a 	sub	r2,r3,r2
   13370:	00000606 	br	1338c <altera_avalon_jtag_uart_read+0x1f4>
  else if (flags & O_NONBLOCK)
   13374:	e0bfff17 	ldw	r2,-4(fp)
   13378:	1090000c 	andi	r2,r2,16384
   1337c:	10000226 	beq	r2,zero,13388 <altera_avalon_jtag_uart_read+0x1f0>
    return -EWOULDBLOCK;
   13380:	00bffd44 	movi	r2,-11
   13384:	00000106 	br	1338c <altera_avalon_jtag_uart_read+0x1f4>
  else
    return -EIO;
   13388:	00bffec4 	movi	r2,-5
}
   1338c:	e037883a 	mov	sp,fp
   13390:	dfc00117 	ldw	ra,4(sp)
   13394:	df000017 	ldw	fp,0(sp)
   13398:	dec00204 	addi	sp,sp,8
   1339c:	f800283a 	ret

000133a0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   133a0:	defff304 	addi	sp,sp,-52
   133a4:	dfc00c15 	stw	ra,48(sp)
   133a8:	df000b15 	stw	fp,44(sp)
   133ac:	df000b04 	addi	fp,sp,44
   133b0:	e13ffc15 	stw	r4,-16(fp)
   133b4:	e17ffd15 	stw	r5,-12(fp)
   133b8:	e1bffe15 	stw	r6,-8(fp)
   133bc:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   133c0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   133c4:	e0bffd17 	ldw	r2,-12(fp)
   133c8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   133cc:	00003906 	br	134b4 <altera_avalon_jtag_uart_write+0x114>
   133d0:	00003806 	br	134b4 <altera_avalon_jtag_uart_write+0x114>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   133d4:	e0bffc17 	ldw	r2,-16(fp)
   133d8:	10800c17 	ldw	r2,48(r2)
   133dc:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
   133e0:	e0bffc17 	ldw	r2,-16(fp)
   133e4:	10800d17 	ldw	r2,52(r2)
   133e8:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   133ec:	e0fff817 	ldw	r3,-32(fp)
   133f0:	e0bff517 	ldw	r2,-44(fp)
   133f4:	1880062e 	bgeu	r3,r2,13410 <altera_avalon_jtag_uart_write+0x70>
        n = out - 1 - in;
   133f8:	e0fff517 	ldw	r3,-44(fp)
   133fc:	e0bff817 	ldw	r2,-32(fp)
   13400:	1885c83a 	sub	r2,r3,r2
   13404:	10bfffc4 	addi	r2,r2,-1
   13408:	e0bff615 	stw	r2,-40(fp)
   1340c:	00000b06 	br	1343c <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
   13410:	e0bff517 	ldw	r2,-44(fp)
   13414:	10000526 	beq	r2,zero,1342c <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   13418:	00c20004 	movi	r3,2048
   1341c:	e0bff817 	ldw	r2,-32(fp)
   13420:	1885c83a 	sub	r2,r3,r2
   13424:	e0bff615 	stw	r2,-40(fp)
   13428:	00000406 	br	1343c <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   1342c:	00c1ffc4 	movi	r3,2047
   13430:	e0bff817 	ldw	r2,-32(fp)
   13434:	1885c83a 	sub	r2,r3,r2
   13438:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   1343c:	e0bff617 	ldw	r2,-40(fp)
   13440:	1000011e 	bne	r2,zero,13448 <altera_avalon_jtag_uart_write+0xa8>
        break;
   13444:	00001d06 	br	134bc <altera_avalon_jtag_uart_write+0x11c>

      if (n > count)
   13448:	e0fffe17 	ldw	r3,-8(fp)
   1344c:	e0bff617 	ldw	r2,-40(fp)
   13450:	1880022e 	bgeu	r3,r2,1345c <altera_avalon_jtag_uart_write+0xbc>
        n = count;
   13454:	e0bffe17 	ldw	r2,-8(fp)
   13458:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   1345c:	e0bff817 	ldw	r2,-32(fp)
   13460:	10820e04 	addi	r2,r2,2104
   13464:	e0fffc17 	ldw	r3,-16(fp)
   13468:	1885883a 	add	r2,r3,r2
   1346c:	1009883a 	mov	r4,r2
   13470:	e17ffd17 	ldw	r5,-12(fp)
   13474:	e1bff617 	ldw	r6,-40(fp)
   13478:	00047c40 	call	47c4 <memcpy>
      ptr   += n;
   1347c:	e0fffd17 	ldw	r3,-12(fp)
   13480:	e0bff617 	ldw	r2,-40(fp)
   13484:	1885883a 	add	r2,r3,r2
   13488:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   1348c:	e0fffe17 	ldw	r3,-8(fp)
   13490:	e0bff617 	ldw	r2,-40(fp)
   13494:	1885c83a 	sub	r2,r3,r2
   13498:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   1349c:	e0fff817 	ldw	r3,-32(fp)
   134a0:	e0bff617 	ldw	r2,-40(fp)
   134a4:	1885883a 	add	r2,r3,r2
   134a8:	10c1ffcc 	andi	r3,r2,2047
   134ac:	e0bffc17 	ldw	r2,-16(fp)
   134b0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   134b4:	e0bffe17 	ldw	r2,-8(fp)
   134b8:	00bfc616 	blt	zero,r2,133d4 <__alt_data_end+0xfe0133d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   134bc:	0005303a 	rdctl	r2,status
   134c0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   134c4:	e0fffa17 	ldw	r3,-24(fp)
   134c8:	00bfff84 	movi	r2,-2
   134cc:	1884703a 	and	r2,r3,r2
   134d0:	1001703a 	wrctl	status,r2
  
  return context;
   134d4:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   134d8:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   134dc:	e0bffc17 	ldw	r2,-16(fp)
   134e0:	10800817 	ldw	r2,32(r2)
   134e4:	10c00094 	ori	r3,r2,2
   134e8:	e0bffc17 	ldw	r2,-16(fp)
   134ec:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   134f0:	e0bffc17 	ldw	r2,-16(fp)
   134f4:	10800017 	ldw	r2,0(r2)
   134f8:	10800104 	addi	r2,r2,4
   134fc:	e0fffc17 	ldw	r3,-16(fp)
   13500:	18c00817 	ldw	r3,32(r3)
   13504:	10c00035 	stwio	r3,0(r2)
   13508:	e0bff917 	ldw	r2,-28(fp)
   1350c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   13510:	e0bffb17 	ldw	r2,-20(fp)
   13514:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   13518:	e0bffe17 	ldw	r2,-8(fp)
   1351c:	0080120e 	bge	zero,r2,13568 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   13520:	e0bfff17 	ldw	r2,-4(fp)
   13524:	1090000c 	andi	r2,r2,16384
   13528:	10000126 	beq	r2,zero,13530 <altera_avalon_jtag_uart_write+0x190>
        break;
   1352c:	00001006 	br	13570 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   13530:	0001883a 	nop
   13534:	e0bffc17 	ldw	r2,-16(fp)
   13538:	10c00d17 	ldw	r3,52(r2)
   1353c:	e0bff517 	ldw	r2,-44(fp)
   13540:	1880051e 	bne	r3,r2,13558 <altera_avalon_jtag_uart_write+0x1b8>
   13544:	e0bffc17 	ldw	r2,-16(fp)
   13548:	10c00917 	ldw	r3,36(r2)
   1354c:	e0bffc17 	ldw	r2,-16(fp)
   13550:	10800117 	ldw	r2,4(r2)
   13554:	18bff736 	bltu	r3,r2,13534 <__alt_data_end+0xfe013534>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   13558:	e0bffc17 	ldw	r2,-16(fp)
   1355c:	10800917 	ldw	r2,36(r2)
   13560:	10000126 	beq	r2,zero,13568 <altera_avalon_jtag_uart_write+0x1c8>
         break;
   13564:	00000206 	br	13570 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
   13568:	e0bffe17 	ldw	r2,-8(fp)
   1356c:	00bf9816 	blt	zero,r2,133d0 <__alt_data_end+0xfe0133d0>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   13570:	e0fffd17 	ldw	r3,-12(fp)
   13574:	e0bff717 	ldw	r2,-36(fp)
   13578:	18800426 	beq	r3,r2,1358c <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
   1357c:	e0fffd17 	ldw	r3,-12(fp)
   13580:	e0bff717 	ldw	r2,-36(fp)
   13584:	1885c83a 	sub	r2,r3,r2
   13588:	00000606 	br	135a4 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
   1358c:	e0bfff17 	ldw	r2,-4(fp)
   13590:	1090000c 	andi	r2,r2,16384
   13594:	10000226 	beq	r2,zero,135a0 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
   13598:	00bffd44 	movi	r2,-11
   1359c:	00000106 	br	135a4 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   135a0:	00bffec4 	movi	r2,-5
}
   135a4:	e037883a 	mov	sp,fp
   135a8:	dfc00117 	ldw	ra,4(sp)
   135ac:	df000017 	ldw	fp,0(sp)
   135b0:	dec00204 	addi	sp,sp,8
   135b4:	f800283a 	ret

000135b8 <alt_hostfs_open>:
* alt_hostfs_open
*
* If we can't find anything return -1
*/
int alt_hostfs_open(alt_fd* fd, const char * name, int flags, int mode)
{
   135b8:	defff404 	addi	sp,sp,-48
   135bc:	df000b15 	stw	fp,44(sp)
   135c0:	df000b04 	addi	fp,sp,44
   135c4:	e13ffc15 	stw	r4,-16(fp)
   135c8:	e17ffd15 	stw	r5,-12(fp)
   135cc:	e1bffe15 	stw	r6,-8(fp)
   135d0:	e1ffff15 	stw	r7,-4(fp)
  static const struct HOSTCALL_INFO hcinfo = { 0x0103, "open" };

  alt_hostfs_dev* dev= (alt_hostfs_dev*)fd->dev;
   135d4:	e0bffc17 	ldw	r2,-16(fp)
   135d8:	10800017 	ldw	r2,0(r2)
   135dc:	e0bff515 	stw	r2,-44(fp)
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
   135e0:	e0bff517 	ldw	r2,-44(fp)
   135e4:	10800217 	ldw	r2,8(r2)
   135e8:	e0bff815 	stw	r2,-32(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
   135ec:	e0bff817 	ldw	r2,-32(fp)
   135f0:	10bfffc4 	addi	r2,r2,-1
   135f4:	e0bff915 	stw	r2,-28(fp)

  while (*++ptr != 0)
   135f8:	e0bff917 	ldw	r2,-28(fp)
   135fc:	10800044 	addi	r2,r2,1
   13600:	e0bff915 	stw	r2,-28(fp)
   13604:	e0bff917 	ldw	r2,-28(fp)
   13608:	10800003 	ldbu	r2,0(r2)
   1360c:	10803fcc 	andi	r2,r2,255
   13610:	1080201c 	xori	r2,r2,128
   13614:	10bfe004 	addi	r2,r2,-128
   13618:	103ff71e 	bne	r2,zero,135f8 <__alt_data_end+0xfe0135f8>
    ;

  return ptr - string;
   1361c:	e0fff917 	ldw	r3,-28(fp)
   13620:	e0bff817 	ldw	r2,-32(fp)
   13624:	1885c83a 	sub	r2,r3,r2
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
   13628:	10800044 	addi	r2,r2,1
   1362c:	e0fffd17 	ldw	r3,-12(fp)
   13630:	1885883a 	add	r2,r3,r2
   13634:	e0bffd15 	stw	r2,-12(fp)

  r3 = (int)&hcinfo;
   13638:	d0a00e04 	addi	r2,gp,-32712
   1363c:	1007883a 	mov	r3,r2
  r4 = (int)name;
   13640:	e0bffd17 	ldw	r2,-12(fp)
   13644:	1009883a 	mov	r4,r2
  r5 = flags;
   13648:	e17ffe17 	ldw	r5,-8(fp)
  r6 = mode;
   1364c:	e1bfff17 	ldw	r6,-4(fp)
   13650:	e0bffd17 	ldw	r2,-12(fp)
   13654:	e0bffa15 	stw	r2,-24(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
   13658:	e0bffa17 	ldw	r2,-24(fp)
   1365c:	10bfffc4 	addi	r2,r2,-1
   13660:	e0bffb15 	stw	r2,-20(fp)

  while (*++ptr != 0)
   13664:	e0bffb17 	ldw	r2,-20(fp)
   13668:	10800044 	addi	r2,r2,1
   1366c:	e0bffb15 	stw	r2,-20(fp)
   13670:	e0bffb17 	ldw	r2,-20(fp)
   13674:	10800003 	ldbu	r2,0(r2)
   13678:	10803fcc 	andi	r2,r2,255
   1367c:	1080201c 	xori	r2,r2,128
   13680:	10bfe004 	addi	r2,r2,-128
   13684:	103ff71e 	bne	r2,zero,13664 <__alt_data_end+0xfe013664>
    ;

  return ptr - string;
   13688:	e1fffb17 	ldw	r7,-20(fp)
   1368c:	e0bffa17 	ldw	r2,-24(fp)
   13690:	3885c83a 	sub	r2,r7,r2

  r3 = (int)&hcinfo;
  r4 = (int)name;
  r5 = flags;
  r6 = mode;
  r7 = inline_strlen(name);
   13694:	100f883a 	mov	r7,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6), "r" (r7) : "memory" );
   13698:	003da07a 	break	1

  handle = (void *)r2;
   1369c:	e0bff615 	stw	r2,-40(fp)
  error = r3;
   136a0:	e0fff715 	stw	r3,-36(fp)

  if (error == 0)
   136a4:	e0bff717 	ldw	r2,-36(fp)
   136a8:	1000031e 	bne	r2,zero,136b8 <alt_hostfs_open+0x100>
    fd->priv = handle;
   136ac:	e0bffc17 	ldw	r2,-16(fp)
   136b0:	e0fff617 	ldw	r3,-40(fp)
   136b4:	10c00115 	stw	r3,4(r2)

  return -error;
   136b8:	e0bff717 	ldw	r2,-36(fp)
   136bc:	0085c83a 	sub	r2,zero,r2
}
   136c0:	e037883a 	mov	sp,fp
   136c4:	df000017 	ldw	fp,0(sp)
   136c8:	dec00104 	addi	sp,sp,4
   136cc:	f800283a 	ret

000136d0 <alt_hostfs_close>:
* alt_hostfs_close
*
* Read the file
*/
int alt_hostfs_close(alt_fd* fd)
{
   136d0:	defffd04 	addi	sp,sp,-12
   136d4:	df000215 	stw	fp,8(sp)
   136d8:	df000204 	addi	fp,sp,8
   136dc:	e13fff15 	stw	r4,-4(fp)

  /* Input and output parameters for the hostcall */
  register int r3 asm ("r3");
  register int r4 asm ("r4");

  r3 = (int)&hcinfo;
   136e0:	d0a01104 	addi	r2,gp,-32700
   136e4:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
   136e8:	e0bfff17 	ldw	r2,-4(fp)
   136ec:	10800117 	ldw	r2,4(r2)
   136f0:	1009883a 	mov	r4,r2

  __asm__ volatile("break 1" : "+r" (r3) : "r" (r4) );
   136f4:	003da07a 	break	1

  error = r3;
   136f8:	e0fffe15 	stw	r3,-8(fp)

  return -error;
   136fc:	e0bffe17 	ldw	r2,-8(fp)
   13700:	0085c83a 	sub	r2,zero,r2
}
   13704:	e037883a 	mov	sp,fp
   13708:	df000017 	ldw	fp,0(sp)
   1370c:	dec00104 	addi	sp,sp,4
   13710:	f800283a 	ret

00013714 <alt_hostfs_read>:
* alt_hostfs_read
*
* Read the file
*/
int alt_hostfs_read(alt_fd* fd, char * ptr, int len)
{
   13714:	defffa04 	addi	sp,sp,-24
   13718:	df000515 	stw	fp,20(sp)
   1371c:	df000504 	addi	fp,sp,20
   13720:	e13ffd15 	stw	r4,-12(fp)
   13724:	e17ffe15 	stw	r5,-8(fp)
   13728:	e1bfff15 	stw	r6,-4(fp)
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");


  r3 = (int)&hcinfo;
   1372c:	d0a01404 	addi	r2,gp,-32688
   13730:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
   13734:	e0bffd17 	ldw	r2,-12(fp)
   13738:	10800117 	ldw	r2,4(r2)
   1373c:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
   13740:	e0bffe17 	ldw	r2,-8(fp)
   13744:	100b883a 	mov	r5,r2
  r6 = len;
   13748:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
   1374c:	003da07a 	break	1

  rc = r2;
   13750:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
   13754:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
   13758:	e0bffc17 	ldw	r2,-16(fp)
   1375c:	10000326 	beq	r2,zero,1376c <alt_hostfs_read+0x58>
   13760:	e0bffc17 	ldw	r2,-16(fp)
   13764:	0085c83a 	sub	r2,zero,r2
   13768:	00000106 	br	13770 <alt_hostfs_read+0x5c>
   1376c:	e0bffb17 	ldw	r2,-20(fp)
}
   13770:	e037883a 	mov	sp,fp
   13774:	df000017 	ldw	fp,0(sp)
   13778:	dec00104 	addi	sp,sp,4
   1377c:	f800283a 	ret

00013780 <alt_hostfs_write>:
* alt_hostfs_write
*
* Read the file
*/
int alt_hostfs_write(alt_fd* fd, const char * ptr, int len)
{
   13780:	defffa04 	addi	sp,sp,-24
   13784:	df000515 	stw	fp,20(sp)
   13788:	df000504 	addi	fp,sp,20
   1378c:	e13ffd15 	stw	r4,-12(fp)
   13790:	e17ffe15 	stw	r5,-8(fp)
   13794:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
   13798:	d0a01704 	addi	r2,gp,-32676
   1379c:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
   137a0:	e0bffd17 	ldw	r2,-12(fp)
   137a4:	10800117 	ldw	r2,4(r2)
   137a8:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
   137ac:	e0bffe17 	ldw	r2,-8(fp)
   137b0:	100b883a 	mov	r5,r2
  r6 = len;
   137b4:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
   137b8:	003da07a 	break	1

  rc = r2;
   137bc:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
   137c0:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
   137c4:	e0bffc17 	ldw	r2,-16(fp)
   137c8:	10000326 	beq	r2,zero,137d8 <alt_hostfs_write+0x58>
   137cc:	e0bffc17 	ldw	r2,-16(fp)
   137d0:	0085c83a 	sub	r2,zero,r2
   137d4:	00000106 	br	137dc <alt_hostfs_write+0x5c>
   137d8:	e0bffb17 	ldw	r2,-20(fp)
}
   137dc:	e037883a 	mov	sp,fp
   137e0:	df000017 	ldw	fp,0(sp)
   137e4:	dec00104 	addi	sp,sp,4
   137e8:	f800283a 	ret

000137ec <alt_hostfs_seek>:
* Move around within a file
*
* returns -errno for an error or the offset within the file
*/
int alt_hostfs_seek(alt_fd* fd, int ptr, int dir)
{
   137ec:	defffa04 	addi	sp,sp,-24
   137f0:	df000515 	stw	fp,20(sp)
   137f4:	df000504 	addi	fp,sp,20
   137f8:	e13ffd15 	stw	r4,-12(fp)
   137fc:	e17ffe15 	stw	r5,-8(fp)
   13800:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
   13804:	d0a01a04 	addi	r2,gp,-32664
   13808:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
   1380c:	e0bffd17 	ldw	r2,-12(fp)
   13810:	10800117 	ldw	r2,4(r2)
   13814:	1009883a 	mov	r4,r2
  r5 = ptr;
   13818:	e17ffe17 	ldw	r5,-8(fp)
  r6 = dir;
   1381c:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
   13820:	003da07a 	break	1

  rc = r2;
   13824:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
   13828:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
   1382c:	e0bffc17 	ldw	r2,-16(fp)
   13830:	10000326 	beq	r2,zero,13840 <alt_hostfs_seek+0x54>
   13834:	e0bffc17 	ldw	r2,-16(fp)
   13838:	0085c83a 	sub	r2,zero,r2
   1383c:	00000106 	br	13844 <alt_hostfs_seek+0x58>
   13840:	e0bffb17 	ldw	r2,-20(fp)
}
   13844:	e037883a 	mov	sp,fp
   13848:	df000017 	ldw	fp,0(sp)
   1384c:	dec00104 	addi	sp,sp,4
   13850:	f800283a 	ret

00013854 <alt_hostfs_fstat>:
* at the lower address.
* We need to copy the structure and byte swap it to make it match our local
* layout of struct stat.
*/
int alt_hostfs_fstat(alt_fd* fd, struct stat* st)
{
   13854:	deffe904 	addi	sp,sp,-92
   13858:	df001615 	stw	fp,88(sp)
   1385c:	df001604 	addi	fp,sp,88
   13860:	e13ffe15 	stw	r4,-8(fp)
   13864:	e17fff15 	stw	r5,-4(fp)
  register int r2 asm ("r2");
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");

  r3 = (int)&hcinfo;
   13868:	d0a01d04 	addi	r2,gp,-32652
   1386c:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
   13870:	e0bffe17 	ldw	r2,-8(fp)
   13874:	10800117 	ldw	r2,4(r2)
   13878:	1009883a 	mov	r4,r2
  r5 = (int)&hoststat;
   1387c:	e0bfee04 	addi	r2,fp,-72
   13880:	100b883a 	mov	r5,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5) : "memory" );
   13884:	003da07a 	break	1

  rc = r2;
   13888:	e0bfeb15 	stw	r2,-84(fp)
  error = r3;
   1388c:	e0ffec15 	stw	r3,-80(fp)

  if (error == 0)
   13890:	e0bfec17 	ldw	r2,-80(fp)
   13894:	1000621e 	bne	r2,zero,13a20 <alt_hostfs_fstat+0x1cc>
     * no change is required.  On a little-endian processor we need to swap
     * the bytes in each word.
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
   13898:	e0bfee04 	addi	r2,fp,-72
   1389c:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
   138a0:	e0bfea17 	ldw	r2,-88(fp)
   138a4:	10801004 	addi	r2,r2,64
   138a8:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
   138ac:	00001606 	br	13908 <alt_hostfs_fstat+0xb4>
      *ptr = ((*ptr & 0xFF000000) >> 24) |
   138b0:	e0bfea17 	ldw	r2,-88(fp)
   138b4:	10800017 	ldw	r2,0(r2)
   138b8:	1006d63a 	srli	r3,r2,24
             ((*ptr & 0x00FF0000) >> 8)  |
   138bc:	e0bfea17 	ldw	r2,-88(fp)
   138c0:	10800017 	ldw	r2,0(r2)
   138c4:	10803fec 	andhi	r2,r2,255
   138c8:	1004d23a 	srli	r2,r2,8

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
   138cc:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
   138d0:	e0bfea17 	ldw	r2,-88(fp)
   138d4:	10800017 	ldw	r2,0(r2)
   138d8:	10bfc00c 	andi	r2,r2,65280
   138dc:	1004923a 	slli	r2,r2,8
#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
   138e0:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
   138e4:	e0bfea17 	ldw	r2,-88(fp)
   138e8:	10800017 	ldw	r2,0(r2)
   138ec:	1004963a 	slli	r2,r2,24
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
   138f0:	1886b03a 	or	r3,r3,r2

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
   138f4:	e0bfea17 	ldw	r2,-88(fp)
   138f8:	10c00015 	stw	r3,0(r2)
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
   138fc:	e0bfea17 	ldw	r2,-88(fp)
   13900:	10800104 	addi	r2,r2,4
   13904:	e0bfea15 	stw	r2,-88(fp)
   13908:	e0ffea17 	ldw	r3,-88(fp)
   1390c:	e0bfed17 	ldw	r2,-76(fp)
   13910:	18bfe736 	bltu	r3,r2,138b0 <__alt_data_end+0xfe0138b0>
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
   13914:	e0bfff17 	ldw	r2,-4(fp)
   13918:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
   1391c:	e0bfea17 	ldw	r2,-88(fp)
   13920:	10800f04 	addi	r2,r2,60
   13924:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
   13928:	00000506 	br	13940 <alt_hostfs_fstat+0xec>
      *ptr = 0;
   1392c:	e0bfea17 	ldw	r2,-88(fp)
   13930:	10000015 	stw	zero,0(r2)
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
    for ( ; ptr < end ; ptr++)
   13934:	e0bfea17 	ldw	r2,-88(fp)
   13938:	10800104 	addi	r2,r2,4
   1393c:	e0bfea15 	stw	r2,-88(fp)
   13940:	e0ffea17 	ldw	r3,-88(fp)
   13944:	e0bfed17 	ldw	r2,-76(fp)
   13948:	18bff836 	bltu	r3,r2,1392c <__alt_data_end+0xfe01392c>

    /* Copy the data provided by the host into our local copy, for data which
     * is provided as 64bit values by the host we just use the least
     * significant word.
     */
    st->st_dev     = hoststat.fst_dev;
   1394c:	e0bfee17 	ldw	r2,-72(fp)
   13950:	1007883a 	mov	r3,r2
   13954:	e0bfff17 	ldw	r2,-4(fp)
   13958:	10c0000d 	sth	r3,0(r2)
    st->st_ino     = hoststat.fst_ino;
   1395c:	e0bfef17 	ldw	r2,-68(fp)
   13960:	1007883a 	mov	r3,r2
   13964:	e0bfff17 	ldw	r2,-4(fp)
   13968:	10c0008d 	sth	r3,2(r2)
    st->st_mode    = hoststat.fst_mode;
   1396c:	e0fff017 	ldw	r3,-64(fp)
   13970:	e0bfff17 	ldw	r2,-4(fp)
   13974:	10c00115 	stw	r3,4(r2)
    st->st_nlink   = hoststat.fst_nlink;
   13978:	e0bff117 	ldw	r2,-60(fp)
   1397c:	1007883a 	mov	r3,r2
   13980:	e0bfff17 	ldw	r2,-4(fp)
   13984:	10c0020d 	sth	r3,8(r2)
    st->st_uid     = hoststat.fst_uid;
   13988:	e0bff217 	ldw	r2,-56(fp)
   1398c:	1007883a 	mov	r3,r2
   13990:	e0bfff17 	ldw	r2,-4(fp)
   13994:	10c0028d 	sth	r3,10(r2)
    st->st_gid     = hoststat.fst_gid;
   13998:	e0bff317 	ldw	r2,-52(fp)
   1399c:	1007883a 	mov	r3,r2
   139a0:	e0bfff17 	ldw	r2,-4(fp)
   139a4:	10c0030d 	sth	r3,12(r2)
    st->st_rdev    = hoststat.fst_rdev;
   139a8:	e0bff417 	ldw	r2,-48(fp)
   139ac:	1007883a 	mov	r3,r2
   139b0:	e0bfff17 	ldw	r2,-4(fp)
   139b4:	10c0038d 	sth	r3,14(r2)
    st->st_size    = hoststat.fst_size[1];
   139b8:	e0bff617 	ldw	r2,-40(fp)
   139bc:	1007883a 	mov	r3,r2
   139c0:	e0bfff17 	ldw	r2,-4(fp)
   139c4:	10c00415 	stw	r3,16(r2)

    st->st_atime   = hoststat.fst_atime;
   139c8:	e0bffb17 	ldw	r2,-20(fp)
   139cc:	1007883a 	mov	r3,r2
   139d0:	e0bfff17 	ldw	r2,-4(fp)
   139d4:	10c00515 	stw	r3,20(r2)
    st->st_mtime   = hoststat.fst_mtime;
   139d8:	e0bffc17 	ldw	r2,-16(fp)
   139dc:	1007883a 	mov	r3,r2
   139e0:	e0bfff17 	ldw	r2,-4(fp)
   139e4:	10c00715 	stw	r3,28(r2)
    st->st_ctime   = hoststat.fst_ctime;
   139e8:	e0bffd17 	ldw	r2,-12(fp)
   139ec:	1007883a 	mov	r3,r2
   139f0:	e0bfff17 	ldw	r2,-4(fp)
   139f4:	10c00915 	stw	r3,36(r2)

    st->st_blksize = hoststat.fst_blksize[1];
   139f8:	e0bff817 	ldw	r2,-32(fp)
   139fc:	1007883a 	mov	r3,r2
   13a00:	e0bfff17 	ldw	r2,-4(fp)
   13a04:	10c00b15 	stw	r3,44(r2)
    st->st_blocks  = hoststat.fst_blocks[1];
   13a08:	e0bffa17 	ldw	r2,-24(fp)
   13a0c:	1007883a 	mov	r3,r2
   13a10:	e0bfff17 	ldw	r2,-4(fp)
   13a14:	10c00c15 	stw	r3,48(r2)

    return rc;
   13a18:	e0bfeb17 	ldw	r2,-84(fp)
   13a1c:	00000206 	br	13a28 <alt_hostfs_fstat+0x1d4>
  }
  else
    return -error;
   13a20:	e0bfec17 	ldw	r2,-80(fp)
   13a24:	0085c83a 	sub	r2,zero,r2
}
   13a28:	e037883a 	mov	sp,fp
   13a2c:	df000017 	ldw	fp,0(sp)
   13a30:	dec00104 	addi	sp,sp,4
   13a34:	f800283a 	ret

00013a38 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   13a38:	defff504 	addi	sp,sp,-44
   13a3c:	df000a15 	stw	fp,40(sp)
   13a40:	df000a04 	addi	fp,sp,40
   13a44:	e13ffc15 	stw	r4,-16(fp)
   13a48:	e17ffd15 	stw	r5,-12(fp)
   13a4c:	e1bffe15 	stw	r6,-8(fp)
   13a50:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   13a54:	e03ff615 	stw	zero,-40(fp)
   13a58:	008000b4 	movhi	r2,2
   13a5c:	10a2dd04 	addi	r2,r2,-29836
   13a60:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   13a64:	10003f26 	beq	r2,zero,13b64 <alt_alarm_start+0x12c>
  {
    if (alarm)
   13a68:	e0bffc17 	ldw	r2,-16(fp)
   13a6c:	10003b26 	beq	r2,zero,13b5c <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
   13a70:	e0bffc17 	ldw	r2,-16(fp)
   13a74:	e0fffe17 	ldw	r3,-8(fp)
   13a78:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   13a7c:	e0bffc17 	ldw	r2,-16(fp)
   13a80:	e0ffff17 	ldw	r3,-4(fp)
   13a84:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   13a88:	0005303a 	rdctl	r2,status
   13a8c:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   13a90:	e0fff817 	ldw	r3,-32(fp)
   13a94:	00bfff84 	movi	r2,-2
   13a98:	1884703a 	and	r2,r3,r2
   13a9c:	1001703a 	wrctl	status,r2
  
  return context;
   13aa0:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
   13aa4:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   13aa8:	008000b4 	movhi	r2,2
   13aac:	10a2de04 	addi	r2,r2,-29832
   13ab0:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   13ab4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   13ab8:	e0fffd17 	ldw	r3,-12(fp)
   13abc:	e0bff617 	ldw	r2,-40(fp)
   13ac0:	1885883a 	add	r2,r3,r2
   13ac4:	10c00044 	addi	r3,r2,1
   13ac8:	e0bffc17 	ldw	r2,-16(fp)
   13acc:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   13ad0:	e0bffc17 	ldw	r2,-16(fp)
   13ad4:	10c00217 	ldw	r3,8(r2)
   13ad8:	e0bff617 	ldw	r2,-40(fp)
   13adc:	1880042e 	bgeu	r3,r2,13af0 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
   13ae0:	e0bffc17 	ldw	r2,-16(fp)
   13ae4:	00c00044 	movi	r3,1
   13ae8:	10c00405 	stb	r3,16(r2)
   13aec:	00000206 	br	13af8 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
   13af0:	e0bffc17 	ldw	r2,-16(fp)
   13af4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   13af8:	e0bffc17 	ldw	r2,-16(fp)
   13afc:	00c00074 	movhi	r3,1
   13b00:	18dbee04 	addi	r3,r3,28600
   13b04:	e0fff915 	stw	r3,-28(fp)
   13b08:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   13b0c:	e0bffa17 	ldw	r2,-24(fp)
   13b10:	e0fff917 	ldw	r3,-28(fp)
   13b14:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   13b18:	e0bff917 	ldw	r2,-28(fp)
   13b1c:	10c00017 	ldw	r3,0(r2)
   13b20:	e0bffa17 	ldw	r2,-24(fp)
   13b24:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   13b28:	e0bff917 	ldw	r2,-28(fp)
   13b2c:	10800017 	ldw	r2,0(r2)
   13b30:	e0fffa17 	ldw	r3,-24(fp)
   13b34:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   13b38:	e0bff917 	ldw	r2,-28(fp)
   13b3c:	e0fffa17 	ldw	r3,-24(fp)
   13b40:	10c00015 	stw	r3,0(r2)
   13b44:	e0bff717 	ldw	r2,-36(fp)
   13b48:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   13b4c:	e0bffb17 	ldw	r2,-20(fp)
   13b50:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   13b54:	0005883a 	mov	r2,zero
   13b58:	00000306 	br	13b68 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
   13b5c:	00bffa84 	movi	r2,-22
   13b60:	00000106 	br	13b68 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
   13b64:	00bfde84 	movi	r2,-134
  }
}
   13b68:	e037883a 	mov	sp,fp
   13b6c:	df000017 	ldw	fp,0(sp)
   13b70:	dec00104 	addi	sp,sp,4
   13b74:	f800283a 	ret

00013b78 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   13b78:	defffa04 	addi	sp,sp,-24
   13b7c:	dfc00515 	stw	ra,20(sp)
   13b80:	df000415 	stw	fp,16(sp)
   13b84:	df000404 	addi	fp,sp,16
   13b88:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   13b8c:	008000c4 	movi	r2,3
   13b90:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   13b94:	e0fffd17 	ldw	r3,-12(fp)
   13b98:	008003f4 	movhi	r2,15
   13b9c:	10909004 	addi	r2,r2,16960
   13ba0:	1885383a 	mul	r2,r3,r2
   13ba4:	0100bef4 	movhi	r4,763
   13ba8:	213c2004 	addi	r4,r4,-3968
   13bac:	100b883a 	mov	r5,r2
   13bb0:	000f7b00 	call	f7b0 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   13bb4:	01200034 	movhi	r4,32768
   13bb8:	213fffc4 	addi	r4,r4,-1
   13bbc:	100b883a 	mov	r5,r2
   13bc0:	000f7b00 	call	f7b0 <__udivsi3>
   13bc4:	e13fff17 	ldw	r4,-4(fp)
   13bc8:	100b883a 	mov	r5,r2
   13bcc:	000f7b00 	call	f7b0 <__udivsi3>
   13bd0:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   13bd4:	e0bffe17 	ldw	r2,-8(fp)
   13bd8:	10002926 	beq	r2,zero,13c80 <alt_busy_sleep+0x108>
  {
    for(i=0;i<big_loops;i++)
   13bdc:	e03ffc15 	stw	zero,-16(fp)
   13be0:	00001606 	br	13c3c <alt_busy_sleep+0xc4>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   13be4:	00a00034 	movhi	r2,32768
   13be8:	10bfffc4 	addi	r2,r2,-1
   13bec:	10bfffc4 	addi	r2,r2,-1
   13bf0:	103ffe1e 	bne	r2,zero,13bec <__alt_data_end+0xfe013bec>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   13bf4:	e0fffd17 	ldw	r3,-12(fp)
   13bf8:	008003f4 	movhi	r2,15
   13bfc:	10909004 	addi	r2,r2,16960
   13c00:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   13c04:	0100bef4 	movhi	r4,763
   13c08:	213c2004 	addi	r4,r4,-3968
   13c0c:	100b883a 	mov	r5,r2
   13c10:	000f7b00 	call	f7b0 <__udivsi3>
   13c14:	01200034 	movhi	r4,32768
   13c18:	213fffc4 	addi	r4,r4,-1
   13c1c:	100b883a 	mov	r5,r2
   13c20:	000f7b00 	call	f7b0 <__udivsi3>
   13c24:	e0ffff17 	ldw	r3,-4(fp)
   13c28:	1885c83a 	sub	r2,r3,r2
   13c2c:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   13c30:	e0bffc17 	ldw	r2,-16(fp)
   13c34:	10800044 	addi	r2,r2,1
   13c38:	e0bffc15 	stw	r2,-16(fp)
   13c3c:	e0fffc17 	ldw	r3,-16(fp)
   13c40:	e0bffe17 	ldw	r2,-8(fp)
   13c44:	18bfe716 	blt	r3,r2,13be4 <__alt_data_end+0xfe013be4>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   13c48:	e0fffd17 	ldw	r3,-12(fp)
   13c4c:	008003f4 	movhi	r2,15
   13c50:	10909004 	addi	r2,r2,16960
   13c54:	1885383a 	mul	r2,r3,r2
   13c58:	0100bef4 	movhi	r4,763
   13c5c:	213c2004 	addi	r4,r4,-3968
   13c60:	100b883a 	mov	r5,r2
   13c64:	000f7b00 	call	f7b0 <__udivsi3>
   13c68:	1007883a 	mov	r3,r2
   13c6c:	e0bfff17 	ldw	r2,-4(fp)
   13c70:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   13c74:	10bfffc4 	addi	r2,r2,-1
   13c78:	103ffe1e 	bne	r2,zero,13c74 <__alt_data_end+0xfe013c74>
   13c7c:	00000d06 	br	13cb4 <alt_busy_sleep+0x13c>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   13c80:	e0fffd17 	ldw	r3,-12(fp)
   13c84:	008003f4 	movhi	r2,15
   13c88:	10909004 	addi	r2,r2,16960
   13c8c:	1885383a 	mul	r2,r3,r2
   13c90:	0100bef4 	movhi	r4,763
   13c94:	213c2004 	addi	r4,r4,-3968
   13c98:	100b883a 	mov	r5,r2
   13c9c:	000f7b00 	call	f7b0 <__udivsi3>
   13ca0:	1007883a 	mov	r3,r2
   13ca4:	e0bfff17 	ldw	r2,-4(fp)
   13ca8:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   13cac:	10bfffc4 	addi	r2,r2,-1
   13cb0:	00bffe16 	blt	zero,r2,13cac <__alt_data_end+0xfe013cac>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   13cb4:	0005883a 	mov	r2,zero
}
   13cb8:	e037883a 	mov	sp,fp
   13cbc:	dfc00117 	ldw	ra,4(sp)
   13cc0:	df000017 	ldw	fp,0(sp)
   13cc4:	dec00204 	addi	sp,sp,8
   13cc8:	f800283a 	ret

00013ccc <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   13ccc:	deffff04 	addi	sp,sp,-4
   13cd0:	df000015 	stw	fp,0(sp)
   13cd4:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   13cd8:	e037883a 	mov	sp,fp
   13cdc:	df000017 	ldw	fp,0(sp)
   13ce0:	dec00104 	addi	sp,sp,4
   13ce4:	f800283a 	ret

00013ce8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   13ce8:	defffe04 	addi	sp,sp,-8
   13cec:	dfc00115 	stw	ra,4(sp)
   13cf0:	df000015 	stw	fp,0(sp)
   13cf4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   13cf8:	00800074 	movhi	r2,1
   13cfc:	109bd904 	addi	r2,r2,28516
   13d00:	10800017 	ldw	r2,0(r2)
   13d04:	10000526 	beq	r2,zero,13d1c <alt_get_errno+0x34>
   13d08:	00800074 	movhi	r2,1
   13d0c:	109bd904 	addi	r2,r2,28516
   13d10:	10800017 	ldw	r2,0(r2)
   13d14:	103ee83a 	callr	r2
   13d18:	00000206 	br	13d24 <alt_get_errno+0x3c>
   13d1c:	008000b4 	movhi	r2,2
   13d20:	10a2d804 	addi	r2,r2,-29856
}
   13d24:	e037883a 	mov	sp,fp
   13d28:	dfc00117 	ldw	ra,4(sp)
   13d2c:	df000017 	ldw	fp,0(sp)
   13d30:	dec00204 	addi	sp,sp,8
   13d34:	f800283a 	ret

00013d38 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   13d38:	defffa04 	addi	sp,sp,-24
   13d3c:	dfc00515 	stw	ra,20(sp)
   13d40:	df000415 	stw	fp,16(sp)
   13d44:	df000404 	addi	fp,sp,16
   13d48:	e13ffe15 	stw	r4,-8(fp)
   13d4c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   13d50:	e0bffe17 	ldw	r2,-8(fp)
   13d54:	10000326 	beq	r2,zero,13d64 <alt_dev_llist_insert+0x2c>
   13d58:	e0bffe17 	ldw	r2,-8(fp)
   13d5c:	10800217 	ldw	r2,8(r2)
   13d60:	1000051e 	bne	r2,zero,13d78 <alt_dev_llist_insert+0x40>
  {
    ALT_ERRNO = EINVAL;
   13d64:	0013ce80 	call	13ce8 <alt_get_errno>
   13d68:	00c00584 	movi	r3,22
   13d6c:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
   13d70:	00bffa84 	movi	r2,-22
   13d74:	00001306 	br	13dc4 <alt_dev_llist_insert+0x8c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   13d78:	e0bffe17 	ldw	r2,-8(fp)
   13d7c:	e0ffff17 	ldw	r3,-4(fp)
   13d80:	e0fffc15 	stw	r3,-16(fp)
   13d84:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   13d88:	e0bffd17 	ldw	r2,-12(fp)
   13d8c:	e0fffc17 	ldw	r3,-16(fp)
   13d90:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   13d94:	e0bffc17 	ldw	r2,-16(fp)
   13d98:	10c00017 	ldw	r3,0(r2)
   13d9c:	e0bffd17 	ldw	r2,-12(fp)
   13da0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   13da4:	e0bffc17 	ldw	r2,-16(fp)
   13da8:	10800017 	ldw	r2,0(r2)
   13dac:	e0fffd17 	ldw	r3,-12(fp)
   13db0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   13db4:	e0bffc17 	ldw	r2,-16(fp)
   13db8:	e0fffd17 	ldw	r3,-12(fp)
   13dbc:	10c00015 	stw	r3,0(r2)

  return 0;  
   13dc0:	0005883a 	mov	r2,zero
}
   13dc4:	e037883a 	mov	sp,fp
   13dc8:	dfc00117 	ldw	ra,4(sp)
   13dcc:	df000017 	ldw	fp,0(sp)
   13dd0:	dec00204 	addi	sp,sp,8
   13dd4:	f800283a 	ret

00013dd8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   13dd8:	defffd04 	addi	sp,sp,-12
   13ddc:	dfc00215 	stw	ra,8(sp)
   13de0:	df000115 	stw	fp,4(sp)
   13de4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   13de8:	00800074 	movhi	r2,1
   13dec:	10938304 	addi	r2,r2,19980
   13df0:	e0bfff15 	stw	r2,-4(fp)
   13df4:	00000606 	br	13e10 <_do_ctors+0x38>
        (*ctor) (); 
   13df8:	e0bfff17 	ldw	r2,-4(fp)
   13dfc:	10800017 	ldw	r2,0(r2)
   13e00:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   13e04:	e0bfff17 	ldw	r2,-4(fp)
   13e08:	10bfff04 	addi	r2,r2,-4
   13e0c:	e0bfff15 	stw	r2,-4(fp)
   13e10:	e0ffff17 	ldw	r3,-4(fp)
   13e14:	00800074 	movhi	r2,1
   13e18:	10938404 	addi	r2,r2,19984
   13e1c:	18bff62e 	bgeu	r3,r2,13df8 <__alt_data_end+0xfe013df8>
        (*ctor) (); 
}
   13e20:	e037883a 	mov	sp,fp
   13e24:	dfc00117 	ldw	ra,4(sp)
   13e28:	df000017 	ldw	fp,0(sp)
   13e2c:	dec00204 	addi	sp,sp,8
   13e30:	f800283a 	ret

00013e34 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   13e34:	defffd04 	addi	sp,sp,-12
   13e38:	dfc00215 	stw	ra,8(sp)
   13e3c:	df000115 	stw	fp,4(sp)
   13e40:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   13e44:	00800074 	movhi	r2,1
   13e48:	10938304 	addi	r2,r2,19980
   13e4c:	e0bfff15 	stw	r2,-4(fp)
   13e50:	00000606 	br	13e6c <_do_dtors+0x38>
        (*dtor) (); 
   13e54:	e0bfff17 	ldw	r2,-4(fp)
   13e58:	10800017 	ldw	r2,0(r2)
   13e5c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   13e60:	e0bfff17 	ldw	r2,-4(fp)
   13e64:	10bfff04 	addi	r2,r2,-4
   13e68:	e0bfff15 	stw	r2,-4(fp)
   13e6c:	e0ffff17 	ldw	r3,-4(fp)
   13e70:	00800074 	movhi	r2,1
   13e74:	10938404 	addi	r2,r2,19984
   13e78:	18bff62e 	bgeu	r3,r2,13e54 <__alt_data_end+0xfe013e54>
        (*dtor) (); 
}
   13e7c:	e037883a 	mov	sp,fp
   13e80:	dfc00117 	ldw	ra,4(sp)
   13e84:	df000017 	ldw	fp,0(sp)
   13e88:	dec00204 	addi	sp,sp,8
   13e8c:	f800283a 	ret

00013e90 <alt_fs_reg>:
 * A return value of zero indicates success. A negative return value indicates
 * failure. 
 */
 
int alt_fs_reg (alt_dev* dev)
{
   13e90:	defffc04 	addi	sp,sp,-16
   13e94:	df000315 	stw	fp,12(sp)
   13e98:	df000304 	addi	fp,sp,12
   13e9c:	e13fff15 	stw	r4,-4(fp)
  /*
   * check that the device has a name.
   */

  if (!dev->name)
   13ea0:	e0bfff17 	ldw	r2,-4(fp)
   13ea4:	10800217 	ldw	r2,8(r2)
   13ea8:	1000021e 	bne	r2,zero,13eb4 <alt_fs_reg+0x24>
  {
    return -ENODEV;
   13eac:	00bffb44 	movi	r2,-19
   13eb0:	00001406 	br	13f04 <alt_fs_reg+0x74>
  
  /*
   * register the file system.
   */

  alt_llist_insert(&alt_fs_list, &dev->llist);
   13eb4:	e0bfff17 	ldw	r2,-4(fp)
   13eb8:	00c00074 	movhi	r3,1
   13ebc:	18dbd404 	addi	r3,r3,28496
   13ec0:	e0fffd15 	stw	r3,-12(fp)
   13ec4:	e0bffe15 	stw	r2,-8(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   13ec8:	e0bffe17 	ldw	r2,-8(fp)
   13ecc:	e0fffd17 	ldw	r3,-12(fp)
   13ed0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   13ed4:	e0bffd17 	ldw	r2,-12(fp)
   13ed8:	10c00017 	ldw	r3,0(r2)
   13edc:	e0bffe17 	ldw	r2,-8(fp)
   13ee0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   13ee4:	e0bffd17 	ldw	r2,-12(fp)
   13ee8:	10800017 	ldw	r2,0(r2)
   13eec:	e0fffe17 	ldw	r3,-8(fp)
   13ef0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   13ef4:	e0bffd17 	ldw	r2,-12(fp)
   13ef8:	e0fffe17 	ldw	r3,-8(fp)
   13efc:	10c00015 	stw	r3,0(r2)

  return 0;
   13f00:	0005883a 	mov	r2,zero
} 
   13f04:	e037883a 	mov	sp,fp
   13f08:	df000017 	ldw	fp,0(sp)
   13f0c:	dec00104 	addi	sp,sp,4
   13f10:	f800283a 	ret

00013f14 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   13f14:	defffe04 	addi	sp,sp,-8
   13f18:	dfc00115 	stw	ra,4(sp)
   13f1c:	df000015 	stw	fp,0(sp)
   13f20:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   13f24:	0009883a 	mov	r4,zero
   13f28:	01440004 	movi	r5,4096
   13f2c:	00149c80 	call	149c8 <alt_icache_flush>
#endif
}
   13f30:	e037883a 	mov	sp,fp
   13f34:	dfc00117 	ldw	ra,4(sp)
   13f38:	df000017 	ldw	fp,0(sp)
   13f3c:	dec00204 	addi	sp,sp,8
   13f40:	f800283a 	ret

00013f44 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   13f44:	defff904 	addi	sp,sp,-28
   13f48:	dfc00615 	stw	ra,24(sp)
   13f4c:	df000515 	stw	fp,20(sp)
   13f50:	df000504 	addi	fp,sp,20
   13f54:	e13ffc15 	stw	r4,-16(fp)
   13f58:	e17ffd15 	stw	r5,-12(fp)
   13f5c:	e1bffe15 	stw	r6,-8(fp)
   13f60:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   13f64:	e0800217 	ldw	r2,8(fp)
   13f68:	d8800015 	stw	r2,0(sp)
   13f6c:	e13ffc17 	ldw	r4,-16(fp)
   13f70:	e17ffd17 	ldw	r5,-12(fp)
   13f74:	e1bffe17 	ldw	r6,-8(fp)
   13f78:	e1ffff17 	ldw	r7,-4(fp)
   13f7c:	001411c0 	call	1411c <alt_iic_isr_register>
}  
   13f80:	e037883a 	mov	sp,fp
   13f84:	dfc00117 	ldw	ra,4(sp)
   13f88:	df000017 	ldw	fp,0(sp)
   13f8c:	dec00204 	addi	sp,sp,8
   13f90:	f800283a 	ret

00013f94 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   13f94:	defff904 	addi	sp,sp,-28
   13f98:	df000615 	stw	fp,24(sp)
   13f9c:	df000604 	addi	fp,sp,24
   13fa0:	e13ffe15 	stw	r4,-8(fp)
   13fa4:	e17fff15 	stw	r5,-4(fp)
   13fa8:	e0bfff17 	ldw	r2,-4(fp)
   13fac:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   13fb0:	0005303a 	rdctl	r2,status
   13fb4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   13fb8:	e0fffb17 	ldw	r3,-20(fp)
   13fbc:	00bfff84 	movi	r2,-2
   13fc0:	1884703a 	and	r2,r3,r2
   13fc4:	1001703a 	wrctl	status,r2
  
  return context;
   13fc8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   13fcc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   13fd0:	e0bffa17 	ldw	r2,-24(fp)
   13fd4:	00c00044 	movi	r3,1
   13fd8:	1884983a 	sll	r2,r3,r2
   13fdc:	1007883a 	mov	r3,r2
   13fe0:	008000b4 	movhi	r2,2
   13fe4:	10a2dc04 	addi	r2,r2,-29840
   13fe8:	10800017 	ldw	r2,0(r2)
   13fec:	1886b03a 	or	r3,r3,r2
   13ff0:	008000b4 	movhi	r2,2
   13ff4:	10a2dc04 	addi	r2,r2,-29840
   13ff8:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   13ffc:	008000b4 	movhi	r2,2
   14000:	10a2dc04 	addi	r2,r2,-29840
   14004:	10800017 	ldw	r2,0(r2)
   14008:	100170fa 	wrctl	ienable,r2
   1400c:	e0bffc17 	ldw	r2,-16(fp)
   14010:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   14014:	e0bffd17 	ldw	r2,-12(fp)
   14018:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   1401c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   14020:	e037883a 	mov	sp,fp
   14024:	df000017 	ldw	fp,0(sp)
   14028:	dec00104 	addi	sp,sp,4
   1402c:	f800283a 	ret

00014030 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   14030:	defff904 	addi	sp,sp,-28
   14034:	df000615 	stw	fp,24(sp)
   14038:	df000604 	addi	fp,sp,24
   1403c:	e13ffe15 	stw	r4,-8(fp)
   14040:	e17fff15 	stw	r5,-4(fp)
   14044:	e0bfff17 	ldw	r2,-4(fp)
   14048:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1404c:	0005303a 	rdctl	r2,status
   14050:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   14054:	e0fffb17 	ldw	r3,-20(fp)
   14058:	00bfff84 	movi	r2,-2
   1405c:	1884703a 	and	r2,r3,r2
   14060:	1001703a 	wrctl	status,r2
  
  return context;
   14064:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   14068:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   1406c:	e0bffa17 	ldw	r2,-24(fp)
   14070:	00c00044 	movi	r3,1
   14074:	1884983a 	sll	r2,r3,r2
   14078:	0084303a 	nor	r2,zero,r2
   1407c:	1007883a 	mov	r3,r2
   14080:	008000b4 	movhi	r2,2
   14084:	10a2dc04 	addi	r2,r2,-29840
   14088:	10800017 	ldw	r2,0(r2)
   1408c:	1886703a 	and	r3,r3,r2
   14090:	008000b4 	movhi	r2,2
   14094:	10a2dc04 	addi	r2,r2,-29840
   14098:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   1409c:	008000b4 	movhi	r2,2
   140a0:	10a2dc04 	addi	r2,r2,-29840
   140a4:	10800017 	ldw	r2,0(r2)
   140a8:	100170fa 	wrctl	ienable,r2
   140ac:	e0bffc17 	ldw	r2,-16(fp)
   140b0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   140b4:	e0bffd17 	ldw	r2,-12(fp)
   140b8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   140bc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   140c0:	e037883a 	mov	sp,fp
   140c4:	df000017 	ldw	fp,0(sp)
   140c8:	dec00104 	addi	sp,sp,4
   140cc:	f800283a 	ret

000140d0 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   140d0:	defffc04 	addi	sp,sp,-16
   140d4:	df000315 	stw	fp,12(sp)
   140d8:	df000304 	addi	fp,sp,12
   140dc:	e13ffe15 	stw	r4,-8(fp)
   140e0:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   140e4:	000530fa 	rdctl	r2,ienable
   140e8:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   140ec:	e0bfff17 	ldw	r2,-4(fp)
   140f0:	00c00044 	movi	r3,1
   140f4:	1884983a 	sll	r2,r3,r2
   140f8:	1007883a 	mov	r3,r2
   140fc:	e0bffd17 	ldw	r2,-12(fp)
   14100:	1884703a 	and	r2,r3,r2
   14104:	1004c03a 	cmpne	r2,r2,zero
   14108:	10803fcc 	andi	r2,r2,255
}
   1410c:	e037883a 	mov	sp,fp
   14110:	df000017 	ldw	fp,0(sp)
   14114:	dec00104 	addi	sp,sp,4
   14118:	f800283a 	ret

0001411c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   1411c:	defff504 	addi	sp,sp,-44
   14120:	dfc00a15 	stw	ra,40(sp)
   14124:	df000915 	stw	fp,36(sp)
   14128:	df000904 	addi	fp,sp,36
   1412c:	e13ffc15 	stw	r4,-16(fp)
   14130:	e17ffd15 	stw	r5,-12(fp)
   14134:	e1bffe15 	stw	r6,-8(fp)
   14138:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   1413c:	00bffa84 	movi	r2,-22
   14140:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   14144:	e0bffd17 	ldw	r2,-12(fp)
   14148:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   1414c:	e0bff817 	ldw	r2,-32(fp)
   14150:	10800808 	cmpgei	r2,r2,32
   14154:	1000271e 	bne	r2,zero,141f4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   14158:	0005303a 	rdctl	r2,status
   1415c:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   14160:	e0fffa17 	ldw	r3,-24(fp)
   14164:	00bfff84 	movi	r2,-2
   14168:	1884703a 	and	r2,r3,r2
   1416c:	1001703a 	wrctl	status,r2
  
  return context;
   14170:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   14174:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
   14178:	00c000b4 	movhi	r3,2
   1417c:	18e32904 	addi	r3,r3,-29532
   14180:	e0bff817 	ldw	r2,-32(fp)
   14184:	100490fa 	slli	r2,r2,3
   14188:	1885883a 	add	r2,r3,r2
   1418c:	e0fffe17 	ldw	r3,-8(fp)
   14190:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   14194:	00c000b4 	movhi	r3,2
   14198:	18e32904 	addi	r3,r3,-29532
   1419c:	e0bff817 	ldw	r2,-32(fp)
   141a0:	100490fa 	slli	r2,r2,3
   141a4:	1885883a 	add	r2,r3,r2
   141a8:	10800104 	addi	r2,r2,4
   141ac:	e0ffff17 	ldw	r3,-4(fp)
   141b0:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   141b4:	e0bffe17 	ldw	r2,-8(fp)
   141b8:	10000526 	beq	r2,zero,141d0 <alt_iic_isr_register+0xb4>
   141bc:	e0bff817 	ldw	r2,-32(fp)
   141c0:	e13ffc17 	ldw	r4,-16(fp)
   141c4:	100b883a 	mov	r5,r2
   141c8:	0013f940 	call	13f94 <alt_ic_irq_enable>
   141cc:	00000406 	br	141e0 <alt_iic_isr_register+0xc4>
   141d0:	e0bff817 	ldw	r2,-32(fp)
   141d4:	e13ffc17 	ldw	r4,-16(fp)
   141d8:	100b883a 	mov	r5,r2
   141dc:	00140300 	call	14030 <alt_ic_irq_disable>
   141e0:	e0bff715 	stw	r2,-36(fp)
   141e4:	e0bff917 	ldw	r2,-28(fp)
   141e8:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   141ec:	e0bffb17 	ldw	r2,-20(fp)
   141f0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   141f4:	e0bff717 	ldw	r2,-36(fp)
}
   141f8:	e037883a 	mov	sp,fp
   141fc:	dfc00117 	ldw	ra,4(sp)
   14200:	df000017 	ldw	fp,0(sp)
   14204:	dec00204 	addi	sp,sp,8
   14208:	f800283a 	ret

0001420c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   1420c:	defff904 	addi	sp,sp,-28
   14210:	dfc00615 	stw	ra,24(sp)
   14214:	df000515 	stw	fp,20(sp)
   14218:	df000504 	addi	fp,sp,20
   1421c:	e13ffc15 	stw	r4,-16(fp)
   14220:	e17ffd15 	stw	r5,-12(fp)
   14224:	e1bffe15 	stw	r6,-8(fp)
   14228:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   1422c:	e13ffd17 	ldw	r4,-12(fp)
   14230:	e17ffe17 	ldw	r5,-8(fp)
   14234:	e1bfff17 	ldw	r6,-4(fp)
   14238:	00144600 	call	14460 <open>
   1423c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   14240:	e0bffb17 	ldw	r2,-20(fp)
   14244:	10001c16 	blt	r2,zero,142b8 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   14248:	00c00074 	movhi	r3,1
   1424c:	18d74b04 	addi	r3,r3,23852
   14250:	e0bffb17 	ldw	r2,-20(fp)
   14254:	10800324 	muli	r2,r2,12
   14258:	1885883a 	add	r2,r3,r2
   1425c:	10c00017 	ldw	r3,0(r2)
   14260:	e0bffc17 	ldw	r2,-16(fp)
   14264:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   14268:	00c00074 	movhi	r3,1
   1426c:	18d74b04 	addi	r3,r3,23852
   14270:	e0bffb17 	ldw	r2,-20(fp)
   14274:	10800324 	muli	r2,r2,12
   14278:	1885883a 	add	r2,r3,r2
   1427c:	10800104 	addi	r2,r2,4
   14280:	10c00017 	ldw	r3,0(r2)
   14284:	e0bffc17 	ldw	r2,-16(fp)
   14288:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   1428c:	00c00074 	movhi	r3,1
   14290:	18d74b04 	addi	r3,r3,23852
   14294:	e0bffb17 	ldw	r2,-20(fp)
   14298:	10800324 	muli	r2,r2,12
   1429c:	1885883a 	add	r2,r3,r2
   142a0:	10800204 	addi	r2,r2,8
   142a4:	10c00017 	ldw	r3,0(r2)
   142a8:	e0bffc17 	ldw	r2,-16(fp)
   142ac:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   142b0:	e13ffb17 	ldw	r4,-20(fp)
   142b4:	00128480 	call	12848 <alt_release_fd>
  }
} 
   142b8:	e037883a 	mov	sp,fp
   142bc:	dfc00117 	ldw	ra,4(sp)
   142c0:	df000017 	ldw	fp,0(sp)
   142c4:	dec00204 	addi	sp,sp,8
   142c8:	f800283a 	ret

000142cc <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   142cc:	defffb04 	addi	sp,sp,-20
   142d0:	dfc00415 	stw	ra,16(sp)
   142d4:	df000315 	stw	fp,12(sp)
   142d8:	df000304 	addi	fp,sp,12
   142dc:	e13ffd15 	stw	r4,-12(fp)
   142e0:	e17ffe15 	stw	r5,-8(fp)
   142e4:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   142e8:	01000074 	movhi	r4,1
   142ec:	21174e04 	addi	r4,r4,23864
   142f0:	e17ffd17 	ldw	r5,-12(fp)
   142f4:	01800044 	movi	r6,1
   142f8:	01c07fc4 	movi	r7,511
   142fc:	001420c0 	call	1420c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   14300:	01000074 	movhi	r4,1
   14304:	21174b04 	addi	r4,r4,23852
   14308:	e17ffe17 	ldw	r5,-8(fp)
   1430c:	000d883a 	mov	r6,zero
   14310:	01c07fc4 	movi	r7,511
   14314:	001420c0 	call	1420c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   14318:	01000074 	movhi	r4,1
   1431c:	21175104 	addi	r4,r4,23876
   14320:	e17fff17 	ldw	r5,-4(fp)
   14324:	01800044 	movi	r6,1
   14328:	01c07fc4 	movi	r7,511
   1432c:	001420c0 	call	1420c <alt_open_fd>
}  
   14330:	e037883a 	mov	sp,fp
   14334:	dfc00117 	ldw	ra,4(sp)
   14338:	df000017 	ldw	fp,0(sp)
   1433c:	dec00204 	addi	sp,sp,8
   14340:	f800283a 	ret

00014344 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   14344:	defffe04 	addi	sp,sp,-8
   14348:	dfc00115 	stw	ra,4(sp)
   1434c:	df000015 	stw	fp,0(sp)
   14350:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   14354:	00800074 	movhi	r2,1
   14358:	109bd904 	addi	r2,r2,28516
   1435c:	10800017 	ldw	r2,0(r2)
   14360:	10000526 	beq	r2,zero,14378 <alt_get_errno+0x34>
   14364:	00800074 	movhi	r2,1
   14368:	109bd904 	addi	r2,r2,28516
   1436c:	10800017 	ldw	r2,0(r2)
   14370:	103ee83a 	callr	r2
   14374:	00000206 	br	14380 <alt_get_errno+0x3c>
   14378:	008000b4 	movhi	r2,2
   1437c:	10a2d804 	addi	r2,r2,-29856
}
   14380:	e037883a 	mov	sp,fp
   14384:	dfc00117 	ldw	ra,4(sp)
   14388:	df000017 	ldw	fp,0(sp)
   1438c:	dec00204 	addi	sp,sp,8
   14390:	f800283a 	ret

00014394 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   14394:	defffd04 	addi	sp,sp,-12
   14398:	df000215 	stw	fp,8(sp)
   1439c:	df000204 	addi	fp,sp,8
   143a0:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   143a4:	e0bfff17 	ldw	r2,-4(fp)
   143a8:	10800217 	ldw	r2,8(r2)
   143ac:	10d00034 	orhi	r3,r2,16384
   143b0:	e0bfff17 	ldw	r2,-4(fp)
   143b4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   143b8:	e03ffe15 	stw	zero,-8(fp)
   143bc:	00001d06 	br	14434 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   143c0:	00c00074 	movhi	r3,1
   143c4:	18d74b04 	addi	r3,r3,23852
   143c8:	e0bffe17 	ldw	r2,-8(fp)
   143cc:	10800324 	muli	r2,r2,12
   143d0:	1885883a 	add	r2,r3,r2
   143d4:	10c00017 	ldw	r3,0(r2)
   143d8:	e0bfff17 	ldw	r2,-4(fp)
   143dc:	10800017 	ldw	r2,0(r2)
   143e0:	1880111e 	bne	r3,r2,14428 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   143e4:	00c00074 	movhi	r3,1
   143e8:	18d74b04 	addi	r3,r3,23852
   143ec:	e0bffe17 	ldw	r2,-8(fp)
   143f0:	10800324 	muli	r2,r2,12
   143f4:	1885883a 	add	r2,r3,r2
   143f8:	10800204 	addi	r2,r2,8
   143fc:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   14400:	1000090e 	bge	r2,zero,14428 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   14404:	e0bffe17 	ldw	r2,-8(fp)
   14408:	10c00324 	muli	r3,r2,12
   1440c:	00800074 	movhi	r2,1
   14410:	10974b04 	addi	r2,r2,23852
   14414:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   14418:	e0bfff17 	ldw	r2,-4(fp)
   1441c:	18800226 	beq	r3,r2,14428 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   14420:	00bffcc4 	movi	r2,-13
   14424:	00000a06 	br	14450 <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   14428:	e0bffe17 	ldw	r2,-8(fp)
   1442c:	10800044 	addi	r2,r2,1
   14430:	e0bffe15 	stw	r2,-8(fp)
   14434:	00800074 	movhi	r2,1
   14438:	109bd804 	addi	r2,r2,28512
   1443c:	10800017 	ldw	r2,0(r2)
   14440:	1007883a 	mov	r3,r2
   14444:	e0bffe17 	ldw	r2,-8(fp)
   14448:	18bfdd2e 	bgeu	r3,r2,143c0 <__alt_data_end+0xfe0143c0>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   1444c:	0005883a 	mov	r2,zero
}
   14450:	e037883a 	mov	sp,fp
   14454:	df000017 	ldw	fp,0(sp)
   14458:	dec00104 	addi	sp,sp,4
   1445c:	f800283a 	ret

00014460 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   14460:	defff604 	addi	sp,sp,-40
   14464:	dfc00915 	stw	ra,36(sp)
   14468:	df000815 	stw	fp,32(sp)
   1446c:	df000804 	addi	fp,sp,32
   14470:	e13ffd15 	stw	r4,-12(fp)
   14474:	e17ffe15 	stw	r5,-8(fp)
   14478:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   1447c:	00bfffc4 	movi	r2,-1
   14480:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   14484:	00bffb44 	movi	r2,-19
   14488:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   1448c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   14490:	e13ffd17 	ldw	r4,-12(fp)
   14494:	01400074 	movhi	r5,1
   14498:	295bd604 	addi	r5,r5,28504
   1449c:	00147700 	call	14770 <alt_find_dev>
   144a0:	e0bff815 	stw	r2,-32(fp)
   144a4:	e0bff817 	ldw	r2,-32(fp)
   144a8:	1000051e 	bne	r2,zero,144c0 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   144ac:	e13ffd17 	ldw	r4,-12(fp)
   144b0:	00148000 	call	14800 <alt_find_file>
   144b4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   144b8:	00800044 	movi	r2,1
   144bc:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   144c0:	e0bff817 	ldw	r2,-32(fp)
   144c4:	10002926 	beq	r2,zero,1456c <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
   144c8:	e13ff817 	ldw	r4,-32(fp)
   144cc:	00149140 	call	14914 <alt_get_fd>
   144d0:	e0bff915 	stw	r2,-28(fp)
   144d4:	e0bff917 	ldw	r2,-28(fp)
   144d8:	1000030e 	bge	r2,zero,144e8 <open+0x88>
    {
      status = index;
   144dc:	e0bff917 	ldw	r2,-28(fp)
   144e0:	e0bffa15 	stw	r2,-24(fp)
   144e4:	00002306 	br	14574 <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
   144e8:	e0bff917 	ldw	r2,-28(fp)
   144ec:	10c00324 	muli	r3,r2,12
   144f0:	00800074 	movhi	r2,1
   144f4:	10974b04 	addi	r2,r2,23852
   144f8:	1885883a 	add	r2,r3,r2
   144fc:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   14500:	e0fffe17 	ldw	r3,-8(fp)
   14504:	00900034 	movhi	r2,16384
   14508:	10bfffc4 	addi	r2,r2,-1
   1450c:	1886703a 	and	r3,r3,r2
   14510:	e0bffc17 	ldw	r2,-16(fp)
   14514:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   14518:	e0bffb17 	ldw	r2,-20(fp)
   1451c:	1000051e 	bne	r2,zero,14534 <open+0xd4>
   14520:	e13ffc17 	ldw	r4,-16(fp)
   14524:	00143940 	call	14394 <alt_file_locked>
   14528:	e0bffa15 	stw	r2,-24(fp)
   1452c:	e0bffa17 	ldw	r2,-24(fp)
   14530:	10001016 	blt	r2,zero,14574 <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   14534:	e0bff817 	ldw	r2,-32(fp)
   14538:	10800317 	ldw	r2,12(r2)
   1453c:	10000826 	beq	r2,zero,14560 <open+0x100>
   14540:	e0bff817 	ldw	r2,-32(fp)
   14544:	10800317 	ldw	r2,12(r2)
   14548:	e13ffc17 	ldw	r4,-16(fp)
   1454c:	e17ffd17 	ldw	r5,-12(fp)
   14550:	e1bffe17 	ldw	r6,-8(fp)
   14554:	e1ffff17 	ldw	r7,-4(fp)
   14558:	103ee83a 	callr	r2
   1455c:	00000106 	br	14564 <open+0x104>
   14560:	0005883a 	mov	r2,zero
   14564:	e0bffa15 	stw	r2,-24(fp)
   14568:	00000206 	br	14574 <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
   1456c:	00bffb44 	movi	r2,-19
   14570:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   14574:	e0bffa17 	ldw	r2,-24(fp)
   14578:	1000080e 	bge	r2,zero,1459c <open+0x13c>
  {
    alt_release_fd (index);  
   1457c:	e13ff917 	ldw	r4,-28(fp)
   14580:	00128480 	call	12848 <alt_release_fd>
    ALT_ERRNO = -status;
   14584:	00143440 	call	14344 <alt_get_errno>
   14588:	e0fffa17 	ldw	r3,-24(fp)
   1458c:	00c7c83a 	sub	r3,zero,r3
   14590:	10c00015 	stw	r3,0(r2)
    return -1;
   14594:	00bfffc4 	movi	r2,-1
   14598:	00000106 	br	145a0 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   1459c:	e0bff917 	ldw	r2,-28(fp)
}
   145a0:	e037883a 	mov	sp,fp
   145a4:	dfc00117 	ldw	ra,4(sp)
   145a8:	df000017 	ldw	fp,0(sp)
   145ac:	dec00204 	addi	sp,sp,8
   145b0:	f800283a 	ret

000145b4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   145b4:	defffa04 	addi	sp,sp,-24
   145b8:	df000515 	stw	fp,20(sp)
   145bc:	df000504 	addi	fp,sp,20
   145c0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   145c4:	0005303a 	rdctl	r2,status
   145c8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   145cc:	e0fffc17 	ldw	r3,-16(fp)
   145d0:	00bfff84 	movi	r2,-2
   145d4:	1884703a 	and	r2,r3,r2
   145d8:	1001703a 	wrctl	status,r2
  
  return context;
   145dc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   145e0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   145e4:	e0bfff17 	ldw	r2,-4(fp)
   145e8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   145ec:	e0bffd17 	ldw	r2,-12(fp)
   145f0:	10800017 	ldw	r2,0(r2)
   145f4:	e0fffd17 	ldw	r3,-12(fp)
   145f8:	18c00117 	ldw	r3,4(r3)
   145fc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   14600:	e0bffd17 	ldw	r2,-12(fp)
   14604:	10800117 	ldw	r2,4(r2)
   14608:	e0fffd17 	ldw	r3,-12(fp)
   1460c:	18c00017 	ldw	r3,0(r3)
   14610:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   14614:	e0bffd17 	ldw	r2,-12(fp)
   14618:	e0fffd17 	ldw	r3,-12(fp)
   1461c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   14620:	e0bffd17 	ldw	r2,-12(fp)
   14624:	e0fffd17 	ldw	r3,-12(fp)
   14628:	10c00015 	stw	r3,0(r2)
   1462c:	e0bffb17 	ldw	r2,-20(fp)
   14630:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   14634:	e0bffe17 	ldw	r2,-8(fp)
   14638:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   1463c:	e037883a 	mov	sp,fp
   14640:	df000017 	ldw	fp,0(sp)
   14644:	dec00104 	addi	sp,sp,4
   14648:	f800283a 	ret

0001464c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   1464c:	defffb04 	addi	sp,sp,-20
   14650:	dfc00415 	stw	ra,16(sp)
   14654:	df000315 	stw	fp,12(sp)
   14658:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   1465c:	d0a02117 	ldw	r2,-32636(gp)
   14660:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   14664:	d0a71117 	ldw	r2,-25532(gp)
   14668:	10800044 	addi	r2,r2,1
   1466c:	d0a71115 	stw	r2,-25532(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   14670:	00002e06 	br	1472c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   14674:	e0bffd17 	ldw	r2,-12(fp)
   14678:	10800017 	ldw	r2,0(r2)
   1467c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   14680:	e0bffd17 	ldw	r2,-12(fp)
   14684:	10800403 	ldbu	r2,16(r2)
   14688:	10803fcc 	andi	r2,r2,255
   1468c:	10000426 	beq	r2,zero,146a0 <alt_tick+0x54>
   14690:	d0a71117 	ldw	r2,-25532(gp)
   14694:	1000021e 	bne	r2,zero,146a0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   14698:	e0bffd17 	ldw	r2,-12(fp)
   1469c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   146a0:	e0bffd17 	ldw	r2,-12(fp)
   146a4:	10800217 	ldw	r2,8(r2)
   146a8:	d0e71117 	ldw	r3,-25532(gp)
   146ac:	18801d36 	bltu	r3,r2,14724 <alt_tick+0xd8>
   146b0:	e0bffd17 	ldw	r2,-12(fp)
   146b4:	10800403 	ldbu	r2,16(r2)
   146b8:	10803fcc 	andi	r2,r2,255
   146bc:	1000191e 	bne	r2,zero,14724 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   146c0:	e0bffd17 	ldw	r2,-12(fp)
   146c4:	10800317 	ldw	r2,12(r2)
   146c8:	e0fffd17 	ldw	r3,-12(fp)
   146cc:	18c00517 	ldw	r3,20(r3)
   146d0:	1809883a 	mov	r4,r3
   146d4:	103ee83a 	callr	r2
   146d8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   146dc:	e0bfff17 	ldw	r2,-4(fp)
   146e0:	1000031e 	bne	r2,zero,146f0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   146e4:	e13ffd17 	ldw	r4,-12(fp)
   146e8:	00145b40 	call	145b4 <alt_alarm_stop>
   146ec:	00000d06 	br	14724 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   146f0:	e0bffd17 	ldw	r2,-12(fp)
   146f4:	10c00217 	ldw	r3,8(r2)
   146f8:	e0bfff17 	ldw	r2,-4(fp)
   146fc:	1887883a 	add	r3,r3,r2
   14700:	e0bffd17 	ldw	r2,-12(fp)
   14704:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   14708:	e0bffd17 	ldw	r2,-12(fp)
   1470c:	10c00217 	ldw	r3,8(r2)
   14710:	d0a71117 	ldw	r2,-25532(gp)
   14714:	1880032e 	bgeu	r3,r2,14724 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   14718:	e0bffd17 	ldw	r2,-12(fp)
   1471c:	00c00044 	movi	r3,1
   14720:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   14724:	e0bffe17 	ldw	r2,-8(fp)
   14728:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   1472c:	e0fffd17 	ldw	r3,-12(fp)
   14730:	d0a02104 	addi	r2,gp,-32636
   14734:	18bfcf1e 	bne	r3,r2,14674 <__alt_data_end+0xfe014674>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   14738:	0001883a 	nop
}
   1473c:	e037883a 	mov	sp,fp
   14740:	dfc00117 	ldw	ra,4(sp)
   14744:	df000017 	ldw	fp,0(sp)
   14748:	dec00204 	addi	sp,sp,8
   1474c:	f800283a 	ret

00014750 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
   14750:	deffff04 	addi	sp,sp,-4
   14754:	df000015 	stw	fp,0(sp)
   14758:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   1475c:	000170fa 	wrctl	ienable,zero
}
   14760:	e037883a 	mov	sp,fp
   14764:	df000017 	ldw	fp,0(sp)
   14768:	dec00104 	addi	sp,sp,4
   1476c:	f800283a 	ret

00014770 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   14770:	defffa04 	addi	sp,sp,-24
   14774:	dfc00515 	stw	ra,20(sp)
   14778:	df000415 	stw	fp,16(sp)
   1477c:	df000404 	addi	fp,sp,16
   14780:	e13ffe15 	stw	r4,-8(fp)
   14784:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   14788:	e0bfff17 	ldw	r2,-4(fp)
   1478c:	10800017 	ldw	r2,0(r2)
   14790:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   14794:	e13ffe17 	ldw	r4,-8(fp)
   14798:	00012640 	call	1264 <strlen>
   1479c:	10800044 	addi	r2,r2,1
   147a0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   147a4:	00000d06 	br	147dc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   147a8:	e0bffc17 	ldw	r2,-16(fp)
   147ac:	10c00217 	ldw	r3,8(r2)
   147b0:	e0bffd17 	ldw	r2,-12(fp)
   147b4:	1809883a 	mov	r4,r3
   147b8:	e17ffe17 	ldw	r5,-8(fp)
   147bc:	100d883a 	mov	r6,r2
   147c0:	0014aa00 	call	14aa0 <memcmp>
   147c4:	1000021e 	bne	r2,zero,147d0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   147c8:	e0bffc17 	ldw	r2,-16(fp)
   147cc:	00000706 	br	147ec <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   147d0:	e0bffc17 	ldw	r2,-16(fp)
   147d4:	10800017 	ldw	r2,0(r2)
   147d8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   147dc:	e0fffc17 	ldw	r3,-16(fp)
   147e0:	e0bfff17 	ldw	r2,-4(fp)
   147e4:	18bff01e 	bne	r3,r2,147a8 <__alt_data_end+0xfe0147a8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   147e8:	0005883a 	mov	r2,zero
}
   147ec:	e037883a 	mov	sp,fp
   147f0:	dfc00117 	ldw	ra,4(sp)
   147f4:	df000017 	ldw	fp,0(sp)
   147f8:	dec00204 	addi	sp,sp,8
   147fc:	f800283a 	ret

00014800 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   14800:	defffb04 	addi	sp,sp,-20
   14804:	dfc00415 	stw	ra,16(sp)
   14808:	df000315 	stw	fp,12(sp)
   1480c:	df000304 	addi	fp,sp,12
   14810:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   14814:	00800074 	movhi	r2,1
   14818:	109bd404 	addi	r2,r2,28496
   1481c:	10800017 	ldw	r2,0(r2)
   14820:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   14824:	00003106 	br	148ec <alt_find_file+0xec>
  {
    len = strlen(next->name);
   14828:	e0bffd17 	ldw	r2,-12(fp)
   1482c:	10800217 	ldw	r2,8(r2)
   14830:	1009883a 	mov	r4,r2
   14834:	00012640 	call	1264 <strlen>
   14838:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   1483c:	e0bffd17 	ldw	r2,-12(fp)
   14840:	10c00217 	ldw	r3,8(r2)
   14844:	e0bffe17 	ldw	r2,-8(fp)
   14848:	10bfffc4 	addi	r2,r2,-1
   1484c:	1885883a 	add	r2,r3,r2
   14850:	10800003 	ldbu	r2,0(r2)
   14854:	10803fcc 	andi	r2,r2,255
   14858:	1080201c 	xori	r2,r2,128
   1485c:	10bfe004 	addi	r2,r2,-128
   14860:	10800bd8 	cmpnei	r2,r2,47
   14864:	1000031e 	bne	r2,zero,14874 <alt_find_file+0x74>
    {
      len -= 1;
   14868:	e0bffe17 	ldw	r2,-8(fp)
   1486c:	10bfffc4 	addi	r2,r2,-1
   14870:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   14874:	e0bffe17 	ldw	r2,-8(fp)
   14878:	e0ffff17 	ldw	r3,-4(fp)
   1487c:	1885883a 	add	r2,r3,r2
   14880:	10800003 	ldbu	r2,0(r2)
   14884:	10803fcc 	andi	r2,r2,255
   14888:	1080201c 	xori	r2,r2,128
   1488c:	10bfe004 	addi	r2,r2,-128
   14890:	10800be0 	cmpeqi	r2,r2,47
   14894:	1000081e 	bne	r2,zero,148b8 <alt_find_file+0xb8>
   14898:	e0bffe17 	ldw	r2,-8(fp)
   1489c:	e0ffff17 	ldw	r3,-4(fp)
   148a0:	1885883a 	add	r2,r3,r2
   148a4:	10800003 	ldbu	r2,0(r2)
   148a8:	10803fcc 	andi	r2,r2,255
   148ac:	1080201c 	xori	r2,r2,128
   148b0:	10bfe004 	addi	r2,r2,-128
   148b4:	10000a1e 	bne	r2,zero,148e0 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
   148b8:	e0bffd17 	ldw	r2,-12(fp)
   148bc:	10c00217 	ldw	r3,8(r2)
   148c0:	e0bffe17 	ldw	r2,-8(fp)
   148c4:	1809883a 	mov	r4,r3
   148c8:	e17fff17 	ldw	r5,-4(fp)
   148cc:	100d883a 	mov	r6,r2
   148d0:	0014aa00 	call	14aa0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   148d4:	1000021e 	bne	r2,zero,148e0 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   148d8:	e0bffd17 	ldw	r2,-12(fp)
   148dc:	00000806 	br	14900 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
   148e0:	e0bffd17 	ldw	r2,-12(fp)
   148e4:	10800017 	ldw	r2,0(r2)
   148e8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   148ec:	e0fffd17 	ldw	r3,-12(fp)
   148f0:	00800074 	movhi	r2,1
   148f4:	109bd404 	addi	r2,r2,28496
   148f8:	18bfcb1e 	bne	r3,r2,14828 <__alt_data_end+0xfe014828>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   148fc:	0005883a 	mov	r2,zero
}
   14900:	e037883a 	mov	sp,fp
   14904:	dfc00117 	ldw	ra,4(sp)
   14908:	df000017 	ldw	fp,0(sp)
   1490c:	dec00204 	addi	sp,sp,8
   14910:	f800283a 	ret

00014914 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   14914:	defffc04 	addi	sp,sp,-16
   14918:	df000315 	stw	fp,12(sp)
   1491c:	df000304 	addi	fp,sp,12
   14920:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   14924:	00bffa04 	movi	r2,-24
   14928:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   1492c:	e03ffd15 	stw	zero,-12(fp)
   14930:	00001d06 	br	149a8 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
   14934:	00c00074 	movhi	r3,1
   14938:	18d74b04 	addi	r3,r3,23852
   1493c:	e0bffd17 	ldw	r2,-12(fp)
   14940:	10800324 	muli	r2,r2,12
   14944:	1885883a 	add	r2,r3,r2
   14948:	10800017 	ldw	r2,0(r2)
   1494c:	1000131e 	bne	r2,zero,1499c <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
   14950:	00c00074 	movhi	r3,1
   14954:	18d74b04 	addi	r3,r3,23852
   14958:	e0bffd17 	ldw	r2,-12(fp)
   1495c:	10800324 	muli	r2,r2,12
   14960:	1885883a 	add	r2,r3,r2
   14964:	e0ffff17 	ldw	r3,-4(fp)
   14968:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   1496c:	00800074 	movhi	r2,1
   14970:	109bd804 	addi	r2,r2,28512
   14974:	10c00017 	ldw	r3,0(r2)
   14978:	e0bffd17 	ldw	r2,-12(fp)
   1497c:	1880040e 	bge	r3,r2,14990 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
   14980:	00800074 	movhi	r2,1
   14984:	109bd804 	addi	r2,r2,28512
   14988:	e0fffd17 	ldw	r3,-12(fp)
   1498c:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
   14990:	e0bffd17 	ldw	r2,-12(fp)
   14994:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   14998:	00000606 	br	149b4 <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   1499c:	e0bffd17 	ldw	r2,-12(fp)
   149a0:	10800044 	addi	r2,r2,1
   149a4:	e0bffd15 	stw	r2,-12(fp)
   149a8:	e0bffd17 	ldw	r2,-12(fp)
   149ac:	10800810 	cmplti	r2,r2,32
   149b0:	103fe01e 	bne	r2,zero,14934 <__alt_data_end+0xfe014934>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   149b4:	e0bffe17 	ldw	r2,-8(fp)
}
   149b8:	e037883a 	mov	sp,fp
   149bc:	df000017 	ldw	fp,0(sp)
   149c0:	dec00104 	addi	sp,sp,4
   149c4:	f800283a 	ret

000149c8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   149c8:	defffb04 	addi	sp,sp,-20
   149cc:	df000415 	stw	fp,16(sp)
   149d0:	df000404 	addi	fp,sp,16
   149d4:	e13ffe15 	stw	r4,-8(fp)
   149d8:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   149dc:	e0bfff17 	ldw	r2,-4(fp)
   149e0:	10840070 	cmpltui	r2,r2,4097
   149e4:	1000021e 	bne	r2,zero,149f0 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   149e8:	00840004 	movi	r2,4096
   149ec:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   149f0:	e0fffe17 	ldw	r3,-8(fp)
   149f4:	e0bfff17 	ldw	r2,-4(fp)
   149f8:	1885883a 	add	r2,r3,r2
   149fc:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   14a00:	e0bffe17 	ldw	r2,-8(fp)
   14a04:	e0bffc15 	stw	r2,-16(fp)
   14a08:	00000506 	br	14a20 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   14a0c:	e0bffc17 	ldw	r2,-16(fp)
   14a10:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   14a14:	e0bffc17 	ldw	r2,-16(fp)
   14a18:	10800804 	addi	r2,r2,32
   14a1c:	e0bffc15 	stw	r2,-16(fp)
   14a20:	e0fffc17 	ldw	r3,-16(fp)
   14a24:	e0bffd17 	ldw	r2,-12(fp)
   14a28:	18bff836 	bltu	r3,r2,14a0c <__alt_data_end+0xfe014a0c>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   14a2c:	e0bffe17 	ldw	r2,-8(fp)
   14a30:	108007cc 	andi	r2,r2,31
   14a34:	10000226 	beq	r2,zero,14a40 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   14a38:	e0bffc17 	ldw	r2,-16(fp)
   14a3c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   14a40:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   14a44:	e037883a 	mov	sp,fp
   14a48:	df000017 	ldw	fp,0(sp)
   14a4c:	dec00104 	addi	sp,sp,4
   14a50:	f800283a 	ret

00014a54 <atexit>:
   14a54:	200b883a 	mov	r5,r4
   14a58:	000d883a 	mov	r6,zero
   14a5c:	0009883a 	mov	r4,zero
   14a60:	000f883a 	mov	r7,zero
   14a64:	0014b1c1 	jmpi	14b1c <__register_exitproc>

00014a68 <exit>:
   14a68:	defffe04 	addi	sp,sp,-8
   14a6c:	000b883a 	mov	r5,zero
   14a70:	dc000015 	stw	r16,0(sp)
   14a74:	dfc00115 	stw	ra,4(sp)
   14a78:	2021883a 	mov	r16,r4
   14a7c:	0014c380 	call	14c38 <__call_exitprocs>
   14a80:	00800074 	movhi	r2,1
   14a84:	109bcd04 	addi	r2,r2,28468
   14a88:	11000017 	ldw	r4,0(r2)
   14a8c:	20800f17 	ldw	r2,60(r4)
   14a90:	10000126 	beq	r2,zero,14a98 <exit+0x30>
   14a94:	103ee83a 	callr	r2
   14a98:	8009883a 	mov	r4,r16
   14a9c:	0014ddc0 	call	14ddc <_exit>

00014aa0 <memcmp>:
   14aa0:	01c000c4 	movi	r7,3
   14aa4:	3980192e 	bgeu	r7,r6,14b0c <memcmp+0x6c>
   14aa8:	2144b03a 	or	r2,r4,r5
   14aac:	11c4703a 	and	r2,r2,r7
   14ab0:	10000f26 	beq	r2,zero,14af0 <memcmp+0x50>
   14ab4:	21c00003 	ldbu	r7,0(r4)
   14ab8:	28800003 	ldbu	r2,0(r5)
   14abc:	3880151e 	bne	r7,r2,14b14 <memcmp+0x74>
   14ac0:	30ffff84 	addi	r3,r6,-2
   14ac4:	01bfffc4 	movi	r6,-1
   14ac8:	00000406 	br	14adc <memcmp+0x3c>
   14acc:	21c00003 	ldbu	r7,0(r4)
   14ad0:	28800003 	ldbu	r2,0(r5)
   14ad4:	18ffffc4 	addi	r3,r3,-1
   14ad8:	38800e1e 	bne	r7,r2,14b14 <memcmp+0x74>
   14adc:	21000044 	addi	r4,r4,1
   14ae0:	29400044 	addi	r5,r5,1
   14ae4:	19bff91e 	bne	r3,r6,14acc <__alt_data_end+0xfe014acc>
   14ae8:	0005883a 	mov	r2,zero
   14aec:	f800283a 	ret
   14af0:	20c00017 	ldw	r3,0(r4)
   14af4:	28800017 	ldw	r2,0(r5)
   14af8:	1880041e 	bne	r3,r2,14b0c <memcmp+0x6c>
   14afc:	31bfff04 	addi	r6,r6,-4
   14b00:	21000104 	addi	r4,r4,4
   14b04:	29400104 	addi	r5,r5,4
   14b08:	39bff936 	bltu	r7,r6,14af0 <__alt_data_end+0xfe014af0>
   14b0c:	303fe91e 	bne	r6,zero,14ab4 <__alt_data_end+0xfe014ab4>
   14b10:	003ff506 	br	14ae8 <__alt_data_end+0xfe014ae8>
   14b14:	3885c83a 	sub	r2,r7,r2
   14b18:	f800283a 	ret

00014b1c <__register_exitproc>:
   14b1c:	defffa04 	addi	sp,sp,-24
   14b20:	00800074 	movhi	r2,1
   14b24:	109bcd04 	addi	r2,r2,28468
   14b28:	dc000315 	stw	r16,12(sp)
   14b2c:	14000017 	ldw	r16,0(r2)
   14b30:	dc400415 	stw	r17,16(sp)
   14b34:	dfc00515 	stw	ra,20(sp)
   14b38:	80805217 	ldw	r2,328(r16)
   14b3c:	2023883a 	mov	r17,r4
   14b40:	10003a26 	beq	r2,zero,14c2c <__register_exitproc+0x110>
   14b44:	10c00117 	ldw	r3,4(r2)
   14b48:	020007c4 	movi	r8,31
   14b4c:	40c0190e 	bge	r8,r3,14bb4 <__register_exitproc+0x98>
   14b50:	00800034 	movhi	r2,0
   14b54:	10800004 	addi	r2,r2,0
   14b58:	1000061e 	bne	r2,zero,14b74 <__register_exitproc+0x58>
   14b5c:	00bfffc4 	movi	r2,-1
   14b60:	dfc00517 	ldw	ra,20(sp)
   14b64:	dc400417 	ldw	r17,16(sp)
   14b68:	dc000317 	ldw	r16,12(sp)
   14b6c:	dec00604 	addi	sp,sp,24
   14b70:	f800283a 	ret
   14b74:	01006404 	movi	r4,400
   14b78:	d9400015 	stw	r5,0(sp)
   14b7c:	d9800115 	stw	r6,4(sp)
   14b80:	d9c00215 	stw	r7,8(sp)
   14b84:	00000000 	call	0 <__reset>
   14b88:	d9400017 	ldw	r5,0(sp)
   14b8c:	d9800117 	ldw	r6,4(sp)
   14b90:	d9c00217 	ldw	r7,8(sp)
   14b94:	103ff126 	beq	r2,zero,14b5c <__alt_data_end+0xfe014b5c>
   14b98:	81005217 	ldw	r4,328(r16)
   14b9c:	10000115 	stw	zero,4(r2)
   14ba0:	0007883a 	mov	r3,zero
   14ba4:	11000015 	stw	r4,0(r2)
   14ba8:	80805215 	stw	r2,328(r16)
   14bac:	10006215 	stw	zero,392(r2)
   14bb0:	10006315 	stw	zero,396(r2)
   14bb4:	88000d1e 	bne	r17,zero,14bec <__register_exitproc+0xd0>
   14bb8:	19000084 	addi	r4,r3,2
   14bbc:	2109883a 	add	r4,r4,r4
   14bc0:	18c00044 	addi	r3,r3,1
   14bc4:	2109883a 	add	r4,r4,r4
   14bc8:	10c00115 	stw	r3,4(r2)
   14bcc:	1105883a 	add	r2,r2,r4
   14bd0:	11400015 	stw	r5,0(r2)
   14bd4:	0005883a 	mov	r2,zero
   14bd8:	dfc00517 	ldw	ra,20(sp)
   14bdc:	dc400417 	ldw	r17,16(sp)
   14be0:	dc000317 	ldw	r16,12(sp)
   14be4:	dec00604 	addi	sp,sp,24
   14be8:	f800283a 	ret
   14bec:	18c9883a 	add	r4,r3,r3
   14bf0:	2109883a 	add	r4,r4,r4
   14bf4:	1109883a 	add	r4,r2,r4
   14bf8:	21802215 	stw	r6,136(r4)
   14bfc:	01800044 	movi	r6,1
   14c00:	12006217 	ldw	r8,392(r2)
   14c04:	30cc983a 	sll	r6,r6,r3
   14c08:	4190b03a 	or	r8,r8,r6
   14c0c:	12006215 	stw	r8,392(r2)
   14c10:	21c04215 	stw	r7,264(r4)
   14c14:	01000084 	movi	r4,2
   14c18:	893fe71e 	bne	r17,r4,14bb8 <__alt_data_end+0xfe014bb8>
   14c1c:	11006317 	ldw	r4,396(r2)
   14c20:	218cb03a 	or	r6,r4,r6
   14c24:	11806315 	stw	r6,396(r2)
   14c28:	003fe306 	br	14bb8 <__alt_data_end+0xfe014bb8>
   14c2c:	80805304 	addi	r2,r16,332
   14c30:	80805215 	stw	r2,328(r16)
   14c34:	003fc306 	br	14b44 <__alt_data_end+0xfe014b44>

00014c38 <__call_exitprocs>:
   14c38:	00800074 	movhi	r2,1
   14c3c:	109bcd04 	addi	r2,r2,28468
   14c40:	10800017 	ldw	r2,0(r2)
   14c44:	defff304 	addi	sp,sp,-52
   14c48:	df000b15 	stw	fp,44(sp)
   14c4c:	d8800015 	stw	r2,0(sp)
   14c50:	10805204 	addi	r2,r2,328
   14c54:	dd400815 	stw	r21,32(sp)
   14c58:	dfc00c15 	stw	ra,48(sp)
   14c5c:	ddc00a15 	stw	r23,40(sp)
   14c60:	dd800915 	stw	r22,36(sp)
   14c64:	dd000715 	stw	r20,28(sp)
   14c68:	dcc00615 	stw	r19,24(sp)
   14c6c:	dc800515 	stw	r18,20(sp)
   14c70:	dc400415 	stw	r17,16(sp)
   14c74:	dc000315 	stw	r16,12(sp)
   14c78:	d9000115 	stw	r4,4(sp)
   14c7c:	2839883a 	mov	fp,r5
   14c80:	d8800215 	stw	r2,8(sp)
   14c84:	057fffc4 	movi	r21,-1
   14c88:	d8800017 	ldw	r2,0(sp)
   14c8c:	14805217 	ldw	r18,328(r2)
   14c90:	90001826 	beq	r18,zero,14cf4 <__call_exitprocs+0xbc>
   14c94:	ddc00217 	ldw	r23,8(sp)
   14c98:	90c00117 	ldw	r3,4(r18)
   14c9c:	1c3fffc4 	addi	r16,r3,-1
   14ca0:	80001116 	blt	r16,zero,14ce8 <__call_exitprocs+0xb0>
   14ca4:	18c00044 	addi	r3,r3,1
   14ca8:	8427883a 	add	r19,r16,r16
   14cac:	18c7883a 	add	r3,r3,r3
   14cb0:	95802204 	addi	r22,r18,136
   14cb4:	9ce7883a 	add	r19,r19,r19
   14cb8:	18c7883a 	add	r3,r3,r3
   14cbc:	b4e7883a 	add	r19,r22,r19
   14cc0:	90e3883a 	add	r17,r18,r3
   14cc4:	e0001726 	beq	fp,zero,14d24 <__call_exitprocs+0xec>
   14cc8:	8c87c83a 	sub	r3,r17,r18
   14ccc:	b0c7883a 	add	r3,r22,r3
   14cd0:	18c01e17 	ldw	r3,120(r3)
   14cd4:	1f001326 	beq	r3,fp,14d24 <__call_exitprocs+0xec>
   14cd8:	843fffc4 	addi	r16,r16,-1
   14cdc:	9cffff04 	addi	r19,r19,-4
   14ce0:	8c7fff04 	addi	r17,r17,-4
   14ce4:	857ff71e 	bne	r16,r21,14cc4 <__alt_data_end+0xfe014cc4>
   14ce8:	00800034 	movhi	r2,0
   14cec:	10800004 	addi	r2,r2,0
   14cf0:	10002a1e 	bne	r2,zero,14d9c <__call_exitprocs+0x164>
   14cf4:	dfc00c17 	ldw	ra,48(sp)
   14cf8:	df000b17 	ldw	fp,44(sp)
   14cfc:	ddc00a17 	ldw	r23,40(sp)
   14d00:	dd800917 	ldw	r22,36(sp)
   14d04:	dd400817 	ldw	r21,32(sp)
   14d08:	dd000717 	ldw	r20,28(sp)
   14d0c:	dcc00617 	ldw	r19,24(sp)
   14d10:	dc800517 	ldw	r18,20(sp)
   14d14:	dc400417 	ldw	r17,16(sp)
   14d18:	dc000317 	ldw	r16,12(sp)
   14d1c:	dec00d04 	addi	sp,sp,52
   14d20:	f800283a 	ret
   14d24:	91000117 	ldw	r4,4(r18)
   14d28:	88c00017 	ldw	r3,0(r17)
   14d2c:	213fffc4 	addi	r4,r4,-1
   14d30:	24001526 	beq	r4,r16,14d88 <__call_exitprocs+0x150>
   14d34:	88000015 	stw	zero,0(r17)
   14d38:	183fe726 	beq	r3,zero,14cd8 <__alt_data_end+0xfe014cd8>
   14d3c:	00800044 	movi	r2,1
   14d40:	1408983a 	sll	r4,r2,r16
   14d44:	91406217 	ldw	r5,392(r18)
   14d48:	95000117 	ldw	r20,4(r18)
   14d4c:	214a703a 	and	r5,r4,r5
   14d50:	28000b26 	beq	r5,zero,14d80 <__call_exitprocs+0x148>
   14d54:	91406317 	ldw	r5,396(r18)
   14d58:	2148703a 	and	r4,r4,r5
   14d5c:	20000c1e 	bne	r4,zero,14d90 <__call_exitprocs+0x158>
   14d60:	99400017 	ldw	r5,0(r19)
   14d64:	d9000117 	ldw	r4,4(sp)
   14d68:	183ee83a 	callr	r3
   14d6c:	90c00117 	ldw	r3,4(r18)
   14d70:	1d3fc51e 	bne	r3,r20,14c88 <__alt_data_end+0xfe014c88>
   14d74:	b8c00017 	ldw	r3,0(r23)
   14d78:	1cbfd726 	beq	r3,r18,14cd8 <__alt_data_end+0xfe014cd8>
   14d7c:	003fc206 	br	14c88 <__alt_data_end+0xfe014c88>
   14d80:	183ee83a 	callr	r3
   14d84:	003ff906 	br	14d6c <__alt_data_end+0xfe014d6c>
   14d88:	94000115 	stw	r16,4(r18)
   14d8c:	003fea06 	br	14d38 <__alt_data_end+0xfe014d38>
   14d90:	99000017 	ldw	r4,0(r19)
   14d94:	183ee83a 	callr	r3
   14d98:	003ff406 	br	14d6c <__alt_data_end+0xfe014d6c>
   14d9c:	90c00117 	ldw	r3,4(r18)
   14da0:	1800081e 	bne	r3,zero,14dc4 <__call_exitprocs+0x18c>
   14da4:	90c00017 	ldw	r3,0(r18)
   14da8:	18000a26 	beq	r3,zero,14dd4 <__call_exitprocs+0x19c>
   14dac:	9009883a 	mov	r4,r18
   14db0:	b8c00015 	stw	r3,0(r23)
   14db4:	00000000 	call	0 <__reset>
   14db8:	bc800017 	ldw	r18,0(r23)
   14dbc:	903fb61e 	bne	r18,zero,14c98 <__alt_data_end+0xfe014c98>
   14dc0:	003fcc06 	br	14cf4 <__alt_data_end+0xfe014cf4>
   14dc4:	90c00017 	ldw	r3,0(r18)
   14dc8:	902f883a 	mov	r23,r18
   14dcc:	1825883a 	mov	r18,r3
   14dd0:	003ffa06 	br	14dbc <__alt_data_end+0xfe014dbc>
   14dd4:	0007883a 	mov	r3,zero
   14dd8:	003ffb06 	br	14dc8 <__alt_data_end+0xfe014dc8>

00014ddc <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   14ddc:	defffd04 	addi	sp,sp,-12
   14de0:	df000215 	stw	fp,8(sp)
   14de4:	df000204 	addi	fp,sp,8
   14de8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   14dec:	0001883a 	nop
   14df0:	e0bfff17 	ldw	r2,-4(fp)
   14df4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   14df8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   14dfc:	10000226 	beq	r2,zero,14e08 <_exit+0x2c>
    ALT_SIM_FAIL();
   14e00:	002af070 	cmpltui	zero,zero,43969
   14e04:	00000106 	br	14e0c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   14e08:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   14e0c:	003fff06 	br	14e0c <__alt_data_end+0xfe014e0c>
