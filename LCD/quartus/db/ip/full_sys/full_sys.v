// full_sys.v

// Generated using ACDS version 14.1 186 at 2016.01.03.17:42:03

`timescale 1 ps / 1 ps
module full_sys (
		output wire        am_readok_am_readok,     //     am_readok.am_readok
		input  wire        clk_clk,                 //           clk.clk
		output wire        clk_sdram_clk,           //     clk_sdram.clk
		input  wire        ext_irq_ext_irq,         //       ext_irq.ext_irq
		output wire [15:0] lcd_data_lcd_data,       //      lcd_data.lcd_data
		output wire        lcd_dc_lcd_dc,           //        lcd_dc.lcd_dc
		output wire        lcd_rd_lcd_rd,           //        lcd_rd.lcd_rd
		output wire        lcd_reset_n_lcd_reset_n, //   lcd_reset_n.lcd_reset_n
		output wire        lcd_wr_lcd_wr,           //        lcd_wr.lcd_wr
		input  wire        reset_n_reset_n,         //       reset_n.reset_n
		output wire [12:0] sdram_addr,              //         sdram.addr
		output wire [1:0]  sdram_ba,                //              .ba
		output wire        sdram_cas_n,             //              .cas_n
		output wire        sdram_cke,               //              .cke
		output wire        sdram_cs_n,              //              .cs_n
		inout  wire [15:0] sdram_dq,                //              .dq
		output wire [1:0]  sdram_dqm,               //              .dqm
		output wire        sdram_ras_n,             //              .ras_n
		output wire        sdram_we_n,              //              .we_n
		output wire        signaltap_clk_clk        // signaltap_clk.clk
	);

	wire         altpll_0_c0_clk;                                              // altpll_0:c0 -> [irq_mapper:clk, jtag_uart_0:clk, lcd_sys_0:clk, mm_interconnect_0:altpll_0_c0_clk, nios2_qsys_0:clk, rst_controller_001:clk, rst_controller_002:clk, sdram_controller_0:clk]
	wire         lcd_sys_0_avalon_master_waitrequest;                          // mm_interconnect_0:lcd_sys_0_avalon_master_waitrequest -> lcd_sys_0:bus_waitReq
	wire  [15:0] lcd_sys_0_avalon_master_readdata;                             // mm_interconnect_0:lcd_sys_0_avalon_master_readdata -> lcd_sys_0:bus_read_data
	wire         lcd_sys_0_avalon_master_read;                                 // lcd_sys_0:bus_read -> mm_interconnect_0:lcd_sys_0_avalon_master_read
	wire  [31:0] lcd_sys_0_avalon_master_address;                              // lcd_sys_0:bus_add -> mm_interconnect_0:lcd_sys_0_avalon_master_address
	wire   [1:0] lcd_sys_0_avalon_master_byteenable;                           // lcd_sys_0:bus_BE -> mm_interconnect_0:lcd_sys_0_avalon_master_byteenable
	wire         lcd_sys_0_avalon_master_readdatavalid;                        // mm_interconnect_0:lcd_sys_0_avalon_master_readdatavalid -> lcd_sys_0:bus_read_data_valid
	wire   [7:0] lcd_sys_0_avalon_master_burstcount;                           // lcd_sys_0:bus_burstCount -> mm_interconnect_0:lcd_sys_0_avalon_master_burstcount
	wire  [31:0] nios2_qsys_0_data_master_readdata;                            // mm_interconnect_0:nios2_qsys_0_data_master_readdata -> nios2_qsys_0:d_readdata
	wire         nios2_qsys_0_data_master_waitrequest;                         // mm_interconnect_0:nios2_qsys_0_data_master_waitrequest -> nios2_qsys_0:d_waitrequest
	wire         nios2_qsys_0_data_master_debugaccess;                         // nios2_qsys_0:jtag_debug_module_debugaccess_to_roms -> mm_interconnect_0:nios2_qsys_0_data_master_debugaccess
	wire  [25:0] nios2_qsys_0_data_master_address;                             // nios2_qsys_0:d_address -> mm_interconnect_0:nios2_qsys_0_data_master_address
	wire   [3:0] nios2_qsys_0_data_master_byteenable;                          // nios2_qsys_0:d_byteenable -> mm_interconnect_0:nios2_qsys_0_data_master_byteenable
	wire         nios2_qsys_0_data_master_read;                                // nios2_qsys_0:d_read -> mm_interconnect_0:nios2_qsys_0_data_master_read
	wire         nios2_qsys_0_data_master_write;                               // nios2_qsys_0:d_write -> mm_interconnect_0:nios2_qsys_0_data_master_write
	wire  [31:0] nios2_qsys_0_data_master_writedata;                           // nios2_qsys_0:d_writedata -> mm_interconnect_0:nios2_qsys_0_data_master_writedata
	wire  [31:0] nios2_qsys_0_instruction_master_readdata;                     // mm_interconnect_0:nios2_qsys_0_instruction_master_readdata -> nios2_qsys_0:i_readdata
	wire         nios2_qsys_0_instruction_master_waitrequest;                  // mm_interconnect_0:nios2_qsys_0_instruction_master_waitrequest -> nios2_qsys_0:i_waitrequest
	wire  [25:0] nios2_qsys_0_instruction_master_address;                      // nios2_qsys_0:i_address -> mm_interconnect_0:nios2_qsys_0_instruction_master_address
	wire         nios2_qsys_0_instruction_master_read;                         // nios2_qsys_0:i_read -> mm_interconnect_0:nios2_qsys_0_instruction_master_read
	wire         nios2_qsys_0_instruction_master_readdatavalid;                // mm_interconnect_0:nios2_qsys_0_instruction_master_readdatavalid -> nios2_qsys_0:i_readdatavalid
	wire         mm_interconnect_0_sdram_controller_0_s1_chipselect;           // mm_interconnect_0:sdram_controller_0_s1_chipselect -> sdram_controller_0:az_cs
	wire  [15:0] mm_interconnect_0_sdram_controller_0_s1_readdata;             // sdram_controller_0:za_data -> mm_interconnect_0:sdram_controller_0_s1_readdata
	wire         mm_interconnect_0_sdram_controller_0_s1_waitrequest;          // sdram_controller_0:za_waitrequest -> mm_interconnect_0:sdram_controller_0_s1_waitrequest
	wire  [23:0] mm_interconnect_0_sdram_controller_0_s1_address;              // mm_interconnect_0:sdram_controller_0_s1_address -> sdram_controller_0:az_addr
	wire         mm_interconnect_0_sdram_controller_0_s1_read;                 // mm_interconnect_0:sdram_controller_0_s1_read -> sdram_controller_0:az_rd_n
	wire   [1:0] mm_interconnect_0_sdram_controller_0_s1_byteenable;           // mm_interconnect_0:sdram_controller_0_s1_byteenable -> sdram_controller_0:az_be_n
	wire         mm_interconnect_0_sdram_controller_0_s1_readdatavalid;        // sdram_controller_0:za_valid -> mm_interconnect_0:sdram_controller_0_s1_readdatavalid
	wire         mm_interconnect_0_sdram_controller_0_s1_write;                // mm_interconnect_0:sdram_controller_0_s1_write -> sdram_controller_0:az_wr_n
	wire  [15:0] mm_interconnect_0_sdram_controller_0_s1_writedata;            // mm_interconnect_0:sdram_controller_0_s1_writedata -> sdram_controller_0:az_data
	wire  [31:0] mm_interconnect_0_nios2_qsys_0_jtag_debug_module_readdata;    // nios2_qsys_0:jtag_debug_module_readdata -> mm_interconnect_0:nios2_qsys_0_jtag_debug_module_readdata
	wire         mm_interconnect_0_nios2_qsys_0_jtag_debug_module_waitrequest; // nios2_qsys_0:jtag_debug_module_waitrequest -> mm_interconnect_0:nios2_qsys_0_jtag_debug_module_waitrequest
	wire         mm_interconnect_0_nios2_qsys_0_jtag_debug_module_debugaccess; // mm_interconnect_0:nios2_qsys_0_jtag_debug_module_debugaccess -> nios2_qsys_0:jtag_debug_module_debugaccess
	wire   [8:0] mm_interconnect_0_nios2_qsys_0_jtag_debug_module_address;     // mm_interconnect_0:nios2_qsys_0_jtag_debug_module_address -> nios2_qsys_0:jtag_debug_module_address
	wire         mm_interconnect_0_nios2_qsys_0_jtag_debug_module_read;        // mm_interconnect_0:nios2_qsys_0_jtag_debug_module_read -> nios2_qsys_0:jtag_debug_module_read
	wire   [3:0] mm_interconnect_0_nios2_qsys_0_jtag_debug_module_byteenable;  // mm_interconnect_0:nios2_qsys_0_jtag_debug_module_byteenable -> nios2_qsys_0:jtag_debug_module_byteenable
	wire         mm_interconnect_0_nios2_qsys_0_jtag_debug_module_write;       // mm_interconnect_0:nios2_qsys_0_jtag_debug_module_write -> nios2_qsys_0:jtag_debug_module_write
	wire  [31:0] mm_interconnect_0_nios2_qsys_0_jtag_debug_module_writedata;   // mm_interconnect_0:nios2_qsys_0_jtag_debug_module_writedata -> nios2_qsys_0:jtag_debug_module_writedata
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect;   // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_chipselect -> jtag_uart_0:av_chipselect
	wire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata;     // jtag_uart_0:av_readdata -> mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_readdata
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest;  // jtag_uart_0:av_waitrequest -> mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_waitrequest
	wire   [0:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address;      // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_address -> jtag_uart_0:av_address
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read;         // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_read -> jtag_uart_0:av_read_n
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write;        // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_write -> jtag_uart_0:av_write_n
	wire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata;    // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_writedata -> jtag_uart_0:av_writedata
	wire         mm_interconnect_0_lcd_sys_0_avalon_slave_0_waitrequest;       // lcd_sys_0:as_wait_request -> mm_interconnect_0:lcd_sys_0_avalon_slave_0_waitrequest
	wire   [2:0] mm_interconnect_0_lcd_sys_0_avalon_slave_0_address;           // mm_interconnect_0:lcd_sys_0_avalon_slave_0_address -> lcd_sys_0:as_add
	wire         mm_interconnect_0_lcd_sys_0_avalon_slave_0_write;             // mm_interconnect_0:lcd_sys_0_avalon_slave_0_write -> lcd_sys_0:as_write
	wire  [31:0] mm_interconnect_0_lcd_sys_0_avalon_slave_0_writedata;         // mm_interconnect_0:lcd_sys_0_avalon_slave_0_writedata -> lcd_sys_0:as_wrdata
	wire         irq_mapper_receiver0_irq;                                     // jtag_uart_0:av_irq -> irq_mapper:receiver0_irq
	wire  [31:0] nios2_qsys_0_d_irq_irq;                                       // irq_mapper:sender_irq -> nios2_qsys_0:d_irq
	wire         rst_controller_reset_out_reset;                               // rst_controller:reset_out -> altpll_0:reset
	wire         nios2_qsys_0_jtag_debug_module_reset_reset;                   // nios2_qsys_0:jtag_debug_module_resetrequest -> [rst_controller:reset_in1, rst_controller_002:reset_in1]
	wire         rst_controller_001_reset_out_reset;                           // rst_controller_001:reset_out -> [jtag_uart_0:rst_n, mm_interconnect_0:jtag_uart_0_reset_reset_bridge_in_reset_reset]
	wire         rst_controller_002_reset_out_reset;                           // rst_controller_002:reset_out -> [irq_mapper:reset, lcd_sys_0:reset_n, mm_interconnect_0:lcd_sys_0_reset_reset_bridge_in_reset_reset, nios2_qsys_0:reset_n, rst_translator:in_reset, sdram_controller_0:reset_n]
	wire         rst_controller_002_reset_out_reset_req;                       // rst_controller_002:reset_req -> [nios2_qsys_0:reset_req, rst_translator:reset_req_in]

	full_sys_altpll_0 altpll_0 (
		.clk       (clk_clk),                        //       inclk_interface.clk
		.reset     (rst_controller_reset_out_reset), // inclk_interface_reset.reset
		.read      (),                               //             pll_slave.read
		.write     (),                               //                      .write
		.address   (),                               //                      .address
		.readdata  (),                               //                      .readdata
		.writedata (),                               //                      .writedata
		.c0        (altpll_0_c0_clk),                //                    c0.clk
		.c1        (clk_sdram_clk),                  //                    c1.clk
		.c3        (signaltap_clk_clk),              //                    c3.clk
		.areset    (),                               //        areset_conduit.export
		.locked    (),                               //        locked_conduit.export
		.phasedone ()                                //     phasedone_conduit.export
	);

	full_sys_jtag_uart_0 jtag_uart_0 (
		.clk            (altpll_0_c0_clk),                                             //               clk.clk
		.rst_n          (~rst_controller_001_reset_out_reset),                         //             reset.reset_n
		.av_chipselect  (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),  // avalon_jtag_slave.chipselect
		.av_address     (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),     //                  .address
		.av_read_n      (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),       //                  .read_n
		.av_readdata    (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),    //                  .readdata
		.av_write_n     (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),      //                  .write_n
		.av_writedata   (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),   //                  .writedata
		.av_waitrequest (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest), //                  .waitrequest
		.av_irq         (irq_mapper_receiver0_irq)                                     //               irq.irq
	);

	LCD lcd_sys_0 (
		.clk                 (altpll_0_c0_clk),                                        //          clock.clk
		.reset_n             (~rst_controller_002_reset_out_reset),                    //          reset.reset_n
		.as_wrdata           (mm_interconnect_0_lcd_sys_0_avalon_slave_0_writedata),   // avalon_slave_0.writedata
		.as_wait_request     (mm_interconnect_0_lcd_sys_0_avalon_slave_0_waitrequest), //               .waitrequest
		.as_write            (mm_interconnect_0_lcd_sys_0_avalon_slave_0_write),       //               .write
		.as_add              (mm_interconnect_0_lcd_sys_0_avalon_slave_0_address),     //               .address
		.lcd_data            (lcd_data_lcd_data),                                      //       lcd_data.lcd_data
		.lcd_dc              (lcd_dc_lcd_dc),                                          //         lcd_dc.lcd_dc
		.lcd_rd              (lcd_rd_lcd_rd),                                          //         lcd_rd.lcd_rd
		.lcd_wr              (lcd_wr_lcd_wr),                                          //         lcd_wr.lcd_wr
		.lcd_reset_n         (lcd_reset_n_lcd_reset_n),                                //    lcd_reset_n.lcd_reset_n
		.bus_waitReq         (lcd_sys_0_avalon_master_waitrequest),                    //  avalon_master.waitrequest
		.bus_read_data       (lcd_sys_0_avalon_master_readdata),                       //               .readdata
		.bus_read            (lcd_sys_0_avalon_master_read),                           //               .read
		.bus_add             (lcd_sys_0_avalon_master_address),                        //               .address
		.bus_BE              (lcd_sys_0_avalon_master_byteenable),                     //               .byteenable
		.bus_read_data_valid (lcd_sys_0_avalon_master_readdatavalid),                  //               .readdatavalid
		.bus_burstCount      (lcd_sys_0_avalon_master_burstcount),                     //               .burstcount
		.ext_IRQ             (ext_irq_ext_irq),                                        //        ext_IRQ.ext_irq
		.am_readOK           (am_readok_am_readok)                                     //      am_readOK.am_readok
	);

	full_sys_nios2_qsys_0 nios2_qsys_0 (
		.clk                                   (altpll_0_c0_clk),                                              //                       clk.clk
		.reset_n                               (~rst_controller_002_reset_out_reset),                          //                   reset_n.reset_n
		.reset_req                             (rst_controller_002_reset_out_reset_req),                       //                          .reset_req
		.d_address                             (nios2_qsys_0_data_master_address),                             //               data_master.address
		.d_byteenable                          (nios2_qsys_0_data_master_byteenable),                          //                          .byteenable
		.d_read                                (nios2_qsys_0_data_master_read),                                //                          .read
		.d_readdata                            (nios2_qsys_0_data_master_readdata),                            //                          .readdata
		.d_waitrequest                         (nios2_qsys_0_data_master_waitrequest),                         //                          .waitrequest
		.d_write                               (nios2_qsys_0_data_master_write),                               //                          .write
		.d_writedata                           (nios2_qsys_0_data_master_writedata),                           //                          .writedata
		.jtag_debug_module_debugaccess_to_roms (nios2_qsys_0_data_master_debugaccess),                         //                          .debugaccess
		.i_address                             (nios2_qsys_0_instruction_master_address),                      //        instruction_master.address
		.i_read                                (nios2_qsys_0_instruction_master_read),                         //                          .read
		.i_readdata                            (nios2_qsys_0_instruction_master_readdata),                     //                          .readdata
		.i_waitrequest                         (nios2_qsys_0_instruction_master_waitrequest),                  //                          .waitrequest
		.i_readdatavalid                       (nios2_qsys_0_instruction_master_readdatavalid),                //                          .readdatavalid
		.d_irq                                 (nios2_qsys_0_d_irq_irq),                                       //                     d_irq.irq
		.jtag_debug_module_resetrequest        (nios2_qsys_0_jtag_debug_module_reset_reset),                   //   jtag_debug_module_reset.reset
		.jtag_debug_module_address             (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_address),     //         jtag_debug_module.address
		.jtag_debug_module_byteenable          (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_byteenable),  //                          .byteenable
		.jtag_debug_module_debugaccess         (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_debugaccess), //                          .debugaccess
		.jtag_debug_module_read                (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_read),        //                          .read
		.jtag_debug_module_readdata            (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_readdata),    //                          .readdata
		.jtag_debug_module_waitrequest         (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_waitrequest), //                          .waitrequest
		.jtag_debug_module_write               (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_write),       //                          .write
		.jtag_debug_module_writedata           (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_writedata),   //                          .writedata
		.no_ci_readra                          ()                                                              // custom_instruction_master.readra
	);

	full_sys_sdram_controller_0 sdram_controller_0 (
		.clk            (altpll_0_c0_clk),                                       //   clk.clk
		.reset_n        (~rst_controller_002_reset_out_reset),                   // reset.reset_n
		.az_addr        (mm_interconnect_0_sdram_controller_0_s1_address),       //    s1.address
		.az_be_n        (~mm_interconnect_0_sdram_controller_0_s1_byteenable),   //      .byteenable_n
		.az_cs          (mm_interconnect_0_sdram_controller_0_s1_chipselect),    //      .chipselect
		.az_data        (mm_interconnect_0_sdram_controller_0_s1_writedata),     //      .writedata
		.az_rd_n        (~mm_interconnect_0_sdram_controller_0_s1_read),         //      .read_n
		.az_wr_n        (~mm_interconnect_0_sdram_controller_0_s1_write),        //      .write_n
		.za_data        (mm_interconnect_0_sdram_controller_0_s1_readdata),      //      .readdata
		.za_valid       (mm_interconnect_0_sdram_controller_0_s1_readdatavalid), //      .readdatavalid
		.za_waitrequest (mm_interconnect_0_sdram_controller_0_s1_waitrequest),   //      .waitrequest
		.zs_addr        (sdram_addr),                                            //  wire.export
		.zs_ba          (sdram_ba),                                              //      .export
		.zs_cas_n       (sdram_cas_n),                                           //      .export
		.zs_cke         (sdram_cke),                                             //      .export
		.zs_cs_n        (sdram_cs_n),                                            //      .export
		.zs_dq          (sdram_dq),                                              //      .export
		.zs_dqm         (sdram_dqm),                                             //      .export
		.zs_ras_n       (sdram_ras_n),                                           //      .export
		.zs_we_n        (sdram_we_n)                                             //      .export
	);

	full_sys_mm_interconnect_0 mm_interconnect_0 (
		.altpll_0_c0_clk                               (altpll_0_c0_clk),                                              //                             altpll_0_c0.clk
		.jtag_uart_0_reset_reset_bridge_in_reset_reset (rst_controller_001_reset_out_reset),                           // jtag_uart_0_reset_reset_bridge_in_reset.reset
		.lcd_sys_0_reset_reset_bridge_in_reset_reset   (rst_controller_002_reset_out_reset),                           //   lcd_sys_0_reset_reset_bridge_in_reset.reset
		.lcd_sys_0_avalon_master_address               (lcd_sys_0_avalon_master_address),                              //                 lcd_sys_0_avalon_master.address
		.lcd_sys_0_avalon_master_waitrequest           (lcd_sys_0_avalon_master_waitrequest),                          //                                        .waitrequest
		.lcd_sys_0_avalon_master_burstcount            (lcd_sys_0_avalon_master_burstcount),                           //                                        .burstcount
		.lcd_sys_0_avalon_master_byteenable            (lcd_sys_0_avalon_master_byteenable),                           //                                        .byteenable
		.lcd_sys_0_avalon_master_read                  (lcd_sys_0_avalon_master_read),                                 //                                        .read
		.lcd_sys_0_avalon_master_readdata              (lcd_sys_0_avalon_master_readdata),                             //                                        .readdata
		.lcd_sys_0_avalon_master_readdatavalid         (lcd_sys_0_avalon_master_readdatavalid),                        //                                        .readdatavalid
		.nios2_qsys_0_data_master_address              (nios2_qsys_0_data_master_address),                             //                nios2_qsys_0_data_master.address
		.nios2_qsys_0_data_master_waitrequest          (nios2_qsys_0_data_master_waitrequest),                         //                                        .waitrequest
		.nios2_qsys_0_data_master_byteenable           (nios2_qsys_0_data_master_byteenable),                          //                                        .byteenable
		.nios2_qsys_0_data_master_read                 (nios2_qsys_0_data_master_read),                                //                                        .read
		.nios2_qsys_0_data_master_readdata             (nios2_qsys_0_data_master_readdata),                            //                                        .readdata
		.nios2_qsys_0_data_master_write                (nios2_qsys_0_data_master_write),                               //                                        .write
		.nios2_qsys_0_data_master_writedata            (nios2_qsys_0_data_master_writedata),                           //                                        .writedata
		.nios2_qsys_0_data_master_debugaccess          (nios2_qsys_0_data_master_debugaccess),                         //                                        .debugaccess
		.nios2_qsys_0_instruction_master_address       (nios2_qsys_0_instruction_master_address),                      //         nios2_qsys_0_instruction_master.address
		.nios2_qsys_0_instruction_master_waitrequest   (nios2_qsys_0_instruction_master_waitrequest),                  //                                        .waitrequest
		.nios2_qsys_0_instruction_master_read          (nios2_qsys_0_instruction_master_read),                         //                                        .read
		.nios2_qsys_0_instruction_master_readdata      (nios2_qsys_0_instruction_master_readdata),                     //                                        .readdata
		.nios2_qsys_0_instruction_master_readdatavalid (nios2_qsys_0_instruction_master_readdatavalid),                //                                        .readdatavalid
		.jtag_uart_0_avalon_jtag_slave_address         (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),      //           jtag_uart_0_avalon_jtag_slave.address
		.jtag_uart_0_avalon_jtag_slave_write           (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),        //                                        .write
		.jtag_uart_0_avalon_jtag_slave_read            (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),         //                                        .read
		.jtag_uart_0_avalon_jtag_slave_readdata        (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),     //                                        .readdata
		.jtag_uart_0_avalon_jtag_slave_writedata       (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),    //                                        .writedata
		.jtag_uart_0_avalon_jtag_slave_waitrequest     (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest),  //                                        .waitrequest
		.jtag_uart_0_avalon_jtag_slave_chipselect      (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),   //                                        .chipselect
		.lcd_sys_0_avalon_slave_0_address              (mm_interconnect_0_lcd_sys_0_avalon_slave_0_address),           //                lcd_sys_0_avalon_slave_0.address
		.lcd_sys_0_avalon_slave_0_write                (mm_interconnect_0_lcd_sys_0_avalon_slave_0_write),             //                                        .write
		.lcd_sys_0_avalon_slave_0_writedata            (mm_interconnect_0_lcd_sys_0_avalon_slave_0_writedata),         //                                        .writedata
		.lcd_sys_0_avalon_slave_0_waitrequest          (mm_interconnect_0_lcd_sys_0_avalon_slave_0_waitrequest),       //                                        .waitrequest
		.nios2_qsys_0_jtag_debug_module_address        (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_address),     //          nios2_qsys_0_jtag_debug_module.address
		.nios2_qsys_0_jtag_debug_module_write          (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_write),       //                                        .write
		.nios2_qsys_0_jtag_debug_module_read           (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_read),        //                                        .read
		.nios2_qsys_0_jtag_debug_module_readdata       (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_readdata),    //                                        .readdata
		.nios2_qsys_0_jtag_debug_module_writedata      (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_writedata),   //                                        .writedata
		.nios2_qsys_0_jtag_debug_module_byteenable     (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_byteenable),  //                                        .byteenable
		.nios2_qsys_0_jtag_debug_module_waitrequest    (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_waitrequest), //                                        .waitrequest
		.nios2_qsys_0_jtag_debug_module_debugaccess    (mm_interconnect_0_nios2_qsys_0_jtag_debug_module_debugaccess), //                                        .debugaccess
		.sdram_controller_0_s1_address                 (mm_interconnect_0_sdram_controller_0_s1_address),              //                   sdram_controller_0_s1.address
		.sdram_controller_0_s1_write                   (mm_interconnect_0_sdram_controller_0_s1_write),                //                                        .write
		.sdram_controller_0_s1_read                    (mm_interconnect_0_sdram_controller_0_s1_read),                 //                                        .read
		.sdram_controller_0_s1_readdata                (mm_interconnect_0_sdram_controller_0_s1_readdata),             //                                        .readdata
		.sdram_controller_0_s1_writedata               (mm_interconnect_0_sdram_controller_0_s1_writedata),            //                                        .writedata
		.sdram_controller_0_s1_byteenable              (mm_interconnect_0_sdram_controller_0_s1_byteenable),           //                                        .byteenable
		.sdram_controller_0_s1_readdatavalid           (mm_interconnect_0_sdram_controller_0_s1_readdatavalid),        //                                        .readdatavalid
		.sdram_controller_0_s1_waitrequest             (mm_interconnect_0_sdram_controller_0_s1_waitrequest),          //                                        .waitrequest
		.sdram_controller_0_s1_chipselect              (mm_interconnect_0_sdram_controller_0_s1_chipselect)            //                                        .chipselect
	);

	full_sys_irq_mapper irq_mapper (
		.clk           (altpll_0_c0_clk),                    //       clk.clk
		.reset         (rst_controller_002_reset_out_reset), // clk_reset.reset
		.receiver0_irq (irq_mapper_receiver0_irq),           // receiver0.irq
		.sender_irq    (nios2_qsys_0_d_irq_irq)              //    sender.irq
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~reset_n_reset_n),                           // reset_in0.reset
		.reset_in1      (nios2_qsys_0_jtag_debug_module_reset_reset), // reset_in1.reset
		.clk            (clk_clk),                                    //       clk.clk
		.reset_out      (rst_controller_reset_out_reset),             // reset_out.reset
		.reset_req      (),                                           // (terminated)
		.reset_req_in0  (1'b0),                                       // (terminated)
		.reset_req_in1  (1'b0),                                       // (terminated)
		.reset_in2      (1'b0),                                       // (terminated)
		.reset_req_in2  (1'b0),                                       // (terminated)
		.reset_in3      (1'b0),                                       // (terminated)
		.reset_req_in3  (1'b0),                                       // (terminated)
		.reset_in4      (1'b0),                                       // (terminated)
		.reset_req_in4  (1'b0),                                       // (terminated)
		.reset_in5      (1'b0),                                       // (terminated)
		.reset_req_in5  (1'b0),                                       // (terminated)
		.reset_in6      (1'b0),                                       // (terminated)
		.reset_req_in6  (1'b0),                                       // (terminated)
		.reset_in7      (1'b0),                                       // (terminated)
		.reset_req_in7  (1'b0),                                       // (terminated)
		.reset_in8      (1'b0),                                       // (terminated)
		.reset_req_in8  (1'b0),                                       // (terminated)
		.reset_in9      (1'b0),                                       // (terminated)
		.reset_req_in9  (1'b0),                                       // (terminated)
		.reset_in10     (1'b0),                                       // (terminated)
		.reset_req_in10 (1'b0),                                       // (terminated)
		.reset_in11     (1'b0),                                       // (terminated)
		.reset_req_in11 (1'b0),                                       // (terminated)
		.reset_in12     (1'b0),                                       // (terminated)
		.reset_req_in12 (1'b0),                                       // (terminated)
		.reset_in13     (1'b0),                                       // (terminated)
		.reset_req_in13 (1'b0),                                       // (terminated)
		.reset_in14     (1'b0),                                       // (terminated)
		.reset_req_in14 (1'b0),                                       // (terminated)
		.reset_in15     (1'b0),                                       // (terminated)
		.reset_req_in15 (1'b0)                                        // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_001 (
		.reset_in0      (~reset_n_reset_n),                   // reset_in0.reset
		.clk            (altpll_0_c0_clk),                    //       clk.clk
		.reset_out      (rst_controller_001_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_in1      (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (1),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_002 (
		.reset_in0      (~reset_n_reset_n),                           // reset_in0.reset
		.reset_in1      (nios2_qsys_0_jtag_debug_module_reset_reset), // reset_in1.reset
		.clk            (altpll_0_c0_clk),                            //       clk.clk
		.reset_out      (rst_controller_002_reset_out_reset),         // reset_out.reset
		.reset_req      (rst_controller_002_reset_out_reset_req),     //          .reset_req
		.reset_req_in0  (1'b0),                                       // (terminated)
		.reset_req_in1  (1'b0),                                       // (terminated)
		.reset_in2      (1'b0),                                       // (terminated)
		.reset_req_in2  (1'b0),                                       // (terminated)
		.reset_in3      (1'b0),                                       // (terminated)
		.reset_req_in3  (1'b0),                                       // (terminated)
		.reset_in4      (1'b0),                                       // (terminated)
		.reset_req_in4  (1'b0),                                       // (terminated)
		.reset_in5      (1'b0),                                       // (terminated)
		.reset_req_in5  (1'b0),                                       // (terminated)
		.reset_in6      (1'b0),                                       // (terminated)
		.reset_req_in6  (1'b0),                                       // (terminated)
		.reset_in7      (1'b0),                                       // (terminated)
		.reset_req_in7  (1'b0),                                       // (terminated)
		.reset_in8      (1'b0),                                       // (terminated)
		.reset_req_in8  (1'b0),                                       // (terminated)
		.reset_in9      (1'b0),                                       // (terminated)
		.reset_req_in9  (1'b0),                                       // (terminated)
		.reset_in10     (1'b0),                                       // (terminated)
		.reset_req_in10 (1'b0),                                       // (terminated)
		.reset_in11     (1'b0),                                       // (terminated)
		.reset_req_in11 (1'b0),                                       // (terminated)
		.reset_in12     (1'b0),                                       // (terminated)
		.reset_req_in12 (1'b0),                                       // (terminated)
		.reset_in13     (1'b0),                                       // (terminated)
		.reset_req_in13 (1'b0),                                       // (terminated)
		.reset_in14     (1'b0),                                       // (terminated)
		.reset_req_in14 (1'b0),                                       // (terminated)
		.reset_in15     (1'b0),                                       // (terminated)
		.reset_req_in15 (1'b0)                                        // (terminated)
	);

endmodule
